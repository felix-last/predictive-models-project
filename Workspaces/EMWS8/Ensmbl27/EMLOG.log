*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                17.35 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                17.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0YXA1V1
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0YXA1V1 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.34 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.34 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[249357] MAX=1 EXCEEDMAXVALUE='' )[249361] )[249355]
VALIDCHOICES=(CHOICE1='Y' )[249359] )[249643] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[249365]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[249369] )[249367] )[249363] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[249373]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[249379] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[249377] )[249375] )[249371] )[249353]
1913945    proc freq data=EMWS8.Ensmbl27_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl27_VariableSet noprint;
1913946    table ROLE*LEVEL/out=WORK.Ensmbl27META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl27META;
1913947    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL27_VARIABLESET.
NOTE: The data set WORK.ENSMBL27META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1913948    proc print data=WORK.Ensmbl27META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl27META label noobs;
1913949    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1913950    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1913950  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1913950  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1913951    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1913952    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1913953    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL27META.
NOTE: The PROCEDURE PRINT printed page 1184.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1913954    title10;
MPRINT(EM_DIAGRAM):   title10;
1913955    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN EMWS8 Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN EMWS8 Neural3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural3_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1913984    data WORK.Ensmbl27_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl27_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1913985    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1913986    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1913986  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1913986  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1913987       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1913987  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1913987  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1913988    set EMWS8.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
1913989    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1913990    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1913991    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1913992    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1913993    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1913994    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1913995    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1913996    end;
MPRINT(EM_DIAGRAM):   end;
1913997    output;
MPRINT(EM_DIAGRAM):   output;
1913998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL27_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1913999    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1914000    proc print data=WORK.Ensmbl27_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl27_EVENT noobs label;
1914001    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1914002    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1914003    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1914004    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL27_EVENT.
NOTE: The PROCEDURE PRINT printed page 1185.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1914005    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1914006    proc print data = EMWS8.Neural3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural3_DepVar_DM noobs label;
1914007    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1914008    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1914009    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1914009  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1914009  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1914010    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1914011    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1914012    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1186.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1914013    title10;
MPRINT(EM_DIAGRAM):   title10;
1914014    %let groupid =;
1914015    %let endGroupid =;
1914016    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1914017    set EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_EMINFO;
1914018    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1914018  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1914019    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1914020    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1914021    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1914022    %let groupid =;
1914023    %let endGroupid =;
1914024    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1914025    set EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO;
1914026    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1914026  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1914027    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1914028    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1914029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1914030    %let groupid =;
1914031    %let endGroupid =;
1914032    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1914033    set EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO;
1914034    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1914034  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1914035    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1914036    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1914037    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1914038    %let groupid =;
1914039    %let endGroupid =;
1914040    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1914041    set EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_EMINFO;
1914042    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1914042  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1914043    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1914044    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1914045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1914046    %let groupid =;
1914047    %let endGroupid =;
1914048    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1914049    set EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO;
1914050    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1914050  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1914051    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1914052    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1914053    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1914054    %let groupid =;
1914055    %let endGroupid =;
1914056    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1914057    set EMWS8.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg_EMINFO;
1914058    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1914058  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1914059    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1914060    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1914061    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1914062    %let groupid =;
1914063    %let endGroupid =;
1914064    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1914065    set EMWS8.Reg5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_EMINFO;
1914066    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1914066  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1914067    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1914068    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1914069    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1914070    data WORK.Ensmbl27;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl27;
1914071    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1914072    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1914072  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1914073    nodeid="NEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL10";
1914074    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1914075    output;
MPRINT(EM_DIAGRAM):   output;
1914076    nodeid="NEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL9";
1914077    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1914078    output;
MPRINT(EM_DIAGRAM):   output;
1914079    nodeid="NEURAL3";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL3";
1914080    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1914081    output;
MPRINT(EM_DIAGRAM):   output;
1914082    nodeid="NEURAL2";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL2";
1914083    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1914084    output;
MPRINT(EM_DIAGRAM):   output;
1914085    nodeid="NEURAL4";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL4";
1914086    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1914087    output;
MPRINT(EM_DIAGRAM):   output;
1914088    nodeid="REG";
MPRINT(EM_DIAGRAM):   nodeid="REG";
1914089    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1914090    output;
MPRINT(EM_DIAGRAM):   output;
1914091    nodeid="REG5";
MPRINT(EM_DIAGRAM):   nodeid="REG5";
1914092    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1914093    output;
MPRINT(EM_DIAGRAM):   output;
1914094    ;
MPRINT(EM_DIAGRAM):   ;
1914095    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL27 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1914096    title;
MPRINT(EM_DIAGRAM):   title;
1914097    proc print data=WORK.Ensmbl27 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl27 label noobs;
1914098    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1914099    title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
1914100    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL27.
NOTE: The PROCEDURE PRINT printed page 1187.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1914101    title9;
MPRINT(EM_DIAGRAM):   title9;
1914102    title10;
MPRINT(EM_DIAGRAM):   title10;
1914103    data WORK.M3PCPS35;
MPRINT(EM_DIAGRAM):    data WORK.M3PCPS35;
1914104    set WORK.M3PCPS35;
MPRINT(EM_DIAGRAM):   set WORK.M3PCPS35;
1914105    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1914106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3PCPS35.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M3PCPS35 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1914107    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1914108    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1914109    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1914110    %macro DMDBClass;
1914111        DepVar(DESC)
1914112    %mend DMDBClass;
1914113    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1914114    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1914115    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1914116    %macro DMDBVar;
1914117
1914118    %mend DMDBVar;
1914119    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914120    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1914121    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914122    proc dmdb batch data=EMWS8.Neural10_TRAIN
1914123    dmdbcat=WORK.EM_DMDB
1914124    maxlevel = 513
1914125    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural10_TRAIN dmdbcat=WORK.EM_DMDB maxlevel
= 513 ;
MPRINT(EM_DIAGRAM):   class
1914126    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1914127    target
1914128    DepVar
1914129    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1914130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL10_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1914131    quit;
1914132    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O37HYII7
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O37HYII7 new;
MPRINT(EM_DIAGRAM):   run;
1914234    filename emflow
1914234  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring NEURAL10_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914235    *------------------------------------------------------------*;
1914236    * Ensmbl27: Scoring NEURAL10_TRAIN data;
1914237    *------------------------------------------------------------*;
1914238    data EMWS8.Ensmbl27_TRAIN
1914239    / view=EMWS8.Ensmbl27_TRAIN
1914240    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_TRAIN / view=EMWS8.Ensmbl27_TRAIN ;
1914241    set EMWS8.Neural10_TRAIN
1914242    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_TRAIN ;
1914243    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas.
1914244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914245   +* Ensmbl27: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Combine model for DepVar;
1914246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914247   +* Ensmbl27: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 1 of 7;
1914248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914249   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914250   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1914251   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1914252   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1914253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914255   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1914256   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1914257   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1914258   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914260   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1914261   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1914262   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1914263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914265   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1914266   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1914267   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1914268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914269   +
1914270   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1914271   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1914271  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1914272   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1914273   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1914274   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1914275   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1914276   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1914277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914278   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1914279   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1914280   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1914281   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914283   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1914284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914285   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1914286   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1914287   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1914288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914289   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1914290   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1914291   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1914292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914294   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1914295   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1914296   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1914297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914299   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1914300   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1914301   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1914302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1914303   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1914304   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1914305   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1914306   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1914307   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1914308   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1914309   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1914310   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1914311   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1914312   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1914313   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1914314   +LENGTH _WARN_ $4
1914315   +      F_DepVar  $ 12
1914316   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1914317   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1914318   +
1914319   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1914320   +
1914321   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1914322   +
1914323   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1914324   +
1914325   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1914326   +
1914327   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1914328   +
1914329   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1914330   +
1914331   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1914332   +
1914333   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1914334   +
1914335   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1914336   +
1914337   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1914338   +
1914339   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1914340   +
1914341   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1914342   +
1914343   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1914344   +
1914345   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1914346   +
1914347   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1914348   +
1914349   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1914350   +
1914351   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1914352   +
1914353   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1914354   +
1914355   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1914356   +
1914357   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1914358   +
1914359   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1914360   +
1914361   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1914362   +
1914363   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1914364   +
1914365   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1914366   +
1914367   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1914368   +
1914369   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1914370   +
1914371   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1914372   +
1914373   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1914374   +
1914375   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1914376   +
1914377   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1914378   +
1914379   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1914380   +
1914381   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1914382   +
1914383   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1914384   +
1914385   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1914386   +
1914387   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1914388   +
1914389   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1914390   +
1914391   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1914392   +
1914393   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1914394   +
1914395   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1914396   +
1914397   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1914398   +
1914399   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1914400   +
1914401   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1914402   +
1914403   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1914404   +
1914405   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1914406   +
1914407   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1914408   +
1914409   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1914410   +
1914411   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1914412   +
1914413   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1914414   +
1914415   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1914416   +
1914417   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1914418   +
1914419   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1914420   +
1914421   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1914422   +
1914423   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1914424   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1914425   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1914426   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1914427   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1914428   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914429   +end;
MPRINT(EM_DIAGRAM):   end;
1914430   +else do;
MPRINT(EM_DIAGRAM):   else do;
1914431   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1914432   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1914433   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1914434   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1914435   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1914436   +   end;
MPRINT(EM_DIAGRAM):   end;
1914437   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1914438   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1914439   +   end;
MPRINT(EM_DIAGRAM):   end;
1914440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1914441   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1914442   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1914443   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914444   +   end;
MPRINT(EM_DIAGRAM):   end;
1914445   +end;
MPRINT(EM_DIAGRAM):   end;
1914446   +
1914447   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1914448   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1914449   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1914450   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1914451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1914452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914453   +end;
MPRINT(EM_DIAGRAM):   end;
1914454   +else do;
MPRINT(EM_DIAGRAM):   else do;
1914455   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1914456   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1914457   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1914458   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1914459   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1914460   +   end;
MPRINT(EM_DIAGRAM):   end;
1914461   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1914462   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1914463   +   end;
MPRINT(EM_DIAGRAM):   end;
1914464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1914465   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1914466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1914467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914468   +   end;
MPRINT(EM_DIAGRAM):   end;
1914469   +end;
MPRINT(EM_DIAGRAM):   end;
1914470   +
1914471   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1914472   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1914473   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1914474   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1914475   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1914476   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914477   +end;
MPRINT(EM_DIAGRAM):   end;
1914478   +else do;
MPRINT(EM_DIAGRAM):   else do;
1914479   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1914480   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1914481   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1914482   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1914483   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1914484   +   end;
MPRINT(EM_DIAGRAM):   end;
1914485   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1914486   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1914487   +   end;
MPRINT(EM_DIAGRAM):   end;
1914488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1914489   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1914490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1914491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914492   +   end;
MPRINT(EM_DIAGRAM):   end;
1914493   +end;
MPRINT(EM_DIAGRAM):   end;
1914494   +
1914495   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1914496   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1914497   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1914498   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1914499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1914500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914501   +end;
MPRINT(EM_DIAGRAM):   end;
1914502   +else do;
MPRINT(EM_DIAGRAM):   else do;
1914503   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1914504   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1914505   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1914506   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1914507   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1914508   +   end;
MPRINT(EM_DIAGRAM):   end;
1914509   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1914510   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1914511   +   end;
MPRINT(EM_DIAGRAM):   end;
1914512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1914513   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1914514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1914515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914516   +   end;
MPRINT(EM_DIAGRAM):   end;
1914517   +end;
MPRINT(EM_DIAGRAM):   end;
1914518   +
1914519   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1914520   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1914521   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1914522   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1914523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1914524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914525   +end;
MPRINT(EM_DIAGRAM):   end;
1914526   +else do;
MPRINT(EM_DIAGRAM):   else do;
1914527   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1914528   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1914529   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1914530   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1914531   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1914532   +   end;
MPRINT(EM_DIAGRAM):   end;
1914533   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1914534   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1914535   +   end;
MPRINT(EM_DIAGRAM):   end;
1914536   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1914537   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1914538   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1914539   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914540   +   end;
MPRINT(EM_DIAGRAM):   end;
1914541   +end;
MPRINT(EM_DIAGRAM):   end;
1914542   +
1914543   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1914544   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1914545   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1914546   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1914547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1914548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914549   +end;
MPRINT(EM_DIAGRAM):   end;
1914550   +else do;
MPRINT(EM_DIAGRAM):   else do;
1914551   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1914552   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1914553   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1914554   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1914555   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1914556   +   end;
MPRINT(EM_DIAGRAM):   end;
1914557   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1914558   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1914559   +   end;
MPRINT(EM_DIAGRAM):   end;
1914560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1914561   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1914562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1914563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914564   +   end;
MPRINT(EM_DIAGRAM):   end;
1914565   +end;
MPRINT(EM_DIAGRAM):   end;
1914566   +
1914567   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1914568   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1914569   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1914570   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1914571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1914572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914573   +end;
MPRINT(EM_DIAGRAM):   end;
1914574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1914575   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1914576   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1914577   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1914578   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1914579   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1914580   +   end;
MPRINT(EM_DIAGRAM):   end;
1914581   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1914582   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1914583   +   end;
MPRINT(EM_DIAGRAM):   end;
1914584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1914585   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1914586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1914587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914588   +   end;
MPRINT(EM_DIAGRAM):   end;
1914589   +end;
MPRINT(EM_DIAGRAM):   end;
1914590   +
1914591   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1914592   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1914593   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1914594   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1914595   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1914596   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1914597   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1914598   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1914599   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1914600   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1914601   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1914602   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1914603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1914604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914605   +end;
MPRINT(EM_DIAGRAM):   end;
1914606   +else do;
MPRINT(EM_DIAGRAM):   else do;
1914607   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1914608   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1914609   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1914610   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1914611   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1914612   +   end;
MPRINT(EM_DIAGRAM):   end;
1914613   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1914614   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1914615   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1914616   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1914617   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1914618   +   end;
MPRINT(EM_DIAGRAM):   end;
1914619   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1914620   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1914621   +   end;
MPRINT(EM_DIAGRAM):   end;
1914622   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1914623   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1914624   +   end;
MPRINT(EM_DIAGRAM):   end;
1914625   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1914626   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1914627   +   end;
MPRINT(EM_DIAGRAM):   end;
1914628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1914629   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1914630   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1914631   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1914632   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1914633   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1914634   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914635   +   end;
MPRINT(EM_DIAGRAM):   end;
1914636   +end;
MPRINT(EM_DIAGRAM):   end;
1914637   +
1914638   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1914639   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1914640   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1914641   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1914642   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1914643   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1914644   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1914645   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1914646   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1914647   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1914648   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1914649   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1914650   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1914651   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1914652   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914653   +end;
MPRINT(EM_DIAGRAM):   end;
1914654   +else do;
MPRINT(EM_DIAGRAM):   else do;
1914655   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1914656   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1914657   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1914658   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1914659   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1914660   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1914661   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1914662   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1914663   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1914664   +         end;
MPRINT(EM_DIAGRAM):   end;
1914665   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1914666   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1914667   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1914668   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1914669   +            end;
MPRINT(EM_DIAGRAM):   end;
1914670   +         end;
MPRINT(EM_DIAGRAM):   end;
1914671   +      end;
MPRINT(EM_DIAGRAM):   end;
1914672   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1914673   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1914674   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1914675   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1914676   +         end;
MPRINT(EM_DIAGRAM):   end;
1914677   +      end;
MPRINT(EM_DIAGRAM):   end;
1914678   +   end;
MPRINT(EM_DIAGRAM):   end;
1914679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1914680   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1914681   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1914682   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1914683   +      end;
MPRINT(EM_DIAGRAM):   end;
1914684   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1914685   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1914686   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1914687   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1914688   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1914689   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1914690   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1914691   +         end;
MPRINT(EM_DIAGRAM):   end;
1914692   +      end;
MPRINT(EM_DIAGRAM):   end;
1914693   +   end;
MPRINT(EM_DIAGRAM):   end;
1914694   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1914695   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1914696   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1914697   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1914698   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1914699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1914700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914701   +   end;
MPRINT(EM_DIAGRAM):   end;
1914702   +end;
MPRINT(EM_DIAGRAM):   end;
1914703   +
1914704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1914705   +*** Checking missing input Interval
1914706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1914707   +
1914708   +IF NMISS(
1914709   +   AcceptedCmpTotal ,
1914710   +   Age ,
1914711   +   Frq ,
1914712   +   Income ,
1914713   +   Kidhome ,
1914714   +   Mnt ,
1914715   +   MntFishProducts ,
1914716   +   MntFruits ,
1914717   +   MntGoldProds ,
1914718   +   MntMeatProducts ,
1914719   +   MntSweetProducts ,
1914720   +   MntWines ,
1914721   +   MonthsAsCustomer ,
1914722   +   NumCatalogPurchases ,
1914723   +   NumDealsPurchases ,
1914724   +   NumDistPurchases ,
1914725   +   NumStorePurchases ,
1914726   +   NumWebPurchases ,
1914727   +   NumWebVisitsMonth ,
1914728   +   RFMstat ,
1914729   +   RMntFrq ,
1914730   +   Recency ,
1914731   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1914732   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1914733   +
1914734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1914735   +END;
MPRINT(EM_DIAGRAM):   END;
1914736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1914737   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1914738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1914739   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1914740   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1914741   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1914742   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1914743   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1914744   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1914745   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1914746   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1914747   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1914748   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1914749   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1914750   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1914751   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1914752   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1914753   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1914754   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1914755   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1914756   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1914757   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1914758   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1914759   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1914760   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1914761   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1914762   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1914763   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1914764   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1914765   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1914766   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1914767   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1914768   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1914769   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1914770   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1914771   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1914772   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1914773   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1914774   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1914775   +END;
MPRINT(EM_DIAGRAM):   END;
1914776   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1914777   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1914778   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1914779   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1914780   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1914781   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1914782   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1914783   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1914784   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1914785   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1914786   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1914787   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1914788   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1914789   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1914790   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1914791   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1914792   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1914793   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1914794   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1914795   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1914796   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1914797   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1914798   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1914799   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1914800   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1914801   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1914802   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1914803   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1914804   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1914805   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1914806   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1914807   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1914808   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1914809   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1914810   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1914811   +   ELSE S_NumCatalogPurchases
1914812   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1914813   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1914814   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1914815   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1914816   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1914817   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1914818   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1914819   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1914820   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1914821   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1914822   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1914823   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1914824   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1914825   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1914826   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1914827   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1914828   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1914829   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1914830   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1914831   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1914832   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1914833   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1914834   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1914835   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1914836   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1914837   +END;
MPRINT(EM_DIAGRAM):   END;
1914838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1914839   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1914840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1914841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1914842   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1914843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1914844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1914845   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1914846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1914847   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1914848   +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
1914849   +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
1914850   +        S_Income  +    -0.43070069114587 * S_Kidhome
1914851   +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
1914852   +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
1914853   +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
1914854   +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
1914855   +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
1914856   +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
1914857   +          +    -0.21858146166244 * S_NumDealsPurchases
1914858   +          +     0.18409991080913 * S_NumDistPurchases
1914859   +          +     0.35683163455594 * S_NumStorePurchases
1914860   +          +     0.24429183714976 * S_NumWebPurchases
1914861   +          +     -0.1263739191616 * S_NumWebVisitsMonth
1914862   +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
1914863   +        S_RMntFrq  +      0.3452503815146 * S_Recency
1914864   +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome +
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 *
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts +
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 *
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 *
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 *
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 *
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq +
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
1914865   +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
1914866   +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
1914867   +        S_Income  +     0.24623934031778 * S_Kidhome
1914868   +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
1914869   +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
1914870   +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
1914871   +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
1914872   +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
1914873   +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
1914874   +          +    -0.08125614129909 * S_NumDealsPurchases
1914875   +          +     0.38003696656333 * S_NumDistPurchases
1914876   +          +     0.22006494588298 * S_NumStorePurchases
1914877   +          +     0.26217639358993 * S_NumWebPurchases
1914878   +          +    -0.56905781005459 * S_NumWebVisitsMonth
1914879   +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
1914880   +        S_RMntFrq  +     0.33060213336674 * S_Recency
1914881   +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome +
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 *
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts +
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 *
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 *
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 *
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 *
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq +
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
1914882   +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
1914883   +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
1914884   +        S_Income  +     0.18597632724783 * S_Kidhome
1914885   +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
1914886   +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
1914887   +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
1914888   +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
1914889   +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
1914890   +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
1914891   +          +     0.08121213946217 * S_NumDealsPurchases
1914892   +          +    -0.04963282234139 * S_NumDistPurchases
1914893   +          +    -0.09521586837775 * S_NumStorePurchases
1914894   +          +     0.00630626523742 * S_NumWebPurchases
1914895   +          +    -0.03891587920939 * S_NumWebVisitsMonth
1914896   +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
1914897   +        S_RMntFrq  +    -0.09135545756466 * S_Recency
1914898   +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome +
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 *
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts +
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 *
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 *
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 *
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 *
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq +
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
1914899   +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
1914900   +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
1914901   +        S_Income  +     0.25356767518099 * S_Kidhome
1914902   +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
1914903   +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
1914904   +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
1914905   +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
1914906   +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
1914907   +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
1914908   +          +     0.83749876944877 * S_NumDealsPurchases
1914909   +          +     0.29636537008068 * S_NumDistPurchases
1914910   +          +    -0.61202052257506 * S_NumStorePurchases
1914911   +          +    -0.96921731415369 * S_NumWebPurchases
1914912   +          +     0.10056455703323 * S_NumWebVisitsMonth
1914913   +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
1914914   +        S_RMntFrq  +    -0.36934667860476 * S_Recency
1914915   +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age +
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome +
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 *
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts +
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 *
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 *
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 *
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 *
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq +
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
1914916   +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
1914917   +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
1914918   +        S_Income  +    -0.66239517276633 * S_Kidhome
1914919   +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
1914920   +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
1914921   +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
1914922   +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
1914923   +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
1914924   +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
1914925   +          +     0.63122884753912 * S_NumDealsPurchases
1914926   +          +     0.00285388491049 * S_NumDistPurchases
1914927   +          +    -0.76222252593182 * S_NumStorePurchases
1914928   +          +    -0.71485070772733 * S_NumWebPurchases
1914929   +          +     1.59020450778179 * S_NumWebVisitsMonth
1914930   +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
1914931   +        S_RMntFrq  +    -1.32400243058807 * S_Recency
1914932   +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome +
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 *
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts +
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 *
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 *
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 *
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 *
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq +
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
1914933   +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
1914934   +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
1914935   +        S_Income  +    -0.22662005590555 * S_Kidhome
1914936   +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
1914937   +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
1914938   +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
1914939   +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
1914940   +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
1914941   +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
1914942   +          +    -0.28143084367284 * S_NumDealsPurchases
1914943   +          +     0.09640746756361 * S_NumDistPurchases
1914944   +          +      0.1754994442449 * S_NumStorePurchases
1914945   +          +     0.14321475617403 * S_NumWebPurchases
1914946   +          +     -0.1908048876137 * S_NumWebVisitsMonth
1914947   +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
1914948   +        S_RMntFrq  +     0.02280616139018 * S_Recency
1914949   +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age +
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome +
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 *
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts +
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 *
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 *
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 *
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 *
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq +
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
1914950   +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
1914951   +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
1914952   +        S_Income  +    -0.45643247613458 * S_Kidhome
1914953   +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
1914954   +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
1914955   +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
1914956   +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
1914957   +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
1914958   +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
1914959   +          +    -0.14623073736275 * S_NumDealsPurchases
1914960   +          +      0.1591142102614 * S_NumDistPurchases
1914961   +          +     0.10364624011419 * S_NumStorePurchases
1914962   +          +     0.21545343951201 * S_NumWebPurchases
1914963   +          +     0.61096997379603 * S_NumWebVisitsMonth
1914964   +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
1914965   +        S_RMntFrq  +    -1.05615926539796 * S_Recency
1914966   +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome +
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 *
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts +
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 *
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 *
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 *
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 *
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq +
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
1914967   +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
1914968   +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
1914969   +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
1914970   +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
1914971   +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 *
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 +
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 *
HigherEducationBinary0 ;
1914972   +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
1914973   +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
1914974   +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
1914975   +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
1914976   +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 *
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 +
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 *
HigherEducationBinary0 ;
1914977   +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
1914978   +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
1914979   +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
1914980   +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
1914981   +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 *
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 +
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 *
HigherEducationBinary0 ;
1914982   +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
1914983   +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
1914984   +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
1914985   +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
1914986   +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 *
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 +
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 *
HigherEducationBinary0 ;
1914987   +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
1914988   +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
1914989   +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
1914990   +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
1914991   +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 *
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 +
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 *
HigherEducationBinary0 ;
1914992   +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
1914993   +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
1914994   +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
1914995   +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
1914996   +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 *
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 +
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 *
HigherEducationBinary0 ;
1914997   +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
1914998   +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
1914999   +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
1915000   +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
1915001   +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 *
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 +
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 *
HigherEducationBinary0 ;
1915002   +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
1915003   +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
1915004   +        EducationGraduation  +     0.00389495660452 * EducationMaster
1915005   +          +     0.39856598367829 * Marital_StatusDivorced
1915006   +          +    -0.45922754552461 * Marital_StatusMarried
1915007   +          +     0.41270195301891 * Marital_StatusSingle
1915008   +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 *
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster +
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried +
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
1915009   +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
1915010   +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
1915011   +        EducationGraduation  +      0.2609956614651 * EducationMaster
1915012   +          +     0.12002180366932 * Marital_StatusDivorced
1915013   +          +     0.50693056076018 * Marital_StatusMarried
1915014   +          +    -0.40828651697464 * Marital_StatusSingle
1915015   +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 *
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster +
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried +
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
1915016   +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
1915017   +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
1915018   +        EducationGraduation  +     0.20017847825938 * EducationMaster
1915019   +          +    -0.05075621283629 * Marital_StatusDivorced
1915020   +          +     0.06731276969307 * Marital_StatusMarried
1915021   +          +     0.20458391966582 * Marital_StatusSingle
1915022   +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 *
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster +
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried +
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
1915023   +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
1915024   +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
1915025   +        EducationGraduation  +     0.28829384238085 * EducationMaster
1915026   +          +    -0.37925185401218 * Marital_StatusDivorced
1915027   +          +     0.62971134740586 * Marital_StatusMarried
1915028   +          +    -0.36562351730859 * Marital_StatusSingle
1915029   +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 *
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried +
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
1915030   +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
1915031   +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
1915032   +        EducationGraduation  +    -0.18997526501932 * EducationMaster
1915033   +          +     0.84382044664305 * Marital_StatusDivorced
1915034   +          +    -0.84062627203871 * Marital_StatusMarried
1915035   +          +     0.74100406031127 * Marital_StatusSingle
1915036   +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 *
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried +
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
1915037   +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
1915038   +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
1915039   +        EducationGraduation  +    -0.13296903086061 * EducationMaster
1915040   +          +     -0.1195105091383 * Marital_StatusDivorced
1915041   +          +    -0.13486422945269 * Marital_StatusMarried
1915042   +          +     0.33592403429156 * Marital_StatusSingle
1915043   +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 *
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried +
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
1915044   +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
1915045   +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
1915046   +        EducationGraduation  +    -0.09885314861537 * EducationMaster
1915047   +          +     0.14792293029589 * Marital_StatusDivorced
1915048   +          +    -0.96003393582564 * Marital_StatusMarried
1915049   +          +     0.64637652355384 * Marital_StatusSingle
1915050   +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 *
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried +
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
1915051   +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
1915052   +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
1915053   +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
1915054   +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
1915055   +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
1915056   +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
1915057   +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
1915058   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1915059   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1915060   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1915061   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1915062   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1915063   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1915064   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1915065   +END;
MPRINT(EM_DIAGRAM):   END;
1915066   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1915067   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1915068   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1915069   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1915070   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1915071   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1915072   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1915073   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1915074   +END;
MPRINT(EM_DIAGRAM):   END;
1915075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915076   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1915077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915078   +
1915079   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1915080   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1915081   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1915082   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1915083   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1915084   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915085   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1915086   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1915087   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1915088   +end;
MPRINT(EM_DIAGRAM):   end;
1915089   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915090   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1915091   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1915092   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1915093   +   end;
MPRINT(EM_DIAGRAM):   end;
1915094   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1915095   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1915096   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1915097   +   end;
MPRINT(EM_DIAGRAM):   end;
1915098   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915099   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1915100   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1915101   +   end;
MPRINT(EM_DIAGRAM):   end;
1915102   +end;
MPRINT(EM_DIAGRAM):   end;
1915103   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1915104   +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
1915105   +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
1915106   +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
1915107   +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 +
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 *
H16 + 2.0380168893605 * H17 ;
1915108   +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
1915109   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1915110   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1915111   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1915112   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1915113   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1915114   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1915115   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1915116   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1915117   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1915118   +END;
MPRINT(EM_DIAGRAM):   END;
1915119   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1915120   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1915121   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1915122   +END;
MPRINT(EM_DIAGRAM):   END;
1915123   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1915124   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1915125   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1915126   +END;
MPRINT(EM_DIAGRAM):   END;
1915127   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1915128   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1915129   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1915130   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1915131   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1915132   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1915133   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1915134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915135   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1915136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915137   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1915138   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1915139   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1915140   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1915141   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1915142   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1915143   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1915144   +END;
MPRINT(EM_DIAGRAM):   END;
1915145   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1915146   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1915147   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1915148   +drop
1915149   +H11
1915150   +H12
1915151   +H13
1915152   +H14
1915153   +H15
1915154   +H16
1915155   +H17
1915156   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1915157   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1915158   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1915159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1915160   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1915161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1915162   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1915163   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1915164   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1915165   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1915166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1915167   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1915168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1915169   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1915170   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1915171   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1915172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1915173   +* Ensmbl27: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 2 of 7;
1915174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1915175   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1915176   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1915177   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1915178   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1915179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1915180   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1915181   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1915182   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1915183   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1915184   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1915185   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1915186   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1915187   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1915188   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1915189   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1915190   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1915191   +LENGTH _WARN_ $4
1915192   +      F_DepVar  $ 12
1915193   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1915194   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1915195   +
1915196   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1915197   +
1915198   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1915199   +
1915200   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1915201   +
1915202   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1915203   +
1915204   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1915205   +
1915206   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1915207   +
1915208   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1915209   +
1915210   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1915211   +
1915212   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1915213   +
1915214   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1915215   +
1915216   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1915217   +
1915218   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1915219   +
1915220   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1915221   +
1915222   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1915223   +
1915224   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1915225   +
1915226   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1915227   +
1915228   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1915229   +
1915230   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1915231   +
1915232   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1915233   +
1915234   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1915235   +
1915236   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1915237   +
1915238   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1915239   +
1915240   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1915241   +
1915242   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1915243   +
1915244   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1915245   +
1915246   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1915247   +
1915248   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1915249   +
1915250   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1915251   +
1915252   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1915253   +
1915254   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1915255   +
1915256   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1915257   +
1915258   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1915259   +
1915260   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1915261   +
1915262   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1915263   +
1915264   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1915265   +
1915266   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1915267   +
1915268   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1915269   +
1915270   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1915271   +
1915272   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1915273   +
1915274   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1915275   +
1915276   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1915277   +
1915278   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1915279   +
1915280   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1915281   +
1915282   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1915283   +
1915284   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1915285   +
1915286   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1915287   +
1915288   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1915289   +
1915290   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1915291   +
1915292   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1915293   +
1915294   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1915295   +
1915296   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1915297   +
1915298   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1915299   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1915300   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1915301   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1915302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1915303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915304   +end;
MPRINT(EM_DIAGRAM):   end;
1915305   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915306   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1915307   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1915308   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915309   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1915310   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1915311   +   end;
MPRINT(EM_DIAGRAM):   end;
1915312   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1915313   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1915314   +   end;
MPRINT(EM_DIAGRAM):   end;
1915315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915316   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1915317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1915318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915319   +   end;
MPRINT(EM_DIAGRAM):   end;
1915320   +end;
MPRINT(EM_DIAGRAM):   end;
1915321   +
1915322   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1915323   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1915324   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1915325   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1915326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1915327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915328   +end;
MPRINT(EM_DIAGRAM):   end;
1915329   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915330   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1915331   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1915332   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915333   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1915334   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1915335   +   end;
MPRINT(EM_DIAGRAM):   end;
1915336   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1915337   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1915338   +   end;
MPRINT(EM_DIAGRAM):   end;
1915339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915340   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1915341   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1915342   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915343   +   end;
MPRINT(EM_DIAGRAM):   end;
1915344   +end;
MPRINT(EM_DIAGRAM):   end;
1915345   +
1915346   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1915347   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1915348   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1915349   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1915350   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1915351   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915352   +end;
MPRINT(EM_DIAGRAM):   end;
1915353   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915354   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1915355   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1915356   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915357   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1915358   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1915359   +   end;
MPRINT(EM_DIAGRAM):   end;
1915360   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1915361   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1915362   +   end;
MPRINT(EM_DIAGRAM):   end;
1915363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915364   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1915365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1915366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915367   +   end;
MPRINT(EM_DIAGRAM):   end;
1915368   +end;
MPRINT(EM_DIAGRAM):   end;
1915369   +
1915370   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1915371   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1915372   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1915373   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1915374   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1915375   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915376   +end;
MPRINT(EM_DIAGRAM):   end;
1915377   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915378   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1915379   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1915380   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915381   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1915382   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1915383   +   end;
MPRINT(EM_DIAGRAM):   end;
1915384   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1915385   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1915386   +   end;
MPRINT(EM_DIAGRAM):   end;
1915387   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915388   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1915389   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1915390   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915391   +   end;
MPRINT(EM_DIAGRAM):   end;
1915392   +end;
MPRINT(EM_DIAGRAM):   end;
1915393   +
1915394   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1915395   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1915396   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1915397   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1915398   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1915399   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915400   +end;
MPRINT(EM_DIAGRAM):   end;
1915401   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915402   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1915403   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1915404   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915405   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1915406   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1915407   +   end;
MPRINT(EM_DIAGRAM):   end;
1915408   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1915409   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1915410   +   end;
MPRINT(EM_DIAGRAM):   end;
1915411   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915412   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1915413   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1915414   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915415   +   end;
MPRINT(EM_DIAGRAM):   end;
1915416   +end;
MPRINT(EM_DIAGRAM):   end;
1915417   +
1915418   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1915419   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1915420   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1915421   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1915422   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1915423   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915424   +end;
MPRINT(EM_DIAGRAM):   end;
1915425   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915426   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1915427   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1915428   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915429   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1915430   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1915431   +   end;
MPRINT(EM_DIAGRAM):   end;
1915432   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1915433   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1915434   +   end;
MPRINT(EM_DIAGRAM):   end;
1915435   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915436   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1915437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1915438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915439   +   end;
MPRINT(EM_DIAGRAM):   end;
1915440   +end;
MPRINT(EM_DIAGRAM):   end;
1915441   +
1915442   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1915443   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1915444   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1915445   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1915446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1915447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915448   +end;
MPRINT(EM_DIAGRAM):   end;
1915449   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915450   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1915451   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1915452   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915453   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1915454   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1915455   +   end;
MPRINT(EM_DIAGRAM):   end;
1915456   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1915457   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1915458   +   end;
MPRINT(EM_DIAGRAM):   end;
1915459   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915460   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1915461   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1915462   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915463   +   end;
MPRINT(EM_DIAGRAM):   end;
1915464   +end;
MPRINT(EM_DIAGRAM):   end;
1915465   +
1915466   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1915467   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1915468   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1915469   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1915470   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1915471   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1915472   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1915473   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1915474   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1915475   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1915476   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1915477   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1915478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1915479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915480   +end;
MPRINT(EM_DIAGRAM):   end;
1915481   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915482   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1915483   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1915484   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915485   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1915486   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1915487   +   end;
MPRINT(EM_DIAGRAM):   end;
1915488   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1915489   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1915490   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1915491   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1915492   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1915493   +   end;
MPRINT(EM_DIAGRAM):   end;
1915494   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1915495   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1915496   +   end;
MPRINT(EM_DIAGRAM):   end;
1915497   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1915498   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1915499   +   end;
MPRINT(EM_DIAGRAM):   end;
1915500   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1915501   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1915502   +   end;
MPRINT(EM_DIAGRAM):   end;
1915503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915504   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1915505   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1915506   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1915507   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1915508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1915509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915510   +   end;
MPRINT(EM_DIAGRAM):   end;
1915511   +end;
MPRINT(EM_DIAGRAM):   end;
1915512   +
1915513   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1915514   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1915515   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1915516   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1915517   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1915518   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1915519   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1915520   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1915521   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1915522   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1915523   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1915524   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1915525   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1915526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1915527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915528   +end;
MPRINT(EM_DIAGRAM):   end;
1915529   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915530   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1915531   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1915532   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915533   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1915534   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1915535   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1915536   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1915537   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1915538   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1915539   +         end;
MPRINT(EM_DIAGRAM):   end;
1915540   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1915541   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1915542   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1915543   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1915544   +            end;
MPRINT(EM_DIAGRAM):   end;
1915545   +         end;
MPRINT(EM_DIAGRAM):   end;
1915546   +      end;
MPRINT(EM_DIAGRAM):   end;
1915547   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1915548   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1915549   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1915550   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1915551   +         end;
MPRINT(EM_DIAGRAM):   end;
1915552   +      end;
MPRINT(EM_DIAGRAM):   end;
1915553   +   end;
MPRINT(EM_DIAGRAM):   end;
1915554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915555   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1915556   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1915557   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1915558   +      end;
MPRINT(EM_DIAGRAM):   end;
1915559   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1915560   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1915561   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1915562   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1915563   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1915564   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1915565   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1915566   +         end;
MPRINT(EM_DIAGRAM):   end;
1915567   +      end;
MPRINT(EM_DIAGRAM):   end;
1915568   +   end;
MPRINT(EM_DIAGRAM):   end;
1915569   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1915570   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1915571   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1915572   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1915573   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1915574   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1915575   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915576   +   end;
MPRINT(EM_DIAGRAM):   end;
1915577   +end;
MPRINT(EM_DIAGRAM):   end;
1915578   +
1915579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915580   +*** Checking missing input Interval
1915581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1915582   +
1915583   +IF NMISS(
1915584   +   AcceptedCmpTotal ,
1915585   +   Age ,
1915586   +   Frq ,
1915587   +   Income ,
1915588   +   Kidhome ,
1915589   +   Mnt ,
1915590   +   MntFishProducts ,
1915591   +   MntFruits ,
1915592   +   MntGoldProds ,
1915593   +   MntMeatProducts ,
1915594   +   MntSweetProducts ,
1915595   +   MntWines ,
1915596   +   MonthsAsCustomer ,
1915597   +   NumCatalogPurchases ,
1915598   +   NumDealsPurchases ,
1915599   +   NumDistPurchases ,
1915600   +   NumStorePurchases ,
1915601   +   NumWebPurchases ,
1915602   +   NumWebVisitsMonth ,
1915603   +   RFMstat ,
1915604   +   RMntFrq ,
1915605   +   Recency ,
1915606   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1915607   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1915608   +
1915609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1915610   +END;
MPRINT(EM_DIAGRAM):   END;
1915611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915612   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1915613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915614   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1915615   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1915616   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1915617   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1915618   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1915619   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1915620   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1915621   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1915622   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1915623   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1915624   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1915625   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1915626   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1915627   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1915628   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1915629   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1915630   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1915631   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1915632   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1915633   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1915634   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1915635   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1915636   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1915637   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1915638   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1915639   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1915640   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1915641   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1915642   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1915643   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1915644   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1915645   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1915646   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1915647   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1915648   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1915649   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1915650   +END;
MPRINT(EM_DIAGRAM):   END;
1915651   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1915652   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1915653   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1915654   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1915655   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1915656   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1915657   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1915658   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1915659   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1915660   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1915661   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1915662   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1915663   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1915664   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1915665   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1915666   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1915667   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1915668   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1915669   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1915670   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1915671   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1915672   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1915673   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1915674   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1915675   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1915676   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1915677   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1915678   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1915679   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1915680   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1915681   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1915682   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1915683   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1915684   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1915685   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1915686   +   ELSE S_NumCatalogPurchases
1915687   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1915688   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1915689   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1915690   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1915691   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1915692   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1915693   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1915694   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1915695   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1915696   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1915697   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1915698   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1915699   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1915700   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1915701   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1915702   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1915703   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1915704   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1915705   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1915706   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1915707   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1915708   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1915709   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1915710   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1915711   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1915712   +END;
MPRINT(EM_DIAGRAM):   END;
1915713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915714   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1915715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915717   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1915718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915720   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1915721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915722   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1915723   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1915724   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1915725   +        S_Income  +    -0.14142658616971 * S_Kidhome
1915726   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1915727   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1915728   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1915729   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1915730   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1915731   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1915732   +          +     0.96837841774168 * S_NumDealsPurchases
1915733   +          +      0.2846105381881 * S_NumDistPurchases
1915734   +          +    -0.69514041792943 * S_NumStorePurchases
1915735   +          +    -0.96425407351749 * S_NumWebPurchases
1915736   +          +     0.79545449599683 * S_NumWebVisitsMonth
1915737   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1915738   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1915739   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1915740   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1915741   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1915742   +        S_Income  +    -0.55432195959203 * S_Kidhome
1915743   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1915744   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1915745   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1915746   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1915747   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1915748   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1915749   +          +      0.2190184330724 * S_NumDealsPurchases
1915750   +          +    -0.01682909442896 * S_NumDistPurchases
1915751   +          +    -0.70244951048552 * S_NumStorePurchases
1915752   +          +     -0.3057457659316 * S_NumWebPurchases
1915753   +          +     0.95928538762715 * S_NumWebVisitsMonth
1915754   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1915755   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1915756   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1915757   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1915758   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1915759   +        S_Income  +    -0.06354861159882 * S_Kidhome
1915760   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1915761   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1915762   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1915763   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1915764   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1915765   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1915766   +          +    -0.21394230159696 * S_NumDealsPurchases
1915767   +          +    -0.23833771124663 * S_NumDistPurchases
1915768   +          +     0.45832031017813 * S_NumStorePurchases
1915769   +          +    -0.30226952040179 * S_NumWebPurchases
1915770   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1915771   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1915772   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1915773   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
1915774   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1915775   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1915776   +        S_Income  +    -0.04839586846715 * S_Kidhome
1915777   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1915778   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1915779   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1915780   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1915781   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1915782   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1915783   +          +    -0.43749647771198 * S_NumDealsPurchases
1915784   +          +     0.21263473847472 * S_NumDistPurchases
1915785   +          +     0.26102168039141 * S_NumStorePurchases
1915786   +          +     0.54921725943657 * S_NumWebPurchases
1915787   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1915788   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1915789   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1915790   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1915791   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1915792   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1915793   +        S_Income  +     0.71499527198653 * S_Kidhome
1915794   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1915795   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1915796   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1915797   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1915798   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1915799   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1915800   +          +     0.09436067776126 * S_NumDealsPurchases
1915801   +          +    -0.02824201859641 * S_NumDistPurchases
1915802   +          +    -0.06770433780564 * S_NumStorePurchases
1915803   +          +    -0.07177620319715 * S_NumWebPurchases
1915804   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1915805   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1915806   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1915807   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1915808   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1915809   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1915810   +        S_Income  +    -0.63474522042341 * S_Kidhome
1915811   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1915812   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1915813   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1915814   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1915815   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1915816   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1915817   +          +    -0.51154511343396 * S_NumDealsPurchases
1915818   +          +    -0.52422915823572 * S_NumDistPurchases
1915819   +          +     0.30305498422357 * S_NumStorePurchases
1915820   +          +     0.12197321559338 * S_NumWebPurchases
1915821   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1915822   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1915823   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1915824   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1915825   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1915826   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1915827   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1915828   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1915829   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
1915830   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1915831   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1915832   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1915833   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1915834   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
1915835   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1915836   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1915837   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1915838   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1915839   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
1915840   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1915841   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1915842   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1915843   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1915844   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
1915845   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1915846   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1915847   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1915848   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1915849   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
1915850   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1915851   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1915852   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1915853   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1915854   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
1915855   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1915856   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1915857   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1915858   +          +     0.10234616400375 * Marital_StatusDivorced
1915859   +          +     0.27961650739075 * Marital_StatusMarried
1915860   +          +    -0.40239488723767 * Marital_StatusSingle
1915861   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1915862   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1915863   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1915864   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1915865   +          +     0.46385792428023 * Marital_StatusDivorced
1915866   +          +    -0.62344590646391 * Marital_StatusMarried
1915867   +          +     0.61767209252062 * Marital_StatusSingle
1915868   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1915869   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1915870   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1915871   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1915872   +          +    -0.07839612590836 * Marital_StatusDivorced
1915873   +          +     0.35316864062221 * Marital_StatusMarried
1915874   +          +    -0.10730136429834 * Marital_StatusSingle
1915875   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1915876   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1915877   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1915878   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1915879   +          +    -0.09942175269886 * Marital_StatusDivorced
1915880   +          +     0.24385460865335 * Marital_StatusMarried
1915881   +          +    -0.33658955096296 * Marital_StatusSingle
1915882   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1915883   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1915884   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1915885   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1915886   +          +    -0.08047852561096 * Marital_StatusDivorced
1915887   +          +     1.16485862694561 * Marital_StatusMarried
1915888   +          +    -0.94140251178566 * Marital_StatusSingle
1915889   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1915890   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1915891   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1915892   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1915893   +          +    -0.16621963893391 * Marital_StatusDivorced
1915894   +          +    -0.44542186297324 * Marital_StatusMarried
1915895   +          +     0.42176133228308 * Marital_StatusSingle
1915896   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1915897   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1915898   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1915899   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1915900   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1915901   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1915902   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1915903   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1915904   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1915905   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1915906   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1915907   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1915908   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1915909   +END;
MPRINT(EM_DIAGRAM):   END;
1915910   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1915911   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1915912   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1915913   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1915914   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1915915   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1915916   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1915917   +END;
MPRINT(EM_DIAGRAM):   END;
1915918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915919   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1915920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915921   +
1915922   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1915923   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1915924   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1915925   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1915926   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1915927   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1915928   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1915929   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1915930   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1915931   +end;
MPRINT(EM_DIAGRAM):   end;
1915932   +else do;
MPRINT(EM_DIAGRAM):   else do;
1915933   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1915934   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1915935   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1915936   +   end;
MPRINT(EM_DIAGRAM):   end;
1915937   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1915938   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1915939   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1915940   +   end;
MPRINT(EM_DIAGRAM):   end;
1915941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1915942   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1915943   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1915944   +   end;
MPRINT(EM_DIAGRAM):   end;
1915945   +end;
MPRINT(EM_DIAGRAM):   end;
1915946   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1915947   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1915948   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1915949   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
1915950   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1915951   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1915952   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1915953   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1915954   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1915955   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1915956   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1915957   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1915958   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1915959   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1915960   +END;
MPRINT(EM_DIAGRAM):   END;
1915961   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1915962   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1915963   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1915964   +END;
MPRINT(EM_DIAGRAM):   END;
1915965   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1915966   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1915967   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1915968   +END;
MPRINT(EM_DIAGRAM):   END;
1915969   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1915970   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1915971   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1915972   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1915973   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1915974   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1915975   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1915976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915977   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1915978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1915979   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1915980   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1915981   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1915982   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1915983   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1915984   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1915985   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1915986   +END;
MPRINT(EM_DIAGRAM):   END;
1915987   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1915988   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1915989   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1915990   +drop
1915991   +H11
1915992   +H12
1915993   +H13
1915994   +H14
1915995   +H15
1915996   +H16
1915997   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1915998   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1915999   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1916000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916001   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1916002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916003   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1916004   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1916005   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1916006   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1916007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916008   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1916009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916010   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1916011   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1916012   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1916013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916014   +* Ensmbl27: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 3 of 7;
1916015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916017   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1916018   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1916019   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1916020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916021   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1916022   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1916023   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1916024   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1916025   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1916026   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1916027   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1916028   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1916029   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1916030   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1916031   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1916032   +LENGTH _WARN_ $4
1916033   +      F_DepVar  $ 12
1916034   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1916035   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1916036   +
1916037   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1916038   +
1916039   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1916040   +
1916041   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1916042   +
1916043   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1916044   +
1916045   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1916046   +
1916047   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1916048   +
1916049   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1916050   +
1916051   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1916052   +
1916053   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1916054   +
1916055   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1916056   +
1916057   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1916058   +
1916059   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1916060   +
1916061   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1916062   +
1916063   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1916064   +
1916065   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1916066   +
1916067   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1916068   +
1916069   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1916070   +
1916071   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1916072   +
1916073   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1916074   +
1916075   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1916076   +
1916077   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1916078   +
1916079   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1916080   +
1916081   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1916082   +
1916083   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1916084   +
1916085   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1916086   +
1916087   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1916088   +
1916089   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1916090   +
1916091   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1916092   +
1916093   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1916094   +
1916095   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1916096   +
1916097   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1916098   +
1916099   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1916100   +
1916101   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1916102   +
1916103   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1916104   +
1916105   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1916106   +
1916107   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1916108   +
1916109   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1916110   +
1916111   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1916112   +
1916113   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1916114   +
1916115   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1916116   +
1916117   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1916118   +
1916119   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1916120   +
1916121   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1916122   +
1916123   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1916124   +
1916125   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1916126   +
1916127   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1916128   +
1916129   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1916130   +
1916131   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1916132   +
1916133   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1916134   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1916135   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1916136   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1916137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916139   +end;
MPRINT(EM_DIAGRAM):   end;
1916140   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916142   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1916143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916144   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916145   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1916146   +   end;
MPRINT(EM_DIAGRAM):   end;
1916147   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916148   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1916149   +   end;
MPRINT(EM_DIAGRAM):   end;
1916150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916151   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1916152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916154   +   end;
MPRINT(EM_DIAGRAM):   end;
1916155   +end;
MPRINT(EM_DIAGRAM):   end;
1916156   +
1916157   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1916158   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1916159   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1916160   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1916161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916163   +end;
MPRINT(EM_DIAGRAM):   end;
1916164   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916165   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916166   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1916167   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916168   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916169   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1916170   +   end;
MPRINT(EM_DIAGRAM):   end;
1916171   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916172   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1916173   +   end;
MPRINT(EM_DIAGRAM):   end;
1916174   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916175   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1916176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916178   +   end;
MPRINT(EM_DIAGRAM):   end;
1916179   +end;
MPRINT(EM_DIAGRAM):   end;
1916180   +
1916181   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1916182   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1916183   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1916184   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1916185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916187   +end;
MPRINT(EM_DIAGRAM):   end;
1916188   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916189   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916190   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1916191   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916192   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916193   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1916194   +   end;
MPRINT(EM_DIAGRAM):   end;
1916195   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916196   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1916197   +   end;
MPRINT(EM_DIAGRAM):   end;
1916198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916199   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1916200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916202   +   end;
MPRINT(EM_DIAGRAM):   end;
1916203   +end;
MPRINT(EM_DIAGRAM):   end;
1916204   +
1916205   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1916206   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1916207   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1916208   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1916209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916211   +end;
MPRINT(EM_DIAGRAM):   end;
1916212   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916213   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916214   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1916215   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916216   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916217   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1916218   +   end;
MPRINT(EM_DIAGRAM):   end;
1916219   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916220   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1916221   +   end;
MPRINT(EM_DIAGRAM):   end;
1916222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916223   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1916224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916226   +   end;
MPRINT(EM_DIAGRAM):   end;
1916227   +end;
MPRINT(EM_DIAGRAM):   end;
1916228   +
1916229   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1916230   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1916231   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1916232   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1916233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916235   +end;
MPRINT(EM_DIAGRAM):   end;
1916236   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916237   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916238   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1916239   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916240   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916241   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1916242   +   end;
MPRINT(EM_DIAGRAM):   end;
1916243   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916244   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1916245   +   end;
MPRINT(EM_DIAGRAM):   end;
1916246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916247   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1916248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916250   +   end;
MPRINT(EM_DIAGRAM):   end;
1916251   +end;
MPRINT(EM_DIAGRAM):   end;
1916252   +
1916253   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1916254   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1916255   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1916256   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1916257   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916259   +end;
MPRINT(EM_DIAGRAM):   end;
1916260   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916261   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916262   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1916263   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916264   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916265   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1916266   +   end;
MPRINT(EM_DIAGRAM):   end;
1916267   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916268   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1916269   +   end;
MPRINT(EM_DIAGRAM):   end;
1916270   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916271   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1916272   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916273   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916274   +   end;
MPRINT(EM_DIAGRAM):   end;
1916275   +end;
MPRINT(EM_DIAGRAM):   end;
1916276   +
1916277   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1916278   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1916279   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1916280   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1916281   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916282   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916283   +end;
MPRINT(EM_DIAGRAM):   end;
1916284   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916285   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916286   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1916287   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916288   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1916289   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1916290   +   end;
MPRINT(EM_DIAGRAM):   end;
1916291   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1916292   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1916293   +   end;
MPRINT(EM_DIAGRAM):   end;
1916294   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916295   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1916296   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916297   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916298   +   end;
MPRINT(EM_DIAGRAM):   end;
1916299   +end;
MPRINT(EM_DIAGRAM):   end;
1916300   +
1916301   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1916302   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1916303   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1916304   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1916305   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1916306   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1916307   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1916308   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1916309   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1916310   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1916311   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1916312   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1916313   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916315   +end;
MPRINT(EM_DIAGRAM):   end;
1916316   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916317   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1916318   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1916319   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916320   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1916321   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1916322   +   end;
MPRINT(EM_DIAGRAM):   end;
1916323   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1916324   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1916325   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1916326   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1916327   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1916328   +   end;
MPRINT(EM_DIAGRAM):   end;
1916329   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1916330   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1916331   +   end;
MPRINT(EM_DIAGRAM):   end;
1916332   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1916333   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1916334   +   end;
MPRINT(EM_DIAGRAM):   end;
1916335   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1916336   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1916337   +   end;
MPRINT(EM_DIAGRAM):   end;
1916338   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916339   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1916340   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1916341   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1916342   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1916343   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916344   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916345   +   end;
MPRINT(EM_DIAGRAM):   end;
1916346   +end;
MPRINT(EM_DIAGRAM):   end;
1916347   +
1916348   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1916349   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1916350   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1916351   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1916352   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1916353   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1916354   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1916355   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1916356   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1916357   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1916358   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1916359   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1916360   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1916361   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916363   +end;
MPRINT(EM_DIAGRAM):   end;
1916364   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916365   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1916366   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1916367   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916368   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1916369   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1916370   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
The SAS System
 
1916371   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1916372   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1916373   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1916374   +         end;
MPRINT(EM_DIAGRAM):   end;
1916375   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1916376   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1916377   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1916378   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1916379   +            end;
MPRINT(EM_DIAGRAM):   end;
1916380   +         end;
MPRINT(EM_DIAGRAM):   end;
1916381   +      end;
MPRINT(EM_DIAGRAM):   end;
1916382   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1916383   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1916384   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1916385   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1916386   +         end;
MPRINT(EM_DIAGRAM):   end;
1916387   +      end;
MPRINT(EM_DIAGRAM):   end;
1916388   +   end;
MPRINT(EM_DIAGRAM):   end;
1916389   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916390   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1916391   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1916392   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1916393   +      end;
MPRINT(EM_DIAGRAM):   end;
1916394   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1916395   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1916396   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1916397   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1916398   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1916399   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1916400   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1916401   +         end;
MPRINT(EM_DIAGRAM):   end;
1916402   +      end;
MPRINT(EM_DIAGRAM):   end;
1916403   +   end;
MPRINT(EM_DIAGRAM):   end;
1916404   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1916405   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1916406   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1916407   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1916408   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1916409   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916410   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916411   +   end;
MPRINT(EM_DIAGRAM):   end;
1916412   +end;
MPRINT(EM_DIAGRAM):   end;
1916413   +
1916414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916415   +*** Checking missing input Interval
1916416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1916417   +
1916418   +IF NMISS(
1916419   +   AcceptedCmpTotal ,
1916420   +   Age ,
1916421   +   Frq ,
1916422   +   Income ,
1916423   +   Kidhome ,
1916424   +   Mnt ,
1916425   +   MntFishProducts ,
1916426   +   MntFruits ,
1916427   +   MntGoldProds ,
1916428   +   MntMeatProducts ,
1916429   +   MntSweetProducts ,
1916430   +   MntWines ,
1916431   +   MonthsAsCustomer ,
1916432   +   NumCatalogPurchases ,
1916433   +   NumDealsPurchases ,
1916434   +   NumDistPurchases ,
1916435   +   NumStorePurchases ,
1916436   +   NumWebPurchases ,
1916437   +   NumWebVisitsMonth ,
1916438   +   RFMstat ,
1916439   +   RMntFrq ,
1916440   +   Recency ,
1916441   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1916442   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1916443   +
1916444   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916445   +END;
MPRINT(EM_DIAGRAM):   END;
1916446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916447   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1916448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916449   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1916450   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1916451   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1916452   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1916453   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1916454   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1916455   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1916456   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1916457   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1916458   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1916459   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1916460   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1916461   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1916462   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1916463   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1916464   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1916465   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1916466   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1916467   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1916468   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1916469   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1916470   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1916471   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1916472   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1916473   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1916474   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1916475   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1916476   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1916477   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1916478   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1916479   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1916480   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1916481   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1916482   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1916483   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1916484   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1916485   +END;
MPRINT(EM_DIAGRAM):   END;
1916486   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1916487   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1916488   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1916489   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1916490   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1916491   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1916492   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1916493   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1916494   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1916495   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1916496   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1916497   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1916498   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1916499   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1916500   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1916501   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1916502   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1916503   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1916504   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1916505   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1916506   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1916507   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1916508   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1916509   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1916510   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1916511   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1916512   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1916513   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1916514   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1916515   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1916516   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1916517   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1916518   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1916519   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1916520   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1916521   +   ELSE S_NumCatalogPurchases
1916522   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1916523   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1916524   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1916525   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1916526   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1916527   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1916528   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1916529   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1916530   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1916531   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1916532   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1916533   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1916534   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1916535   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1916536   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1916537   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1916538   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1916539   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1916540   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1916541   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1916542   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1916543   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1916544   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1916545   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1916546   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1916547   +END;
MPRINT(EM_DIAGRAM):   END;
1916548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916549   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1916550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916552   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1916553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916555   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1916556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916557   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1916558   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1916559   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1916560   +        S_Income  +     0.51123266106809 * S_Kidhome
1916561   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1916562   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1916563   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1916564   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1916565   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1916566   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1916567   +          +     1.34095732961105 * S_NumDealsPurchases
1916568   +          +     0.16605991333252 * S_NumDistPurchases
1916569   +          +    -0.61746267736536 * S_NumStorePurchases
1916570   +          +    -0.61812800689506 * S_NumWebPurchases
1916571   +          +     1.44649145055387 * S_NumWebVisitsMonth
1916572   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1916573   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1916574   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1916575   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1916576   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1916577   +        S_Income  +     0.52295323651199 * S_Kidhome
1916578   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1916579   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1916580   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1916581   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1916582   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1916583   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1916584   +          +    -0.72543332317832 * S_NumDealsPurchases
1916585   +          +    -0.05245472565117 * S_NumDistPurchases
1916586   +          +     1.00667431585298 * S_NumStorePurchases
1916587   +          +     1.02836701470962 * S_NumWebPurchases
1916588   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1916589   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1916590   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1916591   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1916592   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1916593   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1916594   +        S_Income  +     0.58025720116696 * S_Kidhome
1916595   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1916596   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1916597   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1916598   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1916599   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1916600   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1916601   +          +     0.12670438262487 * S_NumDealsPurchases
1916602   +          +    -0.46113523834333 * S_NumDistPurchases
1916603   +          +     0.07074818720567 * S_NumStorePurchases
1916604   +          +    -0.05066645783537 * S_NumWebPurchases
1916605   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1916606   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1916607   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1916608   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1916609   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1916610   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1916611   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1916612   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1916613   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
1916614   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1916615   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1916616   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1916617   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1916618   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
1916619   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1916620   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1916621   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1916622   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1916623   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
1916624   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1916625   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1916626   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1916627   +          +     0.12692950862511 * Marital_StatusDivorced
1916628   +          +     0.10026497666167 * Marital_StatusMarried
1916629   +          +    -0.19893864592813 * Marital_StatusSingle
1916630   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1916631   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1916632   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1916633   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1916634   +          +    -0.16785192490199 * Marital_StatusDivorced
1916635   +          +     0.13153695130362 * Marital_StatusMarried
1916636   +          +    -0.50411544587104 * Marital_StatusSingle
1916637   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1916638   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1916639   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1916640   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1916641   +          +    -0.62654958087044 * Marital_StatusDivorced
1916642   +          +     1.86250132393341 * Marital_StatusMarried
1916643   +          +    -1.37067556451928 * Marital_StatusSingle
1916644   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1916645   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1916646   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1916647   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1916648   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1916649   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1916650   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1916651   +END;
MPRINT(EM_DIAGRAM):   END;
1916652   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1916653   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1916654   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1916655   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1916656   +END;
MPRINT(EM_DIAGRAM):   END;
1916657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916658   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1916659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916660   +
1916661   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1916662   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1916663   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1916664   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1916665   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1916666   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916667   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1916668   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1916669   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1916670   +end;
MPRINT(EM_DIAGRAM):   end;
1916671   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916672   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1916673   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1916674   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1916675   +   end;
MPRINT(EM_DIAGRAM):   end;
1916676   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1916677   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1916678   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1916679   +   end;
MPRINT(EM_DIAGRAM):   end;
1916680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916681   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1916682   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1916683   +   end;
MPRINT(EM_DIAGRAM):   end;
1916684   +end;
MPRINT(EM_DIAGRAM):   end;
1916685   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1916686   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1916687   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
1916688   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1916689   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1916690   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1916691   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1916692   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1916693   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1916694   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1916695   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1916696   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1916697   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1916698   +END;
MPRINT(EM_DIAGRAM):   END;
1916699   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1916700   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1916701   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1916702   +END;
MPRINT(EM_DIAGRAM):   END;
1916703   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1916704   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1916705   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1916706   +END;
MPRINT(EM_DIAGRAM):   END;
1916707   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1916708   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1916709   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1916710   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1916711   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1916712   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1916713   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1916714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916715   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1916716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1916717   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1916718   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1916719   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1916720   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1916721   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1916722   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1916723   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1916724   +END;
MPRINT(EM_DIAGRAM):   END;
1916725   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1916726   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1916727   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1916728   +drop
1916729   +H11
1916730   +H12
1916731   +H13
1916732   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1916733   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1916734   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1916735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916736   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1916737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916738   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1916739   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1916740   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1916741   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1916742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916743   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1916744   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916745   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1916746   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1916747   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1916748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916749   +* Ensmbl27: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 4 of 7;
1916750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916751   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916752   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1916753   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1916754   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1916755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1916756   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1916757   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1916758   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1916759   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1916760   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1916761   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1916762   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1916763   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1916764   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1916765   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1916766   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1916767   +LENGTH _WARN_ $4
1916768   +      F_DepVar  $ 12
1916769   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1916770   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1916771   +
1916772   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1916773   +
1916774   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1916775   +
1916776   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1916777   +
1916778   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1916779   +
1916780   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1916781   +
1916782   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1916783   +
1916784   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1916785   +
1916786   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1916787   +
1916788   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1916789   +
1916790   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1916791   +
1916792   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1916793   +
1916794   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1916795   +
1916796   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1916797   +
1916798   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1916799   +
1916800   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1916801   +
1916802   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1916803   +
1916804   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1916805   +
1916806   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1916807   +
1916808   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1916809   +
1916810   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1916811   +
1916812   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1916813   +
1916814   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1916815   +
1916816   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1916817   +
1916818   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1916819   +
1916820   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1916821   +
1916822   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1916823   +
1916824   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1916825   +
1916826   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1916827   +
1916828   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1916829   +
1916830   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1916831   +
1916832   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1916833   +
1916834   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1916835   +
1916836   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1916837   +
1916838   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1916839   +
1916840   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1916841   +
1916842   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1916843   +
1916844   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1916845   +
1916846   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1916847   +
1916848   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1916849   +
1916850   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1916851   +
1916852   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1916853   +
1916854   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1916855   +
1916856   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1916857   +
1916858   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1916859   +
1916860   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1916861   +
1916862   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1916863   +
1916864   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1916865   +
1916866   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1916867   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1916868   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1916869   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1916870   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916872   +end;
MPRINT(EM_DIAGRAM):   end;
1916873   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916874   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916875   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1916876   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916877   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916878   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1916879   +   end;
MPRINT(EM_DIAGRAM):   end;
1916880   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916881   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1916882   +   end;
MPRINT(EM_DIAGRAM):   end;
1916883   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916884   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1916885   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916886   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916887   +   end;
MPRINT(EM_DIAGRAM):   end;
1916888   +end;
MPRINT(EM_DIAGRAM):   end;
1916889   +
1916890   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1916891   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1916892   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1916893   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1916894   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916895   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916896   +end;
MPRINT(EM_DIAGRAM):   end;
1916897   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916898   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916899   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1916900   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916901   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916902   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1916903   +   end;
MPRINT(EM_DIAGRAM):   end;
1916904   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916905   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1916906   +   end;
MPRINT(EM_DIAGRAM):   end;
1916907   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916908   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1916909   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916910   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916911   +   end;
MPRINT(EM_DIAGRAM):   end;
1916912   +end;
MPRINT(EM_DIAGRAM):   end;
1916913   +
1916914   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1916915   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1916916   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1916917   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1916918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916920   +end;
MPRINT(EM_DIAGRAM):   end;
1916921   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916922   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916923   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1916924   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916925   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916926   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1916927   +   end;
MPRINT(EM_DIAGRAM):   end;
1916928   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916929   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1916930   +   end;
MPRINT(EM_DIAGRAM):   end;
1916931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916932   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1916933   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916934   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916935   +   end;
MPRINT(EM_DIAGRAM):   end;
1916936   +end;
MPRINT(EM_DIAGRAM):   end;
1916937   +
1916938   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1916939   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1916940   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1916941   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1916942   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916943   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916944   +end;
MPRINT(EM_DIAGRAM):   end;
1916945   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916946   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916947   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1916948   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916949   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916950   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1916951   +   end;
MPRINT(EM_DIAGRAM):   end;
1916952   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916953   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1916954   +   end;
MPRINT(EM_DIAGRAM):   end;
1916955   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916956   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1916957   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916958   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916959   +   end;
MPRINT(EM_DIAGRAM):   end;
1916960   +end;
MPRINT(EM_DIAGRAM):   end;
1916961   +
1916962   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1916963   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1916964   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1916965   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1916966   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916968   +end;
MPRINT(EM_DIAGRAM):   end;
1916969   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916970   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916971   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1916972   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916973   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916974   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1916975   +   end;
MPRINT(EM_DIAGRAM):   end;
1916976   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1916977   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1916978   +   end;
MPRINT(EM_DIAGRAM):   end;
1916979   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1916980   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1916981   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1916982   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916983   +   end;
MPRINT(EM_DIAGRAM):   end;
1916984   +end;
MPRINT(EM_DIAGRAM):   end;
1916985   +
1916986   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1916987   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1916988   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1916989   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1916990   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1916991   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1916992   +end;
MPRINT(EM_DIAGRAM):   end;
1916993   +else do;
MPRINT(EM_DIAGRAM):   else do;
1916994   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1916995   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1916996   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1916997   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1916998   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1916999   +   end;
MPRINT(EM_DIAGRAM):   end;
1917000   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1917001   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1917002   +   end;
MPRINT(EM_DIAGRAM):   end;
1917003   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917004   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1917005   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917006   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917007   +   end;
MPRINT(EM_DIAGRAM):   end;
1917008   +end;
MPRINT(EM_DIAGRAM):   end;
1917009   +
1917010   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1917011   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1917012   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1917013   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1917014   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917015   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917016   +end;
MPRINT(EM_DIAGRAM):   end;
1917017   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917018   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1917019   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1917020   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917021   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1917022   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1917023   +   end;
MPRINT(EM_DIAGRAM):   end;
1917024   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1917025   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1917026   +   end;
MPRINT(EM_DIAGRAM):   end;
1917027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917028   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1917029   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917030   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917031   +   end;
MPRINT(EM_DIAGRAM):   end;
1917032   +end;
MPRINT(EM_DIAGRAM):   end;
1917033   +
1917034   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1917035   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1917036   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1917037   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1917038   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1917039   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1917040   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1917041   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1917042   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1917043   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1917044   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1917045   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1917046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917048   +end;
MPRINT(EM_DIAGRAM):   end;
1917049   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917050   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1917051   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1917052   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917053   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1917054   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1917055   +   end;
MPRINT(EM_DIAGRAM):   end;
1917056   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1917057   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1917058   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1917059   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1917060   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1917061   +   end;
MPRINT(EM_DIAGRAM):   end;
1917062   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1917063   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1917064   +   end;
MPRINT(EM_DIAGRAM):   end;
1917065   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1917066   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1917067   +   end;
MPRINT(EM_DIAGRAM):   end;
1917068   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1917069   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1917070   +   end;
MPRINT(EM_DIAGRAM):   end;
1917071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917072   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1917073   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1917074   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1917075   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1917076   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917077   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917078   +   end;
MPRINT(EM_DIAGRAM):   end;
1917079   +end;
MPRINT(EM_DIAGRAM):   end;
1917080   +
1917081   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1917082   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1917083   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1917084   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1917085   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1917086   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1917087   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1917088   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1917089   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1917090   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1917091   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1917092   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1917093   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1917094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917096   +end;
MPRINT(EM_DIAGRAM):   end;
1917097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917098   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1917099   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1917100   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917101   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1917102   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1917103   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1917104   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1917105   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1917106   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1917107   +         end;
MPRINT(EM_DIAGRAM):   end;
1917108   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1917109   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1917110   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1917111   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1917112   +            end;
MPRINT(EM_DIAGRAM):   end;
1917113   +         end;
MPRINT(EM_DIAGRAM):   end;
1917114   +      end;
MPRINT(EM_DIAGRAM):   end;
1917115   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1917116   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1917117   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1917118   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1917119   +         end;
MPRINT(EM_DIAGRAM):   end;
1917120   +      end;
MPRINT(EM_DIAGRAM):   end;
1917121   +   end;
MPRINT(EM_DIAGRAM):   end;
1917122   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917123   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1917124   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1917125   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1917126   +      end;
MPRINT(EM_DIAGRAM):   end;
1917127   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1917128   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1917129   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1917130   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1917131   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1917132   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1917133   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1917134   +         end;
MPRINT(EM_DIAGRAM):   end;
1917135   +      end;
MPRINT(EM_DIAGRAM):   end;
1917136   +   end;
MPRINT(EM_DIAGRAM):   end;
1917137   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1917138   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1917139   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1917140   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1917141   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1917142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917144   +   end;
MPRINT(EM_DIAGRAM):   end;
1917145   +end;
MPRINT(EM_DIAGRAM):   end;
1917146   +
1917147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917148   +*** Checking missing input Interval
1917149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1917150   +
1917151   +IF NMISS(
1917152   +   AcceptedCmpTotal ,
1917153   +   Age ,
1917154   +   Frq ,
1917155   +   Income ,
1917156   +   Kidhome ,
1917157   +   Mnt ,
1917158   +   MntFishProducts ,
1917159   +   MntFruits ,
1917160   +   MntGoldProds ,
1917161   +   MntMeatProducts ,
1917162   +   MntSweetProducts ,
1917163   +   MntWines ,
1917164   +   MonthsAsCustomer ,
1917165   +   NumCatalogPurchases ,
1917166   +   NumDealsPurchases ,
1917167   +   NumDistPurchases ,
1917168   +   NumStorePurchases ,
1917169   +   NumWebPurchases ,
1917170   +   NumWebVisitsMonth ,
1917171   +   RFMstat ,
1917172   +   RMntFrq ,
1917173   +   Recency ,
1917174   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1917175   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1917176   +
1917177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917178   +END;
MPRINT(EM_DIAGRAM):   END;
1917179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917180   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1917181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917182   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1917183   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1917184   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1917185   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1917186   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1917187   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1917188   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1917189   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1917190   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1917191   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1917192   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1917193   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1917194   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1917195   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1917196   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1917197   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1917198   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1917199   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1917200   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1917201   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1917202   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1917203   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1917204   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1917205   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1917206   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1917207   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1917208   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1917209   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1917210   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1917211   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1917212   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1917213   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1917214   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1917215   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1917216   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1917217   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1917218   +END;
MPRINT(EM_DIAGRAM):   END;
1917219   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1917220   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1917221   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1917222   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1917223   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1917224   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1917225   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1917226   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1917227   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1917228   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1917229   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1917230   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1917231   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1917232   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1917233   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1917234   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1917235   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1917236   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1917237   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1917238   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1917239   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1917240   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1917241   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1917242   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1917243   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1917244   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1917245   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1917246   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1917247   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1917248   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1917249   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1917250   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1917251   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1917252   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1917253   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1917254   +   ELSE S_NumCatalogPurchases
1917255   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1917256   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1917257   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1917258   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1917259   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1917260   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1917261   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1917262   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1917263   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1917264   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1917265   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1917266   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1917267   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1917268   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1917269   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1917270   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1917271   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1917272   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1917273   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1917274   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1917275   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1917276   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1917277   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1917278   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1917279   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1917280   +END;
MPRINT(EM_DIAGRAM):   END;
1917281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917282   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1917283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917285   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1917286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917288   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1917289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917290   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1917291   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1917292   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1917293   +        S_Income  +    -1.07615700855274 * S_Kidhome
1917294   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1917295   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1917296   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1917297   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1917298   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1917299   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1917300   +          +      0.3429043319369 * S_NumDealsPurchases
1917301   +          +     0.71313309767469 * S_NumDistPurchases
1917302   +          +     0.06017757740083 * S_NumStorePurchases
1917303   +          +    -0.19817724925068 * S_NumWebPurchases
1917304   +          +     1.34164122205952 * S_NumWebVisitsMonth
1917305   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1917306   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1917307   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1917308   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1917309   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1917310   +        S_Income  +     -0.0027232441092 * S_Kidhome
1917311   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1917312   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1917313   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1917314   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1917315   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1917316   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1917317   +          +      0.4576973746858 * S_NumDealsPurchases
1917318   +          +     0.15590877272659 * S_NumDistPurchases
1917319   +          +    -0.33414539713736 * S_NumStorePurchases
1917320   +          +    -0.39370244666257 * S_NumWebPurchases
1917321   +          +     0.52596714886704 * S_NumWebVisitsMonth
1917322   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1917323   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1917324   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1917325   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1917326   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1917327   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1917328   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1917329   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
1917330   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1917331   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1917332   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1917333   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1917334   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
1917335   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1917336   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1917337   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1917338   +          +      0.4663802937397 * Marital_StatusDivorced
1917339   +          +    -1.27401898796099 * Marital_StatusMarried
1917340   +          +      1.3125969368079 * Marital_StatusSingle
1917341   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1917342   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1917343   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1917344   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1917345   +          +     0.07419179522004 * Marital_StatusDivorced
1917346   +          +     0.00234615813337 * Marital_StatusMarried
1917347   +          +    -0.00725460458412 * Marital_StatusSingle
1917348   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1917349   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1917350   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1917351   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1917352   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1917353   +END;
MPRINT(EM_DIAGRAM):   END;
1917354   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1917355   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1917356   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1917357   +END;
MPRINT(EM_DIAGRAM):   END;
1917358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917359   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1917360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917361   +
1917362   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1917363   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1917364   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1917365   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1917366   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1917367   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917368   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1917369   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1917370   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1917371   +end;
MPRINT(EM_DIAGRAM):   end;
1917372   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917373   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1917374   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1917375   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1917376   +   end;
MPRINT(EM_DIAGRAM):   end;
1917377   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1917378   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1917379   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1917380   +   end;
MPRINT(EM_DIAGRAM):   end;
1917381   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917382   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1917383   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1917384   +   end;
MPRINT(EM_DIAGRAM):   end;
1917385   +end;
MPRINT(EM_DIAGRAM):   end;
1917386   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1917387   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1917388   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1917389   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1917390   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1917391   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1917392   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1917393   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1917394   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1917395   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1917396   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1917397   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1917398   +END;
MPRINT(EM_DIAGRAM):   END;
1917399   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1917400   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1917401   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1917402   +END;
MPRINT(EM_DIAGRAM):   END;
1917403   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1917404   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1917405   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1917406   +END;
MPRINT(EM_DIAGRAM):   END;
1917407   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1917408   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1917409   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1917410   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1917411   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1917412   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1917413   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1917414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917415   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1917416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917417   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1917418   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1917419   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1917420   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1917421   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1917422   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1917423   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1917424   +END;
MPRINT(EM_DIAGRAM):   END;
1917425   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1917426   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1917427   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1917428   +drop
1917429   +H11
1917430   +H12
1917431   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1917432   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1917433   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1917434   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1917435   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1917436   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1917437   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1917438   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1917439   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1917440   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1917441   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1917442   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1917443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1917444   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1917445   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1917446   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1917447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1917448   +* Ensmbl27: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 5 of 7;
1917449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1917450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1917451   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1917452   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1917453   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1917454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1917455   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1917456   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1917457   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1917458   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1917459   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1917460   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1917461   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1917462   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1917463   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1917464   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1917465   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1917466   +LENGTH _WARN_ $4
1917467   +      F_DepVar  $ 12
1917468   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1917469   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1917470   +
1917471   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1917472   +
1917473   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1917474   +
1917475   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1917476   +
1917477   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1917478   +
1917479   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1917480   +
1917481   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1917482   +
1917483   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1917484   +
1917485   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1917486   +
1917487   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1917488   +
1917489   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1917490   +
1917491   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1917492   +
1917493   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1917494   +
1917495   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1917496   +
1917497   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1917498   +
1917499   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1917500   +
1917501   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1917502   +
1917503   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1917504   +
1917505   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1917506   +
1917507   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1917508   +
1917509   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1917510   +
1917511   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1917512   +
1917513   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1917514   +
1917515   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1917516   +
1917517   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1917518   +
1917519   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1917520   +
1917521   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1917522   +
1917523   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1917524   +
1917525   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1917526   +
1917527   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1917528   +
1917529   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1917530   +
1917531   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1917532   +
1917533   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1917534   +
1917535   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1917536   +
1917537   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1917538   +
1917539   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1917540   +
1917541   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1917542   +
1917543   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1917544   +
1917545   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1917546   +
1917547   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1917548   +
1917549   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1917550   +
1917551   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1917552   +
1917553   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1917554   +
1917555   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1917556   +
1917557   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1917558   +
1917559   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1917560   +
1917561   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1917562   +
1917563   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1917564   +
1917565   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1917566   +
1917567   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1917568   +
1917569   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1917570   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1917571   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1917572   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1917573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917575   +end;
MPRINT(EM_DIAGRAM):   end;
1917576   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917577   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1917578   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1917579   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917580   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1917581   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1917582   +   end;
MPRINT(EM_DIAGRAM):   end;
1917583   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1917584   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1917585   +   end;
MPRINT(EM_DIAGRAM):   end;
1917586   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917587   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1917588   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917589   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917590   +   end;
MPRINT(EM_DIAGRAM):   end;
1917591   +end;
MPRINT(EM_DIAGRAM):   end;
1917592   +
1917593   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1917594   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1917595   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1917596   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1917597   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917599   +end;
MPRINT(EM_DIAGRAM):   end;
1917600   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917601   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1917602   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1917603   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917604   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1917605   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1917606   +   end;
MPRINT(EM_DIAGRAM):   end;
1917607   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1917608   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1917609   +   end;
MPRINT(EM_DIAGRAM):   end;
1917610   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917611   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1917612   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917613   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917614   +   end;
MPRINT(EM_DIAGRAM):   end;
1917615   +end;
MPRINT(EM_DIAGRAM):   end;
1917616   +
1917617   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1917618   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1917619   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1917620   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1917621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917623   +end;
MPRINT(EM_DIAGRAM):   end;
1917624   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917625   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1917626   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1917627   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917628   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1917629   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1917630   +   end;
MPRINT(EM_DIAGRAM):   end;
1917631   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1917632   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1917633   +   end;
MPRINT(EM_DIAGRAM):   end;
1917634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917635   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1917636   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917637   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917638   +   end;
MPRINT(EM_DIAGRAM):   end;
1917639   +end;
MPRINT(EM_DIAGRAM):   end;
1917640   +
1917641   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1917642   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1917643   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1917644   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1917645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917647   +end;
MPRINT(EM_DIAGRAM):   end;
1917648   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917649   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1917650   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1917651   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917652   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1917653   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1917654   +   end;
MPRINT(EM_DIAGRAM):   end;
1917655   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1917656   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1917657   +   end;
MPRINT(EM_DIAGRAM):   end;
1917658   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917659   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1917660   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917661   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917662   +   end;
MPRINT(EM_DIAGRAM):   end;
1917663   +end;
MPRINT(EM_DIAGRAM):   end;
1917664   +
1917665   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1917666   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1917667   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1917668   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1917669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917671   +end;
MPRINT(EM_DIAGRAM):   end;
1917672   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917673   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1917674   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1917675   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917676   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1917677   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1917678   +   end;
MPRINT(EM_DIAGRAM):   end;
1917679   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1917680   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1917681   +   end;
MPRINT(EM_DIAGRAM):   end;
1917682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917683   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1917684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917686   +   end;
MPRINT(EM_DIAGRAM):   end;
1917687   +end;
MPRINT(EM_DIAGRAM):   end;
1917688   +
1917689   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1917690   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1917691   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1917692   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1917693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917695   +end;
MPRINT(EM_DIAGRAM):   end;
1917696   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917697   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1917698   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1917699   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917700   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1917701   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1917702   +   end;
MPRINT(EM_DIAGRAM):   end;
1917703   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1917704   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1917705   +   end;
MPRINT(EM_DIAGRAM):   end;
1917706   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917707   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1917708   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917709   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917710   +   end;
MPRINT(EM_DIAGRAM):   end;
1917711   +end;
MPRINT(EM_DIAGRAM):   end;
1917712   +
1917713   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1917714   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1917715   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1917716   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1917717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917719   +end;
MPRINT(EM_DIAGRAM):   end;
1917720   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917721   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1917722   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1917723   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917724   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1917725   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1917726   +   end;
MPRINT(EM_DIAGRAM):   end;
1917727   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1917728   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1917729   +   end;
MPRINT(EM_DIAGRAM):   end;
1917730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917731   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1917732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917734   +   end;
MPRINT(EM_DIAGRAM):   end;
1917735   +end;
MPRINT(EM_DIAGRAM):   end;
1917736   +
1917737   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1917738   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1917739   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1917740   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1917741   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1917742   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1917743   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1917744   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1917745   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1917746   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1917747   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1917748   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1917749   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917750   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917751   +end;
MPRINT(EM_DIAGRAM):   end;
1917752   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917753   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1917754   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1917755   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917756   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1917757   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1917758   +   end;
MPRINT(EM_DIAGRAM):   end;
1917759   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1917760   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1917761   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1917762   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1917763   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1917764   +   end;
MPRINT(EM_DIAGRAM):   end;
1917765   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1917766   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1917767   +   end;
MPRINT(EM_DIAGRAM):   end;
1917768   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1917769   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1917770   +   end;
MPRINT(EM_DIAGRAM):   end;
1917771   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1917772   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1917773   +   end;
MPRINT(EM_DIAGRAM):   end;
1917774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917775   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1917776   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1917777   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1917778   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1917779   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917780   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917781   +   end;
MPRINT(EM_DIAGRAM):   end;
1917782   +end;
MPRINT(EM_DIAGRAM):   end;
1917783   +
1917784   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1917785   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1917786   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1917787   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1917788   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1917789   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1917790   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1917791   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1917792   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1917793   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1917794   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1917795   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1917796   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1917797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1917798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917799   +end;
MPRINT(EM_DIAGRAM):   end;
1917800   +else do;
MPRINT(EM_DIAGRAM):   else do;
1917801   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1917802   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1917803   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1917804   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1917805   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1917806   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1917807   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1917808   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1917809   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1917810   +         end;
MPRINT(EM_DIAGRAM):   end;
1917811   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1917812   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1917813   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1917814   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1917815   +            end;
MPRINT(EM_DIAGRAM):   end;
1917816   +         end;
MPRINT(EM_DIAGRAM):   end;
1917817   +      end;
MPRINT(EM_DIAGRAM):   end;
1917818   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1917819   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1917820   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1917821   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1917822   +         end;
MPRINT(EM_DIAGRAM):   end;
1917823   +      end;
MPRINT(EM_DIAGRAM):   end;
1917824   +   end;
MPRINT(EM_DIAGRAM):   end;
1917825   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1917826   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1917827   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1917828   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1917829   +      end;
MPRINT(EM_DIAGRAM):   end;
1917830   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1917831   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1917832   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1917833   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1917834   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1917835   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1917836   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1917837   +         end;
MPRINT(EM_DIAGRAM):   end;
1917838   +      end;
MPRINT(EM_DIAGRAM):   end;
1917839   +   end;
MPRINT(EM_DIAGRAM):   end;
1917840   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1917841   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1917842   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1917843   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1917844   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1917845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1917846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917847   +   end;
MPRINT(EM_DIAGRAM):   end;
1917848   +end;
MPRINT(EM_DIAGRAM):   end;
1917849   +
1917850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917851   +*** Checking missing input Interval
1917852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1917853   +
1917854   +IF NMISS(
1917855   +   AcceptedCmpTotal ,
1917856   +   Age ,
1917857   +   Frq ,
1917858   +   Income ,
1917859   +   Kidhome ,
1917860   +   Mnt ,
1917861   +   MntFishProducts ,
1917862   +   MntFruits ,
1917863   +   MntGoldProds ,
1917864   +   MntMeatProducts ,
1917865   +   MntSweetProducts ,
1917866   +   MntWines ,
1917867   +   MonthsAsCustomer ,
1917868   +   NumCatalogPurchases ,
1917869   +   NumDealsPurchases ,
1917870   +   NumDistPurchases ,
1917871   +   NumStorePurchases ,
1917872   +   NumWebPurchases ,
1917873   +   NumWebVisitsMonth ,
1917874   +   RFMstat ,
1917875   +   RMntFrq ,
1917876   +   Recency ,
1917877   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1917878   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1917879   +
1917880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1917881   +END;
MPRINT(EM_DIAGRAM):   END;
1917882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917883   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1917884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917885   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1917886   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1917887   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1917888   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1917889   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1917890   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1917891   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1917892   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1917893   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1917894   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1917895   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1917896   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1917897   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1917898   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1917899   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1917900   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1917901   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1917902   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1917903   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1917904   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1917905   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1917906   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1917907   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1917908   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1917909   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1917910   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1917911   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1917912   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1917913   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1917914   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1917915   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1917916   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1917917   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1917918   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1917919   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1917920   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1917921   +END;
MPRINT(EM_DIAGRAM):   END;
1917922   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1917923   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1917924   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1917925   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1917926   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1917927   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1917928   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1917929   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1917930   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1917931   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1917932   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1917933   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1917934   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1917935   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1917936   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1917937   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1917938   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1917939   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1917940   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1917941   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1917942   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1917943   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1917944   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1917945   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1917946   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1917947   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1917948   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1917949   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1917950   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1917951   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1917952   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1917953   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1917954   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1917955   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1917956   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1917957   +   ELSE S_NumCatalogPurchases
1917958   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1917959   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1917960   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1917961   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1917962   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1917963   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1917964   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1917965   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1917966   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1917967   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1917968   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1917969   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1917970   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1917971   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1917972   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1917973   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1917974   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1917975   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1917976   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1917977   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1917978   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1917979   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1917980   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1917981   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1917982   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1917983   +END;
MPRINT(EM_DIAGRAM):   END;
1917984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917985   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1917986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917988   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1917989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917991   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1917992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1917993   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1917994   +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
1917995   +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
1917996   +        S_Income  +    -0.27053363011695 * S_Kidhome
1917997   +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
1917998   +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
1917999   +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
1918000   +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
1918001   +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
1918002   +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
1918003   +          +    -1.35624485206227 * S_NumDealsPurchases
1918004   +          +    -0.54646115734684 * S_NumDistPurchases
1918005   +          +     1.29794225108321 * S_NumStorePurchases
1918006   +          +      1.8453064081809 * S_NumWebPurchases
1918007   +          +    -0.92747144824026 * S_NumWebVisitsMonth
1918008   +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
1918009   +        S_RMntFrq  +     0.73207333681971 * S_Recency
1918010   +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome +
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 *
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts +
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 *
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 *
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 *
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 *
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq +
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
1918011   +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
1918012   +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
1918013   +        S_Income  +    -0.79821220724157 * S_Kidhome
1918014   +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
1918015   +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
1918016   +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
1918017   +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
1918018   +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
1918019   +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
1918020   +          +     0.72513216556859 * S_NumDealsPurchases
1918021   +          +    -0.15566774650584 * S_NumDistPurchases
1918022   +          +     -0.8847675798982 * S_NumStorePurchases
1918023   +          +    -0.79405200318252 * S_NumWebPurchases
1918024   +          +     1.74003779802254 * S_NumWebVisitsMonth
1918025   +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
1918026   +        S_RMntFrq  +    -1.54235932941708 * S_Recency
1918027   +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome +
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 *
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts +
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 *
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 *
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 *
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 *
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq +
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
1918028   +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
1918029   +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
1918030   +        S_Income  +    -0.58596240450544 * S_Kidhome
1918031   +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
1918032   +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
1918033   +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
1918034   +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
1918035   +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
1918036   +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
1918037   +          +     0.17466385502192 * S_NumDealsPurchases
1918038   +          +    -0.06219545947203 * S_NumDistPurchases
1918039   +          +     0.16637546838853 * S_NumStorePurchases
1918040   +          +    -0.06908729397635 * S_NumWebPurchases
1918041   +          +     1.44269772444244 * S_NumWebVisitsMonth
1918042   +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
1918043   +        S_RMntFrq  +    -1.38739950871333 * S_Recency
1918044   +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age +
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome +
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 *
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts +
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 *
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 *
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 *
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 *
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq +
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
1918045   +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
1918046   +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
1918047   +        S_Income  +    -0.42454238091412 * S_Kidhome
1918048   +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
1918049   +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
1918050   +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
1918051   +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
1918052   +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
1918053   +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
1918054   +          +     0.77329078721398 * S_NumDealsPurchases
1918055   +          +     0.31693324305765 * S_NumDistPurchases
1918056   +          +    -1.08524196373091 * S_NumStorePurchases
1918057   +          +    -0.96945384922979 * S_NumWebPurchases
1918058   +          +     1.24659288571587 * S_NumWebVisitsMonth
1918059   +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
1918060   +        S_RMntFrq  +    -2.48250049927721 * S_Recency
1918061   +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age +
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome +
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 *
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts +
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 *
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 *
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 *
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 *
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq +
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
1918062   +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
1918063   +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
1918064   +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
1918065   +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
1918066   +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 *
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 +
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 *
HigherEducationBinary0 ;
1918067   +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
1918068   +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
1918069   +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
1918070   +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
1918071   +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 *
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 +
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 *
HigherEducationBinary0 ;
1918072   +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
1918073   +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
1918074   +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
1918075   +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
1918076   +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 *
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 +
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 *
HigherEducationBinary0 ;
1918077   +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
1918078   +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
1918079   +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
1918080   +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
1918081   +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 *
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 +
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 *
HigherEducationBinary0 ;
1918082   +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
1918083   +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
1918084   +        EducationGraduation  +    -0.11075159631637 * EducationMaster
1918085   +          +     0.36788499721115 * Marital_StatusDivorced
1918086   +          +    -0.16988636986433 * Marital_StatusMarried
1918087   +          +    -0.24560973256761 * Marital_StatusSingle
1918088   +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 *
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried +
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
1918089   +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
1918090   +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
1918091   +        EducationGraduation  +    -0.56430222714946 * EducationMaster
1918092   +          +     0.24497797058028 * Marital_StatusDivorced
1918093   +          +    -1.44410245434424 * Marital_StatusMarried
1918094   +          +     1.47441310087392 * Marital_StatusSingle
1918095   +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 *
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried +
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
1918096   +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
1918097   +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
1918098   +        EducationGraduation  +     0.04653963359475 * EducationMaster
1918099   +          +     0.15823225296452 * Marital_StatusDivorced
1918100   +          +    -0.39129434667884 * Marital_StatusMarried
1918101   +          +     0.84414069966504 * Marital_StatusSingle
1918102   +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 *
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried +
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
1918103   +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
1918104   +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
1918105   +        EducationGraduation  +     0.40030852414737 * EducationMaster
1918106   +          +     1.22039169814542 * Marital_StatusDivorced
1918107   +          +     0.91592976063128 * Marital_StatusMarried
1918108   +          +    -1.51267332883308 * Marital_StatusSingle
1918109   +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 *
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried +
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
1918110   +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
1918111   +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
1918112   +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
1918113   +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
1918114   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1918115   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1918116   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1918117   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1918118   +END;
MPRINT(EM_DIAGRAM):   END;
1918119   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1918120   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1918121   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1918122   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1918123   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1918124   +END;
MPRINT(EM_DIAGRAM):   END;
1918125   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1918126   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1918127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1918128   +
1918129   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1918130   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1918131   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1918132   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1918133   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1918134   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1918135   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1918136   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1918137   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1918138   +end;
MPRINT(EM_DIAGRAM):   end;
1918139   +else do;
MPRINT(EM_DIAGRAM):   else do;
1918140   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1918141   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1918142   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1918143   +   end;
MPRINT(EM_DIAGRAM):   end;
1918144   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1918145   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1918146   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1918147   +   end;
MPRINT(EM_DIAGRAM):   end;
1918148   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1918149   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1918150   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1918151   +   end;
MPRINT(EM_DIAGRAM):   end;
1918152   +end;
MPRINT(EM_DIAGRAM):   end;
1918153   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1918154   +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
1918155   +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 +
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
1918156   +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
1918157   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1918158   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1918159   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1918160   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1918161   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1918162   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1918163   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1918164   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1918165   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1918166   +END;
MPRINT(EM_DIAGRAM):   END;
1918167   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1918168   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1918169   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1918170   +END;
MPRINT(EM_DIAGRAM):   END;
1918171   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1918172   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1918173   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1918174   +END;
MPRINT(EM_DIAGRAM):   END;
1918175   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1918176   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1918177   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1918178   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1918179   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1918180   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1918181   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1918182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1918183   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1918184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1918185   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1918186   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1918187   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1918188   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1918189   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1918190   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1918191   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1918192   +END;
MPRINT(EM_DIAGRAM):   END;
1918193   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1918194   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1918195   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1918196   +drop
1918197   +H11
1918198   +H12
1918199   +H13
1918200   +H14
1918201   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1918202   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1918203   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1918204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918205   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1918206   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918207   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1918208   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1918209   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1918210   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1918211   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918212   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1918213   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918214   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1918215   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1918216   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1918217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918218   +* Ensmbl27: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 6 of 7;
1918219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918221   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1918222   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1918223   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1918224   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918225   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1918226   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1918227   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1918228   +
1918229   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1918230   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1918231   +
1918232   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1918233   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1918234   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1918235   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1918236   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1918237   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1918238   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1918239   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1918240   +
1918241   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1918242   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1918243   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1918244   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1918245   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1918246   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1918247   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1918248   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1918249   +end;
MPRINT(EM_DIAGRAM):   end;
1918250   +else do;
MPRINT(EM_DIAGRAM):   else do;
1918251   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1918252   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1918253   +   end;
MPRINT(EM_DIAGRAM):   end;
1918254   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1918255   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1918256   +   end;
MPRINT(EM_DIAGRAM):   end;
1918257   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1918258   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1918259   +   end;
MPRINT(EM_DIAGRAM):   end;
1918260   +end;
MPRINT(EM_DIAGRAM):   end;
1918261   +
1918262   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1918263   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1918264   +
1918265   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1918266   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1918267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918269   +end;
MPRINT(EM_DIAGRAM):   end;
1918270   +
1918271   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1918272   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1918273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918275   +end;
MPRINT(EM_DIAGRAM):   end;
1918276   +
1918277   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1918278   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1918279   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918280   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918281   +end;
MPRINT(EM_DIAGRAM):   end;
1918282   +
1918283   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1918284   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1918285   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918287   +end;
MPRINT(EM_DIAGRAM):   end;
1918288   +
1918289   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1918290   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1918291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918293   +end;
MPRINT(EM_DIAGRAM):   end;
1918294   +
1918295   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1918296   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1918297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918299   +end;
MPRINT(EM_DIAGRAM):   end;
1918300   +
1918301   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1918302   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1918303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918305   +end;
MPRINT(EM_DIAGRAM):   end;
1918306   +
1918307   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1918308   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1918309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918311   +end;
MPRINT(EM_DIAGRAM):   end;
1918312   +
1918313   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1918314   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1918315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918317   +end;
MPRINT(EM_DIAGRAM):   end;
1918318   +
1918319   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1918320   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1918321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918323   +end;
MPRINT(EM_DIAGRAM):   end;
1918324   +
1918325   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1918326   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1918327   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918328   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918329   +end;
MPRINT(EM_DIAGRAM):   end;
1918330   +
1918331   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1918332   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1918333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918335   +end;
MPRINT(EM_DIAGRAM):   end;
1918336   +
1918337   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1918338   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1918339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918341   +end;
MPRINT(EM_DIAGRAM):   end;
1918342   +
1918343   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1918344   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1918345   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1918346   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1918347   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1918348   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1918349   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1918350   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1918351   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1918352   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1918353   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1918354   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1918355   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918357   +end;
MPRINT(EM_DIAGRAM):   end;
1918358   +else do;
MPRINT(EM_DIAGRAM):   else do;
1918359   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1918360   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1918361   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1918362   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1918363   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1918364   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1918365   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1918366   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1918367   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1918368   +         end;
MPRINT(EM_DIAGRAM):   end;
1918369   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1918370   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1918371   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1918372   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1918373   +            end;
MPRINT(EM_DIAGRAM):   end;
1918374   +         end;
MPRINT(EM_DIAGRAM):   end;
1918375   +      end;
MPRINT(EM_DIAGRAM):   end;
1918376   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1918377   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1918378   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1918379   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1918380   +         end;
MPRINT(EM_DIAGRAM):   end;
1918381   +      end;
MPRINT(EM_DIAGRAM):   end;
1918382   +   end;
MPRINT(EM_DIAGRAM):   end;
1918383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1918384   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1918385   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1918386   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1918387   +      end;
MPRINT(EM_DIAGRAM):   end;
1918388   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1918389   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1918390   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1918391   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1918392   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1918393   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1918394   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1918395   +         end;
MPRINT(EM_DIAGRAM):   end;
1918396   +      end;
MPRINT(EM_DIAGRAM):   end;
1918397   +   end;
MPRINT(EM_DIAGRAM):   end;
1918398   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1918399   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1918400   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1918401   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1918402   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1918403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1918404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918405   +   end;
MPRINT(EM_DIAGRAM):   end;
1918406   +end;
MPRINT(EM_DIAGRAM):   end;
1918407   +
1918408   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1918409   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1918410   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1918411   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1918412   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1918413   +end;
MPRINT(EM_DIAGRAM):   end;
1918414   +
1918415   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1918416   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1918417   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1918418   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1918419   +
1918420   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1918421   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1918422   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1918423   +
1918424   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1918425   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1918426   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1918427   +
1918428   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1918429   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1918430   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1918431   +
1918432   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1918433   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1918434   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1918435   +
1918436   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1918437   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1918438   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1918439   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1918440   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1918441   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1918442   +
1918443   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1918444   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1918445   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1918446   +
1918447   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1918448   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1918449   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1918450   +
1918451   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1918452   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1918453   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1918454   +
1918455   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1918456   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1918457   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1918458   +
1918459   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1918460   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1918461   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1918462   +
1918463   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1918464   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1918465   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1918466   +
1918467   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1918468   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1918469   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1918470   +
1918471   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1918472   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1918473   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1918474   +
1918475   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1918476   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1918477   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1918478   +
1918479   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1918480   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1918481   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1918482   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1918483   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1918484   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1918485   +end;
MPRINT(EM_DIAGRAM):   end;
1918486   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1918487   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1918488   +
1918489   +REGDR1:
1918490   +
1918491   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1918492   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1918493   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1918494   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1918495   +end;
MPRINT(EM_DIAGRAM):   end;
1918496   +else do;
MPRINT(EM_DIAGRAM):   else do;
1918497   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1918498   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1918499   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1918500   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1918501   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1918502   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1918503   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1918504   +   end;
MPRINT(EM_DIAGRAM):   end;
1918505   +end;
MPRINT(EM_DIAGRAM):   end;
1918506   +
1918507   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1918508   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1918509   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1918510   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1918511   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1918512   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1918513   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1918514   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1918515   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1918516   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1918517   +end;
MPRINT(EM_DIAGRAM):   end;
1918518   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1918519   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1918520   +
1918521   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1918522   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1918523   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1918524   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1918525   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918526   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1918527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918528   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1918529   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1918530   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1918531   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1918532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918533   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1918534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918535   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1918536   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1918537   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1918538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918539   +* Ensmbl27: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 7 of 7;
1918540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918542   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1918543   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1918544   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1918545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918546   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1918547   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1918548   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1918549   +
1918550   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1918551   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1918552   +
1918553   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1918554   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1918555   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1918556   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1918557   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1918558   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1918559   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1918560   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1918561   +
1918562   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1918563   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1918564   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1918565   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1918566   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1918567   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1918568   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1918569   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1918570   +end;
MPRINT(EM_DIAGRAM):   end;
1918571   +else do;
MPRINT(EM_DIAGRAM):   else do;
1918572   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1918573   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1918574   +   end;
MPRINT(EM_DIAGRAM):   end;
1918575   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1918576   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1918577   +   end;
MPRINT(EM_DIAGRAM):   end;
1918578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1918579   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1918580   +   end;
MPRINT(EM_DIAGRAM):   end;
1918581   +end;
MPRINT(EM_DIAGRAM):   end;
1918582   +
1918583   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1918584   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1918585   +
1918586   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1918587   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1918588   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918589   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918590   +end;
MPRINT(EM_DIAGRAM):   end;
1918591   +
1918592   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1918593   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1918594   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918595   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918596   +end;
MPRINT(EM_DIAGRAM):   end;
1918597   +
1918598   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1918599   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1918600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918602   +end;
MPRINT(EM_DIAGRAM):   end;
1918603   +
1918604   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1918605   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1918606   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918607   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918608   +end;
MPRINT(EM_DIAGRAM):   end;
1918609   +
1918610   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1918611   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1918612   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918614   +end;
MPRINT(EM_DIAGRAM):   end;
1918615   +
1918616   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1918617   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1918618   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918619   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918620   +end;
MPRINT(EM_DIAGRAM):   end;
1918621   +
1918622   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1918623   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1918624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918626   +end;
MPRINT(EM_DIAGRAM):   end;
1918627   +
1918628   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1918629   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1918630   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918631   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918632   +end;
MPRINT(EM_DIAGRAM):   end;
1918633   +
1918634   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1918635   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1918636   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918638   +end;
MPRINT(EM_DIAGRAM):   end;
1918639   +
1918640   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1918641   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1918642   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918643   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918644   +end;
MPRINT(EM_DIAGRAM):   end;
1918645   +
1918646   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1918647   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1918648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918650   +end;
MPRINT(EM_DIAGRAM):   end;
1918651   +
1918652   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1918653   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1918654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918656   +end;
MPRINT(EM_DIAGRAM):   end;
1918657   +
1918658   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1918659   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1918660   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1918661   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1918662   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1918663   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1918664   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1918665   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1918666   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1918667   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1918668   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1918669   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1918670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1918671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918672   +end;
MPRINT(EM_DIAGRAM):   end;
1918673   +else do;
MPRINT(EM_DIAGRAM):   else do;
1918674   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1918675   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1918676   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1918677   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1918678   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1918679   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1918680   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1918681   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1918682   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1918683   +         end;
MPRINT(EM_DIAGRAM):   end;
1918684   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1918685   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1918686   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1918687   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1918688   +            end;
MPRINT(EM_DIAGRAM):   end;
1918689   +         end;
MPRINT(EM_DIAGRAM):   end;
1918690   +      end;
MPRINT(EM_DIAGRAM):   end;
1918691   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1918692   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1918693   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1918694   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1918695   +         end;
MPRINT(EM_DIAGRAM):   end;
1918696   +      end;
MPRINT(EM_DIAGRAM):   end;
1918697   +   end;
MPRINT(EM_DIAGRAM):   end;
1918698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1918699   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1918700   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1918701   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1918702   +      end;
MPRINT(EM_DIAGRAM):   end;
1918703   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1918704   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1918705   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1918706   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1918707   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1918708   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1918709   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1918710   +         end;
MPRINT(EM_DIAGRAM):   end;
1918711   +      end;
MPRINT(EM_DIAGRAM):   end;
1918712   +   end;
MPRINT(EM_DIAGRAM):   end;
1918713   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1918714   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1918715   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1918716   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1918717   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1918718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1918719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1918720   +   end;
MPRINT(EM_DIAGRAM):   end;
1918721   +end;
MPRINT(EM_DIAGRAM):   end;
1918722   +
1918723   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1918724   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1918725   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1918726   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1918727   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1918728   +end;
MPRINT(EM_DIAGRAM):   end;
1918729   +
1918730   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1918731   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1918732   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1918733   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1918734   +
1918735   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1918736   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1918737   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1918738   +
1918739   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1918740   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1918741   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1918742   +
1918743   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1918744   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1918745   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1918746   +
1918747   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1918748   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1918749   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1918750   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1918751   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1918752   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1918753   +
1918754   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1918755   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1918756   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1918757   +
1918758   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1918759   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1918760   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1918761   +
1918762   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1918763   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1918764   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1918765   +
1918766   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1918767   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1918768   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1918769   +
1918770   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1918771   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1918772   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1918773   +
1918774   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1918775   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1918776   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1918777   +
1918778   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1918779   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1918780   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1918781   +
1918782   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1918783   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1918784   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1918785   +
1918786   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1918787   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1918788   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1918789   +
1918790   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1918791   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1918792   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1918793   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1918794   +
1918795   +REG5DR1:
1918796   +
1918797   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1918798   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1918799   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1918800   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1918801   +end;
MPRINT(EM_DIAGRAM):   end;
1918802   +else do;
MPRINT(EM_DIAGRAM):   else do;
1918803   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1918804   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1918805   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1918806   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1918807   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1918808   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1918809   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1918810   +   end;
MPRINT(EM_DIAGRAM):   end;
1918811   +end;
MPRINT(EM_DIAGRAM):   end;
1918812   +
1918813   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1918814   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1918815   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1918816   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1918817   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1918818   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1918819   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1918820   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1918821   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1918822   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1918823   +end;
MPRINT(EM_DIAGRAM):   end;
1918824   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1918825   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1918826   +
1918827   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1918828   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1918829   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1918830   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1918831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918832   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1918833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918834   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1918835   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1918836   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1918837   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1918838   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918839   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1918840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918841   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1918842   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1918843   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1918844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918845   +* Ensmbl27: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Maximum Posteriors of 7 models;
1918846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918847   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1918848   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1918849   +P_DepVar1 = max(
1918850   +Neural10_P_DepVar1 ,
1918851   +Neural9_P_DepVar1 ,
1918852   +Neural3_P_DepVar1 ,
1918853   +Neural2_P_DepVar1 ,
1918854   +Neural4_P_DepVar1 ,
1918855   +Reg_P_DepVar1 ,
1918856   +Reg5_P_DepVar1
1918857   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural10_P_DepVar1 , Neural9_P_DepVar1 ,
Neural3_P_DepVar1 , Neural2_P_DepVar1 , Neural4_P_DepVar1 , Reg_P_DepVar1 , Reg5_P_DepVar1 );
1918858   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1918859   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1918860   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1918861   +end;
MPRINT(EM_DIAGRAM):   end;
1918862   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1918863   +P_DepVar0 = max(
1918864   +Neural10_P_DepVar0 ,
1918865   +Neural9_P_DepVar0 ,
1918866   +Neural3_P_DepVar0 ,
1918867   +Neural2_P_DepVar0 ,
1918868   +Neural4_P_DepVar0 ,
1918869   +Reg_P_DepVar0 ,
1918870   +Reg5_P_DepVar0
1918871   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural10_P_DepVar0 , Neural9_P_DepVar0 ,
Neural3_P_DepVar0 , Neural2_P_DepVar0 , Neural4_P_DepVar0 , Reg_P_DepVar0 , Reg5_P_DepVar0 );
1918872   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1918873   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1918874   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1918875   +end;
MPRINT(EM_DIAGRAM):   end;
1918876   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1918877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918878   +* Ensmbl27: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Classification Vars;
1918879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918880   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1918881   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1918882   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1918883   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1918884   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1918885   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1918886   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1918887   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1918888   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1918889   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1918890   +end;
MPRINT(EM_DIAGRAM):   end;
1918891   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1918892   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1918893   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1918894   +end;
MPRINT(EM_DIAGRAM):   end;
1918895   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1918896   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918897   +* Ensmbl27: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Producing Unformatted variable;
1918898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918899   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1918900   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1918901   +else
1918902   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1918903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918904   +* Ensmbl27: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing _WARN_ Variable;
1918905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918906   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1918907   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1918908   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1918909   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1918909  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1918910   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1918910  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1918911   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1918911  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1918912   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1918912  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1918913   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1918914   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1918915   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1918916   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1918917   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1918918   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1918919   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1918920   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1918921   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1918922   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1918923   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1918924   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1918925   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1918926   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1918927   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1918928   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1918929   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1918930   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1918931   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1918932   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1918933   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1918934   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1918935   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1918936   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1918937   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918938   +* Ensmbl27: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Residual Vars;
1918939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918940   +if
1918941   +F_DepVar NE '1'
1918942   +AND F_DepVar NE '0'
1918943   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1918944   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1918945   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1918946   +end;
MPRINT(EM_DIAGRAM):   end;
1918947   +else do;
MPRINT(EM_DIAGRAM):   else do;
1918948   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1918949   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1918950   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1918951   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1918952   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1918953   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1918954   +END;
MPRINT(EM_DIAGRAM):   END;
1918955   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1918956    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL27_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1918957    quit;
1918958    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1918959    filename emflow
1918959  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring NEURAL10_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918960    *------------------------------------------------------------*;
1918961    * Ensmbl27: Scoring NEURAL10_VALIDATE data;
1918962    *------------------------------------------------------------*;
1918963    data EMWS8.Ensmbl27_VALIDATE
1918964    / view=EMWS8.Ensmbl27_VALIDATE
1918965    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_VALIDATE / view=EMWS8.Ensmbl27_VALIDATE ;
1918966    set EMWS8.Neural10_VALIDATE
1918967    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_VALIDATE ;
1918968    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas.
1918969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918970   +* Ensmbl27: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Combine model for DepVar;
1918971   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918972   +* Ensmbl27: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 1 of 7;
1918973   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918974   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918975   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1918976   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1918977   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1918978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918979   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918980   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1918981   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1918982   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1918983   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918985   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1918986   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1918987   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1918988   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918989   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918990   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1918991   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1918992   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1918993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1918994   +
1918995   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1918996   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1918996  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1918997   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1918998   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1918999   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1919000   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1919001   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1919002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919003   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1919004   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1919005   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1919006   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919008   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1919009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919010   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1919011   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1919012   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1919013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919014   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1919015   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1919016   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1919017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919019   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1919020   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1919021   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1919022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919024   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1919025   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1919026   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1919027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919028   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1919029   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1919030   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1919031   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1919032   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1919033   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1919034   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1919035   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1919036   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1919037   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1919038   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1919039   +LENGTH _WARN_ $4
1919040   +      F_DepVar  $ 12
1919041   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1919042   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1919043   +
1919044   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1919045   +
1919046   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1919047   +
1919048   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1919049   +
1919050   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1919051   +
1919052   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1919053   +
1919054   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1919055   +
1919056   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1919057   +
1919058   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1919059   +
1919060   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1919061   +
1919062   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1919063   +
1919064   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1919065   +
1919066   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1919067   +
1919068   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1919069   +
1919070   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1919071   +
1919072   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1919073   +
1919074   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1919075   +
1919076   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1919077   +
1919078   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1919079   +
1919080   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1919081   +
1919082   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1919083   +
1919084   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1919085   +
1919086   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1919087   +
1919088   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1919089   +
1919090   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1919091   +
1919092   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1919093   +
1919094   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1919095   +
1919096   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1919097   +
1919098   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1919099   +
1919100   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1919101   +
1919102   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1919103   +
1919104   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1919105   +
1919106   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1919107   +
1919108   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1919109   +
1919110   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1919111   +
1919112   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1919113   +
1919114   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1919115   +
1919116   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1919117   +
1919118   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1919119   +
1919120   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1919121   +
1919122   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1919123   +
1919124   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1919125   +
1919126   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1919127   +
1919128   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1919129   +
1919130   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1919131   +
1919132   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1919133   +
1919134   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1919135   +
1919136   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1919137   +
1919138   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1919139   +
1919140   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1919141   +
1919142   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1919143   +
1919144   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1919145   +
1919146   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1919147   +
1919148   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1919149   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1919150   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1919151   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1919152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1919153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919154   +end;
MPRINT(EM_DIAGRAM):   end;
1919155   +else do;
MPRINT(EM_DIAGRAM):   else do;
1919156   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1919157   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1919158   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1919159   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1919160   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1919161   +   end;
MPRINT(EM_DIAGRAM):   end;
1919162   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1919163   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1919164   +   end;
MPRINT(EM_DIAGRAM):   end;
1919165   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1919166   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1919167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1919168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919169   +   end;
MPRINT(EM_DIAGRAM):   end;
1919170   +end;
MPRINT(EM_DIAGRAM):   end;
1919171   +
1919172   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1919173   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1919174   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1919175   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1919176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1919177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919178   +end;
MPRINT(EM_DIAGRAM):   end;
1919179   +else do;
MPRINT(EM_DIAGRAM):   else do;
1919180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1919181   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1919182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1919183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1919184   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1919185   +   end;
MPRINT(EM_DIAGRAM):   end;
1919186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1919187   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1919188   +   end;
MPRINT(EM_DIAGRAM):   end;
1919189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1919190   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1919191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1919192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919193   +   end;
MPRINT(EM_DIAGRAM):   end;
1919194   +end;
MPRINT(EM_DIAGRAM):   end;
1919195   +
1919196   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1919197   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1919198   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1919199   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1919200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1919201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919202   +end;
MPRINT(EM_DIAGRAM):   end;
1919203   +else do;
MPRINT(EM_DIAGRAM):   else do;
1919204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1919205   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1919206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1919207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1919208   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1919209   +   end;
MPRINT(EM_DIAGRAM):   end;
1919210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1919211   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1919212   +   end;
MPRINT(EM_DIAGRAM):   end;
1919213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1919214   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1919215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1919216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919217   +   end;
MPRINT(EM_DIAGRAM):   end;
1919218   +end;
MPRINT(EM_DIAGRAM):   end;
1919219   +
1919220   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1919221   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1919222   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1919223   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1919224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1919225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919226   +end;
MPRINT(EM_DIAGRAM):   end;
1919227   +else do;
MPRINT(EM_DIAGRAM):   else do;
1919228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1919229   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1919230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1919231   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1919232   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1919233   +   end;
MPRINT(EM_DIAGRAM):   end;
1919234   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1919235   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1919236   +   end;
MPRINT(EM_DIAGRAM):   end;
1919237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1919238   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1919239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1919240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919241   +   end;
MPRINT(EM_DIAGRAM):   end;
1919242   +end;
MPRINT(EM_DIAGRAM):   end;
1919243   +
1919244   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1919245   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1919246   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1919247   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1919248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1919249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919250   +end;
MPRINT(EM_DIAGRAM):   end;
1919251   +else do;
MPRINT(EM_DIAGRAM):   else do;
1919252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1919253   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1919254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1919255   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1919256   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1919257   +   end;
MPRINT(EM_DIAGRAM):   end;
1919258   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1919259   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1919260   +   end;
MPRINT(EM_DIAGRAM):   end;
1919261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1919262   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1919263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1919264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919265   +   end;
MPRINT(EM_DIAGRAM):   end;
1919266   +end;
MPRINT(EM_DIAGRAM):   end;
1919267   +
1919268   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1919269   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1919270   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1919271   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1919272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1919273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919274   +end;
MPRINT(EM_DIAGRAM):   end;
1919275   +else do;
MPRINT(EM_DIAGRAM):   else do;
1919276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1919277   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1919278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1919279   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1919280   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1919281   +   end;
MPRINT(EM_DIAGRAM):   end;
1919282   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1919283   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1919284   +   end;
MPRINT(EM_DIAGRAM):   end;
1919285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1919286   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1919287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1919288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919289   +   end;
MPRINT(EM_DIAGRAM):   end;
1919290   +end;
MPRINT(EM_DIAGRAM):   end;
1919291   +
1919292   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1919293   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1919294   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1919295   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1919296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1919297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919298   +end;
MPRINT(EM_DIAGRAM):   end;
1919299   +else do;
MPRINT(EM_DIAGRAM):   else do;
1919300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1919301   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1919302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1919303   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1919304   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1919305   +   end;
MPRINT(EM_DIAGRAM):   end;
1919306   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1919307   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1919308   +   end;
MPRINT(EM_DIAGRAM):   end;
1919309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1919310   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1919311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1919312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919313   +   end;
MPRINT(EM_DIAGRAM):   end;
1919314   +end;
MPRINT(EM_DIAGRAM):   end;
1919315   +
1919316   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1919317   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1919318   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1919319   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1919320   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1919321   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1919322   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1919323   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1919324   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1919325   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1919326   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1919327   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1919328   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1919329   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919330   +end;
MPRINT(EM_DIAGRAM):   end;
1919331   +else do;
MPRINT(EM_DIAGRAM):   else do;
1919332   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1919333   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1919334   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1919335   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1919336   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1919337   +   end;
MPRINT(EM_DIAGRAM):   end;
1919338   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1919339   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1919340   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1919341   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1919342   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1919343   +   end;
MPRINT(EM_DIAGRAM):   end;
1919344   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1919345   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1919346   +   end;
MPRINT(EM_DIAGRAM):   end;
1919347   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1919348   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1919349   +   end;
MPRINT(EM_DIAGRAM):   end;
1919350   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1919351   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1919352   +   end;
MPRINT(EM_DIAGRAM):   end;
1919353   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1919354   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1919355   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1919356   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1919357   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1919358   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1919359   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919360   +   end;
MPRINT(EM_DIAGRAM):   end;
1919361   +end;
MPRINT(EM_DIAGRAM):   end;
1919362   +
1919363   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1919364   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1919365   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1919366   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1919367   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1919368   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1919369   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1919370   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1919371   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1919372   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1919373   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1919374   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1919375   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1919376   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1919377   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919378   +end;
MPRINT(EM_DIAGRAM):   end;
1919379   +else do;
MPRINT(EM_DIAGRAM):   else do;
1919380   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1919381   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1919382   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1919383   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1919384   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1919385   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1919386   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1919387   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1919388   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1919389   +         end;
MPRINT(EM_DIAGRAM):   end;
1919390   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1919391   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1919392   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1919393   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1919394   +            end;
MPRINT(EM_DIAGRAM):   end;
1919395   +         end;
MPRINT(EM_DIAGRAM):   end;
1919396   +      end;
MPRINT(EM_DIAGRAM):   end;
1919397   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1919398   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1919399   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1919400   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1919401   +         end;
MPRINT(EM_DIAGRAM):   end;
1919402   +      end;
MPRINT(EM_DIAGRAM):   end;
1919403   +   end;
MPRINT(EM_DIAGRAM):   end;
1919404   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1919405   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1919406   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1919407   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1919408   +      end;
MPRINT(EM_DIAGRAM):   end;
1919409   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1919410   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1919411   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1919412   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1919413   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1919414   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1919415   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1919416   +         end;
MPRINT(EM_DIAGRAM):   end;
1919417   +      end;
MPRINT(EM_DIAGRAM):   end;
1919418   +   end;
MPRINT(EM_DIAGRAM):   end;
1919419   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1919420   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1919421   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1919422   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1919423   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1919424   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1919425   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919426   +   end;
MPRINT(EM_DIAGRAM):   end;
1919427   +end;
MPRINT(EM_DIAGRAM):   end;
1919428   +
1919429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919430   +*** Checking missing input Interval
1919431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1919432   +
1919433   +IF NMISS(
1919434   +   AcceptedCmpTotal ,
1919435   +   Age ,
1919436   +   Frq ,
1919437   +   Income ,
1919438   +   Kidhome ,
1919439   +   Mnt ,
1919440   +   MntFishProducts ,
1919441   +   MntFruits ,
1919442   +   MntGoldProds ,
1919443   +   MntMeatProducts ,
1919444   +   MntSweetProducts ,
1919445   +   MntWines ,
1919446   +   MonthsAsCustomer ,
1919447   +   NumCatalogPurchases ,
1919448   +   NumDealsPurchases ,
1919449   +   NumDistPurchases ,
1919450   +   NumStorePurchases ,
1919451   +   NumWebPurchases ,
1919452   +   NumWebVisitsMonth ,
1919453   +   RFMstat ,
1919454   +   RMntFrq ,
1919455   +   Recency ,
1919456   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1919457   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1919458   +
1919459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1919460   +END;
MPRINT(EM_DIAGRAM):   END;
1919461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919462   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1919463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919464   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1919465   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1919466   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1919467   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1919468   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1919469   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1919470   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1919471   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1919472   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1919473   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1919474   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1919475   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1919476   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1919477   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1919478   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1919479   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1919480   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1919481   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1919482   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1919483   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1919484   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1919485   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1919486   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1919487   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1919488   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1919489   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1919490   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1919491   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1919492   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1919493   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1919494   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1919495   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1919496   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1919497   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1919498   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1919499   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1919500   +END;
MPRINT(EM_DIAGRAM):   END;
1919501   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1919502   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1919503   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1919504   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1919505   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1919506   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1919507   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1919508   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1919509   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1919510   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1919511   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1919512   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1919513   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1919514   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1919515   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1919516   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1919517   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1919518   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1919519   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1919520   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1919521   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1919522   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1919523   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1919524   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1919525   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1919526   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1919527   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1919528   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1919529   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1919530   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1919531   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1919532   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1919533   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1919534   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1919535   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1919536   +   ELSE S_NumCatalogPurchases
1919537   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1919538   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1919539   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1919540   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1919541   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1919542   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1919543   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1919544   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1919545   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1919546   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1919547   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1919548   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1919549   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1919550   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1919551   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1919552   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1919553   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1919554   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1919555   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1919556   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1919557   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1919558   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1919559   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1919560   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1919561   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1919562   +END;
MPRINT(EM_DIAGRAM):   END;
1919563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919564   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1919565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919567   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1919568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919570   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1919571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919572   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1919573   +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
1919574   +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
1919575   +        S_Income  +    -0.43070069114587 * S_Kidhome
1919576   +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
1919577   +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
1919578   +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
1919579   +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
1919580   +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
1919581   +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
1919582   +          +    -0.21858146166244 * S_NumDealsPurchases
1919583   +          +     0.18409991080913 * S_NumDistPurchases
1919584   +          +     0.35683163455594 * S_NumStorePurchases
1919585   +          +     0.24429183714976 * S_NumWebPurchases
1919586   +          +     -0.1263739191616 * S_NumWebVisitsMonth
1919587   +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
1919588   +        S_RMntFrq  +      0.3452503815146 * S_Recency
1919589   +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome +
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 *
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts +
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 *
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 *
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 *
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 *
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq +
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
1919590   +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
1919591   +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
1919592   +        S_Income  +     0.24623934031778 * S_Kidhome
1919593   +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
1919594   +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
1919595   +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
1919596   +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
1919597   +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
1919598   +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
1919599   +          +    -0.08125614129909 * S_NumDealsPurchases
1919600   +          +     0.38003696656333 * S_NumDistPurchases
1919601   +          +     0.22006494588298 * S_NumStorePurchases
1919602   +          +     0.26217639358993 * S_NumWebPurchases
1919603   +          +    -0.56905781005459 * S_NumWebVisitsMonth
1919604   +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
1919605   +        S_RMntFrq  +     0.33060213336674 * S_Recency
1919606   +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome +
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 *
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts +
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 *
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 *
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 *
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 *
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq +
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
1919607   +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
1919608   +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
1919609   +        S_Income  +     0.18597632724783 * S_Kidhome
1919610   +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
1919611   +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
1919612   +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
1919613   +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
1919614   +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
1919615   +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
1919616   +          +     0.08121213946217 * S_NumDealsPurchases
1919617   +          +    -0.04963282234139 * S_NumDistPurchases
1919618   +          +    -0.09521586837775 * S_NumStorePurchases
1919619   +          +     0.00630626523742 * S_NumWebPurchases
1919620   +          +    -0.03891587920939 * S_NumWebVisitsMonth
1919621   +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
1919622   +        S_RMntFrq  +    -0.09135545756466 * S_Recency
1919623   +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome +
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 *
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts +
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 *
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 *
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 *
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 *
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq +
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
1919624   +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
1919625   +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
1919626   +        S_Income  +     0.25356767518099 * S_Kidhome
1919627   +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
1919628   +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
1919629   +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
1919630   +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
1919631   +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
1919632   +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
1919633   +          +     0.83749876944877 * S_NumDealsPurchases
1919634   +          +     0.29636537008068 * S_NumDistPurchases
1919635   +          +    -0.61202052257506 * S_NumStorePurchases
1919636   +          +    -0.96921731415369 * S_NumWebPurchases
1919637   +          +     0.10056455703323 * S_NumWebVisitsMonth
1919638   +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
1919639   +        S_RMntFrq  +    -0.36934667860476 * S_Recency
1919640   +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age +
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome +
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 *
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts +
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 *
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 *
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 *
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 *
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq +
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
1919641   +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
1919642   +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
1919643   +        S_Income  +    -0.66239517276633 * S_Kidhome
1919644   +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
1919645   +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
1919646   +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
1919647   +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
1919648   +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
1919649   +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
1919650   +          +     0.63122884753912 * S_NumDealsPurchases
1919651   +          +     0.00285388491049 * S_NumDistPurchases
1919652   +          +    -0.76222252593182 * S_NumStorePurchases
1919653   +          +    -0.71485070772733 * S_NumWebPurchases
1919654   +          +     1.59020450778179 * S_NumWebVisitsMonth
1919655   +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
1919656   +        S_RMntFrq  +    -1.32400243058807 * S_Recency
1919657   +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome +
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 *
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts +
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 *
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 *
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 *
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 *
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq +
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
1919658   +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
1919659   +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
1919660   +        S_Income  +    -0.22662005590555 * S_Kidhome
1919661   +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
1919662   +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
1919663   +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
1919664   +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
1919665   +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
1919666   +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
1919667   +          +    -0.28143084367284 * S_NumDealsPurchases
1919668   +          +     0.09640746756361 * S_NumDistPurchases
1919669   +          +      0.1754994442449 * S_NumStorePurchases
1919670   +          +     0.14321475617403 * S_NumWebPurchases
1919671   +          +     -0.1908048876137 * S_NumWebVisitsMonth
1919672   +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
1919673   +        S_RMntFrq  +     0.02280616139018 * S_Recency
1919674   +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age +
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome +
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 *
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts +
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 *
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 *
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 *
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 *
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq +
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
1919675   +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
1919676   +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
1919677   +        S_Income  +    -0.45643247613458 * S_Kidhome
1919678   +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
1919679   +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
1919680   +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
1919681   +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
1919682   +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
1919683   +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
1919684   +          +    -0.14623073736275 * S_NumDealsPurchases
1919685   +          +      0.1591142102614 * S_NumDistPurchases
1919686   +          +     0.10364624011419 * S_NumStorePurchases
1919687   +          +     0.21545343951201 * S_NumWebPurchases
1919688   +          +     0.61096997379603 * S_NumWebVisitsMonth
1919689   +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
1919690   +        S_RMntFrq  +    -1.05615926539796 * S_Recency
1919691   +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome +
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 *
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts +
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 *
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 *
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 *
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 *
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq +
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
1919692   +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
1919693   +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
1919694   +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
1919695   +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
1919696   +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 *
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 +
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 *
HigherEducationBinary0 ;
1919697   +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
1919698   +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
1919699   +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
1919700   +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
1919701   +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 *
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 +
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 *
HigherEducationBinary0 ;
1919702   +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
1919703   +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
1919704   +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
1919705   +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
1919706   +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 *
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 +
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 *
HigherEducationBinary0 ;
1919707   +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
1919708   +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
1919709   +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
1919710   +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
1919711   +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 *
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 +
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 *
HigherEducationBinary0 ;
1919712   +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
1919713   +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
1919714   +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
1919715   +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
1919716   +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 *
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 +
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 *
HigherEducationBinary0 ;
1919717   +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
1919718   +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
1919719   +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
1919720   +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
1919721   +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 *
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 +
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 *
HigherEducationBinary0 ;
1919722   +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
1919723   +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
1919724   +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
1919725   +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
1919726   +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 *
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 +
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 *
HigherEducationBinary0 ;
1919727   +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
1919728   +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
1919729   +        EducationGraduation  +     0.00389495660452 * EducationMaster
1919730   +          +     0.39856598367829 * Marital_StatusDivorced
1919731   +          +    -0.45922754552461 * Marital_StatusMarried
1919732   +          +     0.41270195301891 * Marital_StatusSingle
1919733   +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 *
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster +
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried +
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
1919734   +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
1919735   +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
1919736   +        EducationGraduation  +      0.2609956614651 * EducationMaster
1919737   +          +     0.12002180366932 * Marital_StatusDivorced
1919738   +          +     0.50693056076018 * Marital_StatusMarried
1919739   +          +    -0.40828651697464 * Marital_StatusSingle
1919740   +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 *
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster +
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried +
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
1919741   +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
1919742   +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
1919743   +        EducationGraduation  +     0.20017847825938 * EducationMaster
1919744   +          +    -0.05075621283629 * Marital_StatusDivorced
1919745   +          +     0.06731276969307 * Marital_StatusMarried
1919746   +          +     0.20458391966582 * Marital_StatusSingle
1919747   +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 *
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster +
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried +
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
1919748   +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
1919749   +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
1919750   +        EducationGraduation  +     0.28829384238085 * EducationMaster
1919751   +          +    -0.37925185401218 * Marital_StatusDivorced
1919752   +          +     0.62971134740586 * Marital_StatusMarried
1919753   +          +    -0.36562351730859 * Marital_StatusSingle
1919754   +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 *
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried +
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
1919755   +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
1919756   +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
1919757   +        EducationGraduation  +    -0.18997526501932 * EducationMaster
1919758   +          +     0.84382044664305 * Marital_StatusDivorced
1919759   +          +    -0.84062627203871 * Marital_StatusMarried
1919760   +          +     0.74100406031127 * Marital_StatusSingle
1919761   +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 *
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried +
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
1919762   +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
1919763   +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
1919764   +        EducationGraduation  +    -0.13296903086061 * EducationMaster
1919765   +          +     -0.1195105091383 * Marital_StatusDivorced
1919766   +          +    -0.13486422945269 * Marital_StatusMarried
1919767   +          +     0.33592403429156 * Marital_StatusSingle
1919768   +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 *
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried +
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
1919769   +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
1919770   +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
1919771   +        EducationGraduation  +    -0.09885314861537 * EducationMaster
1919772   +          +     0.14792293029589 * Marital_StatusDivorced
1919773   +          +    -0.96003393582564 * Marital_StatusMarried
1919774   +          +     0.64637652355384 * Marital_StatusSingle
1919775   +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 *
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried +
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
1919776   +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
1919777   +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
1919778   +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
1919779   +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
1919780   +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
1919781   +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
1919782   +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
1919783   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1919784   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1919785   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1919786   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1919787   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1919788   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1919789   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1919790   +END;
MPRINT(EM_DIAGRAM):   END;
1919791   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1919792   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1919793   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1919794   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1919795   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1919796   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1919797   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1919798   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1919799   +END;
MPRINT(EM_DIAGRAM):   END;
1919800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919801   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1919802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919803   +
1919804   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1919805   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1919806   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1919807   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1919808   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1919809   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1919810   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1919811   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1919812   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1919813   +end;
MPRINT(EM_DIAGRAM):   end;
1919814   +else do;
MPRINT(EM_DIAGRAM):   else do;
1919815   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1919816   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1919817   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1919818   +   end;
MPRINT(EM_DIAGRAM):   end;
1919819   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1919820   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1919821   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1919822   +   end;
MPRINT(EM_DIAGRAM):   end;
1919823   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1919824   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1919825   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1919826   +   end;
MPRINT(EM_DIAGRAM):   end;
1919827   +end;
MPRINT(EM_DIAGRAM):   end;
1919828   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1919829   +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
1919830   +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
1919831   +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
1919832   +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 +
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 *
H16 + 2.0380168893605 * H17 ;
1919833   +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
1919834   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1919835   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1919836   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1919837   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1919838   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1919839   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1919840   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1919841   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1919842   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1919843   +END;
MPRINT(EM_DIAGRAM):   END;
1919844   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1919845   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1919846   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1919847   +END;
MPRINT(EM_DIAGRAM):   END;
1919848   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1919849   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1919850   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1919851   +END;
MPRINT(EM_DIAGRAM):   END;
1919852   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1919853   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1919854   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1919855   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1919856   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1919857   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1919858   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1919859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919860   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1919861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1919862   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1919863   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1919864   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1919865   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1919866   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1919867   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1919868   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1919869   +END;
MPRINT(EM_DIAGRAM):   END;
1919870   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1919871   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1919872   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1919873   +drop
1919874   +H11
1919875   +H12
1919876   +H13
1919877   +H14
1919878   +H15
1919879   +H16
1919880   +H17
1919881   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1919882   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1919883   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1919884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919885   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1919886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919887   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1919888   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1919889   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1919890   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1919891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919892   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1919893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919894   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1919895   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1919896   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1919897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919898   +* Ensmbl27: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 2 of 7;
1919899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919900   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919901   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1919902   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1919903   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1919904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1919905   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1919906   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1919907   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1919908   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1919909   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1919910   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1919911   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1919912   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1919913   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1919914   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1919915   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1919916   +LENGTH _WARN_ $4
1919917   +      F_DepVar  $ 12
1919918   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1919919   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1919920   +
1919921   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1919922   +
1919923   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1919924   +
1919925   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1919926   +
1919927   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1919928   +
1919929   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1919930   +
1919931   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1919932   +
1919933   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1919934   +
1919935   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1919936   +
1919937   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1919938   +
1919939   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1919940   +
1919941   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1919942   +
1919943   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1919944   +
1919945   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1919946   +
1919947   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1919948   +
1919949   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1919950   +
1919951   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1919952   +
1919953   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1919954   +
1919955   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1919956   +
1919957   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1919958   +
1919959   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1919960   +
1919961   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1919962   +
1919963   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1919964   +
1919965   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1919966   +
1919967   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1919968   +
1919969   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1919970   +
1919971   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1919972   +
1919973   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1919974   +
1919975   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1919976   +
1919977   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1919978   +
1919979   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1919980   +
1919981   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1919982   +
1919983   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1919984   +
1919985   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1919986   +
1919987   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1919988   +
1919989   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1919990   +
1919991   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1919992   +
1919993   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1919994   +
1919995   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1919996   +
1919997   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1919998   +
1919999   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1920000   +
1920001   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1920002   +
1920003   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1920004   +
1920005   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1920006   +
1920007   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1920008   +
1920009   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1920010   +
1920011   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1920012   +
1920013   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1920014   +
1920015   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1920016   +
1920017   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1920018   +
1920019   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1920020   +
1920021   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1920022   +
1920023   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1920024   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1920025   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1920026   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1920027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920029   +end;
MPRINT(EM_DIAGRAM):   end;
1920030   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920031   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920032   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1920033   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920034   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920035   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1920036   +   end;
MPRINT(EM_DIAGRAM):   end;
1920037   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920038   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1920039   +   end;
MPRINT(EM_DIAGRAM):   end;
1920040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920041   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1920042   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920043   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920044   +   end;
MPRINT(EM_DIAGRAM):   end;
1920045   +end;
MPRINT(EM_DIAGRAM):   end;
1920046   +
1920047   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1920048   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1920049   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1920050   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1920051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920053   +end;
MPRINT(EM_DIAGRAM):   end;
1920054   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920056   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1920057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920058   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920059   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1920060   +   end;
MPRINT(EM_DIAGRAM):   end;
1920061   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920062   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1920063   +   end;
MPRINT(EM_DIAGRAM):   end;
1920064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920065   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1920066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920068   +   end;
MPRINT(EM_DIAGRAM):   end;
1920069   +end;
MPRINT(EM_DIAGRAM):   end;
1920070   +
1920071   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1920072   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1920073   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1920074   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1920075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920077   +end;
MPRINT(EM_DIAGRAM):   end;
1920078   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920080   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1920081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920082   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920083   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1920084   +   end;
MPRINT(EM_DIAGRAM):   end;
1920085   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920086   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1920087   +   end;
MPRINT(EM_DIAGRAM):   end;
1920088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920089   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1920090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920092   +   end;
MPRINT(EM_DIAGRAM):   end;
1920093   +end;
MPRINT(EM_DIAGRAM):   end;
1920094   +
1920095   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1920096   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1920097   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1920098   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1920099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920101   +end;
MPRINT(EM_DIAGRAM):   end;
1920102   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920103   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920104   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1920105   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920106   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920107   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1920108   +   end;
MPRINT(EM_DIAGRAM):   end;
1920109   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920110   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1920111   +   end;
MPRINT(EM_DIAGRAM):   end;
1920112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920113   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1920114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920116   +   end;
MPRINT(EM_DIAGRAM):   end;
1920117   +end;
MPRINT(EM_DIAGRAM):   end;
1920118   +
1920119   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1920120   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1920121   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1920122   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1920123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920125   +end;
MPRINT(EM_DIAGRAM):   end;
1920126   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920127   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920128   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1920129   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920130   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920131   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1920132   +   end;
MPRINT(EM_DIAGRAM):   end;
1920133   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920134   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1920135   +   end;
MPRINT(EM_DIAGRAM):   end;
1920136   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920137   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1920138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920140   +   end;
MPRINT(EM_DIAGRAM):   end;
1920141   +end;
MPRINT(EM_DIAGRAM):   end;
1920142   +
1920143   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1920144   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1920145   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1920146   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1920147   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920149   +end;
MPRINT(EM_DIAGRAM):   end;
1920150   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920151   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920152   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1920153   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920154   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920155   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1920156   +   end;
MPRINT(EM_DIAGRAM):   end;
1920157   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920158   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1920159   +   end;
MPRINT(EM_DIAGRAM):   end;
1920160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920161   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1920162   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920163   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920164   +   end;
MPRINT(EM_DIAGRAM):   end;
1920165   +end;
MPRINT(EM_DIAGRAM):   end;
1920166   +
1920167   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1920168   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1920169   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1920170   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1920171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920173   +end;
MPRINT(EM_DIAGRAM):   end;
1920174   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920175   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920176   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1920177   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920178   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1920179   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1920180   +   end;
MPRINT(EM_DIAGRAM):   end;
1920181   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1920182   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1920183   +   end;
MPRINT(EM_DIAGRAM):   end;
1920184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920185   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1920186   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920187   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920188   +   end;
MPRINT(EM_DIAGRAM):   end;
1920189   +end;
MPRINT(EM_DIAGRAM):   end;
1920190   +
1920191   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1920192   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1920193   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1920194   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1920195   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1920196   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1920197   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1920198   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1920199   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1920200   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1920201   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1920202   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1920203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920205   +end;
MPRINT(EM_DIAGRAM):   end;
1920206   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920207   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1920208   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1920209   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920210   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1920211   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1920212   +   end;
MPRINT(EM_DIAGRAM):   end;
1920213   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1920214   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1920215   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1920216   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1920217   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1920218   +   end;
MPRINT(EM_DIAGRAM):   end;
1920219   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1920220   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1920221   +   end;
MPRINT(EM_DIAGRAM):   end;
1920222   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1920223   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1920224   +   end;
MPRINT(EM_DIAGRAM):   end;
1920225   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1920226   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1920227   +   end;
MPRINT(EM_DIAGRAM):   end;
1920228   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920229   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1920230   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1920231   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1920232   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1920233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920235   +   end;
MPRINT(EM_DIAGRAM):   end;
1920236   +end;
MPRINT(EM_DIAGRAM):   end;
1920237   +
1920238   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1920239   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1920240   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1920241   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1920242   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1920243   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1920244   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1920245   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1920246   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1920247   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1920248   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1920249   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1920250   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1920251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920253   +end;
MPRINT(EM_DIAGRAM):   end;
1920254   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920255   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1920256   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1920257   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920258   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1920259   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1920260   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1920261   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1920262   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1920263   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1920264   +         end;
MPRINT(EM_DIAGRAM):   end;
1920265   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1920266   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1920267   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1920268   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1920269   +            end;
MPRINT(EM_DIAGRAM):   end;
1920270   +         end;
MPRINT(EM_DIAGRAM):   end;
1920271   +      end;
MPRINT(EM_DIAGRAM):   end;
1920272   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1920273   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1920274   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1920275   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1920276   +         end;
MPRINT(EM_DIAGRAM):   end;
1920277   +      end;
MPRINT(EM_DIAGRAM):   end;
1920278   +   end;
MPRINT(EM_DIAGRAM):   end;
1920279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920280   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1920281   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1920282   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1920283   +      end;
MPRINT(EM_DIAGRAM):   end;
1920284   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1920285   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1920286   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1920287   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1920288   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1920289   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1920290   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1920291   +         end;
MPRINT(EM_DIAGRAM):   end;
1920292   +      end;
MPRINT(EM_DIAGRAM):   end;
1920293   +   end;
MPRINT(EM_DIAGRAM):   end;
1920294   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1920295   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1920296   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1920297   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1920298   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1920299   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920300   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920301   +   end;
MPRINT(EM_DIAGRAM):   end;
1920302   +end;
MPRINT(EM_DIAGRAM):   end;
1920303   +
1920304   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920305   +*** Checking missing input Interval
1920306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1920307   +
1920308   +IF NMISS(
1920309   +   AcceptedCmpTotal ,
1920310   +   Age ,
1920311   +   Frq ,
1920312   +   Income ,
1920313   +   Kidhome ,
1920314   +   Mnt ,
1920315   +   MntFishProducts ,
1920316   +   MntFruits ,
1920317   +   MntGoldProds ,
1920318   +   MntMeatProducts ,
1920319   +   MntSweetProducts ,
1920320   +   MntWines ,
1920321   +   MonthsAsCustomer ,
1920322   +   NumCatalogPurchases ,
1920323   +   NumDealsPurchases ,
1920324   +   NumDistPurchases ,
1920325   +   NumStorePurchases ,
1920326   +   NumWebPurchases ,
1920327   +   NumWebVisitsMonth ,
1920328   +   RFMstat ,
1920329   +   RMntFrq ,
1920330   +   Recency ,
1920331   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1920332   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1920333   +
1920334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920335   +END;
MPRINT(EM_DIAGRAM):   END;
1920336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920337   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1920338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920339   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1920340   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1920341   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1920342   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1920343   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1920344   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1920345   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1920346   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1920347   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1920348   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1920349   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1920350   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1920351   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1920352   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1920353   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1920354   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1920355   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1920356   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1920357   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1920358   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1920359   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1920360   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1920361   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1920362   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1920363   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1920364   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1920365   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1920366   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1920367   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1920368   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1920369   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1920370   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1920371   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1920372   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1920373   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1920374   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1920375   +END;
MPRINT(EM_DIAGRAM):   END;
1920376   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1920377   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1920378   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1920379   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1920380   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1920381   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1920382   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1920383   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1920384   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1920385   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1920386   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1920387   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1920388   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1920389   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1920390   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1920391   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1920392   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1920393   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1920394   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1920395   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1920396   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1920397   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1920398   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1920399   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1920400   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1920401   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1920402   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1920403   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1920404   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1920405   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1920406   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1920407   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1920408   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1920409   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1920410   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1920411   +   ELSE S_NumCatalogPurchases
1920412   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1920413   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1920414   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1920415   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1920416   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1920417   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1920418   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1920419   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1920420   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1920421   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1920422   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1920423   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1920424   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1920425   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1920426   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1920427   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1920428   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1920429   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1920430   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1920431   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1920432   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1920433   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1920434   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1920435   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1920436   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1920437   +END;
MPRINT(EM_DIAGRAM):   END;
1920438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920439   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1920440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920442   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1920443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920445   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1920446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920447   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1920448   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1920449   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1920450   +        S_Income  +    -0.14142658616971 * S_Kidhome
1920451   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1920452   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1920453   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1920454   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1920455   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1920456   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1920457   +          +     0.96837841774168 * S_NumDealsPurchases
1920458   +          +      0.2846105381881 * S_NumDistPurchases
1920459   +          +    -0.69514041792943 * S_NumStorePurchases
1920460   +          +    -0.96425407351749 * S_NumWebPurchases
1920461   +          +     0.79545449599683 * S_NumWebVisitsMonth
1920462   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1920463   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1920464   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1920465   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1920466   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1920467   +        S_Income  +    -0.55432195959203 * S_Kidhome
1920468   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1920469   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1920470   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1920471   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1920472   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1920473   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1920474   +          +      0.2190184330724 * S_NumDealsPurchases
1920475   +          +    -0.01682909442896 * S_NumDistPurchases
1920476   +          +    -0.70244951048552 * S_NumStorePurchases
1920477   +          +     -0.3057457659316 * S_NumWebPurchases
1920478   +          +     0.95928538762715 * S_NumWebVisitsMonth
1920479   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1920480   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1920481   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1920482   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1920483   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1920484   +        S_Income  +    -0.06354861159882 * S_Kidhome
1920485   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1920486   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1920487   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1920488   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1920489   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1920490   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1920491   +          +    -0.21394230159696 * S_NumDealsPurchases
1920492   +          +    -0.23833771124663 * S_NumDistPurchases
1920493   +          +     0.45832031017813 * S_NumStorePurchases
1920494   +          +    -0.30226952040179 * S_NumWebPurchases
1920495   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1920496   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1920497   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1920498   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
1920499   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1920500   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1920501   +        S_Income  +    -0.04839586846715 * S_Kidhome
1920502   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1920503   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1920504   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1920505   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1920506   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1920507   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1920508   +          +    -0.43749647771198 * S_NumDealsPurchases
1920509   +          +     0.21263473847472 * S_NumDistPurchases
1920510   +          +     0.26102168039141 * S_NumStorePurchases
1920511   +          +     0.54921725943657 * S_NumWebPurchases
1920512   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1920513   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1920514   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1920515   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1920516   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1920517   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1920518   +        S_Income  +     0.71499527198653 * S_Kidhome
1920519   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1920520   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1920521   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1920522   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1920523   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1920524   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1920525   +          +     0.09436067776126 * S_NumDealsPurchases
1920526   +          +    -0.02824201859641 * S_NumDistPurchases
1920527   +          +    -0.06770433780564 * S_NumStorePurchases
1920528   +          +    -0.07177620319715 * S_NumWebPurchases
1920529   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1920530   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1920531   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1920532   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1920533   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1920534   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1920535   +        S_Income  +    -0.63474522042341 * S_Kidhome
1920536   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1920537   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1920538   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1920539   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1920540   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1920541   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1920542   +          +    -0.51154511343396 * S_NumDealsPurchases
1920543   +          +    -0.52422915823572 * S_NumDistPurchases
1920544   +          +     0.30305498422357 * S_NumStorePurchases
1920545   +          +     0.12197321559338 * S_NumWebPurchases
1920546   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1920547   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1920548   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1920549   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1920550   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1920551   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1920552   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1920553   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1920554   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
1920555   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1920556   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1920557   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1920558   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1920559   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
1920560   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1920561   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1920562   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1920563   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1920564   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
1920565   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1920566   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1920567   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1920568   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1920569   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
1920570   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1920571   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1920572   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1920573   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1920574   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
1920575   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1920576   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1920577   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1920578   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1920579   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
1920580   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1920581   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1920582   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1920583   +          +     0.10234616400375 * Marital_StatusDivorced
1920584   +          +     0.27961650739075 * Marital_StatusMarried
1920585   +          +    -0.40239488723767 * Marital_StatusSingle
1920586   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1920587   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1920588   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1920589   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1920590   +          +     0.46385792428023 * Marital_StatusDivorced
1920591   +          +    -0.62344590646391 * Marital_StatusMarried
1920592   +          +     0.61767209252062 * Marital_StatusSingle
1920593   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1920594   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1920595   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1920596   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1920597   +          +    -0.07839612590836 * Marital_StatusDivorced
1920598   +          +     0.35316864062221 * Marital_StatusMarried
1920599   +          +    -0.10730136429834 * Marital_StatusSingle
1920600   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1920601   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1920602   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1920603   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1920604   +          +    -0.09942175269886 * Marital_StatusDivorced
1920605   +          +     0.24385460865335 * Marital_StatusMarried
1920606   +          +    -0.33658955096296 * Marital_StatusSingle
1920607   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1920608   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1920609   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1920610   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1920611   +          +    -0.08047852561096 * Marital_StatusDivorced
1920612   +          +     1.16485862694561 * Marital_StatusMarried
1920613   +          +    -0.94140251178566 * Marital_StatusSingle
1920614   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1920615   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1920616   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1920617   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1920618   +          +    -0.16621963893391 * Marital_StatusDivorced
1920619   +          +    -0.44542186297324 * Marital_StatusMarried
1920620   +          +     0.42176133228308 * Marital_StatusSingle
1920621   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1920622   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1920623   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1920624   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1920625   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1920626   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1920627   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1920628   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1920629   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1920630   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1920631   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1920632   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1920633   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1920634   +END;
MPRINT(EM_DIAGRAM):   END;
1920635   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1920636   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1920637   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1920638   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1920639   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1920640   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1920641   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1920642   +END;
MPRINT(EM_DIAGRAM):   END;
1920643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920644   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1920645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920646   +
1920647   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1920648   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1920649   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1920650   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1920651   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1920652   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920653   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1920654   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1920655   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1920656   +end;
MPRINT(EM_DIAGRAM):   end;
1920657   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920658   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1920659   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1920660   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1920661   +   end;
MPRINT(EM_DIAGRAM):   end;
1920662   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1920663   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1920664   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1920665   +   end;
MPRINT(EM_DIAGRAM):   end;
1920666   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920667   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1920668   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1920669   +   end;
MPRINT(EM_DIAGRAM):   end;
1920670   +end;
MPRINT(EM_DIAGRAM):   end;
1920671   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1920672   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1920673   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1920674   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
1920675   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1920676   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1920677   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1920678   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1920679   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1920680   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1920681   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1920682   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1920683   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1920684   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1920685   +END;
MPRINT(EM_DIAGRAM):   END;
1920686   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1920687   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1920688   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1920689   +END;
MPRINT(EM_DIAGRAM):   END;
1920690   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1920691   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1920692   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1920693   +END;
MPRINT(EM_DIAGRAM):   END;
1920694   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1920695   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1920696   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1920697   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1920698   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1920699   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1920700   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1920701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920702   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1920703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1920704   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1920705   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1920706   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1920707   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1920708   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1920709   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1920710   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1920711   +END;
MPRINT(EM_DIAGRAM):   END;
1920712   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1920713   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1920714   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1920715   +drop
1920716   +H11
1920717   +H12
1920718   +H13
1920719   +H14
1920720   +H15
1920721   +H16
1920722   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1920723   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1920724   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1920725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1920726   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1920727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1920728   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1920729   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1920730   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1920731   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1920732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1920733   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1920734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1920735   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1920736   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1920737   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1920738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1920739   +* Ensmbl27: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 3 of 7;
1920740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1920741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1920742   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1920743   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1920744   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1920745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1920746   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1920747   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1920748   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1920749   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1920750   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1920751   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1920752   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1920753   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1920754   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1920755   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1920756   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1920757   +LENGTH _WARN_ $4
1920758   +      F_DepVar  $ 12
1920759   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1920760   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1920761   +
1920762   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1920763   +
1920764   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1920765   +
1920766   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1920767   +
1920768   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1920769   +
1920770   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1920771   +
1920772   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1920773   +
1920774   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1920775   +
1920776   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1920777   +
1920778   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1920779   +
1920780   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1920781   +
1920782   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1920783   +
1920784   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1920785   +
1920786   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1920787   +
1920788   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1920789   +
1920790   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1920791   +
1920792   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1920793   +
1920794   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1920795   +
1920796   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1920797   +
1920798   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1920799   +
1920800   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1920801   +
1920802   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1920803   +
1920804   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1920805   +
1920806   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1920807   +
1920808   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1920809   +
1920810   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1920811   +
1920812   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1920813   +
1920814   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1920815   +
1920816   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1920817   +
1920818   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1920819   +
1920820   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1920821   +
1920822   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1920823   +
1920824   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1920825   +
1920826   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1920827   +
1920828   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1920829   +
1920830   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1920831   +
1920832   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1920833   +
1920834   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1920835   +
1920836   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1920837   +
1920838   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1920839   +
1920840   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1920841   +
1920842   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1920843   +
1920844   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1920845   +
1920846   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1920847   +
1920848   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1920849   +
1920850   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1920851   +
1920852   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1920853   +
1920854   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1920855   +
1920856   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1920857   +
1920858   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1920859   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1920860   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1920861   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1920862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920864   +end;
MPRINT(EM_DIAGRAM):   end;
1920865   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920866   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920867   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1920868   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920869   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920870   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1920871   +   end;
MPRINT(EM_DIAGRAM):   end;
1920872   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920873   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1920874   +   end;
MPRINT(EM_DIAGRAM):   end;
1920875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920876   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1920877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920879   +   end;
MPRINT(EM_DIAGRAM):   end;
1920880   +end;
MPRINT(EM_DIAGRAM):   end;
1920881   +
1920882   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1920883   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1920884   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1920885   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1920886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920888   +end;
MPRINT(EM_DIAGRAM):   end;
1920889   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920890   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920891   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1920892   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920893   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920894   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1920895   +   end;
MPRINT(EM_DIAGRAM):   end;
1920896   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920897   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1920898   +   end;
MPRINT(EM_DIAGRAM):   end;
1920899   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920900   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1920901   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920902   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920903   +   end;
MPRINT(EM_DIAGRAM):   end;
1920904   +end;
MPRINT(EM_DIAGRAM):   end;
1920905   +
1920906   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1920907   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1920908   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1920909   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1920910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920912   +end;
MPRINT(EM_DIAGRAM):   end;
1920913   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920914   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920915   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1920916   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920917   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920918   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1920919   +   end;
MPRINT(EM_DIAGRAM):   end;
1920920   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920921   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1920922   +   end;
MPRINT(EM_DIAGRAM):   end;
1920923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920924   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1920925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920927   +   end;
MPRINT(EM_DIAGRAM):   end;
1920928   +end;
MPRINT(EM_DIAGRAM):   end;
1920929   +
1920930   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1920931   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1920932   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1920933   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1920934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920936   +end;
MPRINT(EM_DIAGRAM):   end;
1920937   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920939   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1920940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920942   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1920943   +   end;
MPRINT(EM_DIAGRAM):   end;
1920944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920945   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1920946   +   end;
MPRINT(EM_DIAGRAM):   end;
1920947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920948   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1920949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920951   +   end;
MPRINT(EM_DIAGRAM):   end;
1920952   +end;
MPRINT(EM_DIAGRAM):   end;
1920953   +
1920954   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1920955   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1920956   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1920957   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1920958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920960   +end;
MPRINT(EM_DIAGRAM):   end;
1920961   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920963   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1920964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920966   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1920967   +   end;
MPRINT(EM_DIAGRAM):   end;
1920968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920969   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1920970   +   end;
MPRINT(EM_DIAGRAM):   end;
1920971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920972   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1920973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920975   +   end;
MPRINT(EM_DIAGRAM):   end;
1920976   +end;
MPRINT(EM_DIAGRAM):   end;
1920977   +
1920978   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1920979   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1920980   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1920981   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1920982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1920983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920984   +end;
MPRINT(EM_DIAGRAM):   end;
1920985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1920986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1920987   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1920988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1920989   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1920990   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1920991   +   end;
MPRINT(EM_DIAGRAM):   end;
1920992   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1920993   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1920994   +   end;
MPRINT(EM_DIAGRAM):   end;
1920995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1920996   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1920997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1920998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1920999   +   end;
MPRINT(EM_DIAGRAM):   end;
1921000   +end;
MPRINT(EM_DIAGRAM):   end;
1921001   +
1921002   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1921003   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1921004   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1921005   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1921006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921008   +end;
MPRINT(EM_DIAGRAM):   end;
1921009   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1921011   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1921012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921013   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1921014   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1921015   +   end;
MPRINT(EM_DIAGRAM):   end;
1921016   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1921017   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1921018   +   end;
MPRINT(EM_DIAGRAM):   end;
1921019   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921020   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1921021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921023   +   end;
MPRINT(EM_DIAGRAM):   end;
1921024   +end;
MPRINT(EM_DIAGRAM):   end;
1921025   +
1921026   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1921027   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1921028   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1921029   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1921030   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1921031   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1921032   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1921033   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1921034   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1921035   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1921036   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1921037   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1921038   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921039   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921040   +end;
MPRINT(EM_DIAGRAM):   end;
1921041   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921042   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1921043   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1921044   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921045   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1921046   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1921047   +   end;
MPRINT(EM_DIAGRAM):   end;
1921048   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1921049   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1921050   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1921051   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1921052   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1921053   +   end;
MPRINT(EM_DIAGRAM):   end;
1921054   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1921055   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1921056   +   end;
MPRINT(EM_DIAGRAM):   end;
1921057   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1921058   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1921059   +   end;
MPRINT(EM_DIAGRAM):   end;
1921060   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1921061   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1921062   +   end;
MPRINT(EM_DIAGRAM):   end;
1921063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921064   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1921065   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1921066   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1921067   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1921068   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921069   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921070   +   end;
MPRINT(EM_DIAGRAM):   end;
1921071   +end;
MPRINT(EM_DIAGRAM):   end;
1921072   +
1921073   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1921074   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1921075   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1921076   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1921077   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1921078   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1921079   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1921080   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1921081   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1921082   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1921083   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1921084   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1921085   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1921086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921088   +end;
MPRINT(EM_DIAGRAM):   end;
1921089   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921090   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1921091   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1921092   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921093   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1921094   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1921095   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1921096   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1921097   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1921098   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1921099   +         end;
MPRINT(EM_DIAGRAM):   end;
1921100   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1921101   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1921102   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1921103   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1921104   +            end;
MPRINT(EM_DIAGRAM):   end;
1921105   +         end;
MPRINT(EM_DIAGRAM):   end;
1921106   +      end;
MPRINT(EM_DIAGRAM):   end;
1921107   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1921108   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1921109   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1921110   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1921111   +         end;
MPRINT(EM_DIAGRAM):   end;
1921112   +      end;
MPRINT(EM_DIAGRAM):   end;
1921113   +   end;
MPRINT(EM_DIAGRAM):   end;
1921114   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921115   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1921116   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1921117   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1921118   +      end;
MPRINT(EM_DIAGRAM):   end;
1921119   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1921120   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1921121   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1921122   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1921123   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1921124   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1921125   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1921126   +         end;
MPRINT(EM_DIAGRAM):   end;
1921127   +      end;
MPRINT(EM_DIAGRAM):   end;
1921128   +   end;
MPRINT(EM_DIAGRAM):   end;
1921129   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1921130   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1921131   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1921132   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1921133   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1921134   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921135   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921136   +   end;
MPRINT(EM_DIAGRAM):   end;
1921137   +end;
MPRINT(EM_DIAGRAM):   end;
1921138   +
1921139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921140   +*** Checking missing input Interval
1921141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1921142   +
1921143   +IF NMISS(
1921144   +   AcceptedCmpTotal ,
1921145   +   Age ,
1921146   +   Frq ,
1921147   +   Income ,
1921148   +   Kidhome ,
1921149   +   Mnt ,
1921150   +   MntFishProducts ,
1921151   +   MntFruits ,
1921152   +   MntGoldProds ,
1921153   +   MntMeatProducts ,
1921154   +   MntSweetProducts ,
1921155   +   MntWines ,
1921156   +   MonthsAsCustomer ,
1921157   +   NumCatalogPurchases ,
1921158   +   NumDealsPurchases ,
1921159   +   NumDistPurchases ,
1921160   +   NumStorePurchases ,
1921161   +   NumWebPurchases ,
1921162   +   NumWebVisitsMonth ,
1921163   +   RFMstat ,
1921164   +   RMntFrq ,
1921165   +   Recency ,
1921166   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1921167   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1921168   +
1921169   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921170   +END;
MPRINT(EM_DIAGRAM):   END;
1921171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921172   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1921173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921174   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1921175   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1921176   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1921177   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1921178   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1921179   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1921180   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1921181   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1921182   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1921183   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1921184   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1921185   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1921186   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1921187   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1921188   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1921189   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1921190   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1921191   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1921192   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1921193   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1921194   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1921195   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1921196   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1921197   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1921198   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1921199   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1921200   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1921201   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1921202   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1921203   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1921204   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1921205   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1921206   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1921207   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1921208   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1921209   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1921210   +END;
MPRINT(EM_DIAGRAM):   END;
1921211   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1921212   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1921213   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1921214   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1921215   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1921216   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1921217   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1921218   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1921219   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1921220   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1921221   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1921222   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1921223   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1921224   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1921225   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1921226   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1921227   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1921228   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1921229   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1921230   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1921231   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1921232   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1921233   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1921234   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1921235   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1921236   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1921237   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1921238   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1921239   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1921240   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1921241   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1921242   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1921243   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1921244   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1921245   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1921246   +   ELSE S_NumCatalogPurchases
1921247   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1921248   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1921249   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1921250   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1921251   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1921252   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1921253   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1921254   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1921255   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1921256   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1921257   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1921258   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1921259   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1921260   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1921261   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1921262   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1921263   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1921264   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1921265   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1921266   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1921267   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1921268   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1921269   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1921270   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1921271   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1921272   +END;
MPRINT(EM_DIAGRAM):   END;
1921273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921274   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1921275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921277   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1921278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921280   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1921281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921282   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1921283   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1921284   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1921285   +        S_Income  +     0.51123266106809 * S_Kidhome
1921286   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1921287   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1921288   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1921289   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1921290   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1921291   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1921292   +          +     1.34095732961105 * S_NumDealsPurchases
1921293   +          +     0.16605991333252 * S_NumDistPurchases
1921294   +          +    -0.61746267736536 * S_NumStorePurchases
1921295   +          +    -0.61812800689506 * S_NumWebPurchases
1921296   +          +     1.44649145055387 * S_NumWebVisitsMonth
1921297   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1921298   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1921299   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1921300   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1921301   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1921302   +        S_Income  +     0.52295323651199 * S_Kidhome
1921303   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1921304   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1921305   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1921306   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1921307   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1921308   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1921309   +          +    -0.72543332317832 * S_NumDealsPurchases
1921310   +          +    -0.05245472565117 * S_NumDistPurchases
1921311   +          +     1.00667431585298 * S_NumStorePurchases
1921312   +          +     1.02836701470962 * S_NumWebPurchases
1921313   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1921314   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1921315   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1921316   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1921317   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1921318   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1921319   +        S_Income  +     0.58025720116696 * S_Kidhome
1921320   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1921321   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1921322   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1921323   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1921324   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1921325   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1921326   +          +     0.12670438262487 * S_NumDealsPurchases
1921327   +          +    -0.46113523834333 * S_NumDistPurchases
1921328   +          +     0.07074818720567 * S_NumStorePurchases
1921329   +          +    -0.05066645783537 * S_NumWebPurchases
1921330   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1921331   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1921332   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1921333   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1921334   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1921335   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1921336   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1921337   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1921338   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
1921339   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1921340   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1921341   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1921342   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1921343   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
1921344   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1921345   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1921346   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1921347   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1921348   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
1921349   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1921350   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1921351   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1921352   +          +     0.12692950862511 * Marital_StatusDivorced
1921353   +          +     0.10026497666167 * Marital_StatusMarried
1921354   +          +    -0.19893864592813 * Marital_StatusSingle
1921355   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1921356   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1921357   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1921358   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1921359   +          +    -0.16785192490199 * Marital_StatusDivorced
1921360   +          +     0.13153695130362 * Marital_StatusMarried
1921361   +          +    -0.50411544587104 * Marital_StatusSingle
1921362   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1921363   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1921364   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1921365   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1921366   +          +    -0.62654958087044 * Marital_StatusDivorced
1921367   +          +     1.86250132393341 * Marital_StatusMarried
1921368   +          +    -1.37067556451928 * Marital_StatusSingle
1921369   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1921370   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1921371   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1921372   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1921373   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1921374   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1921375   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1921376   +END;
MPRINT(EM_DIAGRAM):   END;
1921377   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1921378   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1921379   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1921380   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1921381   +END;
MPRINT(EM_DIAGRAM):   END;
1921382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921383   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1921384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921385   +
1921386   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1921387   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1921388   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1921389   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1921390   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1921391   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921392   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1921393   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1921394   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1921395   +end;
MPRINT(EM_DIAGRAM):   end;
1921396   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921397   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1921398   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1921399   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1921400   +   end;
MPRINT(EM_DIAGRAM):   end;
1921401   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1921402   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1921403   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1921404   +   end;
MPRINT(EM_DIAGRAM):   end;
1921405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921406   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1921407   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1921408   +   end;
MPRINT(EM_DIAGRAM):   end;
1921409   +end;
MPRINT(EM_DIAGRAM):   end;
1921410   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1921411   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1921412   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
1921413   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1921414   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1921415   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1921416   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1921417   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1921418   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1921419   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1921420   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1921421   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1921422   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1921423   +END;
MPRINT(EM_DIAGRAM):   END;
1921424   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1921425   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1921426   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1921427   +END;
MPRINT(EM_DIAGRAM):   END;
1921428   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1921429   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1921430   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1921431   +END;
MPRINT(EM_DIAGRAM):   END;
1921432   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1921433   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1921434   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1921435   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1921436   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1921437   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1921438   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1921439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921440   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1921441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921442   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1921443   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1921444   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1921445   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1921446   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1921447   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1921448   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1921449   +END;
MPRINT(EM_DIAGRAM):   END;
1921450   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1921451   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1921452   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1921453   +drop
1921454   +H11
1921455   +H12
1921456   +H13
1921457   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1921458   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1921459   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1921460   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1921461   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1921462   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1921463   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1921464   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1921465   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1921466   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1921467   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1921468   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1921469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1921470   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1921471   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1921472   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1921473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1921474   +* Ensmbl27: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 4 of 7;
1921475   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1921476   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1921477   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1921478   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1921479   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1921480   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1921481   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1921482   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1921483   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1921484   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1921485   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1921486   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1921487   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1921488   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1921489   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1921490   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1921491   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1921492   +LENGTH _WARN_ $4
1921493   +      F_DepVar  $ 12
1921494   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1921495   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1921496   +
1921497   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1921498   +
1921499   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1921500   +
1921501   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1921502   +
1921503   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1921504   +
1921505   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1921506   +
1921507   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1921508   +
1921509   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1921510   +
1921511   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1921512   +
1921513   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1921514   +
1921515   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1921516   +
1921517   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1921518   +
1921519   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1921520   +
1921521   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1921522   +
1921523   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1921524   +
1921525   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1921526   +
1921527   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1921528   +
1921529   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1921530   +
1921531   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1921532   +
1921533   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1921534   +
1921535   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1921536   +
1921537   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1921538   +
1921539   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1921540   +
1921541   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1921542   +
1921543   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1921544   +
1921545   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1921546   +
1921547   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1921548   +
1921549   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1921550   +
1921551   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1921552   +
1921553   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1921554   +
1921555   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1921556   +
1921557   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1921558   +
1921559   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1921560   +
1921561   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1921562   +
1921563   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1921564   +
1921565   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1921566   +
1921567   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1921568   +
1921569   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1921570   +
1921571   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1921572   +
1921573   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1921574   +
1921575   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1921576   +
1921577   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1921578   +
1921579   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1921580   +
1921581   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1921582   +
1921583   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1921584   +
1921585   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1921586   +
1921587   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1921588   +
1921589   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1921590   +
1921591   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1921592   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1921593   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1921594   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1921595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921597   +end;
MPRINT(EM_DIAGRAM):   end;
1921598   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921599   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1921600   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1921601   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921602   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1921603   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1921604   +   end;
MPRINT(EM_DIAGRAM):   end;
1921605   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1921606   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1921607   +   end;
MPRINT(EM_DIAGRAM):   end;
1921608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921609   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1921610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921612   +   end;
MPRINT(EM_DIAGRAM):   end;
1921613   +end;
MPRINT(EM_DIAGRAM):   end;
1921614   +
1921615   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1921616   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1921617   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1921618   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1921619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921621   +end;
MPRINT(EM_DIAGRAM):   end;
1921622   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921623   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1921624   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1921625   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921626   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1921627   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1921628   +   end;
MPRINT(EM_DIAGRAM):   end;
1921629   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1921630   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1921631   +   end;
MPRINT(EM_DIAGRAM):   end;
1921632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921633   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1921634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921636   +   end;
MPRINT(EM_DIAGRAM):   end;
1921637   +end;
MPRINT(EM_DIAGRAM):   end;
1921638   +
1921639   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1921640   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1921641   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1921642   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1921643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921645   +end;
MPRINT(EM_DIAGRAM):   end;
1921646   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921647   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1921648   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1921649   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921650   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1921651   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1921652   +   end;
MPRINT(EM_DIAGRAM):   end;
1921653   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1921654   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1921655   +   end;
MPRINT(EM_DIAGRAM):   end;
1921656   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921657   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1921658   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921659   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921660   +   end;
MPRINT(EM_DIAGRAM):   end;
1921661   +end;
MPRINT(EM_DIAGRAM):   end;
1921662   +
1921663   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1921664   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1921665   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1921666   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1921667   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921669   +end;
MPRINT(EM_DIAGRAM):   end;
1921670   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921671   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1921672   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1921673   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921674   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1921675   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1921676   +   end;
MPRINT(EM_DIAGRAM):   end;
1921677   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1921678   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1921679   +   end;
MPRINT(EM_DIAGRAM):   end;
1921680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921681   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1921682   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921683   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921684   +   end;
MPRINT(EM_DIAGRAM):   end;
1921685   +end;
MPRINT(EM_DIAGRAM):   end;
1921686   +
1921687   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1921688   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1921689   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1921690   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1921691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921693   +end;
MPRINT(EM_DIAGRAM):   end;
1921694   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921695   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1921696   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1921697   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921698   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1921699   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1921700   +   end;
MPRINT(EM_DIAGRAM):   end;
1921701   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1921702   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1921703   +   end;
MPRINT(EM_DIAGRAM):   end;
1921704   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921705   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1921706   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921707   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921708   +   end;
MPRINT(EM_DIAGRAM):   end;
1921709   +end;
MPRINT(EM_DIAGRAM):   end;
1921710   +
1921711   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
The SAS System
 
1921712   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1921713   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1921714   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1921715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921717   +end;
MPRINT(EM_DIAGRAM):   end;
1921718   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921719   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1921720   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1921721   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921722   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1921723   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1921724   +   end;
MPRINT(EM_DIAGRAM):   end;
1921725   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1921726   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1921727   +   end;
MPRINT(EM_DIAGRAM):   end;
1921728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921729   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1921730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921732   +   end;
MPRINT(EM_DIAGRAM):   end;
1921733   +end;
MPRINT(EM_DIAGRAM):   end;
1921734   +
1921735   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1921736   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1921737   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1921738   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1921739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921741   +end;
MPRINT(EM_DIAGRAM):   end;
1921742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1921744   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1921745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921746   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1921747   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1921748   +   end;
MPRINT(EM_DIAGRAM):   end;
1921749   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1921750   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1921751   +   end;
MPRINT(EM_DIAGRAM):   end;
1921752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921753   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1921754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921756   +   end;
MPRINT(EM_DIAGRAM):   end;
1921757   +end;
MPRINT(EM_DIAGRAM):   end;
1921758   +
1921759   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1921760   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1921761   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1921762   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1921763   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1921764   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1921765   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1921766   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1921767   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1921768   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1921769   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1921770   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1921771   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921772   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921773   +end;
MPRINT(EM_DIAGRAM):   end;
1921774   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921775   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1921776   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1921777   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921778   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1921779   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1921780   +   end;
MPRINT(EM_DIAGRAM):   end;
1921781   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1921782   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1921783   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1921784   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1921785   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1921786   +   end;
MPRINT(EM_DIAGRAM):   end;
1921787   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1921788   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1921789   +   end;
MPRINT(EM_DIAGRAM):   end;
1921790   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1921791   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1921792   +   end;
MPRINT(EM_DIAGRAM):   end;
1921793   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1921794   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1921795   +   end;
MPRINT(EM_DIAGRAM):   end;
1921796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921797   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1921798   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1921799   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1921800   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1921801   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921802   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921803   +   end;
MPRINT(EM_DIAGRAM):   end;
1921804   +end;
MPRINT(EM_DIAGRAM):   end;
1921805   +
1921806   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1921807   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1921808   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1921809   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1921810   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1921811   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1921812   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1921813   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1921814   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1921815   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1921816   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1921817   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1921818   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1921819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1921820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921821   +end;
MPRINT(EM_DIAGRAM):   end;
1921822   +else do;
MPRINT(EM_DIAGRAM):   else do;
1921823   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1921824   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1921825   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1921826   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1921827   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1921828   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1921829   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1921830   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1921831   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1921832   +         end;
MPRINT(EM_DIAGRAM):   end;
1921833   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1921834   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1921835   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1921836   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1921837   +            end;
MPRINT(EM_DIAGRAM):   end;
1921838   +         end;
MPRINT(EM_DIAGRAM):   end;
1921839   +      end;
MPRINT(EM_DIAGRAM):   end;
1921840   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1921841   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1921842   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1921843   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1921844   +         end;
MPRINT(EM_DIAGRAM):   end;
1921845   +      end;
MPRINT(EM_DIAGRAM):   end;
1921846   +   end;
MPRINT(EM_DIAGRAM):   end;
1921847   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1921848   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1921849   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1921850   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1921851   +      end;
MPRINT(EM_DIAGRAM):   end;
1921852   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1921853   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1921854   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1921855   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1921856   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1921857   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1921858   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1921859   +         end;
MPRINT(EM_DIAGRAM):   end;
1921860   +      end;
MPRINT(EM_DIAGRAM):   end;
1921861   +   end;
MPRINT(EM_DIAGRAM):   end;
1921862   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1921863   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1921864   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1921865   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1921866   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1921867   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1921868   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921869   +   end;
MPRINT(EM_DIAGRAM):   end;
1921870   +end;
MPRINT(EM_DIAGRAM):   end;
1921871   +
1921872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921873   +*** Checking missing input Interval
1921874   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1921875   +
1921876   +IF NMISS(
1921877   +   AcceptedCmpTotal ,
1921878   +   Age ,
1921879   +   Frq ,
1921880   +   Income ,
1921881   +   Kidhome ,
1921882   +   Mnt ,
1921883   +   MntFishProducts ,
1921884   +   MntFruits ,
1921885   +   MntGoldProds ,
1921886   +   MntMeatProducts ,
1921887   +   MntSweetProducts ,
1921888   +   MntWines ,
1921889   +   MonthsAsCustomer ,
1921890   +   NumCatalogPurchases ,
1921891   +   NumDealsPurchases ,
1921892   +   NumDistPurchases ,
1921893   +   NumStorePurchases ,
1921894   +   NumWebPurchases ,
1921895   +   NumWebVisitsMonth ,
1921896   +   RFMstat ,
1921897   +   RMntFrq ,
1921898   +   Recency ,
1921899   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1921900   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1921901   +
1921902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1921903   +END;
MPRINT(EM_DIAGRAM):   END;
1921904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921905   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1921906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1921907   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1921908   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1921909   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1921910   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1921911   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1921912   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1921913   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1921914   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1921915   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1921916   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1921917   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1921918   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1921919   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1921920   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1921921   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1921922   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1921923   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1921924   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1921925   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1921926   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1921927   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1921928   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1921929   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1921930   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1921931   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1921932   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1921933   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1921934   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1921935   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1921936   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1921937   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1921938   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1921939   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1921940   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1921941   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1921942   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1921943   +END;
MPRINT(EM_DIAGRAM):   END;
1921944   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1921945   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1921946   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1921947   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1921948   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1921949   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1921950   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1921951   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1921952   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1921953   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1921954   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1921955   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1921956   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1921957   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1921958   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1921959   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1921960   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1921961   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1921962   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1921963   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1921964   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1921965   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1921966   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1921967   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1921968   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1921969   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1921970   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1921971   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1921972   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1921973   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1921974   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1921975   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1921976   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1921977   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1921978   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1921979   +   ELSE S_NumCatalogPurchases
1921980   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1921981   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1921982   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1921983   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1921984   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1921985   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1921986   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1921987   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1921988   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1921989   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1921990   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1921991   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1921992   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1921993   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1921994   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1921995   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1921996   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1921997   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1921998   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1921999   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1922000   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1922001   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1922002   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1922003   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1922004   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1922005   +END;
MPRINT(EM_DIAGRAM):   END;
1922006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922007   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1922008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922010   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1922011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922013   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1922014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922015   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1922016   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1922017   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1922018   +        S_Income  +    -1.07615700855274 * S_Kidhome
1922019   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1922020   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1922021   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1922022   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1922023   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1922024   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1922025   +          +      0.3429043319369 * S_NumDealsPurchases
1922026   +          +     0.71313309767469 * S_NumDistPurchases
1922027   +          +     0.06017757740083 * S_NumStorePurchases
1922028   +          +    -0.19817724925068 * S_NumWebPurchases
1922029   +          +     1.34164122205952 * S_NumWebVisitsMonth
1922030   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1922031   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1922032   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1922033   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1922034   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1922035   +        S_Income  +     -0.0027232441092 * S_Kidhome
1922036   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1922037   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1922038   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1922039   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1922040   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1922041   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1922042   +          +      0.4576973746858 * S_NumDealsPurchases
1922043   +          +     0.15590877272659 * S_NumDistPurchases
1922044   +          +    -0.33414539713736 * S_NumStorePurchases
1922045   +          +    -0.39370244666257 * S_NumWebPurchases
1922046   +          +     0.52596714886704 * S_NumWebVisitsMonth
1922047   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1922048   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1922049   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1922050   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1922051   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1922052   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1922053   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1922054   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
1922055   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1922056   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1922057   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1922058   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1922059   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
1922060   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1922061   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1922062   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1922063   +          +      0.4663802937397 * Marital_StatusDivorced
1922064   +          +    -1.27401898796099 * Marital_StatusMarried
1922065   +          +      1.3125969368079 * Marital_StatusSingle
1922066   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1922067   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1922068   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1922069   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1922070   +          +     0.07419179522004 * Marital_StatusDivorced
1922071   +          +     0.00234615813337 * Marital_StatusMarried
1922072   +          +    -0.00725460458412 * Marital_StatusSingle
1922073   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1922074   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1922075   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1922076   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1922077   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1922078   +END;
MPRINT(EM_DIAGRAM):   END;
1922079   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1922080   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1922081   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1922082   +END;
MPRINT(EM_DIAGRAM):   END;
1922083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922084   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1922085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922086   +
1922087   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1922088   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1922089   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1922090   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1922091   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1922092   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922093   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1922094   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1922095   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1922096   +end;
MPRINT(EM_DIAGRAM):   end;
1922097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922098   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1922099   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1922100   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1922101   +   end;
MPRINT(EM_DIAGRAM):   end;
1922102   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1922103   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1922104   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1922105   +   end;
MPRINT(EM_DIAGRAM):   end;
1922106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922107   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1922108   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1922109   +   end;
MPRINT(EM_DIAGRAM):   end;
1922110   +end;
MPRINT(EM_DIAGRAM):   end;
1922111   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1922112   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1922113   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1922114   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1922115   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1922116   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1922117   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1922118   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1922119   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1922120   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1922121   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1922122   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1922123   +END;
MPRINT(EM_DIAGRAM):   END;
1922124   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1922125   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1922126   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1922127   +END;
MPRINT(EM_DIAGRAM):   END;
1922128   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1922129   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1922130   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1922131   +END;
MPRINT(EM_DIAGRAM):   END;
1922132   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1922133   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1922134   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1922135   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1922136   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1922137   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1922138   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1922139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922140   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1922141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922142   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1922143   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1922144   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1922145   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1922146   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1922147   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1922148   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1922149   +END;
MPRINT(EM_DIAGRAM):   END;
1922150   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1922151   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1922152   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1922153   +drop
1922154   +H11
1922155   +H12
1922156   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1922157   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1922158   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1922159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922160   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1922161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922162   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1922163   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1922164   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1922165   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1922166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922167   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1922168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922169   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1922170   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1922171   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1922172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922173   +* Ensmbl27: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 5 of 7;
1922174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922175   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922176   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1922177   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1922178   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1922179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922180   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1922181   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1922182   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1922183   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1922184   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1922185   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1922186   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1922187   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1922188   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1922189   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1922190   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1922191   +LENGTH _WARN_ $4
1922192   +      F_DepVar  $ 12
1922193   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1922194   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1922195   +
1922196   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1922197   +
1922198   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1922199   +
1922200   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1922201   +
1922202   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1922203   +
1922204   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1922205   +
1922206   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1922207   +
1922208   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1922209   +
1922210   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1922211   +
1922212   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1922213   +
1922214   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1922215   +
1922216   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1922217   +
1922218   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1922219   +
1922220   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1922221   +
1922222   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1922223   +
1922224   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1922225   +
1922226   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1922227   +
1922228   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1922229   +
1922230   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1922231   +
1922232   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1922233   +
1922234   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1922235   +
1922236   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1922237   +
1922238   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1922239   +
1922240   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1922241   +
1922242   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1922243   +
1922244   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1922245   +
1922246   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1922247   +
1922248   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1922249   +
1922250   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1922251   +
1922252   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1922253   +
1922254   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1922255   +
1922256   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1922257   +
1922258   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1922259   +
1922260   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1922261   +
1922262   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1922263   +
1922264   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1922265   +
1922266   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1922267   +
1922268   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1922269   +
1922270   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1922271   +
1922272   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1922273   +
1922274   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1922275   +
1922276   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1922277   +
1922278   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1922279   +
1922280   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1922281   +
1922282   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1922283   +
1922284   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1922285   +
1922286   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1922287   +
1922288   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1922289   +
1922290   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1922291   +
1922292   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1922293   +
1922294   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1922295   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1922296   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1922297   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1922298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922300   +end;
MPRINT(EM_DIAGRAM):   end;
1922301   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922302   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1922303   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1922304   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922305   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1922306   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1922307   +   end;
MPRINT(EM_DIAGRAM):   end;
1922308   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1922309   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1922310   +   end;
MPRINT(EM_DIAGRAM):   end;
1922311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922312   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1922313   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1922314   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922315   +   end;
MPRINT(EM_DIAGRAM):   end;
1922316   +end;
MPRINT(EM_DIAGRAM):   end;
1922317   +
1922318   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1922319   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1922320   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1922321   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1922322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922324   +end;
MPRINT(EM_DIAGRAM):   end;
1922325   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922326   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1922327   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1922328   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922329   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1922330   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1922331   +   end;
MPRINT(EM_DIAGRAM):   end;
1922332   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1922333   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1922334   +   end;
MPRINT(EM_DIAGRAM):   end;
1922335   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922336   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1922337   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1922338   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922339   +   end;
MPRINT(EM_DIAGRAM):   end;
1922340   +end;
MPRINT(EM_DIAGRAM):   end;
1922341   +
1922342   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1922343   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1922344   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1922345   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1922346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922348   +end;
MPRINT(EM_DIAGRAM):   end;
1922349   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922350   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1922351   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1922352   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922353   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1922354   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1922355   +   end;
MPRINT(EM_DIAGRAM):   end;
1922356   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1922357   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1922358   +   end;
MPRINT(EM_DIAGRAM):   end;
1922359   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922360   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1922361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1922362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922363   +   end;
MPRINT(EM_DIAGRAM):   end;
1922364   +end;
MPRINT(EM_DIAGRAM):   end;
1922365   +
1922366   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1922367   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1922368   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1922369   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1922370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922372   +end;
MPRINT(EM_DIAGRAM):   end;
1922373   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922374   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1922375   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1922376   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922377   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1922378   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1922379   +   end;
MPRINT(EM_DIAGRAM):   end;
1922380   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1922381   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1922382   +   end;
MPRINT(EM_DIAGRAM):   end;
1922383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922384   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1922385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1922386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922387   +   end;
MPRINT(EM_DIAGRAM):   end;
1922388   +end;
MPRINT(EM_DIAGRAM):   end;
1922389   +
1922390   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1922391   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1922392   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1922393   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1922394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922396   +end;
MPRINT(EM_DIAGRAM):   end;
1922397   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922398   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1922399   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1922400   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922401   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1922402   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1922403   +   end;
MPRINT(EM_DIAGRAM):   end;
1922404   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1922405   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1922406   +   end;
MPRINT(EM_DIAGRAM):   end;
1922407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922408   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1922409   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1922410   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922411   +   end;
MPRINT(EM_DIAGRAM):   end;
1922412   +end;
MPRINT(EM_DIAGRAM):   end;
1922413   +
1922414   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1922415   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1922416   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1922417   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1922418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922420   +end;
MPRINT(EM_DIAGRAM):   end;
1922421   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922422   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1922423   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1922424   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922425   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1922426   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1922427   +   end;
MPRINT(EM_DIAGRAM):   end;
1922428   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1922429   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1922430   +   end;
MPRINT(EM_DIAGRAM):   end;
1922431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922432   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1922433   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1922434   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922435   +   end;
MPRINT(EM_DIAGRAM):   end;
1922436   +end;
MPRINT(EM_DIAGRAM):   end;
1922437   +
1922438   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1922439   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1922440   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1922441   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1922442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922444   +end;
MPRINT(EM_DIAGRAM):   end;
1922445   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922446   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1922447   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1922448   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922449   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1922450   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1922451   +   end;
MPRINT(EM_DIAGRAM):   end;
1922452   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1922453   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1922454   +   end;
MPRINT(EM_DIAGRAM):   end;
1922455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922456   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1922457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1922458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922459   +   end;
MPRINT(EM_DIAGRAM):   end;
1922460   +end;
MPRINT(EM_DIAGRAM):   end;
1922461   +
1922462   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1922463   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1922464   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1922465   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1922466   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1922467   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1922468   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1922469   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1922470   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1922471   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1922472   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1922473   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1922474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922476   +end;
MPRINT(EM_DIAGRAM):   end;
1922477   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922478   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1922479   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1922480   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922481   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1922482   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1922483   +   end;
MPRINT(EM_DIAGRAM):   end;
1922484   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1922485   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1922486   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1922487   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1922488   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1922489   +   end;
MPRINT(EM_DIAGRAM):   end;
1922490   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1922491   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1922492   +   end;
MPRINT(EM_DIAGRAM):   end;
1922493   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1922494   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1922495   +   end;
MPRINT(EM_DIAGRAM):   end;
1922496   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1922497   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1922498   +   end;
MPRINT(EM_DIAGRAM):   end;
1922499   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922500   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1922501   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1922502   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1922503   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1922504   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1922505   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922506   +   end;
MPRINT(EM_DIAGRAM):   end;
1922507   +end;
MPRINT(EM_DIAGRAM):   end;
1922508   +
1922509   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1922510   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1922511   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1922512   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1922513   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1922514   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1922515   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1922516   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1922517   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1922518   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1922519   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1922520   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1922521   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1922522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922524   +end;
MPRINT(EM_DIAGRAM):   end;
1922525   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922526   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1922527   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1922528   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922529   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1922530   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1922531   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1922532   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1922533   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1922534   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1922535   +         end;
MPRINT(EM_DIAGRAM):   end;
1922536   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1922537   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1922538   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1922539   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1922540   +            end;
MPRINT(EM_DIAGRAM):   end;
1922541   +         end;
MPRINT(EM_DIAGRAM):   end;
1922542   +      end;
MPRINT(EM_DIAGRAM):   end;
1922543   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1922544   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1922545   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1922546   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1922547   +         end;
MPRINT(EM_DIAGRAM):   end;
1922548   +      end;
MPRINT(EM_DIAGRAM):   end;
1922549   +   end;
MPRINT(EM_DIAGRAM):   end;
1922550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922551   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1922552   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1922553   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1922554   +      end;
MPRINT(EM_DIAGRAM):   end;
1922555   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1922556   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1922557   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1922558   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1922559   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1922560   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1922561   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1922562   +         end;
MPRINT(EM_DIAGRAM):   end;
1922563   +      end;
MPRINT(EM_DIAGRAM):   end;
1922564   +   end;
MPRINT(EM_DIAGRAM):   end;
1922565   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1922566   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1922567   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1922568   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1922569   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1922570   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1922571   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922572   +   end;
MPRINT(EM_DIAGRAM):   end;
1922573   +end;
MPRINT(EM_DIAGRAM):   end;
1922574   +
1922575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922576   +*** Checking missing input Interval
1922577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1922578   +
1922579   +IF NMISS(
1922580   +   AcceptedCmpTotal ,
1922581   +   Age ,
1922582   +   Frq ,
1922583   +   Income ,
1922584   +   Kidhome ,
1922585   +   Mnt ,
1922586   +   MntFishProducts ,
1922587   +   MntFruits ,
1922588   +   MntGoldProds ,
1922589   +   MntMeatProducts ,
1922590   +   MntSweetProducts ,
1922591   +   MntWines ,
1922592   +   MonthsAsCustomer ,
1922593   +   NumCatalogPurchases ,
1922594   +   NumDealsPurchases ,
1922595   +   NumDistPurchases ,
1922596   +   NumStorePurchases ,
1922597   +   NumWebPurchases ,
1922598   +   NumWebVisitsMonth ,
1922599   +   RFMstat ,
1922600   +   RMntFrq ,
1922601   +   Recency ,
1922602   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1922603   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1922604   +
1922605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922606   +END;
MPRINT(EM_DIAGRAM):   END;
1922607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922608   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1922609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922610   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1922611   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1922612   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1922613   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1922614   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1922615   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1922616   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1922617   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1922618   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1922619   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1922620   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1922621   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1922622   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1922623   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1922624   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1922625   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1922626   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1922627   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1922628   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1922629   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1922630   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1922631   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1922632   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1922633   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1922634   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1922635   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1922636   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1922637   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1922638   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1922639   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1922640   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1922641   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1922642   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1922643   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1922644   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1922645   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1922646   +END;
MPRINT(EM_DIAGRAM):   END;
1922647   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1922648   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1922649   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1922650   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1922651   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1922652   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1922653   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1922654   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1922655   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1922656   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1922657   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1922658   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1922659   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1922660   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1922661   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1922662   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1922663   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1922664   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1922665   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1922666   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1922667   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1922668   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1922669   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1922670   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1922671   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1922672   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1922673   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1922674   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1922675   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1922676   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1922677   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1922678   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1922679   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1922680   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1922681   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1922682   +   ELSE S_NumCatalogPurchases
1922683   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1922684   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1922685   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1922686   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1922687   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1922688   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1922689   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1922690   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1922691   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1922692   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1922693   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1922694   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1922695   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1922696   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1922697   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1922698   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1922699   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1922700   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1922701   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1922702   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1922703   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1922704   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1922705   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1922706   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1922707   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1922708   +END;
MPRINT(EM_DIAGRAM):   END;
1922709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922710   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1922711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922713   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1922714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922716   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1922717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922718   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1922719   +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
1922720   +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
1922721   +        S_Income  +    -0.27053363011695 * S_Kidhome
1922722   +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
1922723   +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
1922724   +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
1922725   +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
1922726   +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
1922727   +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
1922728   +          +    -1.35624485206227 * S_NumDealsPurchases
1922729   +          +    -0.54646115734684 * S_NumDistPurchases
1922730   +          +     1.29794225108321 * S_NumStorePurchases
1922731   +          +      1.8453064081809 * S_NumWebPurchases
1922732   +          +    -0.92747144824026 * S_NumWebVisitsMonth
1922733   +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
1922734   +        S_RMntFrq  +     0.73207333681971 * S_Recency
1922735   +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome +
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 *
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts +
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 *
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 *
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 *
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 *
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq +
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
1922736   +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
1922737   +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
1922738   +        S_Income  +    -0.79821220724157 * S_Kidhome
1922739   +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
1922740   +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
1922741   +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
1922742   +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
1922743   +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
1922744   +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
1922745   +          +     0.72513216556859 * S_NumDealsPurchases
1922746   +          +    -0.15566774650584 * S_NumDistPurchases
1922747   +          +     -0.8847675798982 * S_NumStorePurchases
1922748   +          +    -0.79405200318252 * S_NumWebPurchases
1922749   +          +     1.74003779802254 * S_NumWebVisitsMonth
1922750   +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
1922751   +        S_RMntFrq  +    -1.54235932941708 * S_Recency
1922752   +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome +
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 *
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts +
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 *
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 *
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 *
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 *
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq +
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
1922753   +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
1922754   +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
1922755   +        S_Income  +    -0.58596240450544 * S_Kidhome
1922756   +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
1922757   +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
1922758   +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
1922759   +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
1922760   +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
1922761   +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
1922762   +          +     0.17466385502192 * S_NumDealsPurchases
1922763   +          +    -0.06219545947203 * S_NumDistPurchases
1922764   +          +     0.16637546838853 * S_NumStorePurchases
1922765   +          +    -0.06908729397635 * S_NumWebPurchases
1922766   +          +     1.44269772444244 * S_NumWebVisitsMonth
1922767   +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
1922768   +        S_RMntFrq  +    -1.38739950871333 * S_Recency
1922769   +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age +
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome +
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 *
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts +
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 *
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 *
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 *
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 *
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq +
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
1922770   +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
1922771   +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
1922772   +        S_Income  +    -0.42454238091412 * S_Kidhome
1922773   +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
1922774   +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
1922775   +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
1922776   +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
1922777   +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
1922778   +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
1922779   +          +     0.77329078721398 * S_NumDealsPurchases
1922780   +          +     0.31693324305765 * S_NumDistPurchases
1922781   +          +    -1.08524196373091 * S_NumStorePurchases
1922782   +          +    -0.96945384922979 * S_NumWebPurchases
1922783   +          +     1.24659288571587 * S_NumWebVisitsMonth
1922784   +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
1922785   +        S_RMntFrq  +    -2.48250049927721 * S_Recency
1922786   +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age +
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome +
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 *
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts +
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 *
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 *
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 *
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 *
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq +
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
1922787   +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
1922788   +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
1922789   +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
1922790   +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
1922791   +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 *
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 +
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 *
HigherEducationBinary0 ;
1922792   +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
1922793   +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
1922794   +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
1922795   +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
1922796   +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 *
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 +
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 *
HigherEducationBinary0 ;
1922797   +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
1922798   +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
1922799   +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
1922800   +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
1922801   +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 *
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 +
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 *
HigherEducationBinary0 ;
1922802   +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
1922803   +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
1922804   +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
1922805   +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
1922806   +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 *
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 +
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 *
HigherEducationBinary0 ;
1922807   +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
1922808   +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
1922809   +        EducationGraduation  +    -0.11075159631637 * EducationMaster
1922810   +          +     0.36788499721115 * Marital_StatusDivorced
1922811   +          +    -0.16988636986433 * Marital_StatusMarried
1922812   +          +    -0.24560973256761 * Marital_StatusSingle
1922813   +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 *
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried +
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
1922814   +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
1922815   +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
1922816   +        EducationGraduation  +    -0.56430222714946 * EducationMaster
1922817   +          +     0.24497797058028 * Marital_StatusDivorced
1922818   +          +    -1.44410245434424 * Marital_StatusMarried
1922819   +          +     1.47441310087392 * Marital_StatusSingle
1922820   +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 *
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried +
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
1922821   +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
1922822   +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
1922823   +        EducationGraduation  +     0.04653963359475 * EducationMaster
1922824   +          +     0.15823225296452 * Marital_StatusDivorced
1922825   +          +    -0.39129434667884 * Marital_StatusMarried
1922826   +          +     0.84414069966504 * Marital_StatusSingle
1922827   +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 *
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried +
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
1922828   +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
1922829   +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
1922830   +        EducationGraduation  +     0.40030852414737 * EducationMaster
1922831   +          +     1.22039169814542 * Marital_StatusDivorced
1922832   +          +     0.91592976063128 * Marital_StatusMarried
1922833   +          +    -1.51267332883308 * Marital_StatusSingle
1922834   +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 *
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried +
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
1922835   +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
1922836   +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
1922837   +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
1922838   +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
1922839   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1922840   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1922841   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1922842   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1922843   +END;
MPRINT(EM_DIAGRAM):   END;
1922844   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1922845   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1922846   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1922847   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1922848   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1922849   +END;
MPRINT(EM_DIAGRAM):   END;
1922850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922851   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1922852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922853   +
1922854   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1922855   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1922856   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1922857   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1922858   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1922859   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922860   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1922861   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1922862   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1922863   +end;
MPRINT(EM_DIAGRAM):   end;
1922864   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922865   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1922866   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1922867   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1922868   +   end;
MPRINT(EM_DIAGRAM):   end;
1922869   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1922870   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1922871   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1922872   +   end;
MPRINT(EM_DIAGRAM):   end;
1922873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922874   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1922875   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1922876   +   end;
MPRINT(EM_DIAGRAM):   end;
1922877   +end;
MPRINT(EM_DIAGRAM):   end;
1922878   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1922879   +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
1922880   +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 +
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
1922881   +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
1922882   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1922883   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1922884   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1922885   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1922886   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1922887   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1922888   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1922889   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1922890   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1922891   +END;
MPRINT(EM_DIAGRAM):   END;
1922892   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1922893   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1922894   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1922895   +END;
MPRINT(EM_DIAGRAM):   END;
1922896   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1922897   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1922898   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1922899   +END;
MPRINT(EM_DIAGRAM):   END;
1922900   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1922901   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1922902   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1922903   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1922904   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1922905   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1922906   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1922907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922908   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1922909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1922910   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1922911   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1922912   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1922913   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1922914   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1922915   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1922916   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1922917   +END;
MPRINT(EM_DIAGRAM):   END;
1922918   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1922919   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1922920   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1922921   +drop
1922922   +H11
1922923   +H12
1922924   +H13
1922925   +H14
1922926   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1922927   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1922928   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1922929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922930   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1922931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922932   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1922933   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1922934   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1922935   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1922936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922937   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1922938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922939   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1922940   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1922941   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1922942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922943   +* Ensmbl27: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 6 of 7;
1922944   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922945   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922946   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1922947   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1922948   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1922949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1922950   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1922951   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1922952   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1922953   +
1922954   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1922955   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1922956   +
1922957   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1922958   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1922959   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1922960   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1922961   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1922962   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1922963   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1922964   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1922965   +
1922966   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1922967   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1922968   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1922969   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1922970   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1922971   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1922972   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1922973   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1922974   +end;
MPRINT(EM_DIAGRAM):   end;
1922975   +else do;
MPRINT(EM_DIAGRAM):   else do;
1922976   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1922977   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1922978   +   end;
MPRINT(EM_DIAGRAM):   end;
1922979   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1922980   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1922981   +   end;
MPRINT(EM_DIAGRAM):   end;
1922982   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1922983   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1922984   +   end;
MPRINT(EM_DIAGRAM):   end;
1922985   +end;
MPRINT(EM_DIAGRAM):   end;
1922986   +
1922987   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1922988   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1922989   +
1922990   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1922991   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1922992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1922994   +end;
MPRINT(EM_DIAGRAM):   end;
1922995   +
1922996   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1922997   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1922998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1922999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923000   +end;
MPRINT(EM_DIAGRAM):   end;
1923001   +
1923002   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1923003   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1923004   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923005   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923006   +end;
MPRINT(EM_DIAGRAM):   end;
1923007   +
1923008   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1923009   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1923010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923012   +end;
MPRINT(EM_DIAGRAM):   end;
1923013   +
1923014   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1923015   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1923016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923018   +end;
MPRINT(EM_DIAGRAM):   end;
1923019   +
1923020   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1923021   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1923022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923024   +end;
MPRINT(EM_DIAGRAM):   end;
1923025   +
1923026   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1923027   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1923028   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923029   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923030   +end;
MPRINT(EM_DIAGRAM):   end;
1923031   +
1923032   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1923033   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1923034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923036   +end;
MPRINT(EM_DIAGRAM):   end;
1923037   +
1923038   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1923039   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1923040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923042   +end;
MPRINT(EM_DIAGRAM):   end;
1923043   +
1923044   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1923045   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1923046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923048   +end;
MPRINT(EM_DIAGRAM):   end;
1923049   +
1923050   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1923051   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1923052   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923053   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923054   +end;
MPRINT(EM_DIAGRAM):   end;
1923055   +
1923056   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1923057   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1923058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923060   +end;
MPRINT(EM_DIAGRAM):   end;
1923061   +
1923062   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1923063   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1923064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923066   +end;
MPRINT(EM_DIAGRAM):   end;
1923067   +
1923068   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1923069   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1923070   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1923071   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1923072   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1923073   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1923074   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1923075   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1923076   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1923077   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1923078   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1923079   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1923080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923082   +end;
MPRINT(EM_DIAGRAM):   end;
1923083   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923084   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1923085   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1923086   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1923087   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1923088   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1923089   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1923090   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1923091   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1923092   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1923093   +         end;
MPRINT(EM_DIAGRAM):   end;
1923094   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1923095   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1923096   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1923097   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1923098   +            end;
MPRINT(EM_DIAGRAM):   end;
1923099   +         end;
MPRINT(EM_DIAGRAM):   end;
1923100   +      end;
MPRINT(EM_DIAGRAM):   end;
1923101   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1923102   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1923103   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1923104   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1923105   +         end;
MPRINT(EM_DIAGRAM):   end;
1923106   +      end;
MPRINT(EM_DIAGRAM):   end;
1923107   +   end;
MPRINT(EM_DIAGRAM):   end;
1923108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1923109   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1923110   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1923111   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1923112   +      end;
MPRINT(EM_DIAGRAM):   end;
1923113   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1923114   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1923115   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1923116   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1923117   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1923118   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1923119   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1923120   +         end;
MPRINT(EM_DIAGRAM):   end;
1923121   +      end;
MPRINT(EM_DIAGRAM):   end;
1923122   +   end;
MPRINT(EM_DIAGRAM):   end;
1923123   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1923124   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1923125   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1923126   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1923127   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1923128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1923129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923130   +   end;
MPRINT(EM_DIAGRAM):   end;
1923131   +end;
MPRINT(EM_DIAGRAM):   end;
1923132   +
1923133   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1923134   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1923135   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1923136   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1923137   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1923138   +end;
MPRINT(EM_DIAGRAM):   end;
1923139   +
1923140   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1923141   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1923142   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1923143   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1923144   +
1923145   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1923146   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1923147   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1923148   +
1923149   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1923150   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1923151   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1923152   +
1923153   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1923154   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1923155   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1923156   +
1923157   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1923158   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1923159   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1923160   +
1923161   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1923162   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1923163   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1923164   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1923165   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1923166   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1923167   +
1923168   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1923169   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1923170   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1923171   +
1923172   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1923173   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1923174   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1923175   +
1923176   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1923177   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1923178   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1923179   +
1923180   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1923181   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1923182   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1923183   +
1923184   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1923185   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1923186   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1923187   +
1923188   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1923189   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1923190   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1923191   +
1923192   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1923193   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1923194   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1923195   +
1923196   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1923197   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1923198   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1923199   +
1923200   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1923201   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1923202   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1923203   +
1923204   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1923205   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1923206   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1923207   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1923208   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1923209   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1923210   +end;
MPRINT(EM_DIAGRAM):   end;
1923211   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1923212   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1923213   +
1923214   +REGDR1:
1923215   +
1923216   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1923217   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1923218   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1923219   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1923220   +end;
MPRINT(EM_DIAGRAM):   end;
1923221   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923222   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1923223   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1923224   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1923225   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1923226   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1923227   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1923228   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1923229   +   end;
MPRINT(EM_DIAGRAM):   end;
1923230   +end;
MPRINT(EM_DIAGRAM):   end;
1923231   +
1923232   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1923233   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1923234   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1923235   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1923236   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1923237   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1923238   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1923239   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1923240   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1923241   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1923242   +end;
MPRINT(EM_DIAGRAM):   end;
1923243   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1923244   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1923245   +
1923246   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1923247   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1923248   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1923249   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1923250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923251   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1923252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923253   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1923254   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1923255   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1923256   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1923257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923258   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1923259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923260   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1923261   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1923262   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1923263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923264   +* Ensmbl27: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 7 of 7;
1923265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923267   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1923268   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1923269   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1923270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923271   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1923272   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1923273   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1923274   +
1923275   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1923276   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1923277   +
1923278   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1923279   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1923280   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1923281   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1923282   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1923283   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1923284   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1923285   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1923286   +
1923287   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1923288   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1923289   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1923290   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1923291   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1923292   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1923293   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1923294   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1923295   +end;
MPRINT(EM_DIAGRAM):   end;
1923296   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923297   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1923298   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1923299   +   end;
MPRINT(EM_DIAGRAM):   end;
1923300   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1923301   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1923302   +   end;
MPRINT(EM_DIAGRAM):   end;
1923303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1923304   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1923305   +   end;
MPRINT(EM_DIAGRAM):   end;
1923306   +end;
MPRINT(EM_DIAGRAM):   end;
1923307   +
1923308   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1923309   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1923310   +
1923311   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1923312   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1923313   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923315   +end;
MPRINT(EM_DIAGRAM):   end;
1923316   +
1923317   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1923318   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1923319   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923320   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923321   +end;
MPRINT(EM_DIAGRAM):   end;
1923322   +
1923323   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1923324   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1923325   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923326   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923327   +end;
MPRINT(EM_DIAGRAM):   end;
1923328   +
1923329   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1923330   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1923331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923333   +end;
MPRINT(EM_DIAGRAM):   end;
1923334   +
1923335   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1923336   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1923337   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923338   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923339   +end;
MPRINT(EM_DIAGRAM):   end;
1923340   +
1923341   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1923342   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1923343   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923344   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923345   +end;
MPRINT(EM_DIAGRAM):   end;
1923346   +
1923347   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1923348   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1923349   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923350   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923351   +end;
MPRINT(EM_DIAGRAM):   end;
1923352   +
1923353   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1923354   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1923355   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923357   +end;
MPRINT(EM_DIAGRAM):   end;
1923358   +
1923359   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1923360   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1923361   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923363   +end;
MPRINT(EM_DIAGRAM):   end;
1923364   +
1923365   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1923366   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1923367   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923368   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923369   +end;
MPRINT(EM_DIAGRAM):   end;
1923370   +
1923371   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1923372   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1923373   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923374   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923375   +end;
MPRINT(EM_DIAGRAM):   end;
1923376   +
1923377   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1923378   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1923379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923381   +end;
MPRINT(EM_DIAGRAM):   end;
1923382   +
1923383   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1923384   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1923385   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1923386   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1923387   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1923388   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1923389   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1923390   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1923391   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1923392   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1923393   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1923394   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1923395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923397   +end;
MPRINT(EM_DIAGRAM):   end;
1923398   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923399   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1923400   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1923401   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1923402   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1923403   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1923404   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1923405   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1923406   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1923407   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1923408   +         end;
MPRINT(EM_DIAGRAM):   end;
1923409   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1923410   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1923411   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1923412   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1923413   +            end;
MPRINT(EM_DIAGRAM):   end;
1923414   +         end;
MPRINT(EM_DIAGRAM):   end;
1923415   +      end;
MPRINT(EM_DIAGRAM):   end;
1923416   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1923417   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1923418   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1923419   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1923420   +         end;
MPRINT(EM_DIAGRAM):   end;
1923421   +      end;
MPRINT(EM_DIAGRAM):   end;
1923422   +   end;
MPRINT(EM_DIAGRAM):   end;
1923423   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1923424   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1923425   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1923426   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1923427   +      end;
MPRINT(EM_DIAGRAM):   end;
1923428   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1923429   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1923430   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1923431   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1923432   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1923433   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1923434   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1923435   +         end;
MPRINT(EM_DIAGRAM):   end;
1923436   +      end;
MPRINT(EM_DIAGRAM):   end;
1923437   +   end;
MPRINT(EM_DIAGRAM):   end;
1923438   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1923439   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1923440   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1923441   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1923442   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1923443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1923444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923445   +   end;
MPRINT(EM_DIAGRAM):   end;
1923446   +end;
MPRINT(EM_DIAGRAM):   end;
1923447   +
1923448   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1923449   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1923450   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1923451   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1923452   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1923453   +end;
MPRINT(EM_DIAGRAM):   end;
1923454   +
1923455   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1923456   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1923457   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1923458   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1923459   +
1923460   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1923461   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1923462   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1923463   +
1923464   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1923465   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1923466   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1923467   +
1923468   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1923469   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1923470   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1923471   +
1923472   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1923473   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1923474   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1923475   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1923476   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1923477   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1923478   +
1923479   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1923480   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1923481   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1923482   +
1923483   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1923484   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1923485   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1923486   +
1923487   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1923488   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1923489   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1923490   +
1923491   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1923492   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1923493   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1923494   +
1923495   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1923496   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1923497   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1923498   +
1923499   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1923500   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1923501   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1923502   +
1923503   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1923504   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1923505   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1923506   +
1923507   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1923508   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1923509   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1923510   +
1923511   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1923512   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1923513   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1923514   +
1923515   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1923516   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1923517   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1923518   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1923519   +
1923520   +REG5DR1:
1923521   +
1923522   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1923523   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1923524   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1923525   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1923526   +end;
MPRINT(EM_DIAGRAM):   end;
1923527   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923528   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1923529   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1923530   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1923531   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1923532   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1923533   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1923534   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1923535   +   end;
MPRINT(EM_DIAGRAM):   end;
1923536   +end;
MPRINT(EM_DIAGRAM):   end;
1923537   +
1923538   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1923539   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1923540   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1923541   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1923542   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1923543   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1923544   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1923545   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1923546   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1923547   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1923548   +end;
MPRINT(EM_DIAGRAM):   end;
1923549   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1923550   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1923551   +
1923552   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1923553   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1923554   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1923555   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1923556   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923557   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1923558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923559   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1923560   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1923561   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1923562   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1923563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923564   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1923565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923566   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1923567   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1923568   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1923569   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923570   +* Ensmbl27: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Maximum Posteriors of 7 models;
1923571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923572   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1923573   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1923574   +P_DepVar1 = max(
1923575   +Neural10_P_DepVar1 ,
1923576   +Neural9_P_DepVar1 ,
1923577   +Neural3_P_DepVar1 ,
1923578   +Neural2_P_DepVar1 ,
1923579   +Neural4_P_DepVar1 ,
1923580   +Reg_P_DepVar1 ,
1923581   +Reg5_P_DepVar1
1923582   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural10_P_DepVar1 , Neural9_P_DepVar1 ,
Neural3_P_DepVar1 , Neural2_P_DepVar1 , Neural4_P_DepVar1 , Reg_P_DepVar1 , Reg5_P_DepVar1 );
1923583   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1923584   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1923585   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1923586   +end;
MPRINT(EM_DIAGRAM):   end;
1923587   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1923588   +P_DepVar0 = max(
1923589   +Neural10_P_DepVar0 ,
1923590   +Neural9_P_DepVar0 ,
1923591   +Neural3_P_DepVar0 ,
1923592   +Neural2_P_DepVar0 ,
1923593   +Neural4_P_DepVar0 ,
1923594   +Reg_P_DepVar0 ,
1923595   +Reg5_P_DepVar0
1923596   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural10_P_DepVar0 , Neural9_P_DepVar0 ,
Neural3_P_DepVar0 , Neural2_P_DepVar0 , Neural4_P_DepVar0 , Reg_P_DepVar0 , Reg5_P_DepVar0 );
1923597   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1923598   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1923599   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1923600   +end;
MPRINT(EM_DIAGRAM):   end;
1923601   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1923602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923603   +* Ensmbl27: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Classification Vars;
1923604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923605   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1923606   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1923607   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1923608   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1923609   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1923610   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1923611   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1923612   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1923613   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1923614   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1923615   +end;
MPRINT(EM_DIAGRAM):   end;
1923616   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1923617   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1923618   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1923619   +end;
MPRINT(EM_DIAGRAM):   end;
1923620   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1923621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923622   +* Ensmbl27: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Producing Unformatted variable;
1923623   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923624   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1923625   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1923626   +else
1923627   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1923628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923629   +* Ensmbl27: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing _WARN_ Variable;
1923630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923631   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1923632   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1923633   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1923634   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1923634  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1923635   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1923635  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1923636   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1923636  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1923637   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1923637  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1923638   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1923639   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1923640   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1923641   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1923642   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1923643   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1923644   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1923645   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1923646   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1923647   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1923648   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1923649   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1923650   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1923651   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1923652   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1923653   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1923654   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1923655   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1923656   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1923657   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1923658   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1923659   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1923660   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1923661   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1923662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923663   +* Ensmbl27: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Residual Vars;
1923664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1923665   +if
1923666   +F_DepVar NE '1'
1923667   +AND F_DepVar NE '0'
1923668   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1923669   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1923670   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1923671   +end;
MPRINT(EM_DIAGRAM):   end;
1923672   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923673   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1923674   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1923675   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1923676   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1923677   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1923678   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1923679   +END;
MPRINT(EM_DIAGRAM):   END;
1923680   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1923681    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL27_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1923682    quit;
1923683    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl27_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl27_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl27_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1923743    filename _pref
1923743  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
1923744    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1923745    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
1923746   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1923747   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1923748   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1923749   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1923750   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1923751   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1923752   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1923753   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1923754   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1923755   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1923756   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1923757   +LENGTH _WARN_ $4
1923758   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1923759   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1923760   +
1923761   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1923762   +
1923763   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1923764   +
1923765   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1923766   +
1923767   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1923768   +
1923769   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1923770   +
1923771   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1923772   +
1923773   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1923774   +
1923775   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1923776   +
1923777   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1923778   +
1923779   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1923780   +
1923781   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1923782   +
1923783   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1923784   +
1923785   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1923786   +
1923787   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1923788   +
1923789   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1923790   +
1923791   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1923792   +
1923793   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1923794   +
1923795   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1923796   +
1923797   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1923798   +
1923799   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1923800   +
1923801   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1923802   +
1923803   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1923804   +
1923805   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1923806   +
1923807   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1923808   +
1923809   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1923810   +
1923811   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1923812   +
1923813   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1923814   +
1923815   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1923816   +
1923817   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1923818   +
1923819   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1923820   +
1923821   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1923822   +
1923823   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1923824   +
1923825   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1923826   +
1923827   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1923828   +
1923829   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1923830   +
1923831   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1923832   +
1923833   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1923834   +
1923835   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1923836   +
1923837   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1923838   +
1923839   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1923840   +
1923841   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1923842   +
1923843   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1923844   +
1923845   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1923846   +
1923847   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1923848   +
1923849   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1923850   +
1923851   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1923852   +
1923853   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1923854   +
1923855   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1923856   +
1923857   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1923858   +
1923859   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1923860   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1923861   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1923862   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1923863   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923865   +end;
MPRINT(EM_DIAGRAM):   end;
1923866   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923867   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1923868   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1923869   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1923870   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1923871   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1923872   +   end;
MPRINT(EM_DIAGRAM):   end;
1923873   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1923874   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1923875   +   end;
MPRINT(EM_DIAGRAM):   end;
1923876   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1923877   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1923878   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1923879   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923880   +   end;
MPRINT(EM_DIAGRAM):   end;
1923881   +end;
MPRINT(EM_DIAGRAM):   end;
1923882   +
1923883   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1923884   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1923885   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1923886   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1923887   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923888   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923889   +end;
MPRINT(EM_DIAGRAM):   end;
1923890   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923891   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1923892   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1923893   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1923894   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1923895   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1923896   +   end;
MPRINT(EM_DIAGRAM):   end;
1923897   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1923898   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1923899   +   end;
MPRINT(EM_DIAGRAM):   end;
1923900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1923901   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1923902   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1923903   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923904   +   end;
MPRINT(EM_DIAGRAM):   end;
1923905   +end;
MPRINT(EM_DIAGRAM):   end;
1923906   +
1923907   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1923908   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1923909   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1923910   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1923911   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923912   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923913   +end;
MPRINT(EM_DIAGRAM):   end;
1923914   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923915   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1923916   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1923917   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1923918   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1923919   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1923920   +   end;
MPRINT(EM_DIAGRAM):   end;
1923921   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1923922   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1923923   +   end;
MPRINT(EM_DIAGRAM):   end;
1923924   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1923925   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1923926   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1923927   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923928   +   end;
MPRINT(EM_DIAGRAM):   end;
1923929   +end;
MPRINT(EM_DIAGRAM):   end;
1923930   +
1923931   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1923932   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1923933   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1923934   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1923935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923937   +end;
MPRINT(EM_DIAGRAM):   end;
1923938   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923939   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1923940   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1923941   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1923942   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1923943   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1923944   +   end;
MPRINT(EM_DIAGRAM):   end;
1923945   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1923946   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1923947   +   end;
MPRINT(EM_DIAGRAM):   end;
1923948   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1923949   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1923950   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1923951   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923952   +   end;
MPRINT(EM_DIAGRAM):   end;
1923953   +end;
MPRINT(EM_DIAGRAM):   end;
1923954   +
1923955   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1923956   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1923957   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1923958   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1923959   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923960   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923961   +end;
MPRINT(EM_DIAGRAM):   end;
1923962   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923963   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1923964   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1923965   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1923966   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1923967   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1923968   +   end;
MPRINT(EM_DIAGRAM):   end;
1923969   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1923970   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1923971   +   end;
MPRINT(EM_DIAGRAM):   end;
1923972   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1923973   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1923974   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1923975   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923976   +   end;
MPRINT(EM_DIAGRAM):   end;
1923977   +end;
MPRINT(EM_DIAGRAM):   end;
1923978   +
1923979   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1923980   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1923981   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1923982   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1923983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1923984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1923985   +end;
MPRINT(EM_DIAGRAM):   end;
1923986   +else do;
MPRINT(EM_DIAGRAM):   else do;
1923987   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1923988   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1923989   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1923990   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1923991   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1923992   +   end;
MPRINT(EM_DIAGRAM):   end;
1923993   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1923994   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1923995   +   end;
MPRINT(EM_DIAGRAM):   end;
1923996   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1923997   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1923998   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1923999   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1924000   +   end;
MPRINT(EM_DIAGRAM):   end;
1924001   +end;
MPRINT(EM_DIAGRAM):   end;
1924002   +
1924003   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1924004   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1924005   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1924006   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1924007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1924008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1924009   +end;
MPRINT(EM_DIAGRAM):   end;
1924010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1924011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1924012   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1924013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1924014   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1924015   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1924016   +   end;
MPRINT(EM_DIAGRAM):   end;
1924017   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1924018   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1924019   +   end;
MPRINT(EM_DIAGRAM):   end;
1924020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1924021   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1924022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1924023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1924024   +   end;
MPRINT(EM_DIAGRAM):   end;
1924025   +end;
MPRINT(EM_DIAGRAM):   end;
1924026   +
1924027   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1924028   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1924029   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1924030   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1924031   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1924032   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1924033   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1924034   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1924035   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1924036   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1924037   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1924038   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1924039   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1924040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1924041   +end;
MPRINT(EM_DIAGRAM):   end;
1924042   +else do;
MPRINT(EM_DIAGRAM):   else do;
1924043   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1924044   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1924045   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1924046   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1924047   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1924048   +   end;
MPRINT(EM_DIAGRAM):   end;
1924049   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1924050   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1924051   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1924052   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1924053   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1924054   +   end;
MPRINT(EM_DIAGRAM):   end;
1924055   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1924056   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1924057   +   end;
MPRINT(EM_DIAGRAM):   end;
1924058   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1924059   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1924060   +   end;
MPRINT(EM_DIAGRAM):   end;
1924061   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1924062   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1924063   +   end;
MPRINT(EM_DIAGRAM):   end;
1924064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1924065   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1924066   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1924067   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1924068   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1924069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1924070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1924071   +   end;
MPRINT(EM_DIAGRAM):   end;
1924072   +end;
MPRINT(EM_DIAGRAM):   end;
1924073   +
1924074   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1924075   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1924076   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1924077   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1924078   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1924079   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1924080   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1924081   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1924082   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1924083   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1924084   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1924085   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1924086   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1924087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1924088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1924089   +end;
MPRINT(EM_DIAGRAM):   end;
1924090   +else do;
MPRINT(EM_DIAGRAM):   else do;
1924091   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1924092   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1924093   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1924094   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1924095   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1924096   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1924097   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1924098   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1924099   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1924100   +         end;
MPRINT(EM_DIAGRAM):   end;
1924101   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1924102   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1924103   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1924104   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1924105   +            end;
MPRINT(EM_DIAGRAM):   end;
1924106   +         end;
MPRINT(EM_DIAGRAM):   end;
1924107   +      end;
MPRINT(EM_DIAGRAM):   end;
1924108   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1924109   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1924110   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1924111   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1924112   +         end;
MPRINT(EM_DIAGRAM):   end;
1924113   +      end;
MPRINT(EM_DIAGRAM):   end;
1924114   +   end;
MPRINT(EM_DIAGRAM):   end;
1924115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1924116   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1924117   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1924118   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1924119   +      end;
MPRINT(EM_DIAGRAM):   end;
1924120   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1924121   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1924122   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1924123   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1924124   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1924125   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1924126   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1924127   +         end;
MPRINT(EM_DIAGRAM):   end;
1924128   +      end;
MPRINT(EM_DIAGRAM):   end;
1924129   +   end;
MPRINT(EM_DIAGRAM):   end;
1924130   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1924131   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1924132   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1924133   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1924134   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1924135   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1924136   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1924137   +   end;
MPRINT(EM_DIAGRAM):   end;
1924138   +end;
MPRINT(EM_DIAGRAM):   end;
1924139   +
1924140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924141   +*** Checking missing input Interval
1924142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1924143   +
1924144   +IF NMISS(
1924145   +   AcceptedCmpTotal ,
1924146   +   Age ,
1924147   +   Frq ,
1924148   +   Income ,
1924149   +   Kidhome ,
1924150   +   Mnt ,
1924151   +   MntFishProducts ,
1924152   +   MntFruits ,
1924153   +   MntGoldProds ,
1924154   +   MntMeatProducts ,
1924155   +   MntSweetProducts ,
1924156   +   MntWines ,
1924157   +   MonthsAsCustomer ,
1924158   +   NumCatalogPurchases ,
1924159   +   NumDealsPurchases ,
1924160   +   NumDistPurchases ,
1924161   +   NumStorePurchases ,
1924162   +   NumWebPurchases ,
1924163   +   NumWebVisitsMonth ,
1924164   +   RFMstat ,
1924165   +   RMntFrq ,
1924166   +   Recency ,
1924167   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1924168   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1924169   +
1924170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1924171   +END;
MPRINT(EM_DIAGRAM):   END;
1924172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924173   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1924174   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924175   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1924176   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1924177   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1924178   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1924179   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1924180   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1924181   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1924182   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1924183   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1924184   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1924185   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1924186   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1924187   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1924188   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1924189   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1924190   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1924191   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1924192   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1924193   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1924194   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1924195   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1924196   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1924197   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1924198   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1924199   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1924200   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1924201   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1924202   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1924203   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1924204   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1924205   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1924206   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1924207   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1924208   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1924209   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1924210   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1924211   +END;
MPRINT(EM_DIAGRAM):   END;
1924212   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1924213   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1924214   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1924215   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1924216   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1924217   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1924218   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1924219   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1924220   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1924221   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1924222   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1924223   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1924224   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1924225   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1924226   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1924227   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1924228   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1924229   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1924230   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1924231   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1924232   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1924233   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1924234   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1924235   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1924236   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1924237   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1924238   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1924239   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1924240   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1924241   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1924242   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1924243   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1924244   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1924245   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1924246   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1924247   +   ELSE S_NumCatalogPurchases
1924248   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1924249   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1924250   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1924251   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1924252   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1924253   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1924254   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1924255   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1924256   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1924257   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1924258   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1924259   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1924260   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1924261   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1924262   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1924263   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1924264   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1924265   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1924266   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1924267   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1924268   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1924269   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1924270   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1924271   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1924272   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1924273   +END;
MPRINT(EM_DIAGRAM):   END;
1924274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924275   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1924276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924278   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1924279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924281   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1924282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924283   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1924284   +   H11  =    -0.52904974622826 * S_AcceptedCmpTotal  +    -0.20085204286633 *
1924285   +        S_Age  +     0.27263192457895 * S_Frq  +    -0.13124051139098 *
1924286   +        S_Income  +    -0.43070069114587 * S_Kidhome
1924287   +          +     0.04042751562548 * S_Mnt  +     0.38295925040888 *
1924288   +        S_MntFishProducts  +    -0.04727298094677 * S_MntFruits
1924289   +          +     -0.2266349260857 * S_MntGoldProds  +    -1.08008074034622 *
1924290   +        S_MntMeatProducts  +     0.03054296802806 * S_MntSweetProducts
1924291   +          +     0.37563940714811 * S_MntWines  +     0.06275745445744 *
1924292   +        S_MonthsAsCustomer  +    -0.52327978028254 * S_NumCatalogPurchases
1924293   +          +    -0.21858146166244 * S_NumDealsPurchases
1924294   +          +     0.18409991080913 * S_NumDistPurchases
1924295   +          +     0.35683163455594 * S_NumStorePurchases
1924296   +          +     0.24429183714976 * S_NumWebPurchases
1924297   +          +     -0.1263739191616 * S_NumWebVisitsMonth
1924298   +          +    -0.25263656216606 * S_RFMstat  +    -0.14210230656146 *
1924299   +        S_RMntFrq  +      0.3452503815146 * S_Recency
1924300   +          +     0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome +
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 *
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts +
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 *
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 *
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 *
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 *
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq +
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
1924301   +   H12  =    -0.33531070327107 * S_AcceptedCmpTotal  +     0.13834284885787 *
1924302   +        S_Age  +     0.21191150830062 * S_Frq  +    -0.12928809774631 *
1924303   +        S_Income  +     0.24623934031778 * S_Kidhome
1924304   +          +     0.47729973765863 * S_Mnt  +     0.02575407384014 *
1924305   +        S_MntFishProducts  +     0.04190479040514 * S_MntFruits
1924306   +          +    -0.23088098149594 * S_MntGoldProds  +    -0.82239191276327 *
1924307   +        S_MntMeatProducts  +     0.13371979061174 * S_MntSweetProducts
1924308   +          +     0.58743684755748 * S_MntWines  +     0.20341302032996 *
1924309   +        S_MonthsAsCustomer  +    -0.17695216321883 * S_NumCatalogPurchases
1924310   +          +    -0.08125614129909 * S_NumDealsPurchases
1924311   +          +     0.38003696656333 * S_NumDistPurchases
1924312   +          +     0.22006494588298 * S_NumStorePurchases
1924313   +          +     0.26217639358993 * S_NumWebPurchases
1924314   +          +    -0.56905781005459 * S_NumWebVisitsMonth
1924315   +          +    -0.13322776297975 * S_RFMstat  +     0.30014052185362 *
1924316   +        S_RMntFrq  +     0.33060213336674 * S_Recency
1924317   +          +     0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome +
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 *
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts +
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 *
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 *
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 *
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 *
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq +
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
1924318   +   H13  =    -0.62352511085341 * S_AcceptedCmpTotal  +    -0.10549202596489 *
1924319   +        S_Age  +     0.05953282210685 * S_Frq  +    -0.21981583872173 *
1924320   +        S_Income  +     0.18597632724783 * S_Kidhome
1924321   +          +    -0.14155072883483 * S_Mnt  +    -0.48144143185181 *
1924322   +        S_MntFishProducts  +    -0.13673430260224 * S_MntFruits
1924323   +          +     0.11219170806382 * S_MntGoldProds  +     0.32321105875036 *
1924324   +        S_MntMeatProducts  +    -0.31138776324434 * S_MntSweetProducts
1924325   +          +      0.0542661634927 * S_MntWines  +     0.04695198015025 *
1924326   +        S_MonthsAsCustomer  +     0.02894984069652 * S_NumCatalogPurchases
1924327   +          +     0.08121213946217 * S_NumDealsPurchases
1924328   +          +    -0.04963282234139 * S_NumDistPurchases
1924329   +          +    -0.09521586837775 * S_NumStorePurchases
1924330   +          +     0.00630626523742 * S_NumWebPurchases
1924331   +          +    -0.03891587920939 * S_NumWebVisitsMonth
1924332   +          +    -0.19177541069142 * S_RFMstat  +    -0.06514218596343 *
1924333   +        S_RMntFrq  +    -0.09135545756466 * S_Recency
1924334   +          +      0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome +
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 *
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts +
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 *
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 *
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 *
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 *
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq +
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
1924335   +   H14  =     0.56336598514797 * S_AcceptedCmpTotal  +     0.01592059294406 *
1924336   +        S_Age  +      0.2311888901482 * S_Frq  +      0.1259439937434 *
1924337   +        S_Income  +     0.25356767518099 * S_Kidhome
1924338   +          +      0.2503736815042 * S_Mnt  +    -0.18728261744667 *
1924339   +        S_MntFishProducts  +    -0.00224513484971 * S_MntFruits
1924340   +          +    -0.03512046714564 * S_MntGoldProds  +     1.85911419211818 *
1924341   +        S_MntMeatProducts  +     0.27013231005995 * S_MntSweetProducts
1924342   +          +    -0.67506389769578 * S_MntWines  +     0.00739074848154 *
1924343   +        S_MonthsAsCustomer  +     1.68736779543695 * S_NumCatalogPurchases
1924344   +          +     0.83749876944877 * S_NumDealsPurchases
1924345   +          +     0.29636537008068 * S_NumDistPurchases
1924346   +          +    -0.61202052257506 * S_NumStorePurchases
1924347   +          +    -0.96921731415369 * S_NumWebPurchases
1924348   +          +     0.10056455703323 * S_NumWebVisitsMonth
1924349   +          +     0.31239399742734 * S_RFMstat  +    -0.00768176891356 *
1924350   +        S_RMntFrq  +    -0.36934667860476 * S_Recency
1924351   +          +    -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age +
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome +
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 *
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts +
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 *
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 *
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 *
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 *
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq +
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
1924352   +   H15  =     0.53899189431072 * S_AcceptedCmpTotal  +    -0.02149258783783 *
1924353   +        S_Age  +    -0.17934707082289 * S_Frq  +     0.68550165336551 *
1924354   +        S_Income  +    -0.66239517276633 * S_Kidhome
1924355   +          +     0.05458774654031 * S_Mnt  +     0.04764733798509 *
1924356   +        S_MntFishProducts  +     -0.0991733005642 * S_MntFruits
1924357   +          +    -0.10679427479927 * S_MntGoldProds  +     0.87627582401159 *
1924358   +        S_MntMeatProducts  +    -0.05714601619366 * S_MntSweetProducts
1924359   +          +    -0.42917375241394 * S_MntWines  +    -0.00264308606557 *
1924360   +        S_MonthsAsCustomer  +       0.662405922892 * S_NumCatalogPurchases
1924361   +          +     0.63122884753912 * S_NumDealsPurchases
1924362   +          +     0.00285388491049 * S_NumDistPurchases
1924363   +          +    -0.76222252593182 * S_NumStorePurchases
1924364   +          +    -0.71485070772733 * S_NumWebPurchases
1924365   +          +     1.59020450778179 * S_NumWebVisitsMonth
1924366   +          +     0.05337807789806 * S_RFMstat  +    -0.44355440632461 *
1924367   +        S_RMntFrq  +    -1.32400243058807 * S_Recency
1924368   +          +    -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome +
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 *
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts +
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 *
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 *
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 *
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 *
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq +
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
1924369   +   H16  =    -0.14331331777313 * S_AcceptedCmpTotal  +       0.326569466151 *
1924370   +        S_Age  +     0.21732309554124 * S_Frq  +     0.23097635949917 *
1924371   +        S_Income  +    -0.22662005590555 * S_Kidhome
1924372   +          +     0.01964147118737 * S_Mnt  +    -0.03143791536828 *
1924373   +        S_MntFishProducts  +     0.02737445722412 * S_MntFruits
1924374   +          +     0.11059205146763 * S_MntGoldProds  +    -0.08436826969721 *
1924375   +        S_MntMeatProducts  +      -0.148582368111 * S_MntSweetProducts
1924376   +          +    -0.28478577108463 * S_MntWines  +     0.20162256683377 *
1924377   +        S_MonthsAsCustomer  +     0.20640237241268 * S_NumCatalogPurchases
1924378   +          +    -0.28143084367284 * S_NumDealsPurchases
1924379   +          +     0.09640746756361 * S_NumDistPurchases
1924380   +          +      0.1754994442449 * S_NumStorePurchases
1924381   +          +     0.14321475617403 * S_NumWebPurchases
1924382   +          +     -0.1908048876137 * S_NumWebVisitsMonth
1924383   +          +    -0.21951647431328 * S_RFMstat  +    -0.07602978491607 *
1924384   +        S_RMntFrq  +     0.02280616139018 * S_Recency
1924385   +          +    -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age +
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome +
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 *
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts +
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 *
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 *
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 *
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 *
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq +
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
1924386   +   H17  =     0.18370302299854 * S_AcceptedCmpTotal  +    -0.09232025426951 *
1924387   +        S_Age  +     0.01688986476064 * S_Frq  +     0.40684920957133 *
1924388   +        S_Income  +    -0.45643247613458 * S_Kidhome
1924389   +          +     0.13044714407259 * S_Mnt  +    -0.27140663796303 *
1924390   +        S_MntFishProducts  +     -0.0437857904473 * S_MntFruits
1924391   +          +     0.09407739192941 * S_MntGoldProds  +    -0.02422597123766 *
1924392   +        S_MntMeatProducts  +     0.02947846512042 * S_MntSweetProducts
1924393   +          +     0.06248788510568 * S_MntWines  +    -0.09330232042055 *
1924394   +        S_MonthsAsCustomer  +     0.33149769704548 * S_NumCatalogPurchases
1924395   +          +    -0.14623073736275 * S_NumDealsPurchases
1924396   +          +      0.1591142102614 * S_NumDistPurchases
1924397   +          +     0.10364624011419 * S_NumStorePurchases
1924398   +          +     0.21545343951201 * S_NumWebPurchases
1924399   +          +     0.61096997379603 * S_NumWebVisitsMonth
1924400   +          +     0.10919719280364 * S_RFMstat  +     0.13467793881271 *
1924401   +        S_RMntFrq  +    -1.05615926539796 * S_Recency
1924402   +          +    -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome +
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 *
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts +
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 *
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 *
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 *
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 *
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq +
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
1924403   +   H11  = H11  +     0.14669521207274 * AcceptedCmp10
1924404   +          +     0.05688242299477 * AcceptedCmp20  +    -0.11541836067088 *
1924405   +        AcceptedCmp30  +    -0.09531487990179 * AcceptedCmp40
1924406   +          +     0.03436086529019 * AcceptedCmp50  +    -0.25037209640985 *
1924407   +        Complain0  +    -0.01220476871917 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 *
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 +
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 *
HigherEducationBinary0 ;
1924408   +   H12  = H12  +     0.00308183800269 * AcceptedCmp10
1924409   +          +     0.15117897721859 * AcceptedCmp20  +     0.38978626739284 *
1924410   +        AcceptedCmp30  +    -0.34510242965707 * AcceptedCmp40
1924411   +          +     0.34476185415358 * AcceptedCmp50  +     -0.0471191058463 *
1924412   +        Complain0  +    -0.35479552944875 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 *
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 +
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 *
HigherEducationBinary0 ;
1924413   +   H13  = H13  +    -0.23075329493142 * AcceptedCmp10
1924414   +          +     0.05372430688076 * AcceptedCmp20  +    -0.04133305832004 *
1924415   +        AcceptedCmp30  +    -0.26034389808875 * AcceptedCmp40
1924416   +          +    -0.05202595947121 * AcceptedCmp50  +     0.04096250305323 *
1924417   +        Complain0  +     -0.0263055703884 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 *
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 +
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 *
HigherEducationBinary0 ;
1924418   +   H14  = H14  +    -0.30215996271638 * AcceptedCmp10
1924419   +          +    -0.13069612609583 * AcceptedCmp20  +     0.12488001880335 *
1924420   +        AcceptedCmp30  +     0.24159090886491 * AcceptedCmp40
1924421   +          +    -0.08339247170749 * AcceptedCmp50  +     0.06197061431371 *
1924422   +        Complain0  +    -0.02864684261279 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 *
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 +
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 *
HigherEducationBinary0 ;
1924423   +   H15  = H15  +    -0.24231601484314 * AcceptedCmp10
1924424   +          +    -0.15783436385069 * AcceptedCmp20  +      -0.165123406448 *
1924425   +        AcceptedCmp30  +     -0.3461179061711 * AcceptedCmp40
1924426   +          +    -0.30496192781021 * AcceptedCmp50  +     0.03253519247022 *
1924427   +        Complain0  +     -0.2564790261773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 *
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 +
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 *
HigherEducationBinary0 ;
1924428   +   H16  = H16  +     0.00566559307299 * AcceptedCmp10
1924429   +          +      0.0400978993045 * AcceptedCmp20  +    -0.04851680976127 *
1924430   +        AcceptedCmp30  +    -0.01898973094389 * AcceptedCmp40
1924431   +          +    -0.06157043443006 * AcceptedCmp50  +    -0.06854763648385 *
1924432   +        Complain0  +       0.231458542974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 *
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 +
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 *
HigherEducationBinary0 ;
1924433   +   H17  = H17  +     0.00742278673712 * AcceptedCmp10
1924434   +          +    -0.13192500326249 * AcceptedCmp20  +    -0.24131013943598 *
1924435   +        AcceptedCmp30  +    -0.25857782968649 * AcceptedCmp40
1924436   +          +    -0.13787093911938 * AcceptedCmp50  +    -0.12068746341015 *
1924437   +        Complain0  +     0.32673931939454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 *
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 +
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 *
HigherEducationBinary0 ;
1924438   +   H11  = H11  +     0.05243340575835 * Education2n_Cycle
1924439   +          +      0.2858024846941 * EducationBasic  +     0.29283586600213 *
1924440   +        EducationGraduation  +     0.00389495660452 * EducationMaster
1924441   +          +     0.39856598367829 * Marital_StatusDivorced
1924442   +          +    -0.45922754552461 * Marital_StatusMarried
1924443   +          +     0.41270195301891 * Marital_StatusSingle
1924444   +          +     -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 *
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster +
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried +
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
1924445   +   H12  = H12  +     -0.1439126887147 * Education2n_Cycle
1924446   +          +     0.01375267748784 * EducationBasic  +     -0.0685054608094 *
1924447   +        EducationGraduation  +      0.2609956614651 * EducationMaster
1924448   +          +     0.12002180366932 * Marital_StatusDivorced
1924449   +          +     0.50693056076018 * Marital_StatusMarried
1924450   +          +    -0.40828651697464 * Marital_StatusSingle
1924451   +          +     0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 *
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster +
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried +
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
1924452   +   H13  = H13  +     0.07270351166078 * Education2n_Cycle
1924453   +          +      0.2300721709066 * EducationBasic  +     -0.0970787196329 *
1924454   +        EducationGraduation  +     0.20017847825938 * EducationMaster
1924455   +          +    -0.05075621283629 * Marital_StatusDivorced
1924456   +          +     0.06731276969307 * Marital_StatusMarried
1924457   +          +     0.20458391966582 * Marital_StatusSingle
1924458   +          +     0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 *
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster +
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried +
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
1924459   +   H14  = H14  +    -0.13092252219357 * Education2n_Cycle
1924460   +          +     0.09676029686792 * EducationBasic  +    -0.01011537602592 *
1924461   +        EducationGraduation  +     0.28829384238085 * EducationMaster
1924462   +          +    -0.37925185401218 * Marital_StatusDivorced
1924463   +          +     0.62971134740586 * Marital_StatusMarried
1924464   +          +    -0.36562351730859 * Marital_StatusSingle
1924465   +          +     0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 *
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried +
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
1924466   +   H15  = H15  +     0.14853068375135 * Education2n_Cycle
1924467   +          +    -0.26227404762566 * EducationBasic  +     0.28447825800836 *
1924468   +        EducationGraduation  +    -0.18997526501932 * EducationMaster
1924469   +          +     0.84382044664305 * Marital_StatusDivorced
1924470   +          +    -0.84062627203871 * Marital_StatusMarried
1924471   +          +     0.74100406031127 * Marital_StatusSingle
1924472   +          +    -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 *
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried +
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
1924473   +   H16  = H16  +     0.05307544081323 * Education2n_Cycle
1924474   +          +     -0.3363359320385 * EducationBasic  +    -0.12190951749416 *
1924475   +        EducationGraduation  +    -0.13296903086061 * EducationMaster
1924476   +          +     -0.1195105091383 * Marital_StatusDivorced
1924477   +          +    -0.13486422945269 * Marital_StatusMarried
1924478   +          +     0.33592403429156 * Marital_StatusSingle
1924479   +          +    -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 *
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried +
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
1924480   +   H17  = H17  +     0.03357678121775 * Education2n_Cycle
1924481   +          +    -0.22726086970399 * EducationBasic  +    -0.11782756185529 *
1924482   +        EducationGraduation  +    -0.09885314861537 * EducationMaster
1924483   +          +     0.14792293029589 * Marital_StatusDivorced
1924484   +          +    -0.96003393582564 * Marital_StatusMarried
1924485   +          +     0.64637652355384 * Marital_StatusSingle
1924486   +          +    -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 *
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried +
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
1924487   +   H11  =      0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
1924488   +   H12  =     -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
1924489   +   H13  =    -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
1924490   +   H14  =     0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
1924491   +   H15  =    -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
1924492   +   H16  =    -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
1924493   +   H17  =    -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
1924494   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1924495   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1924496   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1924497   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1924498   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1924499   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1924500   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1924501   +END;
MPRINT(EM_DIAGRAM):   END;
1924502   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1924503   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1924504   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1924505   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1924506   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1924507   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1924508   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1924509   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1924510   +END;
MPRINT(EM_DIAGRAM):   END;
1924511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924512   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1924513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924514   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1924515   +   P_DepVar1  =    -1.53970344507045 * H11  +    -1.52046732791776 * H12
1924516   +          +      0.3207833789301 * H13  +     3.10068524893786 * H14
1924517   +          +     3.52160869913468 * H15  +     0.53642243400965 * H16
1924518   +          +      2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 +
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 *
H16 + 2.0380168893605 * H17 ;
1924519   +   P_DepVar1  =    -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
1924520   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1924521   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1924522   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1924523   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1924524   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1924525   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1924526   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1924527   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1924528   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1924529   +END;
MPRINT(EM_DIAGRAM):   END;
1924530   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1924531   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1924532   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1924533   +END;
MPRINT(EM_DIAGRAM):   END;
1924534   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1924535   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1924536   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1924537   +END;
MPRINT(EM_DIAGRAM):   END;
1924538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924539   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1924540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1924541   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1924542   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1924543   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1924544   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1924545   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1924546   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1924547   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1924548   +END;
MPRINT(EM_DIAGRAM):   END;
1924549   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1924550   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1924551   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1924552   +drop
1924553   +H11
1924554   +H12
1924555   +H13
1924556   +H14
1924557   +H15
1924558   +H16
1924559   +H17
1924560   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1924561   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1924562    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1924563    quit;
1924564    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1924565    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1924566    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1924567    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
1924568    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1924569    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924570    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1924571    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924572    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1924573    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
1924574    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924575    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924576    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1924577    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1924578    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1924579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924580    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
1924581    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1924582    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1924583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924585    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1924586    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1924587    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924588    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1924589    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1924590    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1924590  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.
 
1924591    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924592    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1924593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924594    filename _pref
1924594  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1924595    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1924596    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1924597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1924598   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1924599   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1924600   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1924601   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1924602   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1924603    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1924604    quit;
1924605    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1924606    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1924607    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1924608    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1924609    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1924610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1924611    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1924612    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924614    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1924615    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924617    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1924618    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1924619    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1924620    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1924621    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1924622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1924623    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1924624    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924625    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924626    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1924627    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1924628    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924629    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924630    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1924631    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1924631  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1924632    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924633    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1924634    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1924635    filename _pref
1924635  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1924636    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1924637    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1924638   +
1924639   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1924640   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1924640  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1924641   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1924642   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1924643   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1924644   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1924645   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1924646    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1924647    quit;
1924648    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1924649    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1924650    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1924651    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1924652    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1924653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924654    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1924655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924657    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1924658    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1924660    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1924661    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1924662    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1924663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924664    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1924665    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924666    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1924667    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1924669    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1924670    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1924671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924672    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924673    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1924674    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1924674  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1924675    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924676    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1924677    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1924678    filename _pref
1924678  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1924679    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1924680    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1924681   +
1924682   +
1924683   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1924684   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1924685   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1924686   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1924687   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1924688   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1924689   +
1924690   +
1924691   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1924692   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1924693   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1924694   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1924695   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1924696   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1924697   +
1924698   +
1924699   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1924700   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1924701   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1924702   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1924703   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1924704   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1924705   +
1924706   +
1924707   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1924708   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1924709   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1924710   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1924711   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1924712   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1924713   +
1924714   +
1924715   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1924716   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1924717   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1924718   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1924719   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1924720   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1924721   +
1924722   +
1924723   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1924724   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1924725   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1924726   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1924727   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1924728   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1924729   +
1924730   +
1924731   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1924732   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1924733   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1924734   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1924735   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1924736   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1924737   +
1924738   +
1924739   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1924740   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1924741   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1924742   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1924743   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1924744   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1924745   +if
1924746   +_FILTERNORM1 not in ( '.')
1924747   + and
1924748   +_FILTERNORM2 not in ( '.')
1924749   + and
1924750   +_FILTERNORM3 not in ( '.')
1924751   + and
1924752   +_FILTERNORM4 not in ( '.')
1924753   + and
1924754   +_FILTERNORM5 not in ( '.')
1924755   + and
1924756   +_FILTERNORM6 not in ( '.')
1924757   + and
1924758   +_FILTERNORM7 not in ( ' ')
1924759   + and
1924760   +_FILTERNORM8 not in ( ' ')
1924761   +and
1924762   +( Dt_Customer ne .)
1924763   +and ( Income ne . and (Income<=107000))
1924764   +and ( Kidhome ne .)
1924765   +and ( MntFishProducts ne .)
1924766   +and ( MntFruits ne .)
1924767   +and ( MntGoldProds ne .)
1924768   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1924769   +and ( MntSweetProducts ne .)
1924770   +and ( MntWines ne .)
1924771   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1924772   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1924773   +and ( NumStorePurchases ne .)
1924774   +and ( NumWebPurchases ne .)
1924775   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1924776   +and ( Recency ne .)
1924777   +and ( Teenhome ne .)
1924778   +and ( Year_Birth ne .)
1924779   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1924780   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1924781   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1924782   +end;
MPRINT(EM_DIAGRAM):   end;
1924783   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1924784   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1924785    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1924786    quit;
1924787    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1924788    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1924789    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1924790    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1924791    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1924792    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924793    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1924794    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924795    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924796    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1924797    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924798    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1924799    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1924800    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1924801    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1924802    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924803    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1924804    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1924805    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1924806    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924807    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924808    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1924809    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1924810    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1924811    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1924812    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1924813    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1924813  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1924814    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924815    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1924816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924817    %macro varDept(fcmpdata=,id=);
1924818    %global nobs&id scoreFlag&id;
1924819    %let scoreFlag&id = 0;
1924820    %if &id=1 or ^&fcmpStart %then %do;
1924821    proc sort data=&fcmpdata out=_temp&id nodupkey;
1924822    by NAME;
1924823    where id=&id and LHS in( %let j=1;
1924824    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1924825    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1924826    "&var" %let j = %eval(&j+1);
1924827    %end;
1924828    );
1924829    run;
1924830    %let dsid = %sysfunc(open(_temp&id));
1924831    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1924832    %let dsid = %sysfunc(close(&dsid));
1924833    %if &&nobs&id %then %do;
1924834    %let scoreFlag&id = 1;
1924835    %let fcmpStart = 1;
1924836    %end;
1924837    %else %let fcmpStart = 0;
1924838    %end;
1924839    %else %do;
1924840    proc sort data=&fcmpdata out=_tempid;
1924841    where id=&id;
1924842    by LHS;
1924843    run;
1924844    %let dsid = %sysfunc(open(_tempid));
1924845    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1924846    %let dsid = %sysfunc(close(&dsid));
1924847    %if ^&&nobs&id %then %do;
1924848    proc datasets lib=work nolist;
1924849    delete _tempid;
1924850    run;
1924851    quit;
1924852    %end;
1924853    %else %do;
1924854    data _tempAll;
1924855    set %let j=%eval(&id-1);
1924856    %do x=1 %to &j;
1924857    %if &&nobs&x %then %do;
1924858    _temp&x %end;
1924859    %end;
1924860    ;
1924861    run;
1924862    proc sql;
1924863    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1924863  ! work._tempid p2 where p.name=p2.lhs;
1924864    quit;
1924865    data _temp&id;
1924866    set _temp&id;
1924867    where LHS ne '' and NAME ne '' and Node ne '';
1924868    run;
1924869    proc datasets lib=work nolist;
1924870    delete _tempAll;
1924871    run;
1924872    %let dsid = %sysfunc(open(_temp&id));
1924873    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1924874    %let dsid = %sysfunc(close(&dsid));
1924875    %if ^&&nobs&id %then %do;
1924876    proc datasets lib=work nolist;
1924877    delete _temp&id;
1924878    run;
1924879    quit;
1924880    %end;
1924881    %else %do;
1924882    %let scoreFlag&id = 1;
1924883    data _temp&id;
1924884    set _temp&id;
1924885    where LHS ne NAME and node ne '';
1924886    run;
1924887    %let dsid = %sysfunc(open(_temp&id));
1924888    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1924889    %let dsid = %sysfunc(close(&dsid));
1924890    %if ^&&nobs&id %then %do;
1924891    proc datasets lib=work nolist;
1924892    delete _temp&id;
1924893    run;
1924894    quit;
1924895    %end;
1924896    %else %do;
1924897    proc sort data=_temp&id nodupkey;
1924898    by LHS NAME;
1924899    run;
1924900    %end;
1924901    %end;
1924902    %end;
1924903    %end;
1924904    %mend varDept;
1924905    %macro optCode(outdata=fcmpdata);
1924906    %global fcmpStart;
1924907    %let fcmpStart = 0;
1924908    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1924909    %let NumNodes=9;
1924910    %do k=1 %to &NumNodes;
1924911    %vardept(fcmpdata=&outdata, id=&k);
1924912    %end;
1924913    %mend optCode;
1924914    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1924915    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1924916    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1924917    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1924918    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924919    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1924920    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1924921    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1924922    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924923    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1924924    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1924924  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1924925    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1924926    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1924927    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1924928    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1924929    filename _pref
1924929  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1924930    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1924931    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1924932   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1924933   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1924934   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1924935   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1924936   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1924937   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1924938   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1924939   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1924940   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1924941   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1924942   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1924943   +LENGTH _WARN_ $4
1924944   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1924945   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1924946   +
1924947   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1924948   +
1924949   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1924950   +
1924951   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1924952   +
1924953   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1924954   +
1924955   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1924956   +
1924957   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1924958   +
1924959   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1924960   +
1924961   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1924962   +
1924963   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1924964   +
1924965   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1924966   +
1924967   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1924968   +
1924969   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1924970   +
1924971   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1924972   +
1924973   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1924974   +
1924975   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1924976   +
1924977   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1924978   +
1924979   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1924980   +
1924981   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1924982   +
1924983   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1924984   +
1924985   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1924986   +
1924987   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1924988   +
1924989   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1924990   +
1924991   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1924992   +
1924993   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1924994   +
1924995   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1924996   +
1924997   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1924998   +
1924999   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1925000   +
1925001   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1925002   +
1925003   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1925004   +
1925005   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1925006   +
1925007   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1925008   +
1925009   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1925010   +
1925011   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1925012   +
1925013   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1925014   +
1925015   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1925016   +
1925017   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1925018   +
1925019   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1925020   +
1925021   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1925022   +
1925023   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1925024   +
1925025   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1925026   +
1925027   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1925028   +
1925029   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1925030   +
1925031   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1925032   +
1925033   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1925034   +
1925035   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1925036   +
1925037   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1925038   +
1925039   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1925040   +
1925041   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1925042   +
1925043   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1925044   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1925045   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1925046   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1925047   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1925048   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925049   +end;
MPRINT(EM_DIAGRAM):   end;
1925050   +else do;
MPRINT(EM_DIAGRAM):   else do;
1925051   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1925052   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1925053   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1925054   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1925055   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1925056   +   end;
MPRINT(EM_DIAGRAM):   end;
1925057   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1925058   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1925059   +   end;
MPRINT(EM_DIAGRAM):   end;
1925060   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1925061   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1925062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1925063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925064   +   end;
MPRINT(EM_DIAGRAM):   end;
1925065   +end;
MPRINT(EM_DIAGRAM):   end;
1925066   +
1925067   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1925068   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1925069   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1925070   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1925071   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1925072   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925073   +end;
MPRINT(EM_DIAGRAM):   end;
1925074   +else do;
MPRINT(EM_DIAGRAM):   else do;
1925075   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1925076   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1925077   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1925078   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1925079   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1925080   +   end;
MPRINT(EM_DIAGRAM):   end;
1925081   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1925082   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1925083   +   end;
MPRINT(EM_DIAGRAM):   end;
1925084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1925085   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1925086   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1925087   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925088   +   end;
MPRINT(EM_DIAGRAM):   end;
1925089   +end;
MPRINT(EM_DIAGRAM):   end;
1925090   +
1925091   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1925092   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1925093   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1925094   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1925095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1925096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925097   +end;
MPRINT(EM_DIAGRAM):   end;
1925098   +else do;
MPRINT(EM_DIAGRAM):   else do;
1925099   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1925100   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1925101   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1925102   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1925103   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1925104   +   end;
MPRINT(EM_DIAGRAM):   end;
1925105   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1925106   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1925107   +   end;
MPRINT(EM_DIAGRAM):   end;
1925108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1925109   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1925110   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1925111   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925112   +   end;
MPRINT(EM_DIAGRAM):   end;
1925113   +end;
MPRINT(EM_DIAGRAM):   end;
1925114   +
1925115   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1925116   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1925117   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1925118   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1925119   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1925120   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925121   +end;
MPRINT(EM_DIAGRAM):   end;
1925122   +else do;
MPRINT(EM_DIAGRAM):   else do;
1925123   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1925124   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1925125   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1925126   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1925127   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1925128   +   end;
MPRINT(EM_DIAGRAM):   end;
1925129   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1925130   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1925131   +   end;
MPRINT(EM_DIAGRAM):   end;
1925132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1925133   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1925134   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1925135   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925136   +   end;
MPRINT(EM_DIAGRAM):   end;
1925137   +end;
MPRINT(EM_DIAGRAM):   end;
1925138   +
1925139   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1925140   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1925141   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1925142   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1925143   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1925144   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925145   +end;
MPRINT(EM_DIAGRAM):   end;
1925146   +else do;
MPRINT(EM_DIAGRAM):   else do;
1925147   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1925148   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1925149   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1925150   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1925151   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1925152   +   end;
MPRINT(EM_DIAGRAM):   end;
1925153   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1925154   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1925155   +   end;
MPRINT(EM_DIAGRAM):   end;
1925156   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1925157   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1925158   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1925159   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925160   +   end;
MPRINT(EM_DIAGRAM):   end;
1925161   +end;
MPRINT(EM_DIAGRAM):   end;
1925162   +
1925163   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1925164   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1925165   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1925166   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1925167   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1925168   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925169   +end;
MPRINT(EM_DIAGRAM):   end;
1925170   +else do;
MPRINT(EM_DIAGRAM):   else do;
1925171   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1925172   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1925173   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1925174   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1925175   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1925176   +   end;
MPRINT(EM_DIAGRAM):   end;
1925177   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1925178   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1925179   +   end;
MPRINT(EM_DIAGRAM):   end;
1925180   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1925181   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1925182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1925183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925184   +   end;
MPRINT(EM_DIAGRAM):   end;
1925185   +end;
MPRINT(EM_DIAGRAM):   end;
1925186   +
1925187   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1925188   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1925189   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1925190   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1925191   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1925192   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925193   +end;
MPRINT(EM_DIAGRAM):   end;
1925194   +else do;
MPRINT(EM_DIAGRAM):   else do;
1925195   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1925196   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1925197   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1925198   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1925199   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1925200   +   end;
MPRINT(EM_DIAGRAM):   end;
1925201   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1925202   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1925203   +   end;
MPRINT(EM_DIAGRAM):   end;
1925204   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1925205   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1925206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1925207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925208   +   end;
MPRINT(EM_DIAGRAM):   end;
1925209   +end;
MPRINT(EM_DIAGRAM):   end;
1925210   +
1925211   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1925212   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1925213   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1925214   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1925215   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1925216   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1925217   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1925218   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1925219   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1925220   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1925221   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1925222   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1925223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1925224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925225   +end;
MPRINT(EM_DIAGRAM):   end;
1925226   +else do;
MPRINT(EM_DIAGRAM):   else do;
1925227   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1925228   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1925229   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1925230   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1925231   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1925232   +   end;
MPRINT(EM_DIAGRAM):   end;
1925233   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1925234   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1925235   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1925236   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1925237   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1925238   +   end;
MPRINT(EM_DIAGRAM):   end;
1925239   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1925240   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1925241   +   end;
MPRINT(EM_DIAGRAM):   end;
1925242   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1925243   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1925244   +   end;
MPRINT(EM_DIAGRAM):   end;
1925245   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1925246   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1925247   +   end;
MPRINT(EM_DIAGRAM):   end;
1925248   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1925249   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1925250   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1925251   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1925252   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1925253   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1925254   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925255   +   end;
MPRINT(EM_DIAGRAM):   end;
1925256   +end;
MPRINT(EM_DIAGRAM):   end;
1925257   +
1925258   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1925259   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1925260   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1925261   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1925262   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1925263   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1925264   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1925265   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1925266   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1925267   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1925268   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1925269   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1925270   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1925271   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1925272   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925273   +end;
MPRINT(EM_DIAGRAM):   end;
1925274   +else do;
MPRINT(EM_DIAGRAM):   else do;
1925275   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1925276   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1925277   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1925278   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1925279   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1925280   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1925281   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1925282   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1925283   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1925284   +         end;
MPRINT(EM_DIAGRAM):   end;
1925285   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1925286   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1925287   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1925288   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1925289   +            end;
MPRINT(EM_DIAGRAM):   end;
1925290   +         end;
MPRINT(EM_DIAGRAM):   end;
1925291   +      end;
MPRINT(EM_DIAGRAM):   end;
1925292   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1925293   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1925294   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1925295   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1925296   +         end;
MPRINT(EM_DIAGRAM):   end;
1925297   +      end;
MPRINT(EM_DIAGRAM):   end;
1925298   +   end;
MPRINT(EM_DIAGRAM):   end;
1925299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1925300   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1925301   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1925302   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1925303   +      end;
MPRINT(EM_DIAGRAM):   end;
1925304   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1925305   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1925306   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1925307   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1925308   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1925309   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1925310   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1925311   +         end;
MPRINT(EM_DIAGRAM):   end;
1925312   +      end;
MPRINT(EM_DIAGRAM):   end;
1925313   +   end;
MPRINT(EM_DIAGRAM):   end;
1925314   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1925315   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1925316   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1925317   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1925318   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1925319   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1925320   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925321   +   end;
MPRINT(EM_DIAGRAM):   end;
1925322   +end;
MPRINT(EM_DIAGRAM):   end;
1925323   +
1925324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925325   +*** Checking missing input Interval
1925326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1925327   +
1925328   +IF NMISS(
1925329   +   AcceptedCmpTotal ,
1925330   +   Age ,
1925331   +   Frq ,
1925332   +   Income ,
1925333   +   Kidhome ,
1925334   +   Mnt ,
1925335   +   MntFishProducts ,
1925336   +   MntFruits ,
1925337   +   MntGoldProds ,
1925338   +   MntMeatProducts ,
1925339   +   MntSweetProducts ,
1925340   +   MntWines ,
1925341   +   MonthsAsCustomer ,
1925342   +   NumCatalogPurchases ,
1925343   +   NumDealsPurchases ,
1925344   +   NumDistPurchases ,
1925345   +   NumStorePurchases ,
1925346   +   NumWebPurchases ,
1925347   +   NumWebVisitsMonth ,
1925348   +   RFMstat ,
1925349   +   RMntFrq ,
1925350   +   Recency ,
1925351   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1925352   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1925353   +
1925354   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1925355   +END;
MPRINT(EM_DIAGRAM):   END;
1925356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925357   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1925358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925359   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1925360   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1925361   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1925362   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1925363   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1925364   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1925365   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1925366   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1925367   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1925368   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1925369   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1925370   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1925371   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1925372   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1925373   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1925374   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1925375   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1925376   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1925377   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1925378   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1925379   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1925380   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1925381   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1925382   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1925383   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1925384   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1925385   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1925386   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1925387   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1925388   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1925389   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1925390   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1925391   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1925392   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1925393   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1925394   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1925395   +END;
MPRINT(EM_DIAGRAM):   END;
1925396   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1925397   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1925398   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1925399   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1925400   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1925401   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1925402   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1925403   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1925404   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1925405   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1925406   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1925407   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1925408   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1925409   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1925410   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1925411   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1925412   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1925413   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1925414   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1925415   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1925416   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1925417   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1925418   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1925419   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1925420   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1925421   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1925422   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1925423   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1925424   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1925425   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1925426   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1925427   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1925428   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1925429   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1925430   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1925431   +   ELSE S_NumCatalogPurchases
1925432   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1925433   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1925434   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1925435   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1925436   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1925437   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1925438   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1925439   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1925440   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1925441   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1925442   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1925443   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1925444   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1925445   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1925446   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1925447   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1925448   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1925449   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1925450   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1925451   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1925452   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1925453   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1925454   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1925455   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1925456   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1925457   +END;
MPRINT(EM_DIAGRAM):   END;
1925458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925459   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1925460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925462   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1925463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925465   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1925466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925467   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1925468   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1925469   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1925470   +        S_Income  +    -0.14142658616971 * S_Kidhome
1925471   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1925472   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1925473   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1925474   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1925475   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1925476   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1925477   +          +     0.96837841774168 * S_NumDealsPurchases
1925478   +          +      0.2846105381881 * S_NumDistPurchases
1925479   +          +    -0.69514041792943 * S_NumStorePurchases
1925480   +          +    -0.96425407351749 * S_NumWebPurchases
1925481   +          +     0.79545449599683 * S_NumWebVisitsMonth
1925482   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1925483   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1925484   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1925485   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1925486   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1925487   +        S_Income  +    -0.55432195959203 * S_Kidhome
1925488   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1925489   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1925490   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1925491   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1925492   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1925493   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1925494   +          +      0.2190184330724 * S_NumDealsPurchases
1925495   +          +    -0.01682909442896 * S_NumDistPurchases
1925496   +          +    -0.70244951048552 * S_NumStorePurchases
1925497   +          +     -0.3057457659316 * S_NumWebPurchases
1925498   +          +     0.95928538762715 * S_NumWebVisitsMonth
1925499   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1925500   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1925501   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1925502   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1925503   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1925504   +        S_Income  +    -0.06354861159882 * S_Kidhome
1925505   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1925506   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1925507   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1925508   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1925509   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1925510   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1925511   +          +    -0.21394230159696 * S_NumDealsPurchases
1925512   +          +    -0.23833771124663 * S_NumDistPurchases
1925513   +          +     0.45832031017813 * S_NumStorePurchases
1925514   +          +    -0.30226952040179 * S_NumWebPurchases
1925515   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1925516   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1925517   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1925518   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
1925519   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1925520   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1925521   +        S_Income  +    -0.04839586846715 * S_Kidhome
1925522   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1925523   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1925524   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1925525   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1925526   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1925527   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1925528   +          +    -0.43749647771198 * S_NumDealsPurchases
1925529   +          +     0.21263473847472 * S_NumDistPurchases
1925530   +          +     0.26102168039141 * S_NumStorePurchases
1925531   +          +     0.54921725943657 * S_NumWebPurchases
1925532   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1925533   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1925534   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1925535   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1925536   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1925537   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1925538   +        S_Income  +     0.71499527198653 * S_Kidhome
1925539   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1925540   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1925541   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1925542   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1925543   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1925544   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1925545   +          +     0.09436067776126 * S_NumDealsPurchases
1925546   +          +    -0.02824201859641 * S_NumDistPurchases
1925547   +          +    -0.06770433780564 * S_NumStorePurchases
1925548   +          +    -0.07177620319715 * S_NumWebPurchases
1925549   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1925550   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1925551   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1925552   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1925553   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1925554   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1925555   +        S_Income  +    -0.63474522042341 * S_Kidhome
1925556   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1925557   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1925558   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1925559   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1925560   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1925561   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1925562   +          +    -0.51154511343396 * S_NumDealsPurchases
1925563   +          +    -0.52422915823572 * S_NumDistPurchases
1925564   +          +     0.30305498422357 * S_NumStorePurchases
1925565   +          +     0.12197321559338 * S_NumWebPurchases
1925566   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1925567   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1925568   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1925569   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1925570   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1925571   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1925572   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1925573   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1925574   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
1925575   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1925576   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1925577   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1925578   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1925579   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
1925580   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1925581   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1925582   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1925583   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1925584   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
1925585   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1925586   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1925587   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1925588   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1925589   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
1925590   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1925591   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1925592   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1925593   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1925594   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
1925595   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1925596   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1925597   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1925598   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1925599   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
1925600   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1925601   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1925602   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1925603   +          +     0.10234616400375 * Marital_StatusDivorced
1925604   +          +     0.27961650739075 * Marital_StatusMarried
1925605   +          +    -0.40239488723767 * Marital_StatusSingle
1925606   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1925607   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1925608   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1925609   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1925610   +          +     0.46385792428023 * Marital_StatusDivorced
1925611   +          +    -0.62344590646391 * Marital_StatusMarried
1925612   +          +     0.61767209252062 * Marital_StatusSingle
1925613   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1925614   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1925615   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1925616   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1925617   +          +    -0.07839612590836 * Marital_StatusDivorced
1925618   +          +     0.35316864062221 * Marital_StatusMarried
1925619   +          +    -0.10730136429834 * Marital_StatusSingle
1925620   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1925621   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1925622   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1925623   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1925624   +          +    -0.09942175269886 * Marital_StatusDivorced
1925625   +          +     0.24385460865335 * Marital_StatusMarried
1925626   +          +    -0.33658955096296 * Marital_StatusSingle
1925627   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1925628   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1925629   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1925630   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1925631   +          +    -0.08047852561096 * Marital_StatusDivorced
1925632   +          +     1.16485862694561 * Marital_StatusMarried
1925633   +          +    -0.94140251178566 * Marital_StatusSingle
1925634   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1925635   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1925636   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1925637   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1925638   +          +    -0.16621963893391 * Marital_StatusDivorced
1925639   +          +    -0.44542186297324 * Marital_StatusMarried
1925640   +          +     0.42176133228308 * Marital_StatusSingle
1925641   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1925642   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1925643   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1925644   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1925645   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1925646   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1925647   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1925648   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1925649   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1925650   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1925651   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1925652   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1925653   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1925654   +END;
MPRINT(EM_DIAGRAM):   END;
1925655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1925656   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1925657   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1925658   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1925659   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1925660   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1925661   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1925662   +END;
MPRINT(EM_DIAGRAM):   END;
1925663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925664   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1925665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925666   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1925667   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1925668   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1925669   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
1925670   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1925671   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1925672   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1925673   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1925674   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1925675   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1925676   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1925677   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1925678   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1925679   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1925680   +END;
MPRINT(EM_DIAGRAM):   END;
1925681   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1925682   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1925683   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1925684   +END;
MPRINT(EM_DIAGRAM):   END;
1925685   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1925686   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1925687   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1925688   +END;
MPRINT(EM_DIAGRAM):   END;
1925689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925690   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1925691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1925692   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1925693   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1925694   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1925695   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1925696   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1925697   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1925698   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1925699   +END;
MPRINT(EM_DIAGRAM):   END;
1925700   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1925701   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1925702   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1925703   +drop
1925704   +H11
1925705   +H12
1925706   +H13
1925707   +H14
1925708   +H15
1925709   +H16
1925710   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1925711   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1925712    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1925713    quit;
1925714    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1925715    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1925716    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1925717    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1925718    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1925719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925720    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1925721    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1925723    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1925724    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925725    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925726    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1925727    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1925728    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1925729    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925730    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1925731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1925732    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1925733    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925734    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925735    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1925736    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1925737    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925738    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1925739    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1925740    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1925740  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.
 
1925741    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925742    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1925743    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925744    filename _pref
1925744  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1925745    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1925746    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1925747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1925748   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1925749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1925750   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1925751   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1925752   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1925753    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1925754    quit;
1925755    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1925756    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1925757    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1925758    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1925759    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1925760    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1925761    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1925762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925764    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1925765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925766    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925767    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1925768    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1925769    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1925770    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925771    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1925772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1925773    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1925774    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925775    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925776    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1925777    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1925778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925779    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1925780    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1925781    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1925781  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1925782    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925783    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1925784    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925785    filename _pref
1925785  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1925786    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1925787    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1925788   +
1925789   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1925790   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1925790  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1925791   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1925792   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1925793   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1925794   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1925795   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1925796    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1925797    quit;
1925798    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1925799    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1925800    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1925801    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1925802    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1925803    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1925804    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1925805    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925806    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925807    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1925808    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925809    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925810    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1925811    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1925812    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1925813    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1925814    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1925815    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925816    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1925817    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925818    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925819    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1925820    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1925821    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925822    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925823    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1925824    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1925824  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1925825    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925826    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1925827    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1925828    filename _pref
1925828  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1925829    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1925830    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1925831   +
1925832   +
1925833   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1925834   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1925835   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1925836   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1925837   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1925838   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1925839   +
1925840   +
1925841   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1925842   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1925843   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1925844   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1925845   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1925846   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1925847   +
1925848   +
1925849   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1925850   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1925851   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1925852   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1925853   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1925854   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1925855   +
1925856   +
1925857   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1925858   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1925859   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1925860   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1925861   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1925862   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1925863   +
1925864   +
1925865   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1925866   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1925867   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1925868   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1925869   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1925870   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1925871   +
1925872   +
1925873   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1925874   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1925875   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1925876   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1925877   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1925878   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1925879   +
1925880   +
1925881   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1925882   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1925883   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1925884   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1925885   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1925886   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1925887   +
1925888   +
1925889   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1925890   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1925891   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1925892   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1925893   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1925894   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1925895   +if
1925896   +_FILTERNORM1 not in ( '.')
1925897   + and
1925898   +_FILTERNORM2 not in ( '.')
1925899   + and
1925900   +_FILTERNORM3 not in ( '.')
1925901   + and
1925902   +_FILTERNORM4 not in ( '.')
1925903   + and
1925904   +_FILTERNORM5 not in ( '.')
1925905   + and
1925906   +_FILTERNORM6 not in ( '.')
1925907   + and
1925908   +_FILTERNORM7 not in ( ' ')
1925909   + and
1925910   +_FILTERNORM8 not in ( ' ')
1925911   +and
1925912   +( Dt_Customer ne .)
1925913   +and ( Income ne . and (Income<=107000))
1925914   +and ( Kidhome ne .)
1925915   +and ( MntFishProducts ne .)
1925916   +and ( MntFruits ne .)
1925917   +and ( MntGoldProds ne .)
1925918   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1925919   +and ( MntSweetProducts ne .)
1925920   +and ( MntWines ne .)
1925921   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1925922   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1925923   +and ( NumStorePurchases ne .)
1925924   +and ( NumWebPurchases ne .)
1925925   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1925926   +and ( Recency ne .)
1925927   +and ( Teenhome ne .)
1925928   +and ( Year_Birth ne .)
1925929   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1925930   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1925931   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1925932   +end;
MPRINT(EM_DIAGRAM):   end;
1925933   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1925934   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1925935    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1925936    quit;
1925937    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1925938    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1925939    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1925940    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1925941    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1925942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925943    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1925944    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925945    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1925946    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1925947    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925948    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925949    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1925950    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1925951    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1925952    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925953    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1925954    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1925955    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1925956    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925957    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925958    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1925959    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1925960    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1925961    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1925962    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1925963    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1925963  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1925964    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925965    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1925966    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1925967    %macro varDept(fcmpdata=,id=);
1925968    %global nobs&id scoreFlag&id;
1925969    %let scoreFlag&id = 0;
1925970    %if &id=1 or ^&fcmpStart %then %do;
1925971    proc sort data=&fcmpdata out=_temp&id nodupkey;
1925972    by NAME;
1925973    where id=&id and LHS in( %let j=1;
1925974    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1925975    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1925976    "&var" %let j = %eval(&j+1);
1925977    %end;
1925978    );
1925979    run;
1925980    %let dsid = %sysfunc(open(_temp&id));
1925981    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1925982    %let dsid = %sysfunc(close(&dsid));
1925983    %if &&nobs&id %then %do;
1925984    %let scoreFlag&id = 1;
1925985    %let fcmpStart = 1;
1925986    %end;
1925987    %else %let fcmpStart = 0;
1925988    %end;
1925989    %else %do;
1925990    proc sort data=&fcmpdata out=_tempid;
1925991    where id=&id;
1925992    by LHS;
1925993    run;
1925994    %let dsid = %sysfunc(open(_tempid));
1925995    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1925996    %let dsid = %sysfunc(close(&dsid));
1925997    %if ^&&nobs&id %then %do;
1925998    proc datasets lib=work nolist;
1925999    delete _tempid;
1926000    run;
1926001    quit;
1926002    %end;
1926003    %else %do;
1926004    data _tempAll;
1926005    set %let j=%eval(&id-1);
1926006    %do x=1 %to &j;
1926007    %if &&nobs&x %then %do;
1926008    _temp&x %end;
1926009    %end;
1926010    ;
1926011    run;
1926012    proc sql;
1926013    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1926013  ! work._tempid p2 where p.name=p2.lhs;
1926014    quit;
1926015    data _temp&id;
1926016    set _temp&id;
1926017    where LHS ne '' and NAME ne '' and Node ne '';
1926018    run;
1926019    proc datasets lib=work nolist;
1926020    delete _tempAll;
1926021    run;
1926022    %let dsid = %sysfunc(open(_temp&id));
1926023    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1926024    %let dsid = %sysfunc(close(&dsid));
1926025    %if ^&&nobs&id %then %do;
1926026    proc datasets lib=work nolist;
1926027    delete _temp&id;
1926028    run;
1926029    quit;
1926030    %end;
1926031    %else %do;
1926032    %let scoreFlag&id = 1;
1926033    data _temp&id;
1926034    set _temp&id;
1926035    where LHS ne NAME and node ne '';
1926036    run;
1926037    %let dsid = %sysfunc(open(_temp&id));
1926038    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1926039    %let dsid = %sysfunc(close(&dsid));
1926040    %if ^&&nobs&id %then %do;
1926041    proc datasets lib=work nolist;
1926042    delete _temp&id;
1926043    run;
1926044    quit;
1926045    %end;
1926046    %else %do;
1926047    proc sort data=_temp&id nodupkey;
1926048    by LHS NAME;
1926049    run;
1926050    %end;
1926051    %end;
1926052    %end;
1926053    %end;
1926054    %mend varDept;
1926055    %macro optCode(outdata=fcmpdata);
1926056    %global fcmpStart;
1926057    %let fcmpStart = 0;
1926058    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1926059    %let NumNodes=9;
1926060    %do k=1 %to &NumNodes;
1926061    %vardept(fcmpdata=&outdata, id=&k);
1926062    %end;
1926063    %mend optCode;
1926064    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1926065    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1926066    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1926067    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1926068    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926069    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1926070    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1926071    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1926072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926073    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1926074    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1926074  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1926075    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926076    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1926077    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1926078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1926079    filename _pref
1926079  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1926080    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1926081    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1926082   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1926083   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1926084   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1926085   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1926086   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1926087   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1926088   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1926089   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1926090   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1926091   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1926092   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1926093   +LENGTH _WARN_ $4
1926094   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1926095   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1926096   +
1926097   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1926098   +
1926099   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1926100   +
1926101   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1926102   +
1926103   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1926104   +
1926105   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1926106   +
1926107   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1926108   +
1926109   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1926110   +
1926111   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1926112   +
1926113   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1926114   +
1926115   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1926116   +
1926117   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1926118   +
1926119   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1926120   +
1926121   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1926122   +
1926123   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1926124   +
1926125   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1926126   +
1926127   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1926128   +
1926129   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1926130   +
1926131   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1926132   +
1926133   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1926134   +
1926135   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1926136   +
1926137   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1926138   +
1926139   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1926140   +
1926141   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1926142   +
1926143   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1926144   +
1926145   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1926146   +
1926147   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1926148   +
1926149   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1926150   +
1926151   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1926152   +
1926153   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1926154   +
1926155   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1926156   +
1926157   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1926158   +
1926159   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1926160   +
1926161   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1926162   +
1926163   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1926164   +
1926165   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1926166   +
1926167   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1926168   +
1926169   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1926170   +
1926171   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1926172   +
1926173   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1926174   +
1926175   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1926176   +
1926177   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1926178   +
1926179   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1926180   +
1926181   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1926182   +
1926183   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1926184   +
1926185   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1926186   +
1926187   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1926188   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1926189   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1926190   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1926191   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1926192   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926193   +end;
MPRINT(EM_DIAGRAM):   end;
1926194   +else do;
MPRINT(EM_DIAGRAM):   else do;
1926195   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1926196   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1926197   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1926198   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1926199   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1926200   +   end;
MPRINT(EM_DIAGRAM):   end;
1926201   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1926202   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1926203   +   end;
MPRINT(EM_DIAGRAM):   end;
1926204   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1926205   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1926206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1926207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926208   +   end;
MPRINT(EM_DIAGRAM):   end;
1926209   +end;
MPRINT(EM_DIAGRAM):   end;
1926210   +
1926211   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1926212   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1926213   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1926214   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1926215   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1926216   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926217   +end;
MPRINT(EM_DIAGRAM):   end;
1926218   +else do;
MPRINT(EM_DIAGRAM):   else do;
1926219   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1926220   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1926221   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1926222   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1926223   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1926224   +   end;
MPRINT(EM_DIAGRAM):   end;
1926225   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1926226   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1926227   +   end;
MPRINT(EM_DIAGRAM):   end;
1926228   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1926229   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1926230   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1926231   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926232   +   end;
MPRINT(EM_DIAGRAM):   end;
1926233   +end;
MPRINT(EM_DIAGRAM):   end;
1926234   +
1926235   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1926236   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1926237   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1926238   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1926239   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1926240   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926241   +end;
MPRINT(EM_DIAGRAM):   end;
1926242   +else do;
MPRINT(EM_DIAGRAM):   else do;
1926243   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1926244   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1926245   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1926246   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1926247   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1926248   +   end;
MPRINT(EM_DIAGRAM):   end;
1926249   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1926250   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1926251   +   end;
MPRINT(EM_DIAGRAM):   end;
1926252   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1926253   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1926254   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1926255   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926256   +   end;
MPRINT(EM_DIAGRAM):   end;
1926257   +end;
MPRINT(EM_DIAGRAM):   end;
1926258   +
1926259   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1926260   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1926261   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1926262   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1926263   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1926264   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926265   +end;
MPRINT(EM_DIAGRAM):   end;
1926266   +else do;
MPRINT(EM_DIAGRAM):   else do;
1926267   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1926268   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1926269   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1926270   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1926271   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1926272   +   end;
MPRINT(EM_DIAGRAM):   end;
1926273   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1926274   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1926275   +   end;
MPRINT(EM_DIAGRAM):   end;
1926276   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1926277   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1926278   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1926279   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926280   +   end;
MPRINT(EM_DIAGRAM):   end;
1926281   +end;
MPRINT(EM_DIAGRAM):   end;
1926282   +
1926283   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1926284   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1926285   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1926286   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1926287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1926288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926289   +end;
MPRINT(EM_DIAGRAM):   end;
1926290   +else do;
MPRINT(EM_DIAGRAM):   else do;
1926291   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
The SAS System
 
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1926292   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1926293   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1926294   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1926295   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1926296   +   end;
MPRINT(EM_DIAGRAM):   end;
1926297   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1926298   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1926299   +   end;
MPRINT(EM_DIAGRAM):   end;
1926300   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1926301   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1926302   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1926303   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926304   +   end;
MPRINT(EM_DIAGRAM):   end;
1926305   +end;
MPRINT(EM_DIAGRAM):   end;
1926306   +
1926307   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1926308   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1926309   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1926310   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1926311   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1926312   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926313   +end;
MPRINT(EM_DIAGRAM):   end;
1926314   +else do;
MPRINT(EM_DIAGRAM):   else do;
1926315   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1926316   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1926317   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1926318   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1926319   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1926320   +   end;
MPRINT(EM_DIAGRAM):   end;
1926321   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1926322   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1926323   +   end;
MPRINT(EM_DIAGRAM):   end;
1926324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1926325   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1926326   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1926327   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926328   +   end;
MPRINT(EM_DIAGRAM):   end;
1926329   +end;
MPRINT(EM_DIAGRAM):   end;
1926330   +
1926331   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1926332   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1926333   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1926334   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1926335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1926336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926337   +end;
MPRINT(EM_DIAGRAM):   end;
1926338   +else do;
MPRINT(EM_DIAGRAM):   else do;
1926339   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1926340   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1926341   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1926342   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1926343   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1926344   +   end;
MPRINT(EM_DIAGRAM):   end;
1926345   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1926346   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1926347   +   end;
MPRINT(EM_DIAGRAM):   end;
1926348   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1926349   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1926350   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1926351   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926352   +   end;
MPRINT(EM_DIAGRAM):   end;
1926353   +end;
MPRINT(EM_DIAGRAM):   end;
1926354   +
1926355   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1926356   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1926357   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1926358   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1926359   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1926360   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1926361   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1926362   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1926363   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1926364   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1926365   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1926366   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1926367   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1926368   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926369   +end;
MPRINT(EM_DIAGRAM):   end;
1926370   +else do;
MPRINT(EM_DIAGRAM):   else do;
1926371   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1926372   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1926373   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1926374   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1926375   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1926376   +   end;
MPRINT(EM_DIAGRAM):   end;
1926377   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1926378   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1926379   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1926380   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1926381   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1926382   +   end;
MPRINT(EM_DIAGRAM):   end;
1926383   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1926384   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1926385   +   end;
MPRINT(EM_DIAGRAM):   end;
1926386   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1926387   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1926388   +   end;
MPRINT(EM_DIAGRAM):   end;
1926389   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1926390   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1926391   +   end;
MPRINT(EM_DIAGRAM):   end;
1926392   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1926393   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1926394   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1926395   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1926396   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1926397   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1926398   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926399   +   end;
MPRINT(EM_DIAGRAM):   end;
1926400   +end;
MPRINT(EM_DIAGRAM):   end;
1926401   +
1926402   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1926403   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1926404   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1926405   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1926406   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1926407   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1926408   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1926409   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1926410   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1926411   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1926412   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1926413   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1926414   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1926415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1926416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926417   +end;
MPRINT(EM_DIAGRAM):   end;
1926418   +else do;
MPRINT(EM_DIAGRAM):   else do;
1926419   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1926420   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1926421   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1926422   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1926423   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1926424   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1926425   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1926426   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1926427   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1926428   +         end;
MPRINT(EM_DIAGRAM):   end;
1926429   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1926430   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1926431   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1926432   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1926433   +            end;
MPRINT(EM_DIAGRAM):   end;
1926434   +         end;
MPRINT(EM_DIAGRAM):   end;
1926435   +      end;
MPRINT(EM_DIAGRAM):   end;
1926436   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1926437   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1926438   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1926439   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1926440   +         end;
MPRINT(EM_DIAGRAM):   end;
1926441   +      end;
MPRINT(EM_DIAGRAM):   end;
1926442   +   end;
MPRINT(EM_DIAGRAM):   end;
1926443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1926444   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1926445   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1926446   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1926447   +      end;
MPRINT(EM_DIAGRAM):   end;
1926448   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1926449   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1926450   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1926451   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1926452   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1926453   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1926454   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1926455   +         end;
MPRINT(EM_DIAGRAM):   end;
1926456   +      end;
MPRINT(EM_DIAGRAM):   end;
1926457   +   end;
MPRINT(EM_DIAGRAM):   end;
1926458   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1926459   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1926460   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1926461   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1926462   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1926463   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1926464   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926465   +   end;
MPRINT(EM_DIAGRAM):   end;
1926466   +end;
MPRINT(EM_DIAGRAM):   end;
1926467   +
1926468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926469   +*** Checking missing input Interval
1926470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1926471   +
1926472   +IF NMISS(
1926473   +   AcceptedCmpTotal ,
1926474   +   Age ,
1926475   +   Frq ,
1926476   +   Income ,
1926477   +   Kidhome ,
1926478   +   Mnt ,
1926479   +   MntFishProducts ,
1926480   +   MntFruits ,
1926481   +   MntGoldProds ,
1926482   +   MntMeatProducts ,
1926483   +   MntSweetProducts ,
1926484   +   MntWines ,
1926485   +   MonthsAsCustomer ,
1926486   +   NumCatalogPurchases ,
1926487   +   NumDealsPurchases ,
1926488   +   NumDistPurchases ,
1926489   +   NumStorePurchases ,
1926490   +   NumWebPurchases ,
1926491   +   NumWebVisitsMonth ,
1926492   +   RFMstat ,
1926493   +   RMntFrq ,
1926494   +   Recency ,
1926495   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1926496   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1926497   +
1926498   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1926499   +END;
MPRINT(EM_DIAGRAM):   END;
1926500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926501   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1926502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926503   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1926504   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1926505   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1926506   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1926507   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1926508   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1926509   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1926510   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1926511   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1926512   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1926513   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1926514   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1926515   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1926516   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1926517   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1926518   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1926519   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1926520   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1926521   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1926522   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1926523   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1926524   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1926525   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1926526   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1926527   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1926528   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1926529   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1926530   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1926531   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1926532   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1926533   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1926534   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1926535   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1926536   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1926537   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1926538   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1926539   +END;
MPRINT(EM_DIAGRAM):   END;
1926540   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1926541   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1926542   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1926543   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1926544   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1926545   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1926546   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1926547   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1926548   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1926549   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1926550   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1926551   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1926552   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1926553   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1926554   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1926555   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1926556   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1926557   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1926558   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1926559   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1926560   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1926561   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1926562   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1926563   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1926564   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1926565   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1926566   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1926567   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1926568   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1926569   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1926570   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1926571   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1926572   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1926573   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1926574   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1926575   +   ELSE S_NumCatalogPurchases
1926576   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1926577   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1926578   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1926579   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1926580   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1926581   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1926582   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1926583   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1926584   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1926585   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1926586   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1926587   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1926588   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1926589   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1926590   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1926591   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1926592   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1926593   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1926594   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1926595   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1926596   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1926597   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1926598   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1926599   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1926600   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1926601   +END;
MPRINT(EM_DIAGRAM):   END;
1926602   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926603   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1926604   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926606   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1926607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926609   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1926610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926611   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1926612   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1926613   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1926614   +        S_Income  +     0.51123266106809 * S_Kidhome
1926615   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1926616   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1926617   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1926618   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1926619   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1926620   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1926621   +          +     1.34095732961105 * S_NumDealsPurchases
1926622   +          +     0.16605991333252 * S_NumDistPurchases
1926623   +          +    -0.61746267736536 * S_NumStorePurchases
1926624   +          +    -0.61812800689506 * S_NumWebPurchases
1926625   +          +     1.44649145055387 * S_NumWebVisitsMonth
1926626   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1926627   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1926628   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1926629   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1926630   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1926631   +        S_Income  +     0.52295323651199 * S_Kidhome
1926632   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1926633   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1926634   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1926635   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1926636   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1926637   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1926638   +          +    -0.72543332317832 * S_NumDealsPurchases
1926639   +          +    -0.05245472565117 * S_NumDistPurchases
1926640   +          +     1.00667431585298 * S_NumStorePurchases
1926641   +          +     1.02836701470962 * S_NumWebPurchases
1926642   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1926643   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1926644   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1926645   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1926646   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1926647   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1926648   +        S_Income  +     0.58025720116696 * S_Kidhome
1926649   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1926650   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1926651   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1926652   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1926653   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1926654   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1926655   +          +     0.12670438262487 * S_NumDealsPurchases
1926656   +          +    -0.46113523834333 * S_NumDistPurchases
1926657   +          +     0.07074818720567 * S_NumStorePurchases
1926658   +          +    -0.05066645783537 * S_NumWebPurchases
1926659   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1926660   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1926661   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1926662   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1926663   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1926664   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1926665   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1926666   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1926667   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
1926668   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1926669   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1926670   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1926671   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1926672   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
1926673   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1926674   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1926675   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1926676   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1926677   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
1926678   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1926679   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1926680   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1926681   +          +     0.12692950862511 * Marital_StatusDivorced
1926682   +          +     0.10026497666167 * Marital_StatusMarried
1926683   +          +    -0.19893864592813 * Marital_StatusSingle
1926684   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1926685   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1926686   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1926687   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1926688   +          +    -0.16785192490199 * Marital_StatusDivorced
1926689   +          +     0.13153695130362 * Marital_StatusMarried
1926690   +          +    -0.50411544587104 * Marital_StatusSingle
1926691   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1926692   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1926693   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1926694   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1926695   +          +    -0.62654958087044 * Marital_StatusDivorced
1926696   +          +     1.86250132393341 * Marital_StatusMarried
1926697   +          +    -1.37067556451928 * Marital_StatusSingle
1926698   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1926699   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1926700   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1926701   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1926702   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1926703   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1926704   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1926705   +END;
MPRINT(EM_DIAGRAM):   END;
1926706   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1926707   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1926708   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1926709   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1926710   +END;
MPRINT(EM_DIAGRAM):   END;
1926711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926712   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1926713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926714   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1926715   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1926716   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
1926717   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1926718   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1926719   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1926720   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1926721   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1926722   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1926723   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1926724   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1926725   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1926726   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1926727   +END;
MPRINT(EM_DIAGRAM):   END;
1926728   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1926729   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1926730   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1926731   +END;
MPRINT(EM_DIAGRAM):   END;
1926732   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1926733   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1926734   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1926735   +END;
MPRINT(EM_DIAGRAM):   END;
1926736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926737   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1926738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1926739   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1926740   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1926741   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1926742   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1926743   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1926744   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1926745   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1926746   +END;
MPRINT(EM_DIAGRAM):   END;
1926747   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1926748   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1926749   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1926750   +drop
1926751   +H11
1926752   +H12
1926753   +H13
1926754   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1926755   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1926756    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1926757    quit;
1926758    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1926759    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1926760    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1926761    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1926762    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1926763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926764    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1926765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926766    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1926767    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1926768    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926769    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926770    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1926771    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1926772    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1926773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926774    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1926775    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1926776    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1926777    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926778    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926779    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1926780    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1926781    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926782    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1926783    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1926784    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1926784  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.
 
1926785    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926786    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1926787    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926788    filename _pref
1926788  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1926789    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1926790    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1926791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1926792   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1926793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1926794   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1926795   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1926796   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1926797    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1926798    quit;
1926799    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1926800    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1926801    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1926802    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1926803    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1926804    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1926805    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1926806    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926807    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926808    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1926809    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926810    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926811    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1926812    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1926813    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1926814    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926815    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1926816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1926817    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1926818    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926819    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1926820    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1926821    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1926822    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926823    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926824    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1926825    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1926825  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1926826    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926827    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1926828    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926829    filename _pref
1926829  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1926830    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1926831    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1926832   +
1926833   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1926834   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1926834  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1926835   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1926836   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1926837   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1926838   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1926839   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1926840    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1926841    quit;
1926842    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1926843    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1926844    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1926845    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1926846    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1926847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1926848    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1926849    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926851    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1926852    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926854    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1926855    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1926856    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1926857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1926858    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1926859    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926860    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1926861    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926863    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1926864    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1926865    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926866    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1926867    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1926868    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1926868  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1926869    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926870    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1926871    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926872    filename _pref
1926872  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1926873    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1926874    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1926875   +
1926876   +
1926877   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1926878   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1926879   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1926880   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1926881   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1926882   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1926883   +
1926884   +
1926885   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1926886   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1926887   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1926888   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1926889   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1926890   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1926891   +
1926892   +
1926893   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1926894   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1926895   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1926896   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1926897   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1926898   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1926899   +
1926900   +
1926901   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1926902   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1926903   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1926904   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1926905   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1926906   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1926907   +
1926908   +
1926909   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1926910   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1926911   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1926912   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1926913   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1926914   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1926915   +
1926916   +
1926917   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1926918   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1926919   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1926920   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1926921   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1926922   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1926923   +
1926924   +
1926925   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1926926   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1926927   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1926928   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1926929   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1926930   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1926931   +
1926932   +
1926933   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1926934   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1926935   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1926936   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1926937   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1926938   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1926939   +if
1926940   +_FILTERNORM1 not in ( '.')
1926941   + and
1926942   +_FILTERNORM2 not in ( '.')
1926943   + and
1926944   +_FILTERNORM3 not in ( '.')
1926945   + and
1926946   +_FILTERNORM4 not in ( '.')
1926947   + and
1926948   +_FILTERNORM5 not in ( '.')
1926949   + and
1926950   +_FILTERNORM6 not in ( '.')
1926951   + and
1926952   +_FILTERNORM7 not in ( ' ')
1926953   + and
1926954   +_FILTERNORM8 not in ( ' ')
1926955   +and
1926956   +( Dt_Customer ne .)
1926957   +and ( Income ne . and (Income<=107000))
1926958   +and ( Kidhome ne .)
1926959   +and ( MntFishProducts ne .)
1926960   +and ( MntFruits ne .)
1926961   +and ( MntGoldProds ne .)
1926962   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1926963   +and ( MntSweetProducts ne .)
1926964   +and ( MntWines ne .)
1926965   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1926966   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1926967   +and ( NumStorePurchases ne .)
1926968   +and ( NumWebPurchases ne .)
1926969   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1926970   +and ( Recency ne .)
1926971   +and ( Teenhome ne .)
1926972   +and ( Year_Birth ne .)
1926973   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1926974   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1926975   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1926976   +end;
MPRINT(EM_DIAGRAM):   end;
1926977   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1926978   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1926979    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1926980    quit;
1926981    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1926982    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1926983    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1926984    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1926985    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1926986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1926987    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1926988    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926989    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926990    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1926991    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1926992    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1926993    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1926994    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1926995    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1926996    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1926997    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1926998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1926999    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1927000    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927002    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1927003    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1927004    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927005    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927006    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1927007    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1927007  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1927008    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927009    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1927010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927011    %macro varDept(fcmpdata=,id=);
1927012    %global nobs&id scoreFlag&id;
1927013    %let scoreFlag&id = 0;
1927014    %if &id=1 or ^&fcmpStart %then %do;
1927015    proc sort data=&fcmpdata out=_temp&id nodupkey;
1927016    by NAME;
1927017    where id=&id and LHS in( %let j=1;
1927018    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1927019    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1927020    "&var" %let j = %eval(&j+1);
1927021    %end;
1927022    );
1927023    run;
1927024    %let dsid = %sysfunc(open(_temp&id));
1927025    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1927026    %let dsid = %sysfunc(close(&dsid));
1927027    %if &&nobs&id %then %do;
1927028    %let scoreFlag&id = 1;
1927029    %let fcmpStart = 1;
1927030    %end;
1927031    %else %let fcmpStart = 0;
1927032    %end;
1927033    %else %do;
1927034    proc sort data=&fcmpdata out=_tempid;
1927035    where id=&id;
1927036    by LHS;
1927037    run;
1927038    %let dsid = %sysfunc(open(_tempid));
1927039    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1927040    %let dsid = %sysfunc(close(&dsid));
1927041    %if ^&&nobs&id %then %do;
1927042    proc datasets lib=work nolist;
1927043    delete _tempid;
1927044    run;
1927045    quit;
1927046    %end;
1927047    %else %do;
1927048    data _tempAll;
1927049    set %let j=%eval(&id-1);
1927050    %do x=1 %to &j;
1927051    %if &&nobs&x %then %do;
1927052    _temp&x %end;
1927053    %end;
1927054    ;
1927055    run;
1927056    proc sql;
1927057    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1927057  ! work._tempid p2 where p.name=p2.lhs;
1927058    quit;
1927059    data _temp&id;
1927060    set _temp&id;
1927061    where LHS ne '' and NAME ne '' and Node ne '';
1927062    run;
1927063    proc datasets lib=work nolist;
1927064    delete _tempAll;
1927065    run;
1927066    %let dsid = %sysfunc(open(_temp&id));
1927067    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1927068    %let dsid = %sysfunc(close(&dsid));
1927069    %if ^&&nobs&id %then %do;
1927070    proc datasets lib=work nolist;
1927071    delete _temp&id;
1927072    run;
1927073    quit;
1927074    %end;
1927075    %else %do;
1927076    %let scoreFlag&id = 1;
1927077    data _temp&id;
1927078    set _temp&id;
1927079    where LHS ne NAME and node ne '';
1927080    run;
1927081    %let dsid = %sysfunc(open(_temp&id));
1927082    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1927083    %let dsid = %sysfunc(close(&dsid));
1927084    %if ^&&nobs&id %then %do;
1927085    proc datasets lib=work nolist;
1927086    delete _temp&id;
1927087    run;
1927088    quit;
1927089    %end;
1927090    %else %do;
1927091    proc sort data=_temp&id nodupkey;
1927092    by LHS NAME;
1927093    run;
1927094    %end;
1927095    %end;
1927096    %end;
1927097    %end;
1927098    %mend varDept;
1927099    %macro optCode(outdata=fcmpdata);
1927100    %global fcmpStart;
1927101    %let fcmpStart = 0;
1927102    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1927103    %let NumNodes=9;
1927104    %do k=1 %to &NumNodes;
1927105    %vardept(fcmpdata=&outdata, id=&k);
1927106    %end;
1927107    %mend optCode;
1927108    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1927109    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1927110    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1927111    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1927112    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927113    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1927114    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1927115    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1927116    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927117    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1927118    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1927118  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1927119    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927120    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1927121    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1927122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1927123    filename _pref
1927123  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1927124    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1927125    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1927126   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1927127   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1927128   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1927129   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1927130   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1927131   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1927132   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1927133   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1927134   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1927135   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1927136   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1927137   +LENGTH _WARN_ $4
1927138   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1927139   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1927140   +
1927141   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1927142   +
1927143   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1927144   +
1927145   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1927146   +
1927147   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1927148   +
1927149   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1927150   +
1927151   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1927152   +
1927153   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1927154   +
1927155   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1927156   +
1927157   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1927158   +
1927159   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1927160   +
1927161   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1927162   +
1927163   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1927164   +
1927165   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1927166   +
1927167   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1927168   +
1927169   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1927170   +
1927171   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1927172   +
1927173   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1927174   +
1927175   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1927176   +
1927177   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1927178   +
1927179   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1927180   +
1927181   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1927182   +
1927183   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1927184   +
1927185   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1927186   +
1927187   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1927188   +
1927189   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1927190   +
1927191   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1927192   +
1927193   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1927194   +
1927195   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1927196   +
1927197   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1927198   +
1927199   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1927200   +
1927201   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1927202   +
1927203   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1927204   +
1927205   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1927206   +
1927207   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1927208   +
1927209   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1927210   +
1927211   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1927212   +
1927213   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1927214   +
1927215   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1927216   +
1927217   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1927218   +
1927219   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1927220   +
1927221   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1927222   +
1927223   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1927224   +
1927225   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1927226   +
1927227   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1927228   +
1927229   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1927230   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1927231   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1927232   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1927233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1927234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927235   +end;
MPRINT(EM_DIAGRAM):   end;
1927236   +else do;
MPRINT(EM_DIAGRAM):   else do;
1927237   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1927238   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1927239   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1927240   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1927241   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1927242   +   end;
MPRINT(EM_DIAGRAM):   end;
1927243   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1927244   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1927245   +   end;
MPRINT(EM_DIAGRAM):   end;
1927246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1927247   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1927248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1927249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927250   +   end;
MPRINT(EM_DIAGRAM):   end;
1927251   +end;
MPRINT(EM_DIAGRAM):   end;
1927252   +
1927253   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1927254   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1927255   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1927256   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1927257   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1927258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927259   +end;
MPRINT(EM_DIAGRAM):   end;
1927260   +else do;
MPRINT(EM_DIAGRAM):   else do;
1927261   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1927262   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1927263   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1927264   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1927265   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1927266   +   end;
MPRINT(EM_DIAGRAM):   end;
1927267   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1927268   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1927269   +   end;
MPRINT(EM_DIAGRAM):   end;
1927270   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1927271   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1927272   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1927273   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927274   +   end;
MPRINT(EM_DIAGRAM):   end;
1927275   +end;
MPRINT(EM_DIAGRAM):   end;
1927276   +
1927277   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1927278   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1927279   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1927280   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1927281   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1927282   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927283   +end;
MPRINT(EM_DIAGRAM):   end;
1927284   +else do;
MPRINT(EM_DIAGRAM):   else do;
1927285   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1927286   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1927287   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1927288   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1927289   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1927290   +   end;
MPRINT(EM_DIAGRAM):   end;
1927291   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1927292   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1927293   +   end;
MPRINT(EM_DIAGRAM):   end;
1927294   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1927295   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1927296   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1927297   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927298   +   end;
MPRINT(EM_DIAGRAM):   end;
1927299   +end;
MPRINT(EM_DIAGRAM):   end;
1927300   +
1927301   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1927302   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1927303   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1927304   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1927305   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1927306   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927307   +end;
MPRINT(EM_DIAGRAM):   end;
1927308   +else do;
MPRINT(EM_DIAGRAM):   else do;
1927309   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1927310   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1927311   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1927312   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1927313   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1927314   +   end;
MPRINT(EM_DIAGRAM):   end;
1927315   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1927316   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1927317   +   end;
MPRINT(EM_DIAGRAM):   end;
1927318   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1927319   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1927320   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1927321   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927322   +   end;
MPRINT(EM_DIAGRAM):   end;
1927323   +end;
MPRINT(EM_DIAGRAM):   end;
1927324   +
1927325   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1927326   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1927327   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1927328   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1927329   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1927330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927331   +end;
MPRINT(EM_DIAGRAM):   end;
1927332   +else do;
MPRINT(EM_DIAGRAM):   else do;
1927333   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1927334   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1927335   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1927336   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1927337   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1927338   +   end;
MPRINT(EM_DIAGRAM):   end;
1927339   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1927340   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1927341   +   end;
MPRINT(EM_DIAGRAM):   end;
1927342   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1927343   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1927344   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1927345   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927346   +   end;
MPRINT(EM_DIAGRAM):   end;
1927347   +end;
MPRINT(EM_DIAGRAM):   end;
1927348   +
1927349   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1927350   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1927351   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1927352   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1927353   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1927354   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927355   +end;
MPRINT(EM_DIAGRAM):   end;
1927356   +else do;
MPRINT(EM_DIAGRAM):   else do;
1927357   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1927358   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1927359   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1927360   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1927361   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1927362   +   end;
MPRINT(EM_DIAGRAM):   end;
1927363   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1927364   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1927365   +   end;
MPRINT(EM_DIAGRAM):   end;
1927366   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1927367   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1927368   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1927369   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927370   +   end;
MPRINT(EM_DIAGRAM):   end;
1927371   +end;
MPRINT(EM_DIAGRAM):   end;
1927372   +
1927373   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1927374   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1927375   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1927376   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1927377   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1927378   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927379   +end;
MPRINT(EM_DIAGRAM):   end;
1927380   +else do;
MPRINT(EM_DIAGRAM):   else do;
1927381   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1927382   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1927383   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1927384   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1927385   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1927386   +   end;
MPRINT(EM_DIAGRAM):   end;
1927387   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1927388   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1927389   +   end;
MPRINT(EM_DIAGRAM):   end;
1927390   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1927391   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1927392   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1927393   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927394   +   end;
MPRINT(EM_DIAGRAM):   end;
1927395   +end;
MPRINT(EM_DIAGRAM):   end;
1927396   +
1927397   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1927398   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1927399   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1927400   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1927401   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1927402   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1927403   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1927404   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1927405   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1927406   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1927407   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1927408   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1927409   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1927410   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927411   +end;
MPRINT(EM_DIAGRAM):   end;
1927412   +else do;
MPRINT(EM_DIAGRAM):   else do;
1927413   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1927414   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1927415   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1927416   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1927417   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1927418   +   end;
MPRINT(EM_DIAGRAM):   end;
1927419   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1927420   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1927421   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1927422   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1927423   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1927424   +   end;
MPRINT(EM_DIAGRAM):   end;
1927425   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1927426   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1927427   +   end;
MPRINT(EM_DIAGRAM):   end;
1927428   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1927429   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1927430   +   end;
MPRINT(EM_DIAGRAM):   end;
1927431   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1927432   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1927433   +   end;
MPRINT(EM_DIAGRAM):   end;
1927434   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1927435   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1927436   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1927437   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1927438   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1927439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1927440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927441   +   end;
MPRINT(EM_DIAGRAM):   end;
1927442   +end;
MPRINT(EM_DIAGRAM):   end;
1927443   +
1927444   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1927445   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1927446   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1927447   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1927448   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1927449   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1927450   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1927451   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1927452   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1927453   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1927454   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1927455   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1927456   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1927457   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1927458   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927459   +end;
MPRINT(EM_DIAGRAM):   end;
1927460   +else do;
MPRINT(EM_DIAGRAM):   else do;
1927461   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1927462   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1927463   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1927464   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1927465   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1927466   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1927467   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1927468   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1927469   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1927470   +         end;
MPRINT(EM_DIAGRAM):   end;
1927471   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1927472   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1927473   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1927474   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1927475   +            end;
MPRINT(EM_DIAGRAM):   end;
1927476   +         end;
MPRINT(EM_DIAGRAM):   end;
1927477   +      end;
MPRINT(EM_DIAGRAM):   end;
1927478   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1927479   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1927480   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1927481   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1927482   +         end;
MPRINT(EM_DIAGRAM):   end;
1927483   +      end;
MPRINT(EM_DIAGRAM):   end;
1927484   +   end;
MPRINT(EM_DIAGRAM):   end;
1927485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1927486   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1927487   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1927488   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1927489   +      end;
MPRINT(EM_DIAGRAM):   end;
1927490   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1927491   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1927492   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1927493   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1927494   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1927495   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1927496   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1927497   +         end;
MPRINT(EM_DIAGRAM):   end;
1927498   +      end;
MPRINT(EM_DIAGRAM):   end;
1927499   +   end;
MPRINT(EM_DIAGRAM):   end;
1927500   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1927501   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1927502   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1927503   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1927504   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1927505   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1927506   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927507   +   end;
MPRINT(EM_DIAGRAM):   end;
1927508   +end;
MPRINT(EM_DIAGRAM):   end;
1927509   +
1927510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927511   +*** Checking missing input Interval
1927512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1927513   +
1927514   +IF NMISS(
1927515   +   AcceptedCmpTotal ,
1927516   +   Age ,
1927517   +   Frq ,
1927518   +   Income ,
1927519   +   Kidhome ,
1927520   +   Mnt ,
1927521   +   MntFishProducts ,
1927522   +   MntFruits ,
1927523   +   MntGoldProds ,
1927524   +   MntMeatProducts ,
1927525   +   MntSweetProducts ,
1927526   +   MntWines ,
1927527   +   MonthsAsCustomer ,
1927528   +   NumCatalogPurchases ,
1927529   +   NumDealsPurchases ,
1927530   +   NumDistPurchases ,
1927531   +   NumStorePurchases ,
1927532   +   NumWebPurchases ,
1927533   +   NumWebVisitsMonth ,
1927534   +   RFMstat ,
1927535   +   RMntFrq ,
1927536   +   Recency ,
1927537   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1927538   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1927539   +
1927540   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1927541   +END;
MPRINT(EM_DIAGRAM):   END;
1927542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927543   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1927544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927545   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1927546   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1927547   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1927548   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1927549   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1927550   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1927551   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1927552   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1927553   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1927554   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1927555   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1927556   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1927557   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1927558   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1927559   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1927560   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1927561   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1927562   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1927563   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1927564   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1927565   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1927566   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1927567   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1927568   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1927569   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1927570   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1927571   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1927572   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1927573   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1927574   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1927575   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1927576   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1927577   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1927578   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1927579   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1927580   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1927581   +END;
MPRINT(EM_DIAGRAM):   END;
1927582   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1927583   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1927584   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1927585   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1927586   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1927587   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1927588   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1927589   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1927590   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1927591   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1927592   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1927593   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1927594   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1927595   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1927596   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1927597   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1927598   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1927599   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1927600   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1927601   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1927602   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1927603   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1927604   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1927605   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1927606   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1927607   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1927608   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1927609   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1927610   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1927611   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1927612   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1927613   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1927614   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1927615   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1927616   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1927617   +   ELSE S_NumCatalogPurchases
1927618   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1927619   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1927620   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1927621   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1927622   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1927623   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1927624   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1927625   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1927626   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1927627   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1927628   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1927629   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1927630   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1927631   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1927632   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1927633   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1927634   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1927635   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1927636   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1927637   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1927638   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1927639   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1927640   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1927641   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1927642   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1927643   +END;
MPRINT(EM_DIAGRAM):   END;
1927644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927645   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1927646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927648   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1927649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927651   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1927652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927653   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1927654   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1927655   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1927656   +        S_Income  +    -1.07615700855274 * S_Kidhome
1927657   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1927658   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1927659   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1927660   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1927661   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1927662   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1927663   +          +      0.3429043319369 * S_NumDealsPurchases
1927664   +          +     0.71313309767469 * S_NumDistPurchases
1927665   +          +     0.06017757740083 * S_NumStorePurchases
1927666   +          +    -0.19817724925068 * S_NumWebPurchases
1927667   +          +     1.34164122205952 * S_NumWebVisitsMonth
1927668   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1927669   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1927670   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1927671   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1927672   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1927673   +        S_Income  +     -0.0027232441092 * S_Kidhome
1927674   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1927675   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1927676   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1927677   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1927678   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1927679   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1927680   +          +      0.4576973746858 * S_NumDealsPurchases
1927681   +          +     0.15590877272659 * S_NumDistPurchases
1927682   +          +    -0.33414539713736 * S_NumStorePurchases
1927683   +          +    -0.39370244666257 * S_NumWebPurchases
1927684   +          +     0.52596714886704 * S_NumWebVisitsMonth
1927685   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1927686   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1927687   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1927688   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1927689   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1927690   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1927691   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1927692   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
1927693   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1927694   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1927695   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1927696   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1927697   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
1927698   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1927699   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1927700   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1927701   +          +      0.4663802937397 * Marital_StatusDivorced
1927702   +          +    -1.27401898796099 * Marital_StatusMarried
1927703   +          +      1.3125969368079 * Marital_StatusSingle
1927704   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1927705   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1927706   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1927707   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1927708   +          +     0.07419179522004 * Marital_StatusDivorced
1927709   +          +     0.00234615813337 * Marital_StatusMarried
1927710   +          +    -0.00725460458412 * Marital_StatusSingle
1927711   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1927712   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1927713   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1927714   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1927715   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1927716   +END;
MPRINT(EM_DIAGRAM):   END;
1927717   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1927718   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1927719   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1927720   +END;
MPRINT(EM_DIAGRAM):   END;
1927721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927722   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1927723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927724   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1927725   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1927726   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1927727   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1927728   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1927729   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1927730   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1927731   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1927732   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1927733   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1927734   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1927735   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1927736   +END;
MPRINT(EM_DIAGRAM):   END;
1927737   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1927738   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1927739   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1927740   +END;
MPRINT(EM_DIAGRAM):   END;
1927741   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1927742   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1927743   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1927744   +END;
MPRINT(EM_DIAGRAM):   END;
1927745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927746   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1927747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1927748   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1927749   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1927750   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1927751   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1927752   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1927753   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1927754   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1927755   +END;
MPRINT(EM_DIAGRAM):   END;
1927756   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1927757   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1927758   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1927759   +drop
1927760   +H11
1927761   +H12
1927762   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1927763   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1927764    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1927765    quit;
1927766    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1927767    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1927768    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1927769    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1927770    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1927771    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927772    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1927773    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927774    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1927775    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1927776    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927777    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927778    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1927779    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1927780    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1927781    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927782    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1927783    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1927784    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1927785    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927786    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927787    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1927788    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1927789    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927790    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1927791    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1927792    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1927792  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.
 
1927793    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927794    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1927795    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1927796    filename _pref
1927796  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1927797    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1927798    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1927799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1927800   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1927801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1927802   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1927803   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1927804   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1927805    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1927806    quit;
1927807    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1927808    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1927809    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1927810    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1927811    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1927812    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927813    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1927814    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927815    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927816    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1927817    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927818    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1927819    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1927820    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1927821    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1927822    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927823    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1927824    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1927825    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1927826    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927827    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1927828    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1927829    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1927830    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927831    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927832    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1927833    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1927833  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1927834    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927835    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1927836    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1927837    filename _pref
1927837  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1927838    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1927839    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1927840   +
1927841   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1927842   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1927842  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1927843   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1927844   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1927845   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1927846   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1927847   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1927848    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1927849    quit;
1927850    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1927851    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1927852    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1927853    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1927854    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1927855    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927856    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1927857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927858    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927859    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1927860    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927861    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1927862    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1927863    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1927864    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1927865    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927866    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1927867    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1927868    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1927869    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927870    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927871    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1927872    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1927873    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927874    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927875    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1927876    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1927876  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1927877    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927878    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1927879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927880    filename _pref
1927880  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1927881    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1927882    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1927883   +
1927884   +
1927885   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1927886   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1927887   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1927888   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1927889   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1927890   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1927891   +
1927892   +
1927893   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1927894   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1927895   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1927896   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1927897   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1927898   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1927899   +
1927900   +
1927901   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1927902   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1927903   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1927904   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1927905   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1927906   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1927907   +
1927908   +
1927909   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1927910   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1927911   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1927912   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1927913   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1927914   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1927915   +
1927916   +
1927917   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1927918   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1927919   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1927920   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1927921   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1927922   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1927923   +
1927924   +
1927925   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1927926   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1927927   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1927928   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1927929   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1927930   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1927931   +
1927932   +
1927933   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1927934   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1927935   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1927936   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1927937   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1927938   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1927939   +
1927940   +
1927941   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1927942   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1927943   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1927944   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1927945   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1927946   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1927947   +if
1927948   +_FILTERNORM1 not in ( '.')
1927949   + and
1927950   +_FILTERNORM2 not in ( '.')
1927951   + and
1927952   +_FILTERNORM3 not in ( '.')
1927953   + and
1927954   +_FILTERNORM4 not in ( '.')
1927955   + and
1927956   +_FILTERNORM5 not in ( '.')
1927957   + and
1927958   +_FILTERNORM6 not in ( '.')
1927959   + and
1927960   +_FILTERNORM7 not in ( ' ')
1927961   + and
1927962   +_FILTERNORM8 not in ( ' ')
1927963   +and
1927964   +( Dt_Customer ne .)
1927965   +and ( Income ne . and (Income<=107000))
1927966   +and ( Kidhome ne .)
1927967   +and ( MntFishProducts ne .)
1927968   +and ( MntFruits ne .)
1927969   +and ( MntGoldProds ne .)
1927970   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1927971   +and ( MntSweetProducts ne .)
1927972   +and ( MntWines ne .)
1927973   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1927974   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1927975   +and ( NumStorePurchases ne .)
1927976   +and ( NumWebPurchases ne .)
1927977   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1927978   +and ( Recency ne .)
1927979   +and ( Teenhome ne .)
1927980   +and ( Year_Birth ne .)
1927981   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1927982   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1927983   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1927984   +end;
MPRINT(EM_DIAGRAM):   end;
1927985   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1927986   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1927987    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1927988    quit;
1927989    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1927990    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1927991    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1927992    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1927993    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1927994    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927995    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1927996    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1927997    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1927998    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1927999    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928001    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1928002    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1928003    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1928004    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1928005    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1928006    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1928007    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1928008    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928010    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1928011    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1928012    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928013    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928014    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1928015    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1928015  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1928016    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1928017    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1928018    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928019    %macro varDept(fcmpdata=,id=);
1928020    %global nobs&id scoreFlag&id;
1928021    %let scoreFlag&id = 0;
1928022    %if &id=1 or ^&fcmpStart %then %do;
1928023    proc sort data=&fcmpdata out=_temp&id nodupkey;
1928024    by NAME;
1928025    where id=&id and LHS in( %let j=1;
1928026    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1928027    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1928028    "&var" %let j = %eval(&j+1);
1928029    %end;
1928030    );
1928031    run;
1928032    %let dsid = %sysfunc(open(_temp&id));
1928033    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1928034    %let dsid = %sysfunc(close(&dsid));
1928035    %if &&nobs&id %then %do;
1928036    %let scoreFlag&id = 1;
1928037    %let fcmpStart = 1;
1928038    %end;
1928039    %else %let fcmpStart = 0;
1928040    %end;
1928041    %else %do;
1928042    proc sort data=&fcmpdata out=_tempid;
1928043    where id=&id;
1928044    by LHS;
1928045    run;
1928046    %let dsid = %sysfunc(open(_tempid));
1928047    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1928048    %let dsid = %sysfunc(close(&dsid));
1928049    %if ^&&nobs&id %then %do;
1928050    proc datasets lib=work nolist;
1928051    delete _tempid;
1928052    run;
1928053    quit;
1928054    %end;
1928055    %else %do;
1928056    data _tempAll;
1928057    set %let j=%eval(&id-1);
1928058    %do x=1 %to &j;
1928059    %if &&nobs&x %then %do;
1928060    _temp&x %end;
1928061    %end;
1928062    ;
1928063    run;
1928064    proc sql;
1928065    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1928065  ! work._tempid p2 where p.name=p2.lhs;
1928066    quit;
1928067    data _temp&id;
1928068    set _temp&id;
1928069    where LHS ne '' and NAME ne '' and Node ne '';
1928070    run;
1928071    proc datasets lib=work nolist;
1928072    delete _tempAll;
1928073    run;
1928074    %let dsid = %sysfunc(open(_temp&id));
1928075    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1928076    %let dsid = %sysfunc(close(&dsid));
1928077    %if ^&&nobs&id %then %do;
1928078    proc datasets lib=work nolist;
1928079    delete _temp&id;
1928080    run;
1928081    quit;
1928082    %end;
1928083    %else %do;
1928084    %let scoreFlag&id = 1;
1928085    data _temp&id;
1928086    set _temp&id;
1928087    where LHS ne NAME and node ne '';
1928088    run;
1928089    %let dsid = %sysfunc(open(_temp&id));
1928090    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1928091    %let dsid = %sysfunc(close(&dsid));
1928092    %if ^&&nobs&id %then %do;
1928093    proc datasets lib=work nolist;
1928094    delete _temp&id;
1928095    run;
1928096    quit;
1928097    %end;
1928098    %else %do;
1928099    proc sort data=_temp&id nodupkey;
1928100    by LHS NAME;
1928101    run;
1928102    %end;
1928103    %end;
1928104    %end;
1928105    %end;
1928106    %mend varDept;
1928107    %macro optCode(outdata=fcmpdata);
1928108    %global fcmpStart;
1928109    %let fcmpStart = 0;
1928110    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1928111    %let NumNodes=9;
1928112    %do k=1 %to &NumNodes;
1928113    %vardept(fcmpdata=&outdata, id=&k);
1928114    %end;
1928115    %mend optCode;
1928116    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1928117    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1928118    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1928119    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1928120    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1928121    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1928122    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1928123    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1928124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928125    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1928126    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1928126  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1928127    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928128    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1928129    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1928130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928131    filename _pref
1928131  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
1928132    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1928133    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
1928134   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1928135   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1928136   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1928137   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1928138   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1928139   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1928140   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1928141   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1928142   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1928143   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1928144   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1928145   +LENGTH _WARN_ $4
1928146   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1928147   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1928148   +
1928149   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1928150   +
1928151   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1928152   +
1928153   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1928154   +
1928155   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1928156   +
1928157   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1928158   +
1928159   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1928160   +
1928161   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1928162   +
1928163   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1928164   +
1928165   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1928166   +
1928167   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1928168   +
1928169   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1928170   +
1928171   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1928172   +
1928173   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1928174   +
1928175   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1928176   +
1928177   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1928178   +
1928179   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1928180   +
1928181   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1928182   +
1928183   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1928184   +
1928185   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1928186   +
1928187   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1928188   +
1928189   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1928190   +
1928191   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1928192   +
1928193   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1928194   +
1928195   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1928196   +
1928197   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1928198   +
1928199   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1928200   +
1928201   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1928202   +
1928203   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1928204   +
1928205   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1928206   +
1928207   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1928208   +
1928209   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1928210   +
1928211   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1928212   +
1928213   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1928214   +
1928215   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1928216   +
1928217   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1928218   +
1928219   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1928220   +
1928221   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1928222   +
1928223   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1928224   +
1928225   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1928226   +
1928227   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1928228   +
1928229   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1928230   +
1928231   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1928232   +
1928233   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1928234   +
1928235   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1928236   +
1928237   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1928238   +
1928239   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1928240   +
1928241   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1928242   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1928243   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1928244   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1928245   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1928246   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928247   +end;
MPRINT(EM_DIAGRAM):   end;
1928248   +else do;
MPRINT(EM_DIAGRAM):   else do;
1928249   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1928250   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1928251   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1928252   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1928253   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1928254   +   end;
MPRINT(EM_DIAGRAM):   end;
1928255   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1928256   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1928257   +   end;
MPRINT(EM_DIAGRAM):   end;
1928258   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1928259   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1928260   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1928261   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928262   +   end;
MPRINT(EM_DIAGRAM):   end;
1928263   +end;
MPRINT(EM_DIAGRAM):   end;
1928264   +
1928265   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1928266   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1928267   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1928268   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1928269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1928270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928271   +end;
MPRINT(EM_DIAGRAM):   end;
1928272   +else do;
MPRINT(EM_DIAGRAM):   else do;
1928273   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1928274   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1928275   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1928276   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1928277   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1928278   +   end;
MPRINT(EM_DIAGRAM):   end;
1928279   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1928280   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1928281   +   end;
MPRINT(EM_DIAGRAM):   end;
1928282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1928283   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1928284   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1928285   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928286   +   end;
MPRINT(EM_DIAGRAM):   end;
1928287   +end;
MPRINT(EM_DIAGRAM):   end;
1928288   +
1928289   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1928290   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1928291   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1928292   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1928293   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1928294   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928295   +end;
MPRINT(EM_DIAGRAM):   end;
1928296   +else do;
MPRINT(EM_DIAGRAM):   else do;
1928297   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1928298   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1928299   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1928300   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1928301   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1928302   +   end;
MPRINT(EM_DIAGRAM):   end;
1928303   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1928304   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1928305   +   end;
MPRINT(EM_DIAGRAM):   end;
1928306   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1928307   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1928308   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1928309   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928310   +   end;
MPRINT(EM_DIAGRAM):   end;
1928311   +end;
MPRINT(EM_DIAGRAM):   end;
1928312   +
1928313   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1928314   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1928315   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1928316   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1928317   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1928318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928319   +end;
MPRINT(EM_DIAGRAM):   end;
1928320   +else do;
MPRINT(EM_DIAGRAM):   else do;
1928321   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1928322   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1928323   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1928324   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1928325   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1928326   +   end;
MPRINT(EM_DIAGRAM):   end;
1928327   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1928328   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1928329   +   end;
MPRINT(EM_DIAGRAM):   end;
1928330   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1928331   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1928332   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1928333   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928334   +   end;
MPRINT(EM_DIAGRAM):   end;
1928335   +end;
MPRINT(EM_DIAGRAM):   end;
1928336   +
1928337   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1928338   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1928339   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1928340   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1928341   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1928342   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928343   +end;
MPRINT(EM_DIAGRAM):   end;
1928344   +else do;
MPRINT(EM_DIAGRAM):   else do;
1928345   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1928346   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1928347   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1928348   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1928349   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1928350   +   end;
MPRINT(EM_DIAGRAM):   end;
1928351   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1928352   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1928353   +   end;
MPRINT(EM_DIAGRAM):   end;
1928354   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1928355   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1928356   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1928357   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928358   +   end;
MPRINT(EM_DIAGRAM):   end;
1928359   +end;
MPRINT(EM_DIAGRAM):   end;
1928360   +
1928361   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1928362   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1928363   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1928364   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1928365   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1928366   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928367   +end;
MPRINT(EM_DIAGRAM):   end;
1928368   +else do;
MPRINT(EM_DIAGRAM):   else do;
1928369   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1928370   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1928371   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1928372   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1928373   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1928374   +   end;
MPRINT(EM_DIAGRAM):   end;
1928375   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1928376   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1928377   +   end;
MPRINT(EM_DIAGRAM):   end;
1928378   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1928379   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1928380   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1928381   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928382   +   end;
MPRINT(EM_DIAGRAM):   end;
1928383   +end;
MPRINT(EM_DIAGRAM):   end;
1928384   +
1928385   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1928386   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1928387   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1928388   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1928389   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1928390   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928391   +end;
MPRINT(EM_DIAGRAM):   end;
1928392   +else do;
MPRINT(EM_DIAGRAM):   else do;
1928393   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1928394   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1928395   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1928396   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1928397   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1928398   +   end;
MPRINT(EM_DIAGRAM):   end;
1928399   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1928400   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1928401   +   end;
MPRINT(EM_DIAGRAM):   end;
1928402   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1928403   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1928404   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1928405   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928406   +   end;
MPRINT(EM_DIAGRAM):   end;
1928407   +end;
MPRINT(EM_DIAGRAM):   end;
1928408   +
1928409   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1928410   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1928411   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1928412   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1928413   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1928414   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1928415   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1928416   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1928417   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1928418   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1928419   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1928420   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1928421   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1928422   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928423   +end;
MPRINT(EM_DIAGRAM):   end;
1928424   +else do;
MPRINT(EM_DIAGRAM):   else do;
1928425   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1928426   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1928427   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1928428   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1928429   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1928430   +   end;
MPRINT(EM_DIAGRAM):   end;
1928431   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1928432   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1928433   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1928434   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1928435   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1928436   +   end;
MPRINT(EM_DIAGRAM):   end;
1928437   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1928438   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1928439   +   end;
MPRINT(EM_DIAGRAM):   end;
1928440   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1928441   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1928442   +   end;
MPRINT(EM_DIAGRAM):   end;
1928443   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1928444   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1928445   +   end;
MPRINT(EM_DIAGRAM):   end;
1928446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1928447   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1928448   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1928449   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1928450   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1928451   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1928452   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928453   +   end;
MPRINT(EM_DIAGRAM):   end;
1928454   +end;
MPRINT(EM_DIAGRAM):   end;
1928455   +
1928456   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1928457   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1928458   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1928459   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1928460   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1928461   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1928462   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1928463   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1928464   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1928465   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1928466   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1928467   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1928468   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1928469   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1928470   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928471   +end;
MPRINT(EM_DIAGRAM):   end;
1928472   +else do;
MPRINT(EM_DIAGRAM):   else do;
1928473   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1928474   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1928475   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1928476   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1928477   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1928478   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1928479   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1928480   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1928481   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1928482   +         end;
MPRINT(EM_DIAGRAM):   end;
1928483   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1928484   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1928485   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1928486   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1928487   +            end;
MPRINT(EM_DIAGRAM):   end;
1928488   +         end;
MPRINT(EM_DIAGRAM):   end;
1928489   +      end;
MPRINT(EM_DIAGRAM):   end;
1928490   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1928491   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1928492   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1928493   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1928494   +         end;
MPRINT(EM_DIAGRAM):   end;
1928495   +      end;
MPRINT(EM_DIAGRAM):   end;
1928496   +   end;
MPRINT(EM_DIAGRAM):   end;
1928497   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1928498   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1928499   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1928500   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1928501   +      end;
MPRINT(EM_DIAGRAM):   end;
1928502   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1928503   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1928504   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1928505   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1928506   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1928507   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1928508   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1928509   +         end;
MPRINT(EM_DIAGRAM):   end;
1928510   +      end;
MPRINT(EM_DIAGRAM):   end;
1928511   +   end;
MPRINT(EM_DIAGRAM):   end;
1928512   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1928513   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1928514   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1928515   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1928516   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1928517   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1928518   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928519   +   end;
MPRINT(EM_DIAGRAM):   end;
1928520   +end;
MPRINT(EM_DIAGRAM):   end;
1928521   +
1928522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928523   +*** Checking missing input Interval
1928524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1928525   +
1928526   +IF NMISS(
1928527   +   AcceptedCmpTotal ,
1928528   +   Age ,
1928529   +   Frq ,
1928530   +   Income ,
1928531   +   Kidhome ,
1928532   +   Mnt ,
1928533   +   MntFishProducts ,
1928534   +   MntFruits ,
1928535   +   MntGoldProds ,
1928536   +   MntMeatProducts ,
1928537   +   MntSweetProducts ,
1928538   +   MntWines ,
1928539   +   MonthsAsCustomer ,
1928540   +   NumCatalogPurchases ,
1928541   +   NumDealsPurchases ,
1928542   +   NumDistPurchases ,
1928543   +   NumStorePurchases ,
1928544   +   NumWebPurchases ,
1928545   +   NumWebVisitsMonth ,
1928546   +   RFMstat ,
1928547   +   RMntFrq ,
1928548   +   Recency ,
1928549   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1928550   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1928551   +
1928552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1928553   +END;
MPRINT(EM_DIAGRAM):   END;
1928554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928555   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1928556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928557   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1928558   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1928559   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1928560   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1928561   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1928562   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1928563   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1928564   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1928565   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1928566   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1928567   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1928568   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1928569   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1928570   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1928571   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1928572   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1928573   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1928574   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1928575   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1928576   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1928577   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1928578   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1928579   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1928580   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1928581   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1928582   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1928583   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1928584   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1928585   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1928586   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1928587   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1928588   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1928589   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1928590   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1928591   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1928592   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1928593   +END;
MPRINT(EM_DIAGRAM):   END;
1928594   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1928595   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1928596   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1928597   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1928598   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1928599   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1928600   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1928601   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1928602   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1928603   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1928604   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1928605   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1928606   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1928607   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1928608   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1928609   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1928610   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1928611   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1928612   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1928613   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1928614   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1928615   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1928616   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1928617   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1928618   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1928619   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1928620   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1928621   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1928622   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1928623   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1928624   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1928625   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1928626   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1928627   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1928628   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1928629   +   ELSE S_NumCatalogPurchases
1928630   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1928631   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1928632   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1928633   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1928634   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1928635   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1928636   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1928637   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1928638   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1928639   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1928640   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1928641   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1928642   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1928643   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1928644   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1928645   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1928646   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1928647   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1928648   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1928649   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1928650   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1928651   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1928652   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1928653   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1928654   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1928655   +END;
MPRINT(EM_DIAGRAM):   END;
1928656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928657   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1928658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928660   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1928661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928663   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1928664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928665   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1928666   +   H11  =    -0.77671279308576 * S_AcceptedCmpTotal  +     0.06276847782938 *
1928667   +        S_Age  +     0.28523929172258 * S_Frq  +    -0.16845099559977 *
1928668   +        S_Income  +    -0.27053363011695 * S_Kidhome
1928669   +          +    -1.09156256196484 * S_Mnt  +     0.58182237483655 *
1928670   +        S_MntFishProducts  +     0.25675863714734 * S_MntFruits
1928671   +          +      0.0454563200405 * S_MntGoldProds  +    -5.07351872635196 *
1928672   +        S_MntMeatProducts  +    -0.38764617463096 * S_MntSweetProducts
1928673   +          +     1.47200483713388 * S_MntWines  +     0.02087322602764 *
1928674   +        S_MonthsAsCustomer  +    -1.91864887270715 * S_NumCatalogPurchases
1928675   +          +    -1.35624485206227 * S_NumDealsPurchases
1928676   +          +    -0.54646115734684 * S_NumDistPurchases
1928677   +          +     1.29794225108321 * S_NumStorePurchases
1928678   +          +      1.8453064081809 * S_NumWebPurchases
1928679   +          +    -0.92747144824026 * S_NumWebVisitsMonth
1928680   +          +    -0.19995123741427 * S_RFMstat  +     0.48950823591762 *
1928681   +        S_RMntFrq  +     0.73207333681971 * S_Recency
1928682   +          +     0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome +
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 *
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts +
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 *
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 *
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 *
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 *
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq +
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
1928683   +   H12  =     0.20907924263529 * S_AcceptedCmpTotal  +    -0.04441673137736 *
1928684   +        S_Age  +    -0.57706190006626 * S_Frq  +     0.72197500434049 *
1928685   +        S_Income  +    -0.79821220724157 * S_Kidhome
1928686   +          +     0.06756510400019 * S_Mnt  +    -0.01301180884635 *
1928687   +        S_MntFishProducts  +     0.03879053893804 * S_MntFruits
1928688   +          +     0.03800550315651 * S_MntGoldProds  +     1.09599381776859 *
1928689   +        S_MntMeatProducts  +    -0.14023873921478 * S_MntSweetProducts
1928690   +          +    -0.11985203414235 * S_MntWines  +     0.09033399768744 *
1928691   +        S_MonthsAsCustomer  +     0.73838488669636 * S_NumCatalogPurchases
1928692   +          +     0.72513216556859 * S_NumDealsPurchases
1928693   +          +    -0.15566774650584 * S_NumDistPurchases
1928694   +          +     -0.8847675798982 * S_NumStorePurchases
1928695   +          +    -0.79405200318252 * S_NumWebPurchases
1928696   +          +     1.74003779802254 * S_NumWebVisitsMonth
1928697   +          +     0.06136304829506 * S_RFMstat  +    -1.27535460576544 *
1928698   +        S_RMntFrq  +    -1.54235932941708 * S_Recency
1928699   +          +    -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome +
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 *
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts +
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 *
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 *
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 *
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 *
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq +
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
1928700   +   H13  =     1.20803865860067 * S_AcceptedCmpTotal  +     0.35118668657614 *
1928701   +        S_Age  +     0.05672453986511 * S_Frq  +     1.17585299493174 *
1928702   +        S_Income  +    -0.58596240450544 * S_Kidhome
1928703   +          +     0.51804850635312 * S_Mnt  +    -0.35954529110483 *
1928704   +        S_MntFishProducts  +    -0.19772554027783 * S_MntFruits
1928705   +          +     0.89852623954059 * S_MntGoldProds  +     2.27190763688161 *
1928706   +        S_MntMeatProducts  +    -0.11083019706496 * S_MntSweetProducts
1928707   +          +    -0.90257904236743 * S_MntWines  +    -0.15577302963523 *
1928708   +        S_MonthsAsCustomer  +     -0.3973145600744 * S_NumCatalogPurchases
1928709   +          +     0.17466385502192 * S_NumDealsPurchases
1928710   +          +    -0.06219545947203 * S_NumDistPurchases
1928711   +          +     0.16637546838853 * S_NumStorePurchases
1928712   +          +    -0.06908729397635 * S_NumWebPurchases
1928713   +          +     1.44269772444244 * S_NumWebVisitsMonth
1928714   +          +    -0.42552473444508 * S_RFMstat  +     1.15593872247069 *
1928715   +        S_RMntFrq  +    -1.38739950871333 * S_Recency
1928716   +          +    -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age +
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome +
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 *
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts +
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 *
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 *
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 *
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 *
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq +
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
1928717   +   H14  =     1.34205961864144 * S_AcceptedCmpTotal  +     0.04538824275157 *
1928718   +        S_Age  +    -0.62612233922485 * S_Frq  +     1.60325297683597 *
1928719   +        S_Income  +    -0.42454238091412 * S_Kidhome
1928720   +          +     -0.5021144828309 * S_Mnt  +     0.15473621089093 *
1928721   +        S_MntFishProducts  +    -0.46315096603476 * S_MntFruits
1928722   +          +    -0.00727410620887 * S_MntGoldProds  +     0.80613204370047 *
1928723   +        S_MntMeatProducts  +    -0.00973150686961 * S_MntSweetProducts
1928724   +          +    -0.77466877320525 * S_MntWines  +    -1.07894134788981 *
1928725   +        S_MonthsAsCustomer  +     1.21244809770862 * S_NumCatalogPurchases
1928726   +          +     0.77329078721398 * S_NumDealsPurchases
1928727   +          +     0.31693324305765 * S_NumDistPurchases
1928728   +          +    -1.08524196373091 * S_NumStorePurchases
1928729   +          +    -0.96945384922979 * S_NumWebPurchases
1928730   +          +     1.24659288571587 * S_NumWebVisitsMonth
1928731   +          +     0.68340040977392 * S_RFMstat  +    -0.95311334237745 *
1928732   +        S_RMntFrq  +    -2.48250049927721 * S_Recency
1928733   +          +    -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age +
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome +
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 *
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts +
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 *
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 *
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 *
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 *
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq +
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
1928734   +   H11  = H11  +     0.68591737970668 * AcceptedCmp10
1928735   +          +     0.10953116366473 * AcceptedCmp20  +    -0.16993156306405 *
1928736   +        AcceptedCmp30  +     0.27432491194076 * AcceptedCmp40
1928737   +          +     0.72979469569885 * AcceptedCmp50  +      0.4082086599102 *
1928738   +        Complain0  +     0.37432513428509 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 *
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 +
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 *
HigherEducationBinary0 ;
1928739   +   H12  = H12  +    -0.55218843021705 * AcceptedCmp10
1928740   +          +    -0.42214794059131 * AcceptedCmp20  +    -0.41245456463384 *
1928741   +        AcceptedCmp30  +    -0.46912762989278 * AcceptedCmp40
1928742   +          +    -0.67814931395121 * AcceptedCmp50  +     0.52766547061734 *
1928743   +        Complain0  +    -0.11259824030187 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 *
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 +
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 *
HigherEducationBinary0 ;
1928744   +   H13  = H13  +    -1.17961983832246 * AcceptedCmp10
1928745   +          +    -0.55955524489582 * AcceptedCmp20  +    -0.32274489790142 *
1928746   +        AcceptedCmp30  +     -0.0455535581358 * AcceptedCmp40
1928747   +          +    -0.28074222464367 * AcceptedCmp50  +    -1.08520418806551 *
1928748   +        Complain0  +     0.51457949781767 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 *
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 +
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 *
HigherEducationBinary0 ;
1928749   +   H14  = H14  +     0.87490641092708 * AcceptedCmp10
1928750   +          +     0.00502386525359 * AcceptedCmp20  +    -0.05761104298946 *
1928751   +        AcceptedCmp30  +    -0.53117463912559 * AcceptedCmp40
1928752   +          +    -0.47064201921979 * AcceptedCmp50  +     1.16941154144954 *
1928753   +        Complain0  +    -0.04715037863033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 *
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 +
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 *
HigherEducationBinary0 ;
1928754   +   H11  = H11  +    -0.37911030027343 * Education2n_Cycle
1928755   +          +      0.2584381078278 * EducationBasic  +    -0.01160126352321 *
1928756   +        EducationGraduation  +    -0.11075159631637 * EducationMaster
1928757   +          +     0.36788499721115 * Marital_StatusDivorced
1928758   +          +    -0.16988636986433 * Marital_StatusMarried
1928759   +          +    -0.24560973256761 * Marital_StatusSingle
1928760   +          +    -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 *
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried +
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
1928761   +   H12  = H12  +     0.52094231177555 * Education2n_Cycle
1928762   +          +    -0.36472141187644 * EducationBasic  +     0.17781886594929 *
1928763   +        EducationGraduation  +    -0.56430222714946 * EducationMaster
1928764   +          +     0.24497797058028 * Marital_StatusDivorced
1928765   +          +    -1.44410245434424 * Marital_StatusMarried
1928766   +          +     1.47441310087392 * Marital_StatusSingle
1928767   +          +    -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 *
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried +
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
1928768   +   H13  = H13  +    -0.61581930264064 * Education2n_Cycle
1928769   +          +     1.16586594891891 * EducationBasic  +    -0.22028467498096 *
1928770   +        EducationGraduation  +     0.04653963359475 * EducationMaster
1928771   +          +     0.15823225296452 * Marital_StatusDivorced
1928772   +          +    -0.39129434667884 * Marital_StatusMarried
1928773   +          +     0.84414069966504 * Marital_StatusSingle
1928774   +          +     0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 *
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried +
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
1928775   +   H14  = H14  +     0.17401167363048 * Education2n_Cycle
1928776   +          +    -0.17172073791902 * EducationBasic  +    -0.37448315843685 *
1928777   +        EducationGraduation  +     0.40030852414737 * EducationMaster
1928778   +          +     1.22039169814542 * Marital_StatusDivorced
1928779   +          +     0.91592976063128 * Marital_StatusMarried
1928780   +          +    -1.51267332883308 * Marital_StatusSingle
1928781   +          +     0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 *
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried +
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
1928782   +   H11  =    -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
1928783   +   H12  =     1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
1928784   +   H13  =     -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
1928785   +   H14  =    -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
1928786   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1928787   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1928788   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1928789   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1928790   +END;
MPRINT(EM_DIAGRAM):   END;
1928791   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1928792   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1928793   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1928794   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1928795   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1928796   +END;
MPRINT(EM_DIAGRAM):   END;
1928797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928798   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1928799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928800   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1928801   +   P_DepVar1  =    -3.91230969050101 * H11  +      5.7896524582153 * H12
1928802   +          +     2.86653546329598 * H13  +     3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 +
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
1928803   +   P_DepVar1  =    -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
1928804   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1928805   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1928806   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1928807   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1928808   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1928809   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1928810   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1928811   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1928812   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1928813   +END;
MPRINT(EM_DIAGRAM):   END;
1928814   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1928815   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1928816   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1928817   +END;
MPRINT(EM_DIAGRAM):   END;
1928818   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1928819   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1928820   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1928821   +END;
MPRINT(EM_DIAGRAM):   END;
1928822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928823   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1928824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1928825   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1928826   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1928827   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1928828   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1928829   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1928830   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1928831   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1928832   +END;
MPRINT(EM_DIAGRAM):   END;
1928833   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1928834   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1928835   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1928836   +drop
1928837   +H11
1928838   +H12
1928839   +H13
1928840   +H14
1928841   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1928842   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1928843    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1928844    quit;
1928845    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1928846    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1928847    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1928848    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
1928849    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1928850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1928851    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1928852    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928854    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
1928855    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928856    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1928857    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1928858    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1928859    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1928860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928861    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
1928862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1928863    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1928864    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928865    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928866    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1928867    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1928868    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928869    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928870    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1928871    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1928871  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.
 
1928872    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1928873    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1928874    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928875    filename _pref
1928875  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1928876    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1928877    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1928878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1928879   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1928880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1928881   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1928882   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1928883   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1928884    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1928885    quit;
1928886    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1928887    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1928888    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1928889    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1928890    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1928891    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928892    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1928893    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928894    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1928895    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1928896    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928897    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928898    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1928899    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1928900    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1928901    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928902    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1928903    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1928904    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1928905    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928906    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928907    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1928908    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1928909    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928910    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1928911    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1928912    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1928912  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1928913    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928914    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1928915    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928916    filename _pref
1928916  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1928917    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1928918    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1928919   +
1928920   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1928921   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1928921  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1928922   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1928923   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1928924   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1928925   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1928926   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1928927    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1928928    quit;
1928929    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1928930    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1928931    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1928932    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1928933    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1928934    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928935    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1928936    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1928938    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1928939    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928940    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928941    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1928942    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1928943    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1928944    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928945    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1928946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928947    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1928948    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928949    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928950    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1928951    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1928952    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1928953    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928954    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1928955    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1928955  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1928956    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1928957    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1928958    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1928959    filename _pref
1928959  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1928960    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1928961    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1928962   +
1928963   +
1928964   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1928965   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1928966   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1928967   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1928968   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1928969   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1928970   +
1928971   +
1928972   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1928973   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1928974   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1928975   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1928976   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1928977   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1928978   +
1928979   +
1928980   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1928981   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1928982   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1928983   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1928984   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1928985   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1928986   +
1928987   +
1928988   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1928989   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1928990   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1928991   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1928992   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1928993   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1928994   +
1928995   +
1928996   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1928997   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1928998   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1928999   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1929000   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1929001   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929002   +
1929003   +
1929004   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1929005   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1929006   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1929007   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1929008   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1929009   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929010   +
1929011   +
1929012   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1929013   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1929014   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1929015   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1929016   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1929017   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929018   +
1929019   +
1929020   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1929021   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1929022   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1929023   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1929024   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1929025   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929026   +if
1929027   +_FILTERNORM1 not in ( '.')
1929028   + and
1929029   +_FILTERNORM2 not in ( '.')
1929030   + and
1929031   +_FILTERNORM3 not in ( '.')
1929032   + and
1929033   +_FILTERNORM4 not in ( '.')
1929034   + and
1929035   +_FILTERNORM5 not in ( '.')
1929036   + and
1929037   +_FILTERNORM6 not in ( '.')
1929038   + and
1929039   +_FILTERNORM7 not in ( ' ')
1929040   + and
1929041   +_FILTERNORM8 not in ( ' ')
1929042   +and
1929043   +( Dt_Customer ne .)
1929044   +and ( Income ne . and (Income<=107000))
1929045   +and ( Kidhome ne .)
1929046   +and ( MntFishProducts ne .)
1929047   +and ( MntFruits ne .)
1929048   +and ( MntGoldProds ne .)
1929049   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1929050   +and ( MntSweetProducts ne .)
1929051   +and ( MntWines ne .)
1929052   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1929053   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1929054   +and ( NumStorePurchases ne .)
1929055   +and ( NumWebPurchases ne .)
1929056   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1929057   +and ( Recency ne .)
1929058   +and ( Teenhome ne .)
1929059   +and ( Year_Birth ne .)
1929060   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1929061   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1929062   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1929063   +end;
MPRINT(EM_DIAGRAM):   end;
1929064   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1929065   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1929066    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1929067    quit;
1929068    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1929069    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1929070    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1929071    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1929072    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1929073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929074    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1929075    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929077    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1929078    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1929080    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1929081    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1929082    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1929083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929084    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1929085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1929086    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1929087    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929089    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1929090    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1929091    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929092    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929093    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1929094    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1929094  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1929095    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929096    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1929097    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929098    %macro varDept(fcmpdata=,id=);
1929099    %global nobs&id scoreFlag&id;
1929100    %let scoreFlag&id = 0;
1929101    %if &id=1 or ^&fcmpStart %then %do;
1929102    proc sort data=&fcmpdata out=_temp&id nodupkey;
1929103    by NAME;
1929104    where id=&id and LHS in( %let j=1;
1929105    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1929106    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1929107    "&var" %let j = %eval(&j+1);
1929108    %end;
1929109    );
1929110    run;
1929111    %let dsid = %sysfunc(open(_temp&id));
1929112    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1929113    %let dsid = %sysfunc(close(&dsid));
1929114    %if &&nobs&id %then %do;
1929115    %let scoreFlag&id = 1;
1929116    %let fcmpStart = 1;
1929117    %end;
1929118    %else %let fcmpStart = 0;
1929119    %end;
1929120    %else %do;
1929121    proc sort data=&fcmpdata out=_tempid;
1929122    where id=&id;
1929123    by LHS;
1929124    run;
1929125    %let dsid = %sysfunc(open(_tempid));
1929126    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1929127    %let dsid = %sysfunc(close(&dsid));
1929128    %if ^&&nobs&id %then %do;
1929129    proc datasets lib=work nolist;
1929130    delete _tempid;
1929131    run;
1929132    quit;
1929133    %end;
1929134    %else %do;
1929135    data _tempAll;
1929136    set %let j=%eval(&id-1);
1929137    %do x=1 %to &j;
1929138    %if &&nobs&x %then %do;
1929139    _temp&x %end;
1929140    %end;
1929141    ;
1929142    run;
1929143    proc sql;
1929144    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1929144  ! work._tempid p2 where p.name=p2.lhs;
1929145    quit;
1929146    data _temp&id;
1929147    set _temp&id;
1929148    where LHS ne '' and NAME ne '' and Node ne '';
1929149    run;
1929150    proc datasets lib=work nolist;
1929151    delete _tempAll;
1929152    run;
1929153    %let dsid = %sysfunc(open(_temp&id));
1929154    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1929155    %let dsid = %sysfunc(close(&dsid));
1929156    %if ^&&nobs&id %then %do;
1929157    proc datasets lib=work nolist;
1929158    delete _temp&id;
1929159    run;
1929160    quit;
1929161    %end;
1929162    %else %do;
1929163    %let scoreFlag&id = 1;
1929164    data _temp&id;
1929165    set _temp&id;
1929166    where LHS ne NAME and node ne '';
1929167    run;
1929168    %let dsid = %sysfunc(open(_temp&id));
1929169    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1929170    %let dsid = %sysfunc(close(&dsid));
1929171    %if ^&&nobs&id %then %do;
1929172    proc datasets lib=work nolist;
1929173    delete _temp&id;
1929174    run;
1929175    quit;
1929176    %end;
1929177    %else %do;
1929178    proc sort data=_temp&id nodupkey;
1929179    by LHS NAME;
1929180    run;
1929181    %end;
1929182    %end;
1929183    %end;
1929184    %end;
1929185    %mend varDept;
1929186    %macro optCode(outdata=fcmpdata);
1929187    %global fcmpStart;
1929188    %let fcmpStart = 0;
1929189    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1929190    %let NumNodes=9;
1929191    %do k=1 %to &NumNodes;
1929192    %vardept(fcmpdata=&outdata, id=&k);
1929193    %end;
1929194    %mend optCode;
1929195    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1929196    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1929197    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1929198    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1929199    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929200    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1929201    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1929202    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1929203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929204    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1929205    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1929205  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1929206    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1929207    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1929208    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1929209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929210    filename _pref
1929210  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
1929211    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1929212    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
1929213   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1929214   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1929215   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1929216   +
1929217   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1929218   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1929219   +
1929220   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1929221   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1929222   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1929223   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1929224   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1929225   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1929226   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1929227   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1929228   +
1929229   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1929230   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1929231   +
1929232   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1929233   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1929234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929236   +end;
MPRINT(EM_DIAGRAM):   end;
1929237   +
1929238   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1929239   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1929240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929242   +end;
MPRINT(EM_DIAGRAM):   end;
1929243   +
1929244   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1929245   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1929246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929248   +end;
MPRINT(EM_DIAGRAM):   end;
1929249   +
1929250   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1929251   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1929252   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929253   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929254   +end;
MPRINT(EM_DIAGRAM):   end;
1929255   +
1929256   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1929257   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1929258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929260   +end;
MPRINT(EM_DIAGRAM):   end;
1929261   +
1929262   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1929263   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1929264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929266   +end;
MPRINT(EM_DIAGRAM):   end;
1929267   +
1929268   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1929269   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1929270   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929271   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929272   +end;
MPRINT(EM_DIAGRAM):   end;
1929273   +
1929274   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1929275   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1929276   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929278   +end;
MPRINT(EM_DIAGRAM):   end;
1929279   +
1929280   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1929281   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1929282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929284   +end;
MPRINT(EM_DIAGRAM):   end;
1929285   +
1929286   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1929287   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1929288   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929290   +end;
MPRINT(EM_DIAGRAM):   end;
1929291   +
1929292   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1929293   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1929294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929296   +end;
MPRINT(EM_DIAGRAM):   end;
1929297   +
1929298   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1929299   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1929300   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929301   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929302   +end;
MPRINT(EM_DIAGRAM):   end;
1929303   +
1929304   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1929305   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1929306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929308   +end;
MPRINT(EM_DIAGRAM):   end;
1929309   +
1929310   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1929311   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1929312   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1929313   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1929314   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1929315   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1929316   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1929317   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1929318   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1929319   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1929320   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1929321   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1929322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929324   +end;
MPRINT(EM_DIAGRAM):   end;
1929325   +else do;
MPRINT(EM_DIAGRAM):   else do;
1929326   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1929327   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1929328   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1929329   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1929330   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1929331   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1929332   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1929333   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1929334   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1929335   +         end;
MPRINT(EM_DIAGRAM):   end;
1929336   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1929337   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1929338   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1929339   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1929340   +            end;
MPRINT(EM_DIAGRAM):   end;
1929341   +         end;
MPRINT(EM_DIAGRAM):   end;
1929342   +      end;
MPRINT(EM_DIAGRAM):   end;
1929343   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1929344   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1929345   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1929346   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1929347   +         end;
MPRINT(EM_DIAGRAM):   end;
1929348   +      end;
MPRINT(EM_DIAGRAM):   end;
1929349   +   end;
MPRINT(EM_DIAGRAM):   end;
1929350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1929351   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1929352   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1929353   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1929354   +      end;
MPRINT(EM_DIAGRAM):   end;
1929355   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1929356   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1929357   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1929358   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1929359   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1929360   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1929361   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1929362   +         end;
MPRINT(EM_DIAGRAM):   end;
1929363   +      end;
MPRINT(EM_DIAGRAM):   end;
1929364   +   end;
MPRINT(EM_DIAGRAM):   end;
1929365   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1929366   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1929367   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1929368   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1929369   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1929370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1929371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929372   +   end;
MPRINT(EM_DIAGRAM):   end;
1929373   +end;
MPRINT(EM_DIAGRAM):   end;
1929374   +
1929375   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1929376   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1929377   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1929378   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1929379   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1929380   +end;
MPRINT(EM_DIAGRAM):   end;
1929381   +
1929382   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1929383   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1929384   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1929385   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1929386   +
1929387   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1929388   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1929389   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1929390   +
1929391   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1929392   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1929393   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1929394   +
1929395   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1929396   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1929397   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1929398   +
1929399   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1929400   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1929401   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1929402   +
1929403   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1929404   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1929405   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1929406   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1929407   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1929408   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1929409   +
1929410   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1929411   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1929412   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1929413   +
1929414   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1929415   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1929416   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1929417   +
1929418   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1929419   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1929420   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1929421   +
1929422   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1929423   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1929424   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1929425   +
1929426   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1929427   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1929428   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1929429   +
1929430   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1929431   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1929432   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1929433   +
1929434   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1929435   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1929436   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1929437   +
1929438   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1929439   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1929440   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1929441   +
1929442   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1929443   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1929444   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1929445   +
1929446   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1929447   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1929448   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1929449   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1929450   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1929451   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1929452   +end;
MPRINT(EM_DIAGRAM):   end;
1929453   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1929454   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1929455   +
1929456   +REGDR1:
1929457   +
1929458   +
1929459   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
1929460   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1929461   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1929462   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1929463   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1929464   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1929465   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1929466   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1929467   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1929468   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1929469   +end;
MPRINT(EM_DIAGRAM):   end;
1929470   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1929471   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1929472   +
1929473   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1929474   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1929475   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1929476    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1929477    quit;
1929478    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1929479    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1929480    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1929481    retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
1929482    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1929483    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929484    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1929485    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929486    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929487    proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
1929488    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929489    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929490    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1929491    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1929492    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1929493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929494    proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
1929495    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1929496    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1929497    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929499    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1929500    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1929501    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929502    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929503    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1929504    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1929504  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.
 
1929505    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929506    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1929507    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929508    filename _pref
1929508  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1929509    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1929510    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1929511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1929512   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1929513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1929514   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1929515   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1929516   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1929517    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1929518    quit;
1929519    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1929520    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1929521    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1929522    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1929523    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1929524    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929525    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1929526    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929527    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929528    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1929529    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929530    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929531    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1929532    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1929533    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1929534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929535    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1929536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.40 seconds
      cpu time            0.03 seconds
 
 
1929537    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1929538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929540    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1929541    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1929542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929543    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929544    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1929545    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1929545  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1929546    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929547    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1929548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929549    filename _pref
1929549  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1929550    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1929551    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1929552   +
1929553   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1929554   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1929554  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1929555   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1929556   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1929557   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1929558   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1929559   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1929560    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1929561    quit;
1929562    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1929563    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1929564    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1929565    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1929566    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1929567    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929568    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1929569    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929571    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1929572    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929573    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929574    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1929575    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1929576    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1929577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929578    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1929579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929580    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1929581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929582    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929583    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1929584    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1929585    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929586    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929587    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1929588    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1929588  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1929589    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929590    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1929591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929592    filename _pref
1929592  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1929593    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1929594    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1929595   +
1929596   +
1929597   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1929598   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1929599   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1929600   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1929601   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1929602   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929603   +
1929604   +
1929605   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1929606   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1929607   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1929608   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1929609   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1929610   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929611   +
1929612   +
1929613   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1929614   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1929615   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1929616   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1929617   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1929618   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929619   +
1929620   +
1929621   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1929622   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1929623   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1929624   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1929625   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1929626   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929627   +
1929628   +
1929629   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1929630   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1929631   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1929632   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1929633   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1929634   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929635   +
1929636   +
1929637   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1929638   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1929639   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1929640   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1929641   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1929642   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929643   +
1929644   +
1929645   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1929646   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1929647   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1929648   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1929649   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1929650   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929651   +
1929652   +
1929653   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1929654   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1929655   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1929656   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1929657   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1929658   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1929659   +if
1929660   +_FILTERNORM1 not in ( '.')
1929661   + and
1929662   +_FILTERNORM2 not in ( '.')
1929663   + and
1929664   +_FILTERNORM3 not in ( '.')
1929665   + and
1929666   +_FILTERNORM4 not in ( '.')
1929667   + and
1929668   +_FILTERNORM5 not in ( '.')
1929669   + and
1929670   +_FILTERNORM6 not in ( '.')
1929671   + and
1929672   +_FILTERNORM7 not in ( ' ')
1929673   + and
1929674   +_FILTERNORM8 not in ( ' ')
1929675   +and
1929676   +( Dt_Customer ne .)
1929677   +and ( Income ne . and (Income<=107000))
1929678   +and ( Kidhome ne .)
1929679   +and ( MntFishProducts ne .)
1929680   +and ( MntFruits ne .)
1929681   +and ( MntGoldProds ne .)
1929682   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1929683   +and ( MntSweetProducts ne .)
1929684   +and ( MntWines ne .)
1929685   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1929686   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1929687   +and ( NumStorePurchases ne .)
1929688   +and ( NumWebPurchases ne .)
1929689   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1929690   +and ( Recency ne .)
1929691   +and ( Teenhome ne .)
1929692   +and ( Year_Birth ne .)
1929693   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1929694   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1929695   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1929696   +end;
MPRINT(EM_DIAGRAM):   end;
1929697   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1929698   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1929699    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1929700    quit;
1929701    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1929702    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1929703    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1929704    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1929705    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1929706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929707    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1929708    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929709    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929710    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1929711    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929712    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929713    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1929714    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1929715    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1929716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1929717    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1929718    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1929719    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1929720    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929721    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929722    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1929723    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1929724    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1929725    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929726    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1929727    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1929727  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1929728    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929729    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1929730    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1929731    %macro varDept(fcmpdata=,id=);
1929732    %global nobs&id scoreFlag&id;
1929733    %let scoreFlag&id = 0;
1929734    %if &id=1 or ^&fcmpStart %then %do;
1929735    proc sort data=&fcmpdata out=_temp&id nodupkey;
1929736    by NAME;
1929737    where id=&id and LHS in( %let j=1;
1929738    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1929739    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1929740    "&var" %let j = %eval(&j+1);
1929741    %end;
1929742    );
1929743    run;
1929744    %let dsid = %sysfunc(open(_temp&id));
1929745    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1929746    %let dsid = %sysfunc(close(&dsid));
1929747    %if &&nobs&id %then %do;
1929748    %let scoreFlag&id = 1;
1929749    %let fcmpStart = 1;
1929750    %end;
1929751    %else %let fcmpStart = 0;
1929752    %end;
1929753    %else %do;
1929754    proc sort data=&fcmpdata out=_tempid;
1929755    where id=&id;
1929756    by LHS;
1929757    run;
1929758    %let dsid = %sysfunc(open(_tempid));
1929759    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1929760    %let dsid = %sysfunc(close(&dsid));
1929761    %if ^&&nobs&id %then %do;
1929762    proc datasets lib=work nolist;
1929763    delete _tempid;
1929764    run;
1929765    quit;
1929766    %end;
1929767    %else %do;
1929768    data _tempAll;
1929769    set %let j=%eval(&id-1);
1929770    %do x=1 %to &j;
1929771    %if &&nobs&x %then %do;
1929772    _temp&x %end;
1929773    %end;
1929774    ;
1929775    run;
1929776    proc sql;
1929777    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1929777  ! work._tempid p2 where p.name=p2.lhs;
1929778    quit;
1929779    data _temp&id;
1929780    set _temp&id;
1929781    where LHS ne '' and NAME ne '' and Node ne '';
1929782    run;
1929783    proc datasets lib=work nolist;
1929784    delete _tempAll;
1929785    run;
1929786    %let dsid = %sysfunc(open(_temp&id));
1929787    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1929788    %let dsid = %sysfunc(close(&dsid));
1929789    %if ^&&nobs&id %then %do;
1929790    proc datasets lib=work nolist;
1929791    delete _temp&id;
1929792    run;
1929793    quit;
1929794    %end;
1929795    %else %do;
1929796    %let scoreFlag&id = 1;
1929797    data _temp&id;
1929798    set _temp&id;
1929799    where LHS ne NAME and node ne '';
1929800    run;
1929801    %let dsid = %sysfunc(open(_temp&id));
1929802    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1929803    %let dsid = %sysfunc(close(&dsid));
1929804    %if ^&&nobs&id %then %do;
1929805    proc datasets lib=work nolist;
1929806    delete _temp&id;
1929807    run;
1929808    quit;
1929809    %end;
1929810    %else %do;
1929811    proc sort data=_temp&id nodupkey;
1929812    by LHS NAME;
1929813    run;
1929814    %end;
1929815    %end;
1929816    %end;
1929817    %end;
1929818    %mend varDept;
1929819    %macro optCode(outdata=fcmpdata);
1929820    %global fcmpStart;
1929821    %let fcmpStart = 0;
1929822    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1929823    %let NumNodes=9;
1929824    %do k=1 %to &NumNodes;
1929825    %vardept(fcmpdata=&outdata, id=&k);
1929826    %end;
1929827    %mend optCode;
1929828    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 56 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1929829    filename _pref
1929829  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
1929830    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1929831    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
1929832   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1929833   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1929834   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1929835   +
1929836   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1929837   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1929838   +
1929839   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1929840   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1929841   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1929842   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1929843   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1929844   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1929845   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1929846   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1929847   +
1929848   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1929849   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1929850   +
1929851   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1929852   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1929853   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929855   +end;
MPRINT(EM_DIAGRAM):   end;
1929856   +
1929857   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1929858   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1929859   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929861   +end;
MPRINT(EM_DIAGRAM):   end;
1929862   +
1929863   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1929864   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1929865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929867   +end;
MPRINT(EM_DIAGRAM):   end;
1929868   +
1929869   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1929870   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1929871   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929872   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929873   +end;
MPRINT(EM_DIAGRAM):   end;
1929874   +
1929875   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1929876   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1929877   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929878   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929879   +end;
MPRINT(EM_DIAGRAM):   end;
1929880   +
1929881   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1929882   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1929883   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929885   +end;
MPRINT(EM_DIAGRAM):   end;
1929886   +
1929887   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1929888   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1929889   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929890   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929891   +end;
MPRINT(EM_DIAGRAM):   end;
1929892   +
1929893   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1929894   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1929895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929897   +end;
MPRINT(EM_DIAGRAM):   end;
1929898   +
1929899   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1929900   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1929901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929903   +end;
MPRINT(EM_DIAGRAM):   end;
1929904   +
1929905   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1929906   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1929907   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929908   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929909   +end;
MPRINT(EM_DIAGRAM):   end;
1929910   +
1929911   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1929912   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1929913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929915   +end;
MPRINT(EM_DIAGRAM):   end;
1929916   +
1929917   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1929918   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1929919   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929921   +end;
MPRINT(EM_DIAGRAM):   end;
1929922   +
1929923   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1929924   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1929925   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1929926   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1929927   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1929928   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1929929   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1929930   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1929931   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1929932   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1929933   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1929934   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1929935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1929936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929937   +end;
MPRINT(EM_DIAGRAM):   end;
1929938   +else do;
MPRINT(EM_DIAGRAM):   else do;
1929939   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1929940   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1929941   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1929942   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1929943   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1929944   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1929945   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1929946   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1929947   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1929948   +         end;
MPRINT(EM_DIAGRAM):   end;
1929949   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1929950   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1929951   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1929952   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1929953   +            end;
MPRINT(EM_DIAGRAM):   end;
1929954   +         end;
MPRINT(EM_DIAGRAM):   end;
1929955   +      end;
MPRINT(EM_DIAGRAM):   end;
1929956   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1929957   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1929958   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1929959   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1929960   +         end;
MPRINT(EM_DIAGRAM):   end;
1929961   +      end;
MPRINT(EM_DIAGRAM):   end;
1929962   +   end;
MPRINT(EM_DIAGRAM):   end;
1929963   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1929964   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1929965   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1929966   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1929967   +      end;
MPRINT(EM_DIAGRAM):   end;
1929968   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1929969   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1929970   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1929971   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1929972   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1929973   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1929974   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1929975   +         end;
MPRINT(EM_DIAGRAM):   end;
1929976   +      end;
MPRINT(EM_DIAGRAM):   end;
1929977   +   end;
MPRINT(EM_DIAGRAM):   end;
1929978   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1929979   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1929980   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1929981   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1929982   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1929983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1929984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1929985   +   end;
MPRINT(EM_DIAGRAM):   end;
1929986   +end;
MPRINT(EM_DIAGRAM):   end;
1929987   +
1929988   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1929989   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1929990   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1929991   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1929992   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1929993   +end;
MPRINT(EM_DIAGRAM):   end;
1929994   +
1929995   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1929996   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1929997   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1929998   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1929999   +
1930000   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1930001   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1930002   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1930003   +
1930004   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1930005   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1930006   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1930007   +
1930008   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1930009   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1930010   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1930011   +
1930012   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1930013   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1930014   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1930015   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1930016   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1930017   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1930018   +
1930019   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1930020   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1930021   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1930022   +
1930023   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1930024   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1930025   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1930026   +
1930027   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1930028   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1930029   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1930030   +
1930031   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1930032   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1930033   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1930034   +
1930035   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1930036   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1930037   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1930038   +
1930039   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1930040   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1930041   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1930042   +
1930043   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1930044   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1930045   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1930046   +
1930047   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1930048   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1930049   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1930050   +
1930051   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1930052   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1930053   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1930054   +
1930055   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1930056   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1930057   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1930058   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1930059   +
1930060   +REG5DR1:
1930061   +
1930062   +
1930063   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
1930064   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1930065   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1930066   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1930067   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1930068   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1930069   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1930070   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1930071   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1930072   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1930073   +end;
MPRINT(EM_DIAGRAM):   end;
1930074   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1930075   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1930076   +
1930077   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1930078   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1930079   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1930080    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1930081    quit;
1930082    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1930083    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1930084    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1930085    retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
1930086    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1930087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930088    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1930089    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930090    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930091    proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
1930092    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930093    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930094    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1930095    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1930096    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1930097    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930098    proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
1930099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1930100    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1930101    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930102    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
The SAS System
 
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930103    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1930104    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1930105    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930106    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930107    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1930108    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1930108  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.
 
1930109    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930110    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1930111    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930112    filename _pref
1930112  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1930113    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1930114    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1930115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1930116   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1930117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1930118   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1930119   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1930120   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1930121    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1930122    quit;
1930123    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1930124    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1930125    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1930126    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1930127    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1930128    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930129    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1930130    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930131    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930132    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1930133    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930134    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930135    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1930136    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1930137    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1930138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930139    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1930140    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1930141    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1930142    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930143    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930144    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1930145    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1930146    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930147    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930148    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1930149    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1930149  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1930150    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930151    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1930152    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930153    filename _pref
1930153  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1930154    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1930155    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1930156   +
1930157   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1930158   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1930158  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1930159   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1930160   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1930161   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1930162   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1930163   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1930164    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1930165    quit;
1930166    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1930167    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1930168    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1930169    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1930170    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1930171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930172    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1930173    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930174    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930175    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1930176    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930177    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930178    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1930179    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1930180    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1930181    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930182    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1930183    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1930184    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1930185    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930186    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930187    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1930188    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1930189    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930190    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930191    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1930192    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1930192  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1930193    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930194    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1930195    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930196    filename _pref
1930196  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1930197    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1930198    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1930199   +
1930200   +
1930201   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1930202   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1930203   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1930204   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1930205   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1930206   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1930207   +
1930208   +
1930209   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1930210   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1930211   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1930212   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1930213   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1930214   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1930215   +
1930216   +
1930217   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1930218   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1930219   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1930220   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1930221   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1930222   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1930223   +
1930224   +
1930225   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1930226   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1930227   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1930228   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1930229   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1930230   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1930231   +
1930232   +
1930233   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1930234   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1930235   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1930236   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1930237   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1930238   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1930239   +
1930240   +
1930241   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1930242   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1930243   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1930244   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1930245   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1930246   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1930247   +
1930248   +
1930249   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1930250   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1930251   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1930252   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1930253   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1930254   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1930255   +
1930256   +
1930257   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1930258   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1930259   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1930260   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1930261   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1930262   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1930263   +if
1930264   +_FILTERNORM1 not in ( '.')
1930265   + and
1930266   +_FILTERNORM2 not in ( '.')
1930267   + and
1930268   +_FILTERNORM3 not in ( '.')
1930269   + and
1930270   +_FILTERNORM4 not in ( '.')
1930271   + and
1930272   +_FILTERNORM5 not in ( '.')
1930273   + and
1930274   +_FILTERNORM6 not in ( '.')
1930275   + and
1930276   +_FILTERNORM7 not in ( ' ')
1930277   + and
1930278   +_FILTERNORM8 not in ( ' ')
1930279   +and
1930280   +( Dt_Customer ne .)
1930281   +and ( Income ne . and (Income<=107000))
1930282   +and ( Kidhome ne .)
1930283   +and ( MntFishProducts ne .)
1930284   +and ( MntFruits ne .)
1930285   +and ( MntGoldProds ne .)
1930286   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1930287   +and ( MntSweetProducts ne .)
1930288   +and ( MntWines ne .)
1930289   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1930290   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1930291   +and ( NumStorePurchases ne .)
1930292   +and ( NumWebPurchases ne .)
1930293   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1930294   +and ( Recency ne .)
1930295   +and ( Teenhome ne .)
1930296   +and ( Year_Birth ne .)
1930297   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1930298   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1930299   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1930300   +end;
MPRINT(EM_DIAGRAM):   end;
1930301   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1930302   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1930303    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1930304    quit;
1930305    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1930306    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1930307    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1930308    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1930309    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1930310    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930311    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1930312    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930313    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930314    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1930315    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930317    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1930318    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1930319    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1930320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930321    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1930322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1930323    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1930324    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930325    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930326    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1930327    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1930328    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930329    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930330    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1930331    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1930331  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1930332    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930333    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1930334    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930335    %macro varDept(fcmpdata=,id=);
1930336    %global nobs&id scoreFlag&id;
1930337    %let scoreFlag&id = 0;
1930338    %if &id=1 or ^&fcmpStart %then %do;
1930339    proc sort data=&fcmpdata out=_temp&id nodupkey;
1930340    by NAME;
1930341    where id=&id and LHS in( %let j=1;
1930342    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1930343    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1930344    "&var" %let j = %eval(&j+1);
1930345    %end;
1930346    );
1930347    run;
1930348    %let dsid = %sysfunc(open(_temp&id));
1930349    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1930350    %let dsid = %sysfunc(close(&dsid));
1930351    %if &&nobs&id %then %do;
1930352    %let scoreFlag&id = 1;
1930353    %let fcmpStart = 1;
1930354    %end;
1930355    %else %let fcmpStart = 0;
1930356    %end;
1930357    %else %do;
1930358    proc sort data=&fcmpdata out=_tempid;
1930359    where id=&id;
1930360    by LHS;
1930361    run;
1930362    %let dsid = %sysfunc(open(_tempid));
1930363    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1930364    %let dsid = %sysfunc(close(&dsid));
1930365    %if ^&&nobs&id %then %do;
1930366    proc datasets lib=work nolist;
1930367    delete _tempid;
1930368    run;
1930369    quit;
1930370    %end;
1930371    %else %do;
1930372    data _tempAll;
1930373    set %let j=%eval(&id-1);
1930374    %do x=1 %to &j;
1930375    %if &&nobs&x %then %do;
1930376    _temp&x %end;
1930377    %end;
1930378    ;
1930379    run;
1930380    proc sql;
1930381    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1930381  ! work._tempid p2 where p.name=p2.lhs;
1930382    quit;
1930383    data _temp&id;
1930384    set _temp&id;
1930385    where LHS ne '' and NAME ne '' and Node ne '';
1930386    run;
1930387    proc datasets lib=work nolist;
1930388    delete _tempAll;
1930389    run;
1930390    %let dsid = %sysfunc(open(_temp&id));
1930391    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1930392    %let dsid = %sysfunc(close(&dsid));
1930393    %if ^&&nobs&id %then %do;
1930394    proc datasets lib=work nolist;
1930395    delete _temp&id;
1930396    run;
1930397    quit;
1930398    %end;
1930399    %else %do;
1930400    %let scoreFlag&id = 1;
1930401    data _temp&id;
1930402    set _temp&id;
1930403    where LHS ne NAME and node ne '';
1930404    run;
1930405    %let dsid = %sysfunc(open(_temp&id));
1930406    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1930407    %let dsid = %sysfunc(close(&dsid));
1930408    %if ^&&nobs&id %then %do;
1930409    proc datasets lib=work nolist;
1930410    delete _temp&id;
1930411    run;
1930412    quit;
1930413    %end;
1930414    %else %do;
1930415    proc sort data=_temp&id nodupkey;
1930416    by LHS NAME;
1930417    run;
1930418    %end;
1930419    %end;
1930420    %end;
1930421    %end;
1930422    %mend varDept;
1930423    %macro optCode(outdata=fcmpdata);
1930424    %global fcmpStart;
1930425    %let fcmpStart = 0;
1930426    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1930427    %let NumNodes=9;
1930428    %do k=1 %to &NumNodes;
1930429    %vardept(fcmpdata=&outdata, id=&k);
1930430    %end;
1930431    %mend optCode;
1930432    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1930433    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1930434    * Ensmbl27: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing metadata for TRAIN data;
1930435    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL27_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl27_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl27_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl27_TRAIN out=WORK.M3CJ7K0T noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CJ7K0T;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CJ7K0T(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CJ7K0T;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CJ7K0T;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3C3AV5_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3C3AV5_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3C3AV5_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11FFH3P(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3C3AV5_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3C3AV5_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3C3AV5_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3C3AV5_;
MPRINT(EMADVISECOLUMNS):   set WORK.M3C3AV5_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl27";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl27";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1930755    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1930756    set EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMINFO;
1930757    where DATA='Ensmbl27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1930758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_EMINFO.
      WHERE (DATA='Ensmbl27') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930759    data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMINFO;
1930760    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1930761    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1930762    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1930766    run;
1930767    data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMINFO;
1930768    set EMWS8.Ensmbl27_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMINFO WORK.MODELTEMP_INFO;
1930769    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930770    proc sort data = EMWS8.Ensmbl27_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl27_EMINFO NOTHREADS;
1930771    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1930772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930773    proc sort data = EMWS8.Neural10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1930774    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1930775    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930776    proc sort data = EMWS8.Ensmbl27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1930777    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1930778    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930779    data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMINFO;
1930780    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1930781    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1930782    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930783    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1930784    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1930785    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1930786    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL27_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL27_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                17.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1ANZJSY
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1ANZJSY new;
MPRINT(EM_DIAGRAM):   run;
1930810    data EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMOUTFIT;
1930811    set EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMOUTFIT;
1930812    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1930813    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1930813  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1930814    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1930815    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL27_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL27_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930816    proc sort data=EMWS8.Ensmbl27_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl27_EMREPORTFIT nothreads;
1930817    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1930818    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL27_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL27_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930819    %let _EMwarndup = 0;
1930820    %let _EMtargetdup =;
1930821    %let _EMASEtargetdup =;
1930822    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1930823    set EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMOUTFIT;
1930824    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1930825    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1930826    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1930827    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1930828    end;
MPRINT(EM_DIAGRAM):   end;
1930829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL27_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930830    proc sort data=EMWS8.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
1930831    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930832    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930833    proc sort data=EMWS8.Ensmbl27_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl27_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1930834    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930835    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL27_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930836    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1930837    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1930838    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1930839    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1930840    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1930841    set EMWS8.Ensmbl27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_CMeta_TRAIN;
1930842    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1930842  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1930843    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL27_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1930844    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1930845    set EMWS8.Ensmbl27_TRAIN(keep=
1930846    F_DepVar
1930847    I_DepVar
1930848    P_DepVar0
1930849    P_DepVar1
1930850    R_DepVar0
1930851    R_DepVar1
1930852    U_DepVar
1930853    _WARN_
1930854    DepVar
1930855    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1930856    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL27_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL10_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL27_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl27_26N3NIL nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl27_26N3NIL;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl27_26N3NIL(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl27_26N3NIL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl27_26N3NIL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0001920216 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1935122    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1935123    set EMWS8.Ensmbl27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_CMeta_TRAIN;
1935124    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1935124  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1935125    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL27_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1935126    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1935127    set EMWS8.Ensmbl27_VALIDATE(keep=
1935128    F_DepVar
1935129    I_DepVar
1935130    P_DepVar0
1935131    P_DepVar1
1935132    R_DepVar0
1935133    R_DepVar1
1935134    U_DepVar
1935135    _WARN_
1935136    DepVar
1935137    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1935138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL27_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL10_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL27_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl27_127Y979 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl27_127Y979;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl27_127Y979(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMCLASSIFICATION WORK.Ensmbl27_127Y979;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl27_127Y979;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0001920106 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1939413    %let _cn = %sysfunc(getoption(CENTER));
1939414    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1939415    proc print data=EMWS8.Ensmbl27_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl27_EMREPORTFIT noobs label;
1939416    var STAT LABEL TRAIN
1939417    VALIDATE
1939418    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1939419    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1939420    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1939421    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1939422    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL27_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1188.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1939423    title10;
MPRINT(EM_DIAGRAM):   title10;
1939424    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1939425    proc sort data=EMWS8.Ensmbl27_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl27_EMCLASSIFICATION nothreads;
1939426    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1939427    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL27_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL27_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1939428    %let _cn = %sysfunc(getoption(CENTER));
1939429    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1939430    proc print data=EMWS8.Ensmbl27_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl27_EMCLASSIFICATION noobs label;
1939431    var from into pct_row pct_col count percent
1939432    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1939433    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1939434    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1939435    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1939436    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1939437    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1939438    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1939439    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1939440    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1939441    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1939442    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1939443    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL27_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1189.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1939444    title9;
MPRINT(EM_DIAGRAM):   title9;
1939445    title10;
MPRINT(EM_DIAGRAM):   title10;
1939446    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1939447    %let _cn = %sysfunc(getoption(CENTER));
1939448    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1939449    data EMWS8.Ensmbl27_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMEVENTREPORT;
1939450    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1939450  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1939451    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1939451  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1939451  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1939451  ! FALSEEVENT
1939452    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1939452  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1939452  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1939453       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1939454    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1939455    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1939456    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1939457    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1939458    set EMWS8.Ensmbl27_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMEVENTREPORT;
1939459    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL27_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL27_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1939460    proc print data=EMWS8.Ensmbl27_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl27_EMEVENTREPORT noobs label;
1939461    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1939462    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1939463    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1939464    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL27_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1190.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1939465    title10;
MPRINT(EM_DIAGRAM):   title10;
1939466    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1939467    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1939468    modify Ensmbl27_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl27_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1939469    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1939470    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1939470  ! ;
MPRINT(EM_DIAGRAM):   run;
1939471    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL27_EMRANK.DATA.
1939472    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
1939473    %let _cn = %sysfunc(getoption(CENTER));
1939474    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1939475    proc print data=EMWS8.Ensmbl27_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl27_EMRANK label noobs;
1939476    var
1939477    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1939478    by
1939479    notsorted DATAROLE
1939480    notsorted TARGET
1939481    notsorted TARGETLABEL
1939482    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1939483    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1939484    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1939485    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL27_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1191.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1939486    title10;
MPRINT(EM_DIAGRAM):   title10;
1939487    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1939488    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1939489    modify Ensmbl27_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl27_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1939490    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1939490  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1939491    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1939491  ! ;
MPRINT(EM_DIAGRAM):   run;
1939492    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL27_EMSCOREDIST.DATA.
1939493    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl27_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
