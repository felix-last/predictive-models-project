*------------------------------------------------------------*
User:                Lukas Fahr
Date:                20. April 2016
Time:                17.32 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.32 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20. April 2016
Time:                17.32 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1RK_9JN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1RK_9JN new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.32 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.32 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[233571] MAX=1 EXCEEDMAXVALUE='' )[233575] )[233569]
VALIDCHOICES=(CHOICE1='Y' )[233573] )[233857] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[233579]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[233583] )[233581] )[233577] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[233587]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[233593] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[233591] )[233589] )[233585] )[233567]
1566364    proc freq data=EMWS8.Ensmbl27_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl27_VariableSet noprint;
1566365    table ROLE*LEVEL/out=WORK.Ensmbl27META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl27META;
1566366    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL27_VARIABLESET.
NOTE: The data set WORK.ENSMBL27META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566367    proc print data=WORK.Ensmbl27META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl27META label noobs;
1566368    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1566369    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1566369  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1566369  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1566370    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1566371    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1566372    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL27META.
NOTE: The PROCEDURE PRINT printed page 1785.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1566373    title10;
MPRINT(EM_DIAGRAM):   title10;
1566374    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN EMWS8 Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN EMWS8 Neural3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural3_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1566403    data WORK.Ensmbl27_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl27_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1566404    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1566405    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1566405  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1566405  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1566406       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1566406  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1566406  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1566407    set EMWS8.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
1566408    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1566409    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1566410    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1566411    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1566412    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1566413    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1566414    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1566415    end;
MPRINT(EM_DIAGRAM):   end;
1566416    output;
MPRINT(EM_DIAGRAM):   output;
1566417    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL27_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1566418    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1566419    proc print data=WORK.Ensmbl27_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl27_EVENT noobs label;
1566420    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1566421    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1566422    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1566423    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL27_EVENT.
NOTE: The PROCEDURE PRINT printed page 1786.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566424    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1566425    proc print data = EMWS8.Neural3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural3_DepVar_DM noobs label;
1566426    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1566427    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1566428    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1566428  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1566428  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1566429    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1566430    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1566431    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1787.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566432    title10;
MPRINT(EM_DIAGRAM):   title10;
1566433    %let groupid =;
1566434    %let endGroupid =;
1566435    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1566436    set EMWS8.Reg5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_EMINFO;
1566437    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1566437  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1566438    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1566439    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1566440    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566441    %let groupid =;
1566442    %let endGroupid =;
1566443    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1566444    set EMWS8.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg_EMINFO;
1566445    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1566445  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1566446    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1566447    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1566448    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566449    %let groupid =;
1566450    %let endGroupid =;
1566451    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1566452    set EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO;
1566453    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1566453  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1566454    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1566455    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1566456    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566457    %let groupid =;
1566458    %let endGroupid =;
1566459    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1566460    set EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_EMINFO;
1566461    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1566461  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1566462    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1566463    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1566464    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566465    %let groupid =;
1566466    %let endGroupid =;
1566467    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1566468    set EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO;
1566469    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1566469  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1566470    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1566471    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1566472    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1566473    %let groupid =;
1566474    %let endGroupid =;
1566475    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1566476    set EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO;
1566477    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1566477  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1566478    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1566479    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1566480    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566481    %let groupid =;
1566482    %let endGroupid =;
1566483    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1566484    set EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_EMINFO;
1566485    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1566485  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1566486    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1566487    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1566488    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566489    data WORK.Ensmbl27;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl27;
1566490    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1566491    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1566491  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1566492    nodeid="REG5";
MPRINT(EM_DIAGRAM):   nodeid="REG5";
1566493    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1566494    output;
MPRINT(EM_DIAGRAM):   output;
1566495    nodeid="REG";
MPRINT(EM_DIAGRAM):   nodeid="REG";
1566496    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1566497    output;
MPRINT(EM_DIAGRAM):   output;
1566498    nodeid="NEURAL4";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL4";
1566499    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1566500    output;
MPRINT(EM_DIAGRAM):   output;
1566501    nodeid="NEURAL2";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL2";
1566502    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1566503    output;
MPRINT(EM_DIAGRAM):   output;
1566504    nodeid="NEURAL3";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL3";
1566505    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1566506    output;
MPRINT(EM_DIAGRAM):   output;
1566507    nodeid="NEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL9";
1566508    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1566509    output;
MPRINT(EM_DIAGRAM):   output;
1566510    nodeid="NEURAL10";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL10";
1566511    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1566512    output;
MPRINT(EM_DIAGRAM):   output;
1566513    ;
MPRINT(EM_DIAGRAM):   ;
1566514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL27 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566515    title;
MPRINT(EM_DIAGRAM):   title;
1566516    proc print data=WORK.Ensmbl27 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl27 label noobs;
1566517    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1566518    title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
1566519    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL27.
NOTE: The PROCEDURE PRINT printed page 1788.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1566520    title9;
MPRINT(EM_DIAGRAM):   title9;
1566521    title10;
MPRINT(EM_DIAGRAM):   title10;
1566522    data WORK.M3AGO7HM;
MPRINT(EM_DIAGRAM):    data WORK.M3AGO7HM;
1566523    set WORK.M3AGO7HM;
MPRINT(EM_DIAGRAM):   set WORK.M3AGO7HM;
1566524    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1566525    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3AGO7HM.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M3AGO7HM has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1566526    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1566527    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1566528    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1566529    %macro DMDBClass;
1566530        DepVar(DESC)
1566531    %mend DMDBClass;
1566532    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1566533    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1566534    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1566535    %macro DMDBVar;
1566536
1566537    %mend DMDBVar;
1566538    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566539    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1566540    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566541    proc dmdb batch data=EMWS8.Reg5_TRAIN
1566542    dmdbcat=WORK.EM_DMDB
1566543    maxlevel = 513
1566544    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Reg5_TRAIN dmdbcat=WORK.EM_DMDB maxlevel =
513 ;
MPRINT(EM_DIAGRAM):   class
1566545    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1566546    target
1566547    DepVar
1566548    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1566549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.REG5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.REG5_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1566550    quit;
1566551    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.32 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.32 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O32IXMRG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O32IXMRG new;
MPRINT(EM_DIAGRAM):   run;
1566653    filename emflow
1566653  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring REG5_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566654    *------------------------------------------------------------*;
1566655    * Ensmbl27: Scoring REG5_TRAIN data;
1566656    *------------------------------------------------------------*;
1566657    data EMWS8.Ensmbl27_TRAIN
1566658    / view=EMWS8.Ensmbl27_TRAIN
1566659    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_TRAIN / view=EMWS8.Ensmbl27_TRAIN ;
1566660    set EMWS8.Reg5_TRAIN
1566661    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_TRAIN ;
1566662    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas.
1566663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566664   +* Ensmbl27: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Combine model for DepVar;
1566665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566666   +* Ensmbl27: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 1 of 7;
1566667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566669   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1566670   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1566671   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1566672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566673   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566674   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1566675   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1566676   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1566677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566679   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1566680   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1566681   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1566682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566684   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1566685   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1566686   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1566687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566688   +
1566689   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1566690   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1566690  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1566691   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1566692   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1566693   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1566694   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1566695   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1566696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566697   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1566698   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1566699   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1566700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566701   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566702   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1566703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566704   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1566705   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1566706   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1566707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566708   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1566709   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1566710   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1566711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566713   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1566714   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1566715   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1566716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566718   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1566719   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1566720   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1566721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1566722   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1566723   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1566724   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1566725   +
1566726   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1566727   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1566728   +
1566729   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1566730   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1566731   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1566732   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1566733   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1566734   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1566735   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1566736   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1566737   +
1566738   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1566739   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1566740   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1566741   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1566742   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1566743   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566744   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1566745   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1566746   +end;
MPRINT(EM_DIAGRAM):   end;
1566747   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566748   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1566749   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1566750   +   end;
MPRINT(EM_DIAGRAM):   end;
1566751   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1566752   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1566753   +   end;
MPRINT(EM_DIAGRAM):   end;
1566754   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566755   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1566756   +   end;
MPRINT(EM_DIAGRAM):   end;
1566757   +end;
MPRINT(EM_DIAGRAM):   end;
1566758   +
1566759   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1566760   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1566761   +
1566762   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1566763   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1566764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566766   +end;
MPRINT(EM_DIAGRAM):   end;
1566767   +
1566768   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1566769   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1566770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566772   +end;
MPRINT(EM_DIAGRAM):   end;
1566773   +
1566774   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1566775   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1566776   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566777   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566778   +end;
MPRINT(EM_DIAGRAM):   end;
1566779   +
1566780   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1566781   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1566782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566784   +end;
MPRINT(EM_DIAGRAM):   end;
1566785   +
1566786   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1566787   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1566788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566790   +end;
MPRINT(EM_DIAGRAM):   end;
1566791   +
1566792   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1566793   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1566794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566796   +end;
MPRINT(EM_DIAGRAM):   end;
1566797   +
1566798   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1566799   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1566800   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566802   +end;
MPRINT(EM_DIAGRAM):   end;
1566803   +
1566804   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1566805   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1566806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566808   +end;
MPRINT(EM_DIAGRAM):   end;
1566809   +
1566810   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1566811   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1566812   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566813   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566814   +end;
MPRINT(EM_DIAGRAM):   end;
1566815   +
1566816   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1566817   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1566818   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566819   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566820   +end;
MPRINT(EM_DIAGRAM):   end;
1566821   +
1566822   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1566823   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1566824   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566826   +end;
MPRINT(EM_DIAGRAM):   end;
1566827   +
1566828   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1566829   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1566830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566832   +end;
MPRINT(EM_DIAGRAM):   end;
1566833   +
1566834   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1566835   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1566836   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1566837   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1566838   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1566839   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1566840   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1566841   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1566842   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1566843   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1566844   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1566845   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1566846   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566847   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566848   +end;
MPRINT(EM_DIAGRAM):   end;
1566849   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566850   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1566851   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1566852   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566853   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1566854   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1566855   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1566856   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1566857   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1566858   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1566859   +         end;
MPRINT(EM_DIAGRAM):   end;
1566860   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1566861   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1566862   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1566863   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1566864   +            end;
MPRINT(EM_DIAGRAM):   end;
1566865   +         end;
MPRINT(EM_DIAGRAM):   end;
1566866   +      end;
MPRINT(EM_DIAGRAM):   end;
1566867   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1566868   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1566869   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1566870   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1566871   +         end;
MPRINT(EM_DIAGRAM):   end;
1566872   +      end;
MPRINT(EM_DIAGRAM):   end;
1566873   +   end;
MPRINT(EM_DIAGRAM):   end;
1566874   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566875   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1566876   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1566877   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1566878   +      end;
MPRINT(EM_DIAGRAM):   end;
1566879   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1566880   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1566881   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1566882   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1566883   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1566884   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1566885   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1566886   +         end;
MPRINT(EM_DIAGRAM):   end;
1566887   +      end;
MPRINT(EM_DIAGRAM):   end;
1566888   +   end;
MPRINT(EM_DIAGRAM):   end;
1566889   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1566890   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1566891   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1566892   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1566893   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1566894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1566895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566896   +   end;
MPRINT(EM_DIAGRAM):   end;
1566897   +end;
MPRINT(EM_DIAGRAM):   end;
1566898   +
1566899   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1566900   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1566901   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1566902   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1566903   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1566904   +end;
MPRINT(EM_DIAGRAM):   end;
1566905   +
1566906   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1566907   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1566908   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1566909   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1566910   +
1566911   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1566912   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1566913   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1566914   +
1566915   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1566916   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1566917   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1566918   +
1566919   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1566920   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1566921   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1566922   +
1566923   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1566924   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1566925   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1566926   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1566927   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1566928   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1566929   +
1566930   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1566931   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1566932   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1566933   +
1566934   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1566935   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1566936   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1566937   +
1566938   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1566939   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1566940   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1566941   +
1566942   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1566943   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1566944   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1566945   +
1566946   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1566947   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1566948   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1566949   +
1566950   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1566951   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1566952   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1566953   +
1566954   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1566955   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1566956   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1566957   +
1566958   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1566959   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1566960   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1566961   +
1566962   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1566963   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1566964   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1566965   +
1566966   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1566967   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1566968   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1566969   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1566970   +
1566971   +REG5DR1:
1566972   +
1566973   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1566974   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1566975   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1566976   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1566977   +end;
MPRINT(EM_DIAGRAM):   end;
1566978   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566979   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1566980   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1566981   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1566982   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1566983   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1566984   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1566985   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1566986   +   end;
MPRINT(EM_DIAGRAM):   end;
1566987   +end;
MPRINT(EM_DIAGRAM):   end;
1566988   +
1566989   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1566990   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1566991   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1566992   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1566993   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1566994   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1566995   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1566996   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1566997   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1566998   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1566999   +end;
MPRINT(EM_DIAGRAM):   end;
1567000   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1567001   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1567002   +
1567003   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1567004   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1567005   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1567006   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1567007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567008   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1567009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567010   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1567011   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1567012   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1567013   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1567014   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567015   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1567016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567017   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1567018   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1567019   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1567020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567021   +* Ensmbl27: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 2 of 7;
1567022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567024   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1567025   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1567026   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1567027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567028   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1567029   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1567030   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1567031   +
1567032   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1567033   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1567034   +
1567035   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1567036   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1567037   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1567038   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1567039   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1567040   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1567041   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1567042   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1567043   +
1567044   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1567045   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1567046   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1567047   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1567048   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1567049   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567050   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1567051   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1567052   +end;
MPRINT(EM_DIAGRAM):   end;
1567053   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567054   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1567055   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1567056   +   end;
MPRINT(EM_DIAGRAM):   end;
1567057   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1567058   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1567059   +   end;
MPRINT(EM_DIAGRAM):   end;
1567060   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567061   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1567062   +   end;
MPRINT(EM_DIAGRAM):   end;
1567063   +end;
MPRINT(EM_DIAGRAM):   end;
1567064   +
1567065   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1567066   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1567067   +
1567068   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1567069   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1567070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567072   +end;
MPRINT(EM_DIAGRAM):   end;
1567073   +
1567074   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1567075   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1567076   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567077   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567078   +end;
MPRINT(EM_DIAGRAM):   end;
1567079   +
1567080   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1567081   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1567082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567084   +end;
MPRINT(EM_DIAGRAM):   end;
1567085   +
1567086   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1567087   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1567088   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567089   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567090   +end;
MPRINT(EM_DIAGRAM):   end;
1567091   +
1567092   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1567093   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1567094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567096   +end;
MPRINT(EM_DIAGRAM):   end;
1567097   +
1567098   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1567099   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1567100   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567101   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567102   +end;
MPRINT(EM_DIAGRAM):   end;
1567103   +
1567104   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1567105   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1567106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567108   +end;
MPRINT(EM_DIAGRAM):   end;
1567109   +
1567110   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1567111   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1567112   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567114   +end;
MPRINT(EM_DIAGRAM):   end;
1567115   +
1567116   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1567117   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1567118   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567119   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567120   +end;
MPRINT(EM_DIAGRAM):   end;
1567121   +
1567122   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1567123   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1567124   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567125   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567126   +end;
MPRINT(EM_DIAGRAM):   end;
1567127   +
1567128   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1567129   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1567130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567132   +end;
MPRINT(EM_DIAGRAM):   end;
1567133   +
1567134   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1567135   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1567136   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567137   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567138   +end;
MPRINT(EM_DIAGRAM):   end;
1567139   +
1567140   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1567141   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1567142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567144   +end;
MPRINT(EM_DIAGRAM):   end;
1567145   +
1567146   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1567147   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1567148   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1567149   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1567150   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1567151   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1567152   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1567153   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1567154   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1567155   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1567156   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1567157   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1567158   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567159   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567160   +end;
MPRINT(EM_DIAGRAM):   end;
1567161   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567162   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1567163   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1567164   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567165   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1567166   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1567167   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1567168   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1567169   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1567170   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1567171   +         end;
MPRINT(EM_DIAGRAM):   end;
1567172   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1567173   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1567174   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1567175   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1567176   +            end;
MPRINT(EM_DIAGRAM):   end;
1567177   +         end;
MPRINT(EM_DIAGRAM):   end;
1567178   +      end;
MPRINT(EM_DIAGRAM):   end;
1567179   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1567180   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1567181   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1567182   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1567183   +         end;
MPRINT(EM_DIAGRAM):   end;
1567184   +      end;
MPRINT(EM_DIAGRAM):   end;
1567185   +   end;
MPRINT(EM_DIAGRAM):   end;
1567186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567187   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1567188   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1567189   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1567190   +      end;
MPRINT(EM_DIAGRAM):   end;
1567191   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1567192   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1567193   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1567194   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1567195   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1567196   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1567197   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1567198   +         end;
MPRINT(EM_DIAGRAM):   end;
1567199   +      end;
MPRINT(EM_DIAGRAM):   end;
1567200   +   end;
MPRINT(EM_DIAGRAM):   end;
1567201   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1567202   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1567203   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1567204   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1567205   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1567206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1567207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567208   +   end;
MPRINT(EM_DIAGRAM):   end;
1567209   +end;
MPRINT(EM_DIAGRAM):   end;
1567210   +
1567211   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1567212   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1567213   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1567214   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1567215   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1567216   +end;
MPRINT(EM_DIAGRAM):   end;
1567217   +
1567218   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1567219   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1567220   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1567221   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1567222   +
1567223   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1567224   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1567225   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1567226   +
1567227   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1567228   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1567229   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1567230   +
1567231   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1567232   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1567233   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1567234   +
1567235   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1567236   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1567237   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1567238   +
1567239   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1567240   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1567241   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1567242   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1567243   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1567244   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1567245   +
1567246   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1567247   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1567248   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1567249   +
1567250   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1567251   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1567252   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1567253   +
1567254   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1567255   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1567256   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1567257   +
1567258   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1567259   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1567260   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1567261   +
1567262   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1567263   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1567264   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1567265   +
1567266   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1567267   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1567268   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1567269   +
1567270   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1567271   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1567272   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1567273   +
1567274   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1567275   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1567276   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1567277   +
1567278   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1567279   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1567280   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1567281   +
1567282   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1567283   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1567284   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1567285   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1567286   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1567287   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1567288   +end;
MPRINT(EM_DIAGRAM):   end;
1567289   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1567290   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1567291   +
1567292   +REGDR1:
1567293   +
1567294   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1567295   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1567296   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1567297   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1567298   +end;
MPRINT(EM_DIAGRAM):   end;
1567299   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567300   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1567301   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1567302   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1567303   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1567304   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1567305   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1567306   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1567307   +   end;
MPRINT(EM_DIAGRAM):   end;
1567308   +end;
MPRINT(EM_DIAGRAM):   end;
1567309   +
1567310   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1567311   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1567312   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1567313   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1567314   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1567315   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1567316   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1567317   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1567318   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1567319   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1567320   +end;
MPRINT(EM_DIAGRAM):   end;
1567321   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1567322   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1567323   +
1567324   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1567325   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1567326   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1567327   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1567328   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567329   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1567330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567331   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1567332   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1567333   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1567334   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1567335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567336   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1567337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567338   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1567339   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1567340   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1567341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567342   +* Ensmbl27: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 3 of 7;
1567343   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567344   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567345   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1567346   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1567347   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1567348   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567349   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1567350   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1567351   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1567352   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1567353   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1567354   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1567355   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1567356   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1567357   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1567358   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1567359   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1567360   +LENGTH _WARN_ $4
1567361   +      F_DepVar  $ 12
1567362   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1567363   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1567364   +
1567365   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1567366   +
1567367   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1567368   +
1567369   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1567370   +
1567371   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1567372   +
1567373   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1567374   +
1567375   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1567376   +
1567377   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1567378   +
1567379   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1567380   +
1567381   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1567382   +
1567383   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1567384   +
1567385   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1567386   +
1567387   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1567388   +
1567389   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1567390   +
1567391   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1567392   +
1567393   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1567394   +
1567395   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1567396   +
1567397   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1567398   +
1567399   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1567400   +
1567401   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1567402   +
1567403   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1567404   +
1567405   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1567406   +
1567407   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1567408   +
1567409   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1567410   +
1567411   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1567412   +
1567413   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1567414   +
1567415   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1567416   +
1567417   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1567418   +
1567419   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1567420   +
1567421   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1567422   +
1567423   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1567424   +
1567425   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1567426   +
1567427   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1567428   +
1567429   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1567430   +
1567431   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1567432   +
1567433   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1567434   +
1567435   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1567436   +
1567437   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1567438   +
1567439   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1567440   +
1567441   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1567442   +
1567443   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1567444   +
1567445   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1567446   +
1567447   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1567448   +
1567449   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1567450   +
1567451   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1567452   +
1567453   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1567454   +
1567455   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1567456   +
1567457   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1567458   +
1567459   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1567460   +
1567461   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1567462   +
1567463   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1567464   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1567465   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1567466   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1567467   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567468   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567469   +end;
MPRINT(EM_DIAGRAM):   end;
1567470   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567471   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1567472   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1567473   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567474   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1567475   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1567476   +   end;
MPRINT(EM_DIAGRAM):   end;
1567477   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1567478   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1567479   +   end;
MPRINT(EM_DIAGRAM):   end;
1567480   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567481   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1567482   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1567483   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567484   +   end;
MPRINT(EM_DIAGRAM):   end;
1567485   +end;
MPRINT(EM_DIAGRAM):   end;
1567486   +
1567487   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1567488   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1567489   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1567490   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1567491   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567492   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567493   +end;
MPRINT(EM_DIAGRAM):   end;
1567494   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567495   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1567496   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1567497   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567498   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1567499   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1567500   +   end;
MPRINT(EM_DIAGRAM):   end;
1567501   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1567502   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1567503   +   end;
MPRINT(EM_DIAGRAM):   end;
1567504   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567505   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1567506   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1567507   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567508   +   end;
MPRINT(EM_DIAGRAM):   end;
1567509   +end;
MPRINT(EM_DIAGRAM):   end;
1567510   +
1567511   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1567512   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1567513   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1567514   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1567515   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567516   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567517   +end;
MPRINT(EM_DIAGRAM):   end;
1567518   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567519   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1567520   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1567521   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567522   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1567523   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1567524   +   end;
MPRINT(EM_DIAGRAM):   end;
1567525   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1567526   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1567527   +   end;
MPRINT(EM_DIAGRAM):   end;
1567528   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567529   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1567530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1567531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567532   +   end;
MPRINT(EM_DIAGRAM):   end;
1567533   +end;
MPRINT(EM_DIAGRAM):   end;
1567534   +
1567535   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1567536   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1567537   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1567538   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1567539   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567540   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567541   +end;
MPRINT(EM_DIAGRAM):   end;
1567542   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567543   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1567544   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1567545   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567546   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1567547   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1567548   +   end;
MPRINT(EM_DIAGRAM):   end;
1567549   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1567550   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1567551   +   end;
MPRINT(EM_DIAGRAM):   end;
1567552   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567553   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1567554   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1567555   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567556   +   end;
MPRINT(EM_DIAGRAM):   end;
1567557   +end;
MPRINT(EM_DIAGRAM):   end;
1567558   +
1567559   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1567560   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1567561   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1567562   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1567563   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567564   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567565   +end;
MPRINT(EM_DIAGRAM):   end;
1567566   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567567   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1567568   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1567569   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567570   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1567571   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1567572   +   end;
MPRINT(EM_DIAGRAM):   end;
1567573   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1567574   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1567575   +   end;
MPRINT(EM_DIAGRAM):   end;
1567576   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567577   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1567578   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1567579   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567580   +   end;
MPRINT(EM_DIAGRAM):   end;
1567581   +end;
MPRINT(EM_DIAGRAM):   end;
1567582   +
1567583   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1567584   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1567585   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1567586   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1567587   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567588   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567589   +end;
MPRINT(EM_DIAGRAM):   end;
1567590   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567591   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1567592   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1567593   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567594   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1567595   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1567596   +   end;
MPRINT(EM_DIAGRAM):   end;
1567597   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1567598   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1567599   +   end;
MPRINT(EM_DIAGRAM):   end;
1567600   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567601   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1567602   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1567603   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567604   +   end;
MPRINT(EM_DIAGRAM):   end;
1567605   +end;
MPRINT(EM_DIAGRAM):   end;
1567606   +
1567607   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1567608   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1567609   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1567610   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1567611   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567613   +end;
MPRINT(EM_DIAGRAM):   end;
1567614   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567615   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1567616   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1567617   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567618   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1567619   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1567620   +   end;
MPRINT(EM_DIAGRAM):   end;
1567621   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1567622   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1567623   +   end;
MPRINT(EM_DIAGRAM):   end;
1567624   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567625   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1567626   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1567627   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567628   +   end;
MPRINT(EM_DIAGRAM):   end;
1567629   +end;
MPRINT(EM_DIAGRAM):   end;
1567630   +
1567631   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1567632   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1567633   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1567634   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1567635   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1567636   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1567637   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1567638   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1567639   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1567640   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1567641   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1567642   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1567643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567645   +end;
MPRINT(EM_DIAGRAM):   end;
1567646   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567647   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1567648   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1567649   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567650   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1567651   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1567652   +   end;
MPRINT(EM_DIAGRAM):   end;
1567653   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1567654   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1567655   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1567656   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1567657   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1567658   +   end;
MPRINT(EM_DIAGRAM):   end;
1567659   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1567660   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1567661   +   end;
MPRINT(EM_DIAGRAM):   end;
1567662   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1567663   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1567664   +   end;
MPRINT(EM_DIAGRAM):   end;
1567665   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1567666   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1567667   +   end;
MPRINT(EM_DIAGRAM):   end;
1567668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567669   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1567670   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1567671   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1567672   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1567673   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1567674   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567675   +   end;
MPRINT(EM_DIAGRAM):   end;
1567676   +end;
MPRINT(EM_DIAGRAM):   end;
1567677   +
1567678   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1567679   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1567680   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1567681   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1567682   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1567683   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1567684   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1567685   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1567686   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1567687   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1567688   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1567689   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1567690   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1567691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1567692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567693   +end;
MPRINT(EM_DIAGRAM):   end;
1567694   +else do;
MPRINT(EM_DIAGRAM):   else do;
1567695   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1567696   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1567697   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1567698   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1567699   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1567700   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1567701   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1567702   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1567703   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1567704   +         end;
MPRINT(EM_DIAGRAM):   end;
1567705   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1567706   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1567707   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1567708   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1567709   +            end;
MPRINT(EM_DIAGRAM):   end;
1567710   +         end;
MPRINT(EM_DIAGRAM):   end;
1567711   +      end;
MPRINT(EM_DIAGRAM):   end;
1567712   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1567713   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1567714   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1567715   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1567716   +         end;
MPRINT(EM_DIAGRAM):   end;
1567717   +      end;
MPRINT(EM_DIAGRAM):   end;
1567718   +   end;
MPRINT(EM_DIAGRAM):   end;
1567719   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1567720   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1567721   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1567722   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1567723   +      end;
MPRINT(EM_DIAGRAM):   end;
1567724   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1567725   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1567726   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1567727   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1567728   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1567729   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1567730   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1567731   +         end;
MPRINT(EM_DIAGRAM):   end;
1567732   +      end;
MPRINT(EM_DIAGRAM):   end;
1567733   +   end;
MPRINT(EM_DIAGRAM):   end;
1567734   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1567735   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1567736   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1567737   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1567738   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1567739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1567740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567741   +   end;
MPRINT(EM_DIAGRAM):   end;
1567742   +end;
MPRINT(EM_DIAGRAM):   end;
1567743   +
1567744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1567745   +*** Checking missing input Interval
1567746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1567747   +
1567748   +IF NMISS(
1567749   +   AcceptedCmpTotal ,
1567750   +   Age ,
1567751   +   Frq ,
1567752   +   Income ,
1567753   +   Kidhome ,
1567754   +   Mnt ,
1567755   +   MntFishProducts ,
1567756   +   MntFruits ,
1567757   +   MntGoldProds ,
1567758   +   MntMeatProducts ,
1567759   +   MntSweetProducts ,
1567760   +   MntWines ,
1567761   +   MonthsAsCustomer ,
1567762   +   NumCatalogPurchases ,
1567763   +   NumDealsPurchases ,
1567764   +   NumDistPurchases ,
1567765   +   NumStorePurchases ,
1567766   +   NumWebPurchases ,
1567767   +   NumWebVisitsMonth ,
1567768   +   RFMstat ,
1567769   +   RMntFrq ,
1567770   +   Recency ,
1567771   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1567772   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1567773   +
1567774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1567775   +END;
MPRINT(EM_DIAGRAM):   END;
1567776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1567777   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1567778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1567779   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1567780   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1567781   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1567782   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1567783   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1567784   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1567785   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1567786   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1567787   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1567788   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1567789   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1567790   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1567791   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1567792   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1567793   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1567794   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1567795   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1567796   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1567797   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1567798   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1567799   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1567800   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1567801   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1567802   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1567803   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1567804   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1567805   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1567806   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1567807   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1567808   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1567809   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1567810   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1567811   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1567812   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1567813   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1567814   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1567815   +END;
MPRINT(EM_DIAGRAM):   END;
1567816   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1567817   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1567818   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1567819   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1567820   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1567821   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1567822   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1567823   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1567824   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1567825   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1567826   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1567827   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1567828   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1567829   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1567830   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1567831   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1567832   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1567833   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1567834   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1567835   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1567836   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1567837   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1567838   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1567839   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1567840   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1567841   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1567842   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1567843   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1567844   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1567845   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1567846   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1567847   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1567848   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1567849   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1567850   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1567851   +   ELSE S_NumCatalogPurchases
1567852   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1567853   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1567854   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1567855   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1567856   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1567857   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1567858   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1567859   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1567860   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1567861   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1567862   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1567863   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1567864   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1567865   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1567866   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1567867   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1567868   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1567869   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1567870   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1567871   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1567872   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1567873   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1567874   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1567875   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1567876   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1567877   +END;
MPRINT(EM_DIAGRAM):   END;
1567878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1567879   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1567880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1567881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1567882   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1567883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1567884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1567885   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1567886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1567887   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1567888   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1567889   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1567890   +        S_Income  +    -0.76740176580734 * S_Kidhome
1567891   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1567892   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1567893   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1567894   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1567895   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1567896   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1567897   +          +    -1.00050516074089 * S_NumDealsPurchases
1567898   +          +    -0.89322788176916 * S_NumDistPurchases
1567899   +          +     1.21914397196653 * S_NumStorePurchases
1567900   +          +     1.50867172673665 * S_NumWebPurchases
1567901   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1567902   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1567903   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1567904   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome +
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 *
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts +
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 *
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 *
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 *
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 *
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq +
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1567905   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1567906   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1567907   +        S_Income  +    -0.76288911429735 * S_Kidhome
1567908   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1567909   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1567910   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1567911   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1567912   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1567913   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1567914   +          +     0.79497206561332 * S_NumDealsPurchases
1567915   +          +    -0.13658888199464 * S_NumDistPurchases
1567916   +          +    -0.86436416316417 * S_NumStorePurchases
1567917   +          +    -0.85206550087617 * S_NumWebPurchases
1567918   +          +     1.72745004688732 * S_NumWebVisitsMonth
1567919   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1567920   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1567921   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age +
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome +
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 *
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts +
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 *
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 *
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 *
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 *
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq +
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1567922   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1567923   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1567924   +        S_Income  +    -0.48841499166688 * S_Kidhome
1567925   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1567926   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1567927   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1567928   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1567929   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1567930   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1567931   +          +    -0.00010125986409 * S_NumDealsPurchases
1567932   +          +    -0.00873530900019 * S_NumDistPurchases
1567933   +          +    -0.13188135131414 * S_NumStorePurchases
1567934   +          +    -0.10710067608125 * S_NumWebPurchases
1567935   +          +     0.99164053465149 * S_NumWebVisitsMonth
1567936   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1567937   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1567938   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age +
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome +
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 *
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts +
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 *
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 *
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 *
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 *
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq +
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1567939   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1567940   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1567941   +        S_Income  +    -0.57026847797175 * S_Kidhome
1567942   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1567943   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1567944   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1567945   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1567946   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1567947   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1567948   +          +     0.83618651452015 * S_NumDealsPurchases
1567949   +          +     0.22469306589917 * S_NumDistPurchases
1567950   +          +    -0.95889459414769 * S_NumStorePurchases
1567951   +          +    -0.95695646799114 * S_NumWebPurchases
1567952   +          +     0.96738689790948 * S_NumWebVisitsMonth
1567953   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1567954   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1567955   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome +
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 *
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts +
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 *
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 *
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 *
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 *
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq +
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1567956   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1567957   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1567958   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1567959   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1567960   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 *
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 +
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 *
HigherEducationBinary0 ;
1567961   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1567962   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1567963   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1567964   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1567965   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 *
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 +
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 *
HigherEducationBinary0 ;
1567966   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1567967   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1567968   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1567969   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1567970   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 *
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 +
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 *
HigherEducationBinary0 ;
1567971   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1567972   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1567973   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1567974   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1567975   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 *
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 +
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 *
HigherEducationBinary0 ;
1567976   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1567977   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1567978   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1567979   +          +     0.80885454992674 * Marital_StatusDivorced
1567980   +          +     -0.5568630572283 * Marital_StatusMarried
1567981   +          +    -0.03099047176508 * Marital_StatusSingle
1567982   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 *
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster +
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried +
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1567983   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1567984   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1567985   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1567986   +          +     0.13911597069393 * Marital_StatusDivorced
1567987   +          +    -1.50081060732787 * Marital_StatusMarried
1567988   +          +     1.41717012231539 * Marital_StatusSingle
1567989   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 *
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried +
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1567990   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1567991   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1567992   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1567993   +          +    -0.26412736340464 * Marital_StatusDivorced
1567994   +          +    -0.27049992388629 * Marital_StatusMarried
1567995   +          +     0.67476795725099 * Marital_StatusSingle
1567996   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 *
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried +
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1567997   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1567998   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1567999   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1568000   +          +      0.8954230457499 * Marital_StatusDivorced
1568001   +          +     0.73706556068242 * Marital_StatusMarried
1568002   +          +    -1.29073720538893 * Marital_StatusSingle
1568003   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 *
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried +
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1568004   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1568005   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1568006   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1568007   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1568008   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1568009   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1568010   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1568011   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1568012   +END;
MPRINT(EM_DIAGRAM):   END;
1568013   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1568014   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1568015   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1568016   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1568017   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1568018   +END;
MPRINT(EM_DIAGRAM):   END;
1568019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568020   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1568021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568022   +
1568023   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1568024   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1568025   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1568026   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1568027   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1568028   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568029   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1568030   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1568031   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1568032   +end;
MPRINT(EM_DIAGRAM):   end;
1568033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568034   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1568035   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1568036   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1568037   +   end;
MPRINT(EM_DIAGRAM):   end;
1568038   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1568039   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1568040   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1568041   +   end;
MPRINT(EM_DIAGRAM):   end;
1568042   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568043   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1568044   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1568045   +   end;
MPRINT(EM_DIAGRAM):   end;
1568046   +end;
MPRINT(EM_DIAGRAM):   end;
1568047   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1568048   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1568049   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 +
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1568050   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1568051   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1568052   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1568053   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1568054   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1568055   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1568056   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1568057   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1568058   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1568059   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1568060   +END;
MPRINT(EM_DIAGRAM):   END;
1568061   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1568062   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1568063   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1568064   +END;
MPRINT(EM_DIAGRAM):   END;
1568065   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1568066   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1568067   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1568068   +END;
MPRINT(EM_DIAGRAM):   END;
1568069   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1568070   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1568071   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1568072   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1568073   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1568074   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1568075   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1568076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568077   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1568078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568079   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1568080   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1568081   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1568082   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1568083   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1568084   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1568085   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1568086   +END;
MPRINT(EM_DIAGRAM):   END;
1568087   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1568088   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1568089   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1568090   +drop
1568091   +H11
1568092   +H12
1568093   +H13
1568094   +H14
1568095   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1568096   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1568097   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1568098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568099   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1568100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568101   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1568102   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1568103   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1568104   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1568105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568106   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1568107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568108   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1568109   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1568110   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1568111   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568112   +* Ensmbl27: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 4 of 7;
1568113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568115   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1568116   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1568117   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1568118   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568119   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1568120   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1568121   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1568122   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1568123   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1568124   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1568125   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1568126   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1568127   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1568128   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1568129   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1568130   +LENGTH _WARN_ $4
1568131   +      F_DepVar  $ 12
1568132   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1568133   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1568134   +
1568135   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1568136   +
1568137   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1568138   +
1568139   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1568140   +
1568141   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1568142   +
1568143   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1568144   +
1568145   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1568146   +
1568147   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1568148   +
1568149   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1568150   +
1568151   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1568152   +
1568153   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1568154   +
1568155   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1568156   +
1568157   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1568158   +
1568159   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1568160   +
1568161   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1568162   +
1568163   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1568164   +
1568165   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1568166   +
1568167   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1568168   +
1568169   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1568170   +
1568171   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1568172   +
1568173   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1568174   +
1568175   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1568176   +
1568177   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1568178   +
1568179   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1568180   +
1568181   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1568182   +
1568183   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1568184   +
1568185   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1568186   +
1568187   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1568188   +
1568189   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1568190   +
1568191   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1568192   +
1568193   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1568194   +
1568195   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1568196   +
1568197   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1568198   +
1568199   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1568200   +
1568201   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1568202   +
1568203   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1568204   +
1568205   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1568206   +
1568207   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1568208   +
1568209   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1568210   +
1568211   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1568212   +
1568213   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1568214   +
1568215   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1568216   +
1568217   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1568218   +
1568219   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1568220   +
1568221   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1568222   +
1568223   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1568224   +
1568225   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1568226   +
1568227   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1568228   +
1568229   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1568230   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1568231   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1568232   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1568233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568235   +end;
MPRINT(EM_DIAGRAM):   end;
1568236   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568237   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1568238   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1568239   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568240   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1568241   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1568242   +   end;
MPRINT(EM_DIAGRAM):   end;
1568243   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1568244   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1568245   +   end;
MPRINT(EM_DIAGRAM):   end;
1568246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568247   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1568248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568250   +   end;
MPRINT(EM_DIAGRAM):   end;
1568251   +end;
MPRINT(EM_DIAGRAM):   end;
1568252   +
1568253   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1568254   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1568255   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1568256   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1568257   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568259   +end;
MPRINT(EM_DIAGRAM):   end;
1568260   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568261   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1568262   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1568263   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568264   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1568265   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1568266   +   end;
MPRINT(EM_DIAGRAM):   end;
1568267   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1568268   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1568269   +   end;
MPRINT(EM_DIAGRAM):   end;
1568270   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568271   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1568272   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568273   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568274   +   end;
MPRINT(EM_DIAGRAM):   end;
1568275   +end;
MPRINT(EM_DIAGRAM):   end;
1568276   +
1568277   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1568278   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1568279   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1568280   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1568281   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568282   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568283   +end;
MPRINT(EM_DIAGRAM):   end;
1568284   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568285   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1568286   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1568287   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568288   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1568289   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1568290   +   end;
MPRINT(EM_DIAGRAM):   end;
1568291   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1568292   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1568293   +   end;
MPRINT(EM_DIAGRAM):   end;
1568294   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568295   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1568296   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568297   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568298   +   end;
MPRINT(EM_DIAGRAM):   end;
1568299   +end;
MPRINT(EM_DIAGRAM):   end;
1568300   +
1568301   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1568302   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1568303   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1568304   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1568305   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568306   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568307   +end;
MPRINT(EM_DIAGRAM):   end;
1568308   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568309   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1568310   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1568311   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568312   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1568313   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1568314   +   end;
MPRINT(EM_DIAGRAM):   end;
1568315   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1568316   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1568317   +   end;
MPRINT(EM_DIAGRAM):   end;
1568318   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568319   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1568320   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568321   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568322   +   end;
MPRINT(EM_DIAGRAM):   end;
1568323   +end;
MPRINT(EM_DIAGRAM):   end;
1568324   +
1568325   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1568326   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1568327   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1568328   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1568329   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568331   +end;
MPRINT(EM_DIAGRAM):   end;
1568332   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568333   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1568334   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1568335   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568336   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1568337   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1568338   +   end;
MPRINT(EM_DIAGRAM):   end;
1568339   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1568340   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1568341   +   end;
MPRINT(EM_DIAGRAM):   end;
1568342   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568343   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1568344   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568345   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568346   +   end;
MPRINT(EM_DIAGRAM):   end;
1568347   +end;
MPRINT(EM_DIAGRAM):   end;
1568348   +
1568349   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1568350   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1568351   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1568352   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1568353   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568354   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568355   +end;
MPRINT(EM_DIAGRAM):   end;
1568356   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568357   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1568358   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1568359   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568360   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1568361   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1568362   +   end;
MPRINT(EM_DIAGRAM):   end;
1568363   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1568364   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1568365   +   end;
MPRINT(EM_DIAGRAM):   end;
1568366   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568367   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1568368   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568369   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568370   +   end;
MPRINT(EM_DIAGRAM):   end;
1568371   +end;
MPRINT(EM_DIAGRAM):   end;
1568372   +
1568373   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1568374   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1568375   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1568376   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1568377   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568378   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568379   +end;
MPRINT(EM_DIAGRAM):   end;
1568380   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568381   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1568382   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1568383   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568384   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1568385   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1568386   +   end;
MPRINT(EM_DIAGRAM):   end;
1568387   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1568388   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1568389   +   end;
MPRINT(EM_DIAGRAM):   end;
1568390   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568391   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1568392   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568393   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568394   +   end;
MPRINT(EM_DIAGRAM):   end;
1568395   +end;
MPRINT(EM_DIAGRAM):   end;
1568396   +
1568397   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1568398   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1568399   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1568400   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1568401   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1568402   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1568403   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1568404   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1568405   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1568406   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1568407   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1568408   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1568409   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568410   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568411   +end;
MPRINT(EM_DIAGRAM):   end;
1568412   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568413   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1568414   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1568415   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568416   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1568417   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1568418   +   end;
MPRINT(EM_DIAGRAM):   end;
1568419   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1568420   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1568421   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1568422   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1568423   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1568424   +   end;
MPRINT(EM_DIAGRAM):   end;
1568425   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1568426   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1568427   +   end;
MPRINT(EM_DIAGRAM):   end;
1568428   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1568429   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1568430   +   end;
MPRINT(EM_DIAGRAM):   end;
1568431   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1568432   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1568433   +   end;
MPRINT(EM_DIAGRAM):   end;
1568434   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568435   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1568436   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1568437   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1568438   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1568439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568441   +   end;
MPRINT(EM_DIAGRAM):   end;
1568442   +end;
MPRINT(EM_DIAGRAM):   end;
1568443   +
1568444   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1568445   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1568446   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1568447   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1568448   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1568449   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1568450   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1568451   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1568452   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1568453   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1568454   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1568455   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1568456   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1568457   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568458   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568459   +end;
MPRINT(EM_DIAGRAM):   end;
1568460   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568461   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1568462   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1568463   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568464   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1568465   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1568466   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1568467   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1568468   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1568469   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1568470   +         end;
MPRINT(EM_DIAGRAM):   end;
1568471   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1568472   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1568473   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1568474   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1568475   +            end;
MPRINT(EM_DIAGRAM):   end;
1568476   +         end;
MPRINT(EM_DIAGRAM):   end;
1568477   +      end;
MPRINT(EM_DIAGRAM):   end;
1568478   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1568479   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1568480   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1568481   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1568482   +         end;
MPRINT(EM_DIAGRAM):   end;
1568483   +      end;
MPRINT(EM_DIAGRAM):   end;
1568484   +   end;
MPRINT(EM_DIAGRAM):   end;
1568485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568486   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1568487   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1568488   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1568489   +      end;
MPRINT(EM_DIAGRAM):   end;
1568490   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1568491   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1568492   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1568493   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1568494   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1568495   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1568496   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1568497   +         end;
MPRINT(EM_DIAGRAM):   end;
1568498   +      end;
MPRINT(EM_DIAGRAM):   end;
1568499   +   end;
MPRINT(EM_DIAGRAM):   end;
1568500   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1568501   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1568502   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1568503   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1568504   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1568505   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568506   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568507   +   end;
MPRINT(EM_DIAGRAM):   end;
1568508   +end;
MPRINT(EM_DIAGRAM):   end;
1568509   +
1568510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568511   +*** Checking missing input Interval
1568512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1568513   +
1568514   +IF NMISS(
1568515   +   AcceptedCmpTotal ,
1568516   +   Age ,
1568517   +   Frq ,
1568518   +   Income ,
1568519   +   Kidhome ,
1568520   +   Mnt ,
1568521   +   MntFishProducts ,
1568522   +   MntFruits ,
1568523   +   MntGoldProds ,
1568524   +   MntMeatProducts ,
1568525   +   MntSweetProducts ,
1568526   +   MntWines ,
1568527   +   MonthsAsCustomer ,
1568528   +   NumCatalogPurchases ,
1568529   +   NumDealsPurchases ,
1568530   +   NumDistPurchases ,
1568531   +   NumStorePurchases ,
1568532   +   NumWebPurchases ,
1568533   +   NumWebVisitsMonth ,
1568534   +   RFMstat ,
1568535   +   RMntFrq ,
1568536   +   Recency ,
1568537   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1568538   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1568539   +
1568540   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568541   +END;
MPRINT(EM_DIAGRAM):   END;
1568542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568543   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1568544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568545   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1568546   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1568547   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1568548   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1568549   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1568550   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1568551   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1568552   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1568553   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1568554   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1568555   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1568556   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1568557   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1568558   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1568559   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1568560   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1568561   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1568562   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1568563   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1568564   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1568565   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1568566   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1568567   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1568568   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1568569   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1568570   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1568571   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1568572   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1568573   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1568574   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1568575   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1568576   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1568577   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1568578   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1568579   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1568580   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1568581   +END;
MPRINT(EM_DIAGRAM):   END;
1568582   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1568583   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1568584   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1568585   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1568586   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1568587   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1568588   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1568589   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1568590   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1568591   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1568592   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1568593   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1568594   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1568595   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1568596   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1568597   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1568598   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1568599   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1568600   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1568601   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1568602   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1568603   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1568604   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1568605   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1568606   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1568607   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1568608   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1568609   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1568610   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1568611   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1568612   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1568613   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1568614   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1568615   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1568616   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1568617   +   ELSE S_NumCatalogPurchases
1568618   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1568619   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1568620   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1568621   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1568622   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1568623   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1568624   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1568625   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1568626   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1568627   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1568628   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1568629   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1568630   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1568631   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1568632   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1568633   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1568634   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1568635   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1568636   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1568637   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1568638   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1568639   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1568640   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1568641   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1568642   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1568643   +END;
MPRINT(EM_DIAGRAM):   END;
1568644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568645   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1568646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568648   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1568649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568651   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1568652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568653   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1568654   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1568655   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1568656   +        S_Income  +    -1.07733254688396 * S_Kidhome
1568657   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1568658   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1568659   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1568660   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1568661   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1568662   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1568663   +          +     0.34431711603003 * S_NumDealsPurchases
1568664   +          +      0.7134923732819 * S_NumDistPurchases
1568665   +          +     0.05901777448936 * S_NumStorePurchases
1568666   +          +    -0.19803026616936 * S_NumWebPurchases
1568667   +          +     1.34202846183228 * S_NumWebVisitsMonth
1568668   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1568669   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1568670   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age +
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome +
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 *
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts +
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 *
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 *
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 *
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 *
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq +
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1568671   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1568672   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1568673   +        S_Income  +    -0.00255151514163 * S_Kidhome
1568674   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1568675   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1568676   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1568677   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1568678   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1568679   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1568680   +          +     0.45752917132477 * S_NumDealsPurchases
1568681   +          +      0.1559495599293 * S_NumDistPurchases
1568682   +          +    -0.33402213718695 * S_NumStorePurchases
1568683   +          +    -0.39372662704902 * S_NumWebPurchases
1568684   +          +     0.52518189694069 * S_NumWebVisitsMonth
1568685   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1568686   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1568687   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome +
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 *
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts +
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 *
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 *
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 *
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 *
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq +
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1568688   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1568689   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1568690   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1568691   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1568692   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 *
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 +
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 *
HigherEducationBinary0 ;
1568693   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1568694   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1568695   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1568696   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1568697   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 *
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 +
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 *
HigherEducationBinary0 ;
1568698   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1568699   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1568700   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1568701   +          +     0.46710555357393 * Marital_StatusDivorced
1568702   +          +    -1.27560428667174 * Marital_StatusMarried
1568703   +          +      1.3147344073121 * Marital_StatusSingle
1568704   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 *
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried +
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1568705   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1568706   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1568707   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1568708   +          +     0.07422027097612 * Marital_StatusDivorced
1568709   +          +     0.00271855575037 * Marital_StatusMarried
1568710   +          +    -0.00749566028051 * Marital_StatusSingle
1568711   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 *
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster +
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried +
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1568712   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1568713   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1568714   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1568715   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1568716   +END;
MPRINT(EM_DIAGRAM):   END;
1568717   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1568718   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1568719   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1568720   +END;
MPRINT(EM_DIAGRAM):   END;
1568721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568722   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1568723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568724   +
1568725   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1568726   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1568727   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1568728   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1568729   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1568730   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568731   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1568732   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1568733   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1568734   +end;
MPRINT(EM_DIAGRAM):   end;
1568735   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568736   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1568737   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1568738   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1568739   +   end;
MPRINT(EM_DIAGRAM):   end;
1568740   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1568741   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1568742   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1568743   +   end;
MPRINT(EM_DIAGRAM):   end;
1568744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568745   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1568746   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1568747   +   end;
MPRINT(EM_DIAGRAM):   end;
1568748   +end;
MPRINT(EM_DIAGRAM):   end;
1568749   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1568750   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1568751   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1568752   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1568753   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1568754   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1568755   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1568756   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1568757   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1568758   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1568759   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1568760   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1568761   +END;
MPRINT(EM_DIAGRAM):   END;
1568762   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1568763   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1568764   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1568765   +END;
MPRINT(EM_DIAGRAM):   END;
1568766   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1568767   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1568768   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1568769   +END;
MPRINT(EM_DIAGRAM):   END;
1568770   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1568771   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1568772   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1568773   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1568774   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1568775   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1568776   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1568777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568778   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1568779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1568780   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1568781   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1568782   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1568783   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1568784   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1568785   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1568786   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1568787   +END;
MPRINT(EM_DIAGRAM):   END;
1568788   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1568789   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1568790   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1568791   +drop
1568792   +H11
1568793   +H12
1568794   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1568795   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1568796   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1568797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568798   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1568799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568800   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1568801   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1568802   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1568803   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1568804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568805   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1568806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568807   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1568808   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1568809   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1568810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568811   +* Ensmbl27: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 5 of 7;
1568812   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568814   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1568815   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1568816   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1568817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1568818   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1568819   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1568820   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1568821   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1568822   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1568823   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1568824   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1568825   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1568826   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1568827   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1568828   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1568829   +LENGTH _WARN_ $4
1568830   +      F_DepVar  $ 12
1568831   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1568832   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1568833   +
1568834   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1568835   +
1568836   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1568837   +
1568838   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1568839   +
1568840   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1568841   +
1568842   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1568843   +
1568844   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1568845   +
1568846   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1568847   +
1568848   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1568849   +
1568850   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1568851   +
1568852   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1568853   +
1568854   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1568855   +
1568856   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1568857   +
1568858   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1568859   +
1568860   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1568861   +
1568862   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1568863   +
1568864   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1568865   +
1568866   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1568867   +
1568868   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1568869   +
1568870   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1568871   +
1568872   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1568873   +
1568874   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1568875   +
1568876   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1568877   +
1568878   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1568879   +
1568880   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1568881   +
1568882   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1568883   +
1568884   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1568885   +
1568886   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1568887   +
1568888   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1568889   +
1568890   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1568891   +
1568892   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1568893   +
1568894   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1568895   +
1568896   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1568897   +
1568898   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1568899   +
1568900   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1568901   +
1568902   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1568903   +
1568904   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1568905   +
1568906   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1568907   +
1568908   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1568909   +
1568910   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1568911   +
1568912   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1568913   +
1568914   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1568915   +
1568916   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1568917   +
1568918   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1568919   +
1568920   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1568921   +
1568922   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1568923   +
1568924   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1568925   +
1568926   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1568927   +
1568928   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1568929   +
1568930   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1568931   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1568932   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1568933   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1568934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568936   +end;
MPRINT(EM_DIAGRAM):   end;
1568937   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1568939   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1568940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1568942   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1568943   +   end;
MPRINT(EM_DIAGRAM):   end;
1568944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1568945   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1568946   +   end;
MPRINT(EM_DIAGRAM):   end;
1568947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568948   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1568949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568951   +   end;
MPRINT(EM_DIAGRAM):   end;
1568952   +end;
MPRINT(EM_DIAGRAM):   end;
1568953   +
1568954   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1568955   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1568956   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1568957   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1568958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568960   +end;
MPRINT(EM_DIAGRAM):   end;
1568961   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1568963   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1568964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1568966   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1568967   +   end;
MPRINT(EM_DIAGRAM):   end;
1568968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1568969   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1568970   +   end;
MPRINT(EM_DIAGRAM):   end;
1568971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568972   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1568973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568975   +   end;
MPRINT(EM_DIAGRAM):   end;
1568976   +end;
MPRINT(EM_DIAGRAM):   end;
1568977   +
1568978   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1568979   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1568980   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1568981   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1568982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1568983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568984   +end;
MPRINT(EM_DIAGRAM):   end;
1568985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1568986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1568987   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1568988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1568989   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1568990   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1568991   +   end;
MPRINT(EM_DIAGRAM):   end;
1568992   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1568993   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1568994   +   end;
MPRINT(EM_DIAGRAM):   end;
1568995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1568996   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1568997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1568998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1568999   +   end;
MPRINT(EM_DIAGRAM):   end;
1569000   +end;
MPRINT(EM_DIAGRAM):   end;
1569001   +
1569002   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1569003   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1569004   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1569005   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1569006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569008   +end;
MPRINT(EM_DIAGRAM):   end;
1569009   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569011   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1569012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569013   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1569014   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1569015   +   end;
MPRINT(EM_DIAGRAM):   end;
1569016   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1569017   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1569018   +   end;
MPRINT(EM_DIAGRAM):   end;
1569019   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569020   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1569021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569023   +   end;
MPRINT(EM_DIAGRAM):   end;
1569024   +end;
MPRINT(EM_DIAGRAM):   end;
1569025   +
1569026   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1569027   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1569028   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1569029   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1569030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569032   +end;
MPRINT(EM_DIAGRAM):   end;
1569033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569035   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1569036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1569038   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1569039   +   end;
MPRINT(EM_DIAGRAM):   end;
1569040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1569041   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1569042   +   end;
MPRINT(EM_DIAGRAM):   end;
1569043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569044   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1569045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569047   +   end;
MPRINT(EM_DIAGRAM):   end;
1569048   +end;
MPRINT(EM_DIAGRAM):   end;
1569049   +
1569050   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1569051   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1569052   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1569053   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1569054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569056   +end;
MPRINT(EM_DIAGRAM):   end;
1569057   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569059   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1569060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569061   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1569062   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1569063   +   end;
MPRINT(EM_DIAGRAM):   end;
1569064   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1569065   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1569066   +   end;
MPRINT(EM_DIAGRAM):   end;
1569067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569068   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1569069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569071   +   end;
MPRINT(EM_DIAGRAM):   end;
1569072   +end;
MPRINT(EM_DIAGRAM):   end;
1569073   +
1569074   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1569075   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1569076   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1569077   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1569078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569080   +end;
MPRINT(EM_DIAGRAM):   end;
1569081   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569083   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1569084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569085   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1569086   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1569087   +   end;
MPRINT(EM_DIAGRAM):   end;
1569088   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1569089   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1569090   +   end;
MPRINT(EM_DIAGRAM):   end;
1569091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569092   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1569093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569095   +   end;
MPRINT(EM_DIAGRAM):   end;
1569096   +end;
MPRINT(EM_DIAGRAM):   end;
1569097   +
1569098   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1569099   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1569100   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1569101   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1569102   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1569103   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1569104   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1569105   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1569106   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1569107   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1569108   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1569109   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1569110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569112   +end;
MPRINT(EM_DIAGRAM):   end;
1569113   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569114   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1569115   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
The SAS System
 
1569116   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569117   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1569118   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1569119   +   end;
MPRINT(EM_DIAGRAM):   end;
1569120   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1569121   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1569122   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1569123   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1569124   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1569125   +   end;
MPRINT(EM_DIAGRAM):   end;
1569126   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1569127   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1569128   +   end;
MPRINT(EM_DIAGRAM):   end;
1569129   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1569130   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1569131   +   end;
MPRINT(EM_DIAGRAM):   end;
1569132   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1569133   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1569134   +   end;
MPRINT(EM_DIAGRAM):   end;
1569135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569136   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1569137   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1569138   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1569139   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1569140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569142   +   end;
MPRINT(EM_DIAGRAM):   end;
1569143   +end;
MPRINT(EM_DIAGRAM):   end;
1569144   +
1569145   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1569146   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1569147   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1569148   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1569149   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1569150   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1569151   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1569152   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1569153   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1569154   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1569155   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1569156   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1569157   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1569158   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569159   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569160   +end;
MPRINT(EM_DIAGRAM):   end;
1569161   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569162   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1569163   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1569164   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569165   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1569166   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1569167   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1569168   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1569169   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1569170   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1569171   +         end;
MPRINT(EM_DIAGRAM):   end;
1569172   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1569173   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1569174   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1569175   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1569176   +            end;
MPRINT(EM_DIAGRAM):   end;
1569177   +         end;
MPRINT(EM_DIAGRAM):   end;
1569178   +      end;
MPRINT(EM_DIAGRAM):   end;
1569179   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1569180   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1569181   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1569182   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1569183   +         end;
MPRINT(EM_DIAGRAM):   end;
1569184   +      end;
MPRINT(EM_DIAGRAM):   end;
1569185   +   end;
MPRINT(EM_DIAGRAM):   end;
1569186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569187   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1569188   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1569189   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1569190   +      end;
MPRINT(EM_DIAGRAM):   end;
1569191   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1569192   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1569193   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1569194   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1569195   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1569196   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1569197   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1569198   +         end;
MPRINT(EM_DIAGRAM):   end;
1569199   +      end;
MPRINT(EM_DIAGRAM):   end;
1569200   +   end;
MPRINT(EM_DIAGRAM):   end;
1569201   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1569202   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1569203   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1569204   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1569205   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1569206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569208   +   end;
MPRINT(EM_DIAGRAM):   end;
1569209   +end;
MPRINT(EM_DIAGRAM):   end;
1569210   +
1569211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569212   +*** Checking missing input Interval
1569213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1569214   +
1569215   +IF NMISS(
1569216   +   AcceptedCmpTotal ,
1569217   +   Age ,
1569218   +   Frq ,
1569219   +   Income ,
1569220   +   Kidhome ,
1569221   +   Mnt ,
1569222   +   MntFishProducts ,
1569223   +   MntFruits ,
1569224   +   MntGoldProds ,
1569225   +   MntMeatProducts ,
1569226   +   MntSweetProducts ,
1569227   +   MntWines ,
1569228   +   MonthsAsCustomer ,
1569229   +   NumCatalogPurchases ,
1569230   +   NumDealsPurchases ,
1569231   +   NumDistPurchases ,
1569232   +   NumStorePurchases ,
1569233   +   NumWebPurchases ,
1569234   +   NumWebVisitsMonth ,
1569235   +   RFMstat ,
1569236   +   RMntFrq ,
1569237   +   Recency ,
1569238   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1569239   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1569240   +
1569241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569242   +END;
MPRINT(EM_DIAGRAM):   END;
1569243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569244   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1569245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569246   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1569247   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1569248   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1569249   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1569250   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1569251   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1569252   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1569253   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1569254   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1569255   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1569256   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1569257   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1569258   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1569259   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1569260   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1569261   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1569262   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1569263   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1569264   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1569265   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1569266   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1569267   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1569268   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1569269   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1569270   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1569271   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1569272   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1569273   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1569274   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1569275   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1569276   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1569277   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1569278   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1569279   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1569280   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1569281   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1569282   +END;
MPRINT(EM_DIAGRAM):   END;
1569283   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1569284   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1569285   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1569286   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1569287   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1569288   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1569289   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1569290   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1569291   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1569292   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1569293   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1569294   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1569295   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1569296   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1569297   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1569298   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1569299   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1569300   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1569301   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1569302   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1569303   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1569304   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1569305   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1569306   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1569307   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1569308   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1569309   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1569310   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1569311   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1569312   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1569313   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1569314   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1569315   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1569316   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1569317   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1569318   +   ELSE S_NumCatalogPurchases
1569319   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1569320   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1569321   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1569322   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1569323   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1569324   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1569325   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1569326   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1569327   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1569328   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1569329   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1569330   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1569331   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1569332   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1569333   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1569334   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1569335   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1569336   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1569337   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1569338   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1569339   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1569340   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1569341   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1569342   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1569343   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1569344   +END;
MPRINT(EM_DIAGRAM):   END;
1569345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569346   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1569347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569349   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1569350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569352   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1569353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569354   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1569355   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1569356   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1569357   +        S_Income  +     0.49557647195287 * S_Kidhome
1569358   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1569359   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1569360   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1569361   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1569362   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1569363   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1569364   +          +     1.29965538748336 * S_NumDealsPurchases
1569365   +          +     0.16818868463142 * S_NumDistPurchases
1569366   +          +    -0.64507792847411 * S_NumStorePurchases
1569367   +          +    -0.52243329275268 * S_NumWebPurchases
1569368   +          +     1.48521107923182 * S_NumWebVisitsMonth
1569369   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1569370   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1569371   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome +
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 *
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts +
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 *
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 *
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 *
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 *
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq +
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1569372   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1569373   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1569374   +        S_Income  +       0.536631748871 * S_Kidhome
1569375   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1569376   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1569377   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1569378   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1569379   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1569380   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1569381   +          +    -0.63220849663702 * S_NumDealsPurchases
1569382   +          +    -0.03517440588176 * S_NumDistPurchases
1569383   +          +     0.90435516280473 * S_NumStorePurchases
1569384   +          +     1.02540776095101 * S_NumWebPurchases
1569385   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1569386   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1569387   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1569388   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome +
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 *
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts +
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 *
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 *
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 *
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 *
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq +
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1569389   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1569390   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1569391   +        S_Income  +     0.45173611630992 * S_Kidhome
1569392   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1569393   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1569394   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1569395   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1569396   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1569397   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1569398   +          +     0.00572910064772 * S_NumDealsPurchases
1569399   +          +    -0.43545754325176 * S_NumDistPurchases
1569400   +          +     0.12831980635185 * S_NumStorePurchases
1569401   +          +     0.02223697618186 * S_NumWebPurchases
1569402   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1569403   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1569404   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1569405   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome +
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 *
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts +
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 *
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 *
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 *
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 *
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq +
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1569406   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1569407   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1569408   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1569409   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1569410   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 *
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 +
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 *
HigherEducationBinary0 ;
1569411   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1569412   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1569413   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1569414   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1569415   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 *
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 +
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 *
HigherEducationBinary0 ;
1569416   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1569417   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1569418   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1569419   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1569420   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 *
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 +
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 *
HigherEducationBinary0 ;
1569421   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1569422   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1569423   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1569424   +          +     0.14010081581672 * Marital_StatusDivorced
1569425   +          +     0.03574033044092 * Marital_StatusMarried
1569426   +          +    -0.14272769898675 * Marital_StatusSingle
1569427   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 *
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried +
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1569428   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1569429   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1569430   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1569431   +          +    -0.14878433798537 * Marital_StatusDivorced
1569432   +          +     0.14990226067603 * Marital_StatusMarried
1569433   +          +    -0.50903755449357 * Marital_StatusSingle
1569434   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 *
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried +
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1569435   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1569436   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1569437   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1569438   +          +    -0.52568922939912 * Marital_StatusDivorced
1569439   +          +     1.74121506979092 * Marital_StatusMarried
1569440   +          +    -1.16029880777095 * Marital_StatusSingle
1569441   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 *
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster +
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried +
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1569442   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1569443   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1569444   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1569445   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1569446   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1569447   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1569448   +END;
MPRINT(EM_DIAGRAM):   END;
1569449   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1569450   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1569451   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1569452   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1569453   +END;
MPRINT(EM_DIAGRAM):   END;
1569454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569455   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1569456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569457   +
1569458   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1569459   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1569460   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1569461   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1569462   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1569463   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569464   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1569465   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1569466   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1569467   +end;
MPRINT(EM_DIAGRAM):   end;
1569468   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569469   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1569470   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1569471   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1569472   +   end;
MPRINT(EM_DIAGRAM):   end;
1569473   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1569474   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1569475   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1569476   +   end;
MPRINT(EM_DIAGRAM):   end;
1569477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569478   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1569479   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1569480   +   end;
MPRINT(EM_DIAGRAM):   end;
1569481   +end;
MPRINT(EM_DIAGRAM):   end;
1569482   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1569483   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1569484   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 +
-3.01894159959464 * H13 ;
1569485   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1569486   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1569487   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1569488   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1569489   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1569490   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1569491   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1569492   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1569493   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1569494   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1569495   +END;
MPRINT(EM_DIAGRAM):   END;
1569496   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1569497   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1569498   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1569499   +END;
MPRINT(EM_DIAGRAM):   END;
1569500   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1569501   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1569502   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1569503   +END;
MPRINT(EM_DIAGRAM):   END;
1569504   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1569505   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1569506   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1569507   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1569508   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1569509   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1569510   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1569511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569512   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1569513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569514   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1569515   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1569516   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1569517   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1569518   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1569519   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1569520   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1569521   +END;
MPRINT(EM_DIAGRAM):   END;
1569522   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1569523   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1569524   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1569525   +drop
1569526   +H11
1569527   +H12
1569528   +H13
1569529   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1569530   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1569531   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1569532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1569533   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1569534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1569535   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1569536   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1569537   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1569538   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1569539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1569540   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1569541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1569542   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1569543   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1569544   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1569545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1569546   +* Ensmbl27: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 6 of 7;
1569547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1569548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1569549   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1569550   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1569551   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1569552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1569553   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1569554   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1569555   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1569556   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1569557   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1569558   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1569559   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1569560   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1569561   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1569562   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1569563   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1569564   +LENGTH _WARN_ $4
1569565   +      F_DepVar  $ 12
1569566   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1569567   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1569568   +
1569569   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1569570   +
1569571   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1569572   +
1569573   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1569574   +
1569575   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1569576   +
1569577   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1569578   +
1569579   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1569580   +
1569581   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1569582   +
1569583   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1569584   +
1569585   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1569586   +
1569587   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1569588   +
1569589   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1569590   +
1569591   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1569592   +
1569593   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1569594   +
1569595   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1569596   +
1569597   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1569598   +
1569599   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1569600   +
1569601   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1569602   +
1569603   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1569604   +
1569605   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1569606   +
1569607   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1569608   +
1569609   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1569610   +
1569611   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1569612   +
1569613   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1569614   +
1569615   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1569616   +
1569617   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1569618   +
1569619   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1569620   +
1569621   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1569622   +
1569623   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1569624   +
1569625   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1569626   +
1569627   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1569628   +
1569629   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1569630   +
1569631   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1569632   +
1569633   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1569634   +
1569635   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1569636   +
1569637   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1569638   +
1569639   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1569640   +
1569641   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1569642   +
1569643   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1569644   +
1569645   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1569646   +
1569647   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1569648   +
1569649   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1569650   +
1569651   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1569652   +
1569653   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1569654   +
1569655   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1569656   +
1569657   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1569658   +
1569659   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1569660   +
1569661   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1569662   +
1569663   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1569664   +
1569665   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1569666   +
1569667   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1569668   +
1569669   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1569670   +
1569671   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1569672   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1569673   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1569674   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1569675   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569676   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569677   +end;
MPRINT(EM_DIAGRAM):   end;
1569678   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569679   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569680   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1569681   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569682   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1569683   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1569684   +   end;
MPRINT(EM_DIAGRAM):   end;
1569685   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1569686   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1569687   +   end;
MPRINT(EM_DIAGRAM):   end;
1569688   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569689   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1569690   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569691   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569692   +   end;
MPRINT(EM_DIAGRAM):   end;
1569693   +end;
MPRINT(EM_DIAGRAM):   end;
1569694   +
1569695   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1569696   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1569697   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1569698   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1569699   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569700   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569701   +end;
MPRINT(EM_DIAGRAM):   end;
1569702   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569703   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569704   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1569705   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569706   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1569707   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1569708   +   end;
MPRINT(EM_DIAGRAM):   end;
1569709   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1569710   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1569711   +   end;
MPRINT(EM_DIAGRAM):   end;
1569712   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569713   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1569714   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569715   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569716   +   end;
MPRINT(EM_DIAGRAM):   end;
1569717   +end;
MPRINT(EM_DIAGRAM):   end;
1569718   +
1569719   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1569720   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1569721   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1569722   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1569723   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569724   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569725   +end;
MPRINT(EM_DIAGRAM):   end;
1569726   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569727   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569728   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1569729   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569730   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1569731   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1569732   +   end;
MPRINT(EM_DIAGRAM):   end;
1569733   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1569734   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1569735   +   end;
MPRINT(EM_DIAGRAM):   end;
1569736   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569737   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1569738   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569739   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569740   +   end;
MPRINT(EM_DIAGRAM):   end;
1569741   +end;
MPRINT(EM_DIAGRAM):   end;
1569742   +
1569743   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1569744   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1569745   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1569746   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1569747   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569749   +end;
MPRINT(EM_DIAGRAM):   end;
1569750   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569751   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569752   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1569753   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569754   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1569755   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1569756   +   end;
MPRINT(EM_DIAGRAM):   end;
1569757   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1569758   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1569759   +   end;
MPRINT(EM_DIAGRAM):   end;
1569760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569761   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1569762   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569763   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569764   +   end;
MPRINT(EM_DIAGRAM):   end;
1569765   +end;
MPRINT(EM_DIAGRAM):   end;
1569766   +
1569767   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1569768   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1569769   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1569770   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1569771   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569772   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569773   +end;
MPRINT(EM_DIAGRAM):   end;
1569774   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569775   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569776   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1569777   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569778   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1569779   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1569780   +   end;
MPRINT(EM_DIAGRAM):   end;
1569781   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1569782   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1569783   +   end;
MPRINT(EM_DIAGRAM):   end;
1569784   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569785   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1569786   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569787   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569788   +   end;
MPRINT(EM_DIAGRAM):   end;
1569789   +end;
MPRINT(EM_DIAGRAM):   end;
1569790   +
1569791   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1569792   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1569793   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1569794   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1569795   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569796   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569797   +end;
MPRINT(EM_DIAGRAM):   end;
1569798   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569799   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569800   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1569801   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569802   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1569803   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1569804   +   end;
MPRINT(EM_DIAGRAM):   end;
1569805   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1569806   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1569807   +   end;
MPRINT(EM_DIAGRAM):   end;
1569808   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569809   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1569810   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569811   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569812   +   end;
MPRINT(EM_DIAGRAM):   end;
1569813   +end;
MPRINT(EM_DIAGRAM):   end;
1569814   +
1569815   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1569816   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1569817   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1569818   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1569819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569821   +end;
MPRINT(EM_DIAGRAM):   end;
1569822   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569823   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1569824   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1569825   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569826   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1569827   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1569828   +   end;
MPRINT(EM_DIAGRAM):   end;
1569829   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1569830   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1569831   +   end;
MPRINT(EM_DIAGRAM):   end;
1569832   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569833   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1569834   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569835   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569836   +   end;
MPRINT(EM_DIAGRAM):   end;
1569837   +end;
MPRINT(EM_DIAGRAM):   end;
1569838   +
1569839   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1569840   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1569841   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1569842   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1569843   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1569844   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1569845   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1569846   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1569847   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1569848   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1569849   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1569850   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1569851   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569853   +end;
MPRINT(EM_DIAGRAM):   end;
1569854   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569855   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1569856   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1569857   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569858   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1569859   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1569860   +   end;
MPRINT(EM_DIAGRAM):   end;
1569861   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1569862   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1569863   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1569864   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1569865   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1569866   +   end;
MPRINT(EM_DIAGRAM):   end;
1569867   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1569868   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1569869   +   end;
MPRINT(EM_DIAGRAM):   end;
1569870   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1569871   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1569872   +   end;
MPRINT(EM_DIAGRAM):   end;
1569873   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1569874   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1569875   +   end;
MPRINT(EM_DIAGRAM):   end;
1569876   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569877   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1569878   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1569879   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1569880   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1569881   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569882   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569883   +   end;
MPRINT(EM_DIAGRAM):   end;
1569884   +end;
MPRINT(EM_DIAGRAM):   end;
1569885   +
1569886   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1569887   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1569888   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1569889   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1569890   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1569891   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1569892   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1569893   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1569894   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1569895   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1569896   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1569897   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1569898   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1569899   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1569900   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569901   +end;
MPRINT(EM_DIAGRAM):   end;
1569902   +else do;
MPRINT(EM_DIAGRAM):   else do;
1569903   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1569904   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1569905   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1569906   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1569907   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1569908   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1569909   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1569910   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1569911   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1569912   +         end;
MPRINT(EM_DIAGRAM):   end;
1569913   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1569914   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1569915   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1569916   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1569917   +            end;
MPRINT(EM_DIAGRAM):   end;
1569918   +         end;
MPRINT(EM_DIAGRAM):   end;
1569919   +      end;
MPRINT(EM_DIAGRAM):   end;
1569920   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1569921   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1569922   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1569923   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1569924   +         end;
MPRINT(EM_DIAGRAM):   end;
1569925   +      end;
MPRINT(EM_DIAGRAM):   end;
1569926   +   end;
MPRINT(EM_DIAGRAM):   end;
1569927   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1569928   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1569929   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1569930   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1569931   +      end;
MPRINT(EM_DIAGRAM):   end;
1569932   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1569933   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1569934   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1569935   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1569936   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1569937   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1569938   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1569939   +         end;
MPRINT(EM_DIAGRAM):   end;
1569940   +      end;
MPRINT(EM_DIAGRAM):   end;
1569941   +   end;
MPRINT(EM_DIAGRAM):   end;
1569942   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1569943   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1569944   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1569945   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1569946   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1569947   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1569948   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569949   +   end;
MPRINT(EM_DIAGRAM):   end;
1569950   +end;
MPRINT(EM_DIAGRAM):   end;
1569951   +
1569952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569953   +*** Checking missing input Interval
1569954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1569955   +
1569956   +IF NMISS(
1569957   +   AcceptedCmpTotal ,
1569958   +   Age ,
1569959   +   Frq ,
1569960   +   Income ,
1569961   +   Kidhome ,
1569962   +   Mnt ,
1569963   +   MntFishProducts ,
1569964   +   MntFruits ,
1569965   +   MntGoldProds ,
1569966   +   MntMeatProducts ,
1569967   +   MntSweetProducts ,
1569968   +   MntWines ,
1569969   +   MonthsAsCustomer ,
1569970   +   NumCatalogPurchases ,
1569971   +   NumDealsPurchases ,
1569972   +   NumDistPurchases ,
1569973   +   NumStorePurchases ,
1569974   +   NumWebPurchases ,
1569975   +   NumWebVisitsMonth ,
1569976   +   RFMstat ,
1569977   +   RMntFrq ,
1569978   +   Recency ,
1569979   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1569980   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1569981   +
1569982   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1569983   +END;
MPRINT(EM_DIAGRAM):   END;
1569984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569985   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1569986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1569987   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1569988   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1569989   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1569990   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1569991   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1569992   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1569993   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1569994   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1569995   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1569996   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1569997   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1569998   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1569999   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1570000   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1570001   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1570002   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1570003   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1570004   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1570005   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1570006   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1570007   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1570008   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1570009   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1570010   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1570011   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1570012   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1570013   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1570014   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1570015   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1570016   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1570017   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1570018   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1570019   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1570020   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1570021   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1570022   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1570023   +END;
MPRINT(EM_DIAGRAM):   END;
1570024   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1570025   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1570026   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1570027   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1570028   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1570029   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1570030   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1570031   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1570032   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1570033   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1570034   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1570035   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1570036   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1570037   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1570038   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1570039   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1570040   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1570041   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1570042   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1570043   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1570044   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1570045   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1570046   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1570047   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1570048   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1570049   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1570050   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1570051   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1570052   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1570053   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1570054   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1570055   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1570056   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1570057   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1570058   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1570059   +   ELSE S_NumCatalogPurchases
1570060   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1570061   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1570062   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1570063   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1570064   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1570065   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1570066   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1570067   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1570068   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1570069   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1570070   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1570071   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1570072   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1570073   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1570074   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1570075   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1570076   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1570077   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1570078   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1570079   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1570080   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1570081   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1570082   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1570083   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1570084   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1570085   +END;
MPRINT(EM_DIAGRAM):   END;
1570086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570087   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1570088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570090   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1570091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570093   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1570094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570095   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1570096   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1570097   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1570098   +        S_Income  +    -0.09693130155866 * S_Kidhome
1570099   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1570100   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1570101   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1570102   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1570103   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1570104   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1570105   +          +     0.87256063855463 * S_NumDealsPurchases
1570106   +          +     0.24228318068596 * S_NumDistPurchases
1570107   +          +    -0.65575177240856 * S_NumStorePurchases
1570108   +          +    -0.94105747825406 * S_NumWebPurchases
1570109   +          +     0.88098930350141 * S_NumWebVisitsMonth
1570110   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1570111   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1570112   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome +
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 *
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts +
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 *
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 *
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 *
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 *
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq +
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1570113   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1570114   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1570115   +        S_Income  +    -0.48351377369429 * S_Kidhome
1570116   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1570117   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1570118   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1570119   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1570120   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1570121   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1570122   +          +     0.19198092320653 * S_NumDealsPurchases
1570123   +          +    -0.01877290175933 * S_NumDistPurchases
1570124   +          +    -0.61698509852352 * S_NumStorePurchases
1570125   +          +    -0.36114842161331 * S_NumWebPurchases
1570126   +          +     0.87653599441887 * S_NumWebVisitsMonth
1570127   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1570128   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1570129   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age +
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome +
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 *
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts +
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 *
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 *
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 *
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 *
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq +
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1570130   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1570131   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1570132   +        S_Income  +    -0.03117320792997 * S_Kidhome
1570133   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1570134   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1570135   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1570136   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1570137   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1570138   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1570139   +          +    -0.17772008430544 * S_NumDealsPurchases
1570140   +          +    -0.24320624261016 * S_NumDistPurchases
1570141   +          +     0.42056923271106 * S_NumStorePurchases
1570142   +          +    -0.28718554863857 * S_NumWebPurchases
1570143   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1570144   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1570145   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1570146   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age +
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome +
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 *
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts +
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 *
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 *
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 *
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 *
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq +
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1570147   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1570148   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1570149   +        S_Income  +     -0.0433863245185 * S_Kidhome
1570150   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1570151   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1570152   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1570153   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1570154   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1570155   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1570156   +          +    -0.43652501997552 * S_NumDealsPurchases
1570157   +          +     0.17317052107867 * S_NumDistPurchases
1570158   +          +     0.23672921935551 * S_NumStorePurchases
1570159   +          +     0.49273989445476 * S_NumWebPurchases
1570160   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1570161   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1570162   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1570163   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age +
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome +
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 *
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts +
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 *
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 *
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 *
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 *
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq +
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1570164   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1570165   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1570166   +        S_Income  +     0.59347379159371 * S_Kidhome
1570167   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1570168   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1570169   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1570170   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1570171   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1570172   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1570173   +          +     0.06887104992711 * S_NumDealsPurchases
1570174   +          +    -0.03976087278251 * S_NumDistPurchases
1570175   +          +     -0.0289014951041 * S_NumStorePurchases
1570176   +          +    -0.08062500939119 * S_NumWebPurchases
1570177   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1570178   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1570179   +        S_RMntFrq  +       0.940313744576 * S_Recency
1570180   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome +
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 *
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts +
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 *
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 *
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 *
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 *
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq +
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1570181   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1570182   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1570183   +        S_Income  +    -0.55245961592835 * S_Kidhome
1570184   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1570185   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1570186   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1570187   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1570188   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1570189   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1570190   +          +    -0.50731731808528 * S_NumDealsPurchases
1570191   +          +     -0.4854662155502 * S_NumDistPurchases
1570192   +          +     0.21175181231244 * S_NumStorePurchases
1570193   +          +     0.04923223410585 * S_NumWebPurchases
1570194   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1570195   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1570196   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1570197   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome +
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 *
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts +
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 *
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 *
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 *
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 *
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq +
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1570198   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1570199   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1570200   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1570201   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1570202   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 *
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 +
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 *
HigherEducationBinary0 ;
1570203   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1570204   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1570205   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1570206   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1570207   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 *
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 +
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 *
HigherEducationBinary0 ;
1570208   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1570209   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1570210   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1570211   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1570212   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 *
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 +
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 *
HigherEducationBinary0 ;
1570213   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1570214   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1570215   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1570216   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1570217   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 *
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 +
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 *
HigherEducationBinary0 ;
1570218   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1570219   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1570220   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1570221   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1570222   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 *
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 +
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 *
HigherEducationBinary0 ;
1570223   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1570224   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1570225   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1570226   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1570227   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 *
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 +
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 *
HigherEducationBinary0 ;
1570228   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1570229   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1570230   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1570231   +          +     0.13102231169849 * Marital_StatusDivorced
1570232   +          +     0.13221932247035 * Marital_StatusMarried
1570233   +          +    -0.28666963919866 * Marital_StatusSingle
1570234   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 *
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster +
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried +
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1570235   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1570236   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1570237   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1570238   +          +     0.36873255525654 * Marital_StatusDivorced
1570239   +          +    -0.54422050380085 * Marital_StatusMarried
1570240   +          +     0.58130553469516 * Marital_StatusSingle
1570241   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 *
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried +
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1570242   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1570243   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1570244   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1570245   +          +    -0.07480235993304 * Marital_StatusDivorced
1570246   +          +     0.31705972445069 * Marital_StatusMarried
1570247   +          +    -0.08626328185895 * Marital_StatusSingle
1570248   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 *
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried +
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1570249   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1570250   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1570251   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1570252   +          +    -0.06733679615115 * Marital_StatusDivorced
1570253   +          +     0.23111557732379 * Marital_StatusMarried
1570254   +          +    -0.34379469870478 * Marital_StatusSingle
1570255   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 *
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried +
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1570256   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1570257   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1570258   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1570259   +          +    -0.07108588070668 * Marital_StatusDivorced
1570260   +          +     1.10060875265784 * Marital_StatusMarried
1570261   +          +    -0.74271327534863 * Marital_StatusSingle
1570262   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 *
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster +
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried +
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1570263   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1570264   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1570265   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1570266   +          +    -0.19461023827362 * Marital_StatusDivorced
1570267   +          +     -0.4165676037681 * Marital_StatusMarried
1570268   +          +     0.43379324993555 * Marital_StatusSingle
1570269   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 *
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried +
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1570270   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1570271   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1570272   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1570273   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1570274   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1570275   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1570276   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1570277   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1570278   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1570279   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1570280   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1570281   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1570282   +END;
MPRINT(EM_DIAGRAM):   END;
1570283   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1570284   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1570285   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1570286   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1570287   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1570288   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1570289   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1570290   +END;
MPRINT(EM_DIAGRAM):   END;
1570291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570292   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1570293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570294   +
1570295   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1570296   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1570297   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1570298   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1570299   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1570300   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1570301   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1570302   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1570303   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1570304   +end;
MPRINT(EM_DIAGRAM):   end;
1570305   +else do;
MPRINT(EM_DIAGRAM):   else do;
1570306   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1570307   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1570308   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1570309   +   end;
MPRINT(EM_DIAGRAM):   end;
1570310   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1570311   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1570312   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1570313   +   end;
MPRINT(EM_DIAGRAM):   end;
1570314   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1570315   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1570316   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1570317   +   end;
MPRINT(EM_DIAGRAM):   end;
1570318   +end;
MPRINT(EM_DIAGRAM):   end;
1570319   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1570320   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1570321   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1570322   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 +
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 +
-2.08728996739757 * H16 ;
1570323   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1570324   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1570325   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1570326   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1570327   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1570328   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1570329   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1570330   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1570331   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1570332   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1570333   +END;
MPRINT(EM_DIAGRAM):   END;
1570334   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1570335   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1570336   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1570337   +END;
MPRINT(EM_DIAGRAM):   END;
1570338   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1570339   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1570340   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1570341   +END;
MPRINT(EM_DIAGRAM):   END;
1570342   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1570343   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1570344   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1570345   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1570346   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1570347   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1570348   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1570349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570350   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1570351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570352   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1570353   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1570354   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1570355   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1570356   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1570357   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1570358   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1570359   +END;
MPRINT(EM_DIAGRAM):   END;
1570360   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1570361   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1570362   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1570363   +drop
1570364   +H11
1570365   +H12
1570366   +H13
1570367   +H14
1570368   +H15
1570369   +H16
1570370   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1570371   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1570372   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1570373   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1570374   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1570375   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1570376   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1570377   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1570378   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1570379   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1570380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1570381   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1570382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1570383   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1570384   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1570385   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1570386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1570387   +* Ensmbl27: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 7 of 7;
1570388   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1570389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1570390   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1570391   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1570392   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1570393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1570394   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1570395   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1570396   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1570397   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1570398   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1570399   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1570400   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1570401   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1570402   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1570403   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1570404   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1570405   +LENGTH _WARN_ $4
1570406   +      F_DepVar  $ 12
1570407   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1570408   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1570409   +
1570410   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1570411   +
1570412   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1570413   +
1570414   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1570415   +
1570416   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1570417   +
1570418   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1570419   +
1570420   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1570421   +
1570422   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1570423   +
1570424   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1570425   +
1570426   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1570427   +
1570428   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1570429   +
1570430   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1570431   +
1570432   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1570433   +
1570434   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1570435   +
1570436   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1570437   +
1570438   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1570439   +
1570440   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1570441   +
1570442   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1570443   +
1570444   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1570445   +
1570446   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1570447   +
1570448   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1570449   +
1570450   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1570451   +
1570452   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1570453   +
1570454   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1570455   +
1570456   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1570457   +
1570458   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1570459   +
1570460   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1570461   +
1570462   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1570463   +
1570464   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1570465   +
1570466   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1570467   +
1570468   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1570469   +
1570470   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1570471   +
1570472   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1570473   +
1570474   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1570475   +
1570476   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1570477   +
1570478   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1570479   +
1570480   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1570481   +
1570482   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1570483   +
1570484   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1570485   +
1570486   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1570487   +
1570488   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1570489   +
1570490   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1570491   +
1570492   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1570493   +
1570494   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1570495   +
1570496   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1570497   +
1570498   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1570499   +
1570500   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1570501   +
1570502   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1570503   +
1570504   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1570505   +
1570506   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1570507   +
1570508   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1570509   +
1570510   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1570511   +
1570512   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1570513   +
1570514   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1570515   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1570516   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1570517   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1570518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1570519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570520   +end;
MPRINT(EM_DIAGRAM):   end;
1570521   +else do;
MPRINT(EM_DIAGRAM):   else do;
1570522   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1570523   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1570524   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1570525   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1570526   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1570527   +   end;
MPRINT(EM_DIAGRAM):   end;
1570528   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1570529   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1570530   +   end;
MPRINT(EM_DIAGRAM):   end;
1570531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1570532   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1570533   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1570534   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570535   +   end;
MPRINT(EM_DIAGRAM):   end;
1570536   +end;
MPRINT(EM_DIAGRAM):   end;
1570537   +
1570538   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1570539   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1570540   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1570541   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1570542   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1570543   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570544   +end;
MPRINT(EM_DIAGRAM):   end;
1570545   +else do;
MPRINT(EM_DIAGRAM):   else do;
1570546   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1570547   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1570548   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1570549   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1570550   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1570551   +   end;
MPRINT(EM_DIAGRAM):   end;
1570552   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1570553   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1570554   +   end;
MPRINT(EM_DIAGRAM):   end;
1570555   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1570556   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1570557   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1570558   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570559   +   end;
MPRINT(EM_DIAGRAM):   end;
1570560   +end;
MPRINT(EM_DIAGRAM):   end;
1570561   +
1570562   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1570563   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1570564   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1570565   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1570566   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1570567   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570568   +end;
MPRINT(EM_DIAGRAM):   end;
1570569   +else do;
MPRINT(EM_DIAGRAM):   else do;
1570570   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1570571   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1570572   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1570573   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1570574   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1570575   +   end;
MPRINT(EM_DIAGRAM):   end;
1570576   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1570577   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1570578   +   end;
MPRINT(EM_DIAGRAM):   end;
1570579   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1570580   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1570581   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1570582   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570583   +   end;
MPRINT(EM_DIAGRAM):   end;
1570584   +end;
MPRINT(EM_DIAGRAM):   end;
1570585   +
1570586   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1570587   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1570588   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1570589   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1570590   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1570591   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570592   +end;
MPRINT(EM_DIAGRAM):   end;
1570593   +else do;
MPRINT(EM_DIAGRAM):   else do;
1570594   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1570595   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1570596   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1570597   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1570598   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1570599   +   end;
MPRINT(EM_DIAGRAM):   end;
1570600   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1570601   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1570602   +   end;
MPRINT(EM_DIAGRAM):   end;
1570603   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1570604   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1570605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1570606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570607   +   end;
MPRINT(EM_DIAGRAM):   end;
1570608   +end;
MPRINT(EM_DIAGRAM):   end;
1570609   +
1570610   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1570611   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1570612   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1570613   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1570614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1570615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570616   +end;
MPRINT(EM_DIAGRAM):   end;
1570617   +else do;
MPRINT(EM_DIAGRAM):   else do;
1570618   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1570619   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1570620   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1570621   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1570622   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1570623   +   end;
MPRINT(EM_DIAGRAM):   end;
1570624   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1570625   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1570626   +   end;
MPRINT(EM_DIAGRAM):   end;
1570627   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1570628   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1570629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1570630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570631   +   end;
MPRINT(EM_DIAGRAM):   end;
1570632   +end;
MPRINT(EM_DIAGRAM):   end;
1570633   +
1570634   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1570635   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1570636   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1570637   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1570638   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1570639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570640   +end;
MPRINT(EM_DIAGRAM):   end;
1570641   +else do;
MPRINT(EM_DIAGRAM):   else do;
1570642   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1570643   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1570644   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1570645   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1570646   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1570647   +   end;
MPRINT(EM_DIAGRAM):   end;
1570648   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1570649   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1570650   +   end;
MPRINT(EM_DIAGRAM):   end;
1570651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1570652   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1570653   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1570654   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570655   +   end;
MPRINT(EM_DIAGRAM):   end;
1570656   +end;
MPRINT(EM_DIAGRAM):   end;
1570657   +
1570658   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1570659   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1570660   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1570661   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1570662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1570663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570664   +end;
MPRINT(EM_DIAGRAM):   end;
1570665   +else do;
MPRINT(EM_DIAGRAM):   else do;
1570666   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1570667   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1570668   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1570669   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1570670   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1570671   +   end;
MPRINT(EM_DIAGRAM):   end;
1570672   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1570673   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1570674   +   end;
MPRINT(EM_DIAGRAM):   end;
1570675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1570676   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1570677   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1570678   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570679   +   end;
MPRINT(EM_DIAGRAM):   end;
1570680   +end;
MPRINT(EM_DIAGRAM):   end;
1570681   +
1570682   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1570683   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1570684   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1570685   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1570686   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1570687   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1570688   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1570689   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1570690   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1570691   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1570692   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1570693   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1570694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1570695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570696   +end;
MPRINT(EM_DIAGRAM):   end;
1570697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1570698   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1570699   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1570700   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1570701   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1570702   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1570703   +   end;
MPRINT(EM_DIAGRAM):   end;
1570704   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1570705   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1570706   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1570707   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1570708   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1570709   +   end;
MPRINT(EM_DIAGRAM):   end;
1570710   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1570711   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1570712   +   end;
MPRINT(EM_DIAGRAM):   end;
1570713   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1570714   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1570715   +   end;
MPRINT(EM_DIAGRAM):   end;
1570716   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1570717   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1570718   +   end;
MPRINT(EM_DIAGRAM):   end;
1570719   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1570720   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1570721   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1570722   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1570723   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1570724   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1570725   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570726   +   end;
MPRINT(EM_DIAGRAM):   end;
1570727   +end;
MPRINT(EM_DIAGRAM):   end;
1570728   +
1570729   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1570730   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1570731   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1570732   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1570733   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1570734   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1570735   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1570736   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1570737   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1570738   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1570739   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1570740   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1570741   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1570742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1570743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570744   +end;
MPRINT(EM_DIAGRAM):   end;
1570745   +else do;
MPRINT(EM_DIAGRAM):   else do;
1570746   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1570747   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1570748   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1570749   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1570750   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1570751   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1570752   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1570753   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1570754   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1570755   +         end;
MPRINT(EM_DIAGRAM):   end;
1570756   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1570757   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1570758   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1570759   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1570760   +            end;
MPRINT(EM_DIAGRAM):   end;
1570761   +         end;
MPRINT(EM_DIAGRAM):   end;
1570762   +      end;
MPRINT(EM_DIAGRAM):   end;
1570763   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1570764   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1570765   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1570766   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1570767   +         end;
MPRINT(EM_DIAGRAM):   end;
1570768   +      end;
MPRINT(EM_DIAGRAM):   end;
1570769   +   end;
MPRINT(EM_DIAGRAM):   end;
1570770   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1570771   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1570772   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1570773   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1570774   +      end;
MPRINT(EM_DIAGRAM):   end;
1570775   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1570776   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1570777   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1570778   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1570779   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1570780   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1570781   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1570782   +         end;
MPRINT(EM_DIAGRAM):   end;
1570783   +      end;
MPRINT(EM_DIAGRAM):   end;
1570784   +   end;
MPRINT(EM_DIAGRAM):   end;
1570785   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1570786   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1570787   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1570788   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1570789   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1570790   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1570791   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570792   +   end;
MPRINT(EM_DIAGRAM):   end;
1570793   +end;
MPRINT(EM_DIAGRAM):   end;
1570794   +
1570795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570796   +*** Checking missing input Interval
1570797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1570798   +
1570799   +IF NMISS(
1570800   +   AcceptedCmpTotal ,
1570801   +   Age ,
1570802   +   Frq ,
1570803   +   Income ,
1570804   +   Kidhome ,
1570805   +   Mnt ,
1570806   +   MntFishProducts ,
1570807   +   MntFruits ,
1570808   +   MntGoldProds ,
1570809   +   MntMeatProducts ,
1570810   +   MntSweetProducts ,
1570811   +   MntWines ,
1570812   +   MonthsAsCustomer ,
1570813   +   NumCatalogPurchases ,
1570814   +   NumDealsPurchases ,
1570815   +   NumDistPurchases ,
1570816   +   NumStorePurchases ,
1570817   +   NumWebPurchases ,
1570818   +   NumWebVisitsMonth ,
1570819   +   RFMstat ,
1570820   +   RMntFrq ,
1570821   +   Recency ,
1570822   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1570823   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1570824   +
1570825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1570826   +END;
MPRINT(EM_DIAGRAM):   END;
1570827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570828   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1570829   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570830   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1570831   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1570832   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1570833   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1570834   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1570835   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1570836   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1570837   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1570838   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1570839   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1570840   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1570841   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1570842   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1570843   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1570844   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1570845   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1570846   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1570847   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1570848   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1570849   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1570850   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1570851   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1570852   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1570853   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1570854   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1570855   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1570856   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1570857   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1570858   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1570859   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1570860   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1570861   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1570862   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1570863   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1570864   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1570865   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1570866   +END;
MPRINT(EM_DIAGRAM):   END;
1570867   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1570868   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1570869   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1570870   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1570871   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1570872   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1570873   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1570874   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1570875   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1570876   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1570877   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1570878   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1570879   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1570880   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1570881   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1570882   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1570883   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1570884   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1570885   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1570886   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1570887   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1570888   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1570889   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1570890   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1570891   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1570892   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1570893   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1570894   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1570895   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1570896   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1570897   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1570898   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1570899   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1570900   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1570901   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1570902   +   ELSE S_NumCatalogPurchases
1570903   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1570904   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1570905   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1570906   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1570907   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1570908   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1570909   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1570910   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1570911   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1570912   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1570913   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1570914   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1570915   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1570916   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1570917   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1570918   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1570919   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1570920   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1570921   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1570922   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1570923   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1570924   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1570925   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1570926   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1570927   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1570928   +END;
MPRINT(EM_DIAGRAM):   END;
1570929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570930   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1570931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570933   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1570934   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570935   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570936   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1570937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1570938   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1570939   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1570940   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1570941   +        S_Income  +    -0.48552270697514 * S_Kidhome
1570942   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1570943   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1570944   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1570945   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1570946   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1570947   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1570948   +          +    -0.23083265836869 * S_NumDealsPurchases
1570949   +          +     0.18257445063797 * S_NumDistPurchases
1570950   +          +     0.38040778765927 * S_NumStorePurchases
1570951   +          +     0.25798779223068 * S_NumWebPurchases
1570952   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1570953   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1570954   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1570955   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome +
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 *
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts +
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 *
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 *
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 *
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 *
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq +
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1570956   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1570957   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1570958   +        S_Income  +     0.23694585796773 * S_Kidhome
1570959   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1570960   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1570961   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1570962   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1570963   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1570964   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1570965   +          +    -0.07783411363525 * S_NumDealsPurchases
1570966   +          +     0.41281579441285 * S_NumDistPurchases
1570967   +          +     0.22243606867939 * S_NumStorePurchases
1570968   +          +     0.27174952755013 * S_NumWebPurchases
1570969   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1570970   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1570971   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1570972   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome +
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 *
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts +
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 *
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 *
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 *
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 *
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq +
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1570973   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1570974   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1570975   +        S_Income  +     0.20802765248799 * S_Kidhome
1570976   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1570977   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1570978   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1570979   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1570980   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1570981   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1570982   +          +     0.09455783738093 * S_NumDealsPurchases
1570983   +          +    -0.06039304909585 * S_NumDistPurchases
1570984   +          +    -0.10306611685636 * S_NumStorePurchases
1570985   +          +    -0.00323837049664 * S_NumWebPurchases
1570986   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1570987   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1570988   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1570989   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome +
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 *
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts +
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 *
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 *
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 *
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 *
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq +
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1570990   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1570991   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1570992   +        S_Income  +     0.26381864865425 * S_Kidhome
1570993   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1570994   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1570995   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1570996   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1570997   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1570998   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1570999   +          +      0.8306613243419 * S_NumDealsPurchases
1571000   +          +     0.31439474207278 * S_NumDistPurchases
1571001   +          +    -0.62131474975756 * S_NumStorePurchases
1571002   +          +    -1.04845843654047 * S_NumWebPurchases
1571003   +          +     0.13255915506164 * S_NumWebVisitsMonth
1571004   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1571005   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1571006   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age +
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome +
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 *
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts +
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 *
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 *
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 *
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 *
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq +
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1571007   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1571008   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1571009   +        S_Income  +    -0.71599192201946 * S_Kidhome
1571010   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1571011   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1571012   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1571013   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1571014   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1571015   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1571016   +          +     0.63537278643623 * S_NumDealsPurchases
1571017   +          +     0.00410348485264 * S_NumDistPurchases
1571018   +          +    -0.78287523583925 * S_NumStorePurchases
1571019   +          +    -0.73614491225189 * S_NumWebPurchases
1571020   +          +      1.5997596522354 * S_NumWebVisitsMonth
1571021   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1571022   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1571023   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome +
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 *
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts +
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 *
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 *
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 *
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 *
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq +
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1571024   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1571025   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1571026   +        S_Income  +    -0.23853377939411 * S_Kidhome
1571027   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1571028   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1571029   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1571030   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1571031   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1571032   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1571033   +          +    -0.30899603957269 * S_NumDealsPurchases
1571034   +          +     0.11839581082877 * S_NumDistPurchases
1571035   +          +     0.20149797391098 * S_NumStorePurchases
1571036   +          +      0.1616654107491 * S_NumWebPurchases
1571037   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1571038   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1571039   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1571040   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome +
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 *
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts +
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 *
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 *
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 *
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 *
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq +
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1571041   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1571042   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1571043   +        S_Income  +    -0.48650790963695 * S_Kidhome
1571044   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1571045   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1571046   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1571047   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1571048   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1571049   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1571050   +          +    -0.18889005468777 * S_NumDealsPurchases
1571051   +          +     0.17240918361456 * S_NumDistPurchases
1571052   +          +     0.11704610685994 * S_NumStorePurchases
1571053   +          +     0.23031393640508 * S_NumWebPurchases
1571054   +          +     0.66002859819524 * S_NumWebVisitsMonth
1571055   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1571056   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1571057   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome +
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 *
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts +
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 *
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 *
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 *
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 *
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq +
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1571058   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1571059   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1571060   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1571061   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1571062   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 *
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 +
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 *
HigherEducationBinary0 ;
1571063   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1571064   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1571065   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1571066   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1571067   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 *
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 +
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 *
HigherEducationBinary0 ;
1571068   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1571069   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1571070   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1571071   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1571072   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 *
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 +
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 *
HigherEducationBinary0 ;
1571073   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1571074   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1571075   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1571076   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1571077   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 *
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 +
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 *
HigherEducationBinary0 ;
1571078   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1571079   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1571080   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1571081   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1571082   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 *
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 +
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 *
HigherEducationBinary0 ;
1571083   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1571084   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1571085   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1571086   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1571087   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 *
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 +
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 *
HigherEducationBinary0 ;
1571088   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1571089   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1571090   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1571091   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1571092   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 *
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 +
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 *
HigherEducationBinary0 ;
1571093   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1571094   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1571095   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1571096   +          +     0.43452164349556 * Marital_StatusDivorced
1571097   +          +    -0.46042593279944 * Marital_StatusMarried
1571098   +          +     0.45533323427801 * Marital_StatusSingle
1571099   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 *
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster +
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried +
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1571100   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1571101   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1571102   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1571103   +          +     0.11002244687305 * Marital_StatusDivorced
1571104   +          +     0.52424349905683 * Marital_StatusMarried
1571105   +          +     -0.3969250366321 * Marital_StatusSingle
1571106   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 *
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried +
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1571107   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1571108   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1571109   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1571110   +          +    -0.05300704180744 * Marital_StatusDivorced
1571111   +          +     0.07805487103106 * Marital_StatusMarried
1571112   +          +     0.20033339442958 * Marital_StatusSingle
1571113   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 *
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster +
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried +
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1571114   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1571115   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1571116   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1571117   +          +    -0.42379596543146 * Marital_StatusDivorced
1571118   +          +     0.66738351478416 * Marital_StatusMarried
1571119   +          +    -0.37324277578462 * Marital_StatusSingle
1571120   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 *
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster +
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried +
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1571121   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1571122   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1571123   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1571124   +          +     0.88761025578489 * Marital_StatusDivorced
1571125   +          +    -0.85905539883385 * Marital_StatusMarried
1571126   +          +     0.73467737758558 * Marital_StatusSingle
1571127   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 *
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried +
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1571128   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1571129   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1571130   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1571131   +          +    -0.11980818075461 * Marital_StatusDivorced
1571132   +          +    -0.16572953052582 * Marital_StatusMarried
1571133   +          +     0.34617421331983 * Marital_StatusSingle
1571134   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 *
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried +
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1571135   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1571136   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1571137   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1571138   +          +     0.14874886057777 * Marital_StatusDivorced
1571139   +          +     -1.0463076915992 * Marital_StatusMarried
1571140   +          +     0.72937563672763 * Marital_StatusSingle
1571141   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 *
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried +
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1571142   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1571143   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1571144   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1571145   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1571146   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1571147   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1571148   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1571149   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1571150   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1571151   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1571152   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1571153   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1571154   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1571155   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1571156   +END;
MPRINT(EM_DIAGRAM):   END;
1571157   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1571158   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1571159   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1571160   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1571161   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1571162   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1571163   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1571164   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1571165   +END;
MPRINT(EM_DIAGRAM):   END;
1571166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1571167   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1571168   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1571169   +
1571170   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1571171   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1571172   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1571173   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1571174   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1571175   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1571176   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1571177   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1571178   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1571179   +end;
MPRINT(EM_DIAGRAM):   end;
1571180   +else do;
MPRINT(EM_DIAGRAM):   else do;
1571181   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1571182   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1571183   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1571184   +   end;
MPRINT(EM_DIAGRAM):   end;
1571185   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1571186   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1571187   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1571188   +   end;
MPRINT(EM_DIAGRAM):   end;
1571189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1571190   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1571191   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1571192   +   end;
MPRINT(EM_DIAGRAM):   end;
1571193   +end;
MPRINT(EM_DIAGRAM):   end;
1571194   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1571195   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1571196   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1571197   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1571198   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 +
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 *
H16 + 2.19267705077374 * H17 ;
1571199   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1571200   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1571201   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1571202   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1571203   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1571204   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1571205   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1571206   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1571207   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1571208   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1571209   +END;
MPRINT(EM_DIAGRAM):   END;
1571210   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1571211   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1571212   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1571213   +END;
MPRINT(EM_DIAGRAM):   END;
1571214   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1571215   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1571216   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1571217   +END;
MPRINT(EM_DIAGRAM):   END;
1571218   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1571219   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1571220   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1571221   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1571222   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1571223   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1571224   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1571225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1571226   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1571227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1571228   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1571229   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1571230   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1571231   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1571232   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1571233   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1571234   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1571235   +END;
MPRINT(EM_DIAGRAM):   END;
1571236   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1571237   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1571238   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1571239   +drop
1571240   +H11
1571241   +H12
1571242   +H13
1571243   +H14
1571244   +H15
1571245   +H16
1571246   +H17
1571247   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1571248   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1571249   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1571250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571251   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1571252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571253   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1571254   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1571255   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1571256   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1571257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571258   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1571259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571260   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1571261   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1571262   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1571263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571264   +* Ensmbl27: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Maximum Posteriors of 7 models;
1571265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571266   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1571267   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1571268   +P_DepVar1 = max(
1571269   +Reg5_P_DepVar1 ,
1571270   +Reg_P_DepVar1 ,
1571271   +Neural4_P_DepVar1 ,
1571272   +Neural2_P_DepVar1 ,
1571273   +Neural3_P_DepVar1 ,
1571274   +Neural9_P_DepVar1 ,
1571275   +Neural10_P_DepVar1
1571276   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Reg5_P_DepVar1 , Reg_P_DepVar1 , Neural4_P_DepVar1 ,
Neural2_P_DepVar1 , Neural3_P_DepVar1 , Neural9_P_DepVar1 , Neural10_P_DepVar1 );
1571277   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1571278   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1571279   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1571280   +end;
MPRINT(EM_DIAGRAM):   end;
1571281   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1571282   +P_DepVar0 = max(
1571283   +Reg5_P_DepVar0 ,
1571284   +Reg_P_DepVar0 ,
1571285   +Neural4_P_DepVar0 ,
1571286   +Neural2_P_DepVar0 ,
1571287   +Neural3_P_DepVar0 ,
1571288   +Neural9_P_DepVar0 ,
1571289   +Neural10_P_DepVar0
1571290   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Reg5_P_DepVar0 , Reg_P_DepVar0 , Neural4_P_DepVar0 ,
Neural2_P_DepVar0 , Neural3_P_DepVar0 , Neural9_P_DepVar0 , Neural10_P_DepVar0 );
1571291   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1571292   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1571293   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1571294   +end;
MPRINT(EM_DIAGRAM):   end;
1571295   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1571296   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571297   +* Ensmbl27: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Classification Vars;
1571298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571299   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1571300   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1571301   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1571302   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1571303   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1571304   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1571305   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1571306   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1571307   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1571308   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1571309   +end;
MPRINT(EM_DIAGRAM):   end;
1571310   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1571311   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1571312   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1571313   +end;
MPRINT(EM_DIAGRAM):   end;
1571314   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1571315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571316   +* Ensmbl27: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Producing Unformatted variable;
1571317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571318   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1571319   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1571320   +else
1571321   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1571322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571323   +* Ensmbl27: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing _WARN_ Variable;
1571324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571325   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1571326   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1571327   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1571328   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1571329   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1571330   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1571331   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1571332   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1571333   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1571334   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1571335   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1571336   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1571337   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1571338   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1571339   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1571340   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1571341   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1571342   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1571343   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1571344   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1571345   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1571346   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1571347   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1571348   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1571349   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1571350   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1571351   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1571352   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1571352  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1571353   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1571353  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1571354   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1571354  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1571355   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1571355  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1571356   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571357   +* Ensmbl27: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Residual Vars;
1571358   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571359   +if
1571360   +F_DepVar NE '1'
1571361   +AND F_DepVar NE '0'
1571362   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1571363   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1571364   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1571365   +end;
MPRINT(EM_DIAGRAM):   end;
1571366   +else do;
MPRINT(EM_DIAGRAM):   else do;
1571367   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1571368   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1571369   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1571370   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1571371   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1571372   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1571373   +END;
MPRINT(EM_DIAGRAM):   END;
1571374   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1571375    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL27_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1571376    quit;
1571377    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1571378    filename emflow
1571378  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring REG5_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571379    *------------------------------------------------------------*;
1571380    * Ensmbl27: Scoring REG5_VALIDATE data;
1571381    *------------------------------------------------------------*;
1571382    data EMWS8.Ensmbl27_VALIDATE
1571383    / view=EMWS8.Ensmbl27_VALIDATE
1571384    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_VALIDATE / view=EMWS8.Ensmbl27_VALIDATE ;
1571385    set EMWS8.Reg5_VALIDATE
1571386    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_VALIDATE ;
1571387    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas.
1571388   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571389   +* Ensmbl27: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Combine model for DepVar;
1571390   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571391   +* Ensmbl27: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 1 of 7;
1571392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571394   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1571395   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1571396   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1571397   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571399   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1571400   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1571401   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1571402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571404   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1571405   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1571406   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1571407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571408   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571409   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1571410   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1571411   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1571412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571413   +
1571414   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1571415   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1571415  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1571416   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1571417   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1571418   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1571419   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1571420   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1571421   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571422   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1571423   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1571424   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1571425   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571427   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1571428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571429   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1571430   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1571431   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1571432   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571433   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1571434   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1571435   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1571436   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571438   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1571439   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1571440   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1571441   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571443   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1571444   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1571445   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1571446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571447   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1571448   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1571449   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1571450   +
1571451   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1571452   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1571453   +
1571454   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1571455   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1571456   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1571457   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1571458   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1571459   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1571460   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1571461   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1571462   +
1571463   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1571464   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1571465   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1571466   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1571467   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1571468   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1571469   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1571470   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1571471   +end;
MPRINT(EM_DIAGRAM):   end;
1571472   +else do;
MPRINT(EM_DIAGRAM):   else do;
1571473   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1571474   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1571475   +   end;
MPRINT(EM_DIAGRAM):   end;
1571476   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1571477   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1571478   +   end;
MPRINT(EM_DIAGRAM):   end;
1571479   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1571480   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1571481   +   end;
MPRINT(EM_DIAGRAM):   end;
1571482   +end;
MPRINT(EM_DIAGRAM):   end;
1571483   +
1571484   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1571485   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1571486   +
1571487   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1571488   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1571489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571491   +end;
MPRINT(EM_DIAGRAM):   end;
1571492   +
1571493   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1571494   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1571495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571497   +end;
MPRINT(EM_DIAGRAM):   end;
1571498   +
1571499   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1571500   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1571501   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571503   +end;
MPRINT(EM_DIAGRAM):   end;
1571504   +
1571505   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1571506   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1571507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571509   +end;
MPRINT(EM_DIAGRAM):   end;
1571510   +
1571511   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1571512   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1571513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571515   +end;
MPRINT(EM_DIAGRAM):   end;
1571516   +
1571517   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1571518   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1571519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571521   +end;
MPRINT(EM_DIAGRAM):   end;
1571522   +
1571523   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1571524   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1571525   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571526   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571527   +end;
MPRINT(EM_DIAGRAM):   end;
1571528   +
1571529   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1571530   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1571531   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571533   +end;
MPRINT(EM_DIAGRAM):   end;
1571534   +
1571535   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1571536   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1571537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571539   +end;
MPRINT(EM_DIAGRAM):   end;
1571540   +
1571541   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1571542   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1571543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571545   +end;
MPRINT(EM_DIAGRAM):   end;
1571546   +
1571547   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1571548   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1571549   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571551   +end;
MPRINT(EM_DIAGRAM):   end;
1571552   +
1571553   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1571554   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1571555   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571556   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571557   +end;
MPRINT(EM_DIAGRAM):   end;
1571558   +
1571559   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1571560   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1571561   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1571562   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1571563   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1571564   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1571565   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1571566   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1571567   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1571568   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1571569   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1571570   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1571571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571573   +end;
MPRINT(EM_DIAGRAM):   end;
1571574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1571575   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1571576   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1571577   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1571578   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1571579   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1571580   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1571581   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1571582   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1571583   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1571584   +         end;
MPRINT(EM_DIAGRAM):   end;
1571585   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1571586   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1571587   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1571588   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1571589   +            end;
MPRINT(EM_DIAGRAM):   end;
1571590   +         end;
MPRINT(EM_DIAGRAM):   end;
1571591   +      end;
MPRINT(EM_DIAGRAM):   end;
1571592   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1571593   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1571594   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1571595   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1571596   +         end;
MPRINT(EM_DIAGRAM):   end;
1571597   +      end;
MPRINT(EM_DIAGRAM):   end;
1571598   +   end;
MPRINT(EM_DIAGRAM):   end;
1571599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1571600   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1571601   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1571602   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1571603   +      end;
MPRINT(EM_DIAGRAM):   end;
1571604   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1571605   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1571606   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1571607   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1571608   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1571609   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1571610   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1571611   +         end;
MPRINT(EM_DIAGRAM):   end;
1571612   +      end;
MPRINT(EM_DIAGRAM):   end;
1571613   +   end;
MPRINT(EM_DIAGRAM):   end;
1571614   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1571615   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1571616   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1571617   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1571618   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1571619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1571620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571621   +   end;
MPRINT(EM_DIAGRAM):   end;
1571622   +end;
MPRINT(EM_DIAGRAM):   end;
1571623   +
1571624   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1571625   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1571626   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1571627   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1571628   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1571629   +end;
MPRINT(EM_DIAGRAM):   end;
1571630   +
1571631   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1571632   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1571633   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1571634   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1571635   +
1571636   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1571637   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1571638   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1571639   +
1571640   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1571641   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1571642   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1571643   +
1571644   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1571645   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1571646   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1571647   +
1571648   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1571649   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1571650   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1571651   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1571652   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1571653   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1571654   +
1571655   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1571656   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1571657   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1571658   +
1571659   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1571660   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1571661   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1571662   +
1571663   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1571664   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1571665   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1571666   +
1571667   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1571668   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1571669   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1571670   +
1571671   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1571672   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1571673   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1571674   +
1571675   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1571676   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1571677   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1571678   +
1571679   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1571680   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1571681   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1571682   +
1571683   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1571684   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1571685   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1571686   +
1571687   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1571688   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1571689   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1571690   +
1571691   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1571692   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1571693   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1571694   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1571695   +
1571696   +REG5DR1:
1571697   +
1571698   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1571699   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1571700   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1571701   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1571702   +end;
MPRINT(EM_DIAGRAM):   end;
1571703   +else do;
MPRINT(EM_DIAGRAM):   else do;
1571704   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1571705   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1571706   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1571707   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1571708   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1571709   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1571710   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1571711   +   end;
MPRINT(EM_DIAGRAM):   end;
1571712   +end;
MPRINT(EM_DIAGRAM):   end;
1571713   +
1571714   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1571715   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1571716   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1571717   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1571718   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1571719   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1571720   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1571721   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1571722   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1571723   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1571724   +end;
MPRINT(EM_DIAGRAM):   end;
1571725   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1571726   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1571727   +
1571728   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1571729   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1571730   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1571731   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1571732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571733   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1571734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571735   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1571736   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1571737   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1571738   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1571739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571740   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1571741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571742   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1571743   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1571744   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1571745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571746   +* Ensmbl27: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 2 of 7;
1571747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571749   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1571750   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1571751   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1571752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1571753   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1571754   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1571755   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1571756   +
1571757   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1571758   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1571759   +
1571760   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1571761   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1571762   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1571763   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1571764   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1571765   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1571766   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1571767   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1571768   +
1571769   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1571770   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1571771   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1571772   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1571773   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1571774   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1571775   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1571776   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1571777   +end;
MPRINT(EM_DIAGRAM):   end;
1571778   +else do;
MPRINT(EM_DIAGRAM):   else do;
1571779   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1571780   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1571781   +   end;
MPRINT(EM_DIAGRAM):   end;
1571782   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1571783   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1571784   +   end;
MPRINT(EM_DIAGRAM):   end;
1571785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1571786   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1571787   +   end;
MPRINT(EM_DIAGRAM):   end;
1571788   +end;
MPRINT(EM_DIAGRAM):   end;
1571789   +
1571790   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1571791   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1571792   +
1571793   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1571794   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1571795   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571796   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571797   +end;
MPRINT(EM_DIAGRAM):   end;
1571798   +
1571799   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1571800   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1571801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571803   +end;
MPRINT(EM_DIAGRAM):   end;
1571804   +
1571805   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1571806   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1571807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571809   +end;
MPRINT(EM_DIAGRAM):   end;
1571810   +
1571811   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1571812   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1571813   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571814   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571815   +end;
MPRINT(EM_DIAGRAM):   end;
1571816   +
1571817   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1571818   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1571819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571821   +end;
MPRINT(EM_DIAGRAM):   end;
1571822   +
1571823   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1571824   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1571825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571827   +end;
MPRINT(EM_DIAGRAM):   end;
1571828   +
1571829   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1571830   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1571831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571833   +end;
MPRINT(EM_DIAGRAM):   end;
1571834   +
1571835   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1571836   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1571837   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571839   +end;
MPRINT(EM_DIAGRAM):   end;
1571840   +
1571841   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1571842   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1571843   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571845   +end;
MPRINT(EM_DIAGRAM):   end;
1571846   +
1571847   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1571848   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1571849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571851   +end;
MPRINT(EM_DIAGRAM):   end;
1571852   +
1571853   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1571854   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1571855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571857   +end;
MPRINT(EM_DIAGRAM):   end;
1571858   +
1571859   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1571860   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1571861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571863   +end;
MPRINT(EM_DIAGRAM):   end;
1571864   +
1571865   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1571866   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1571867   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571869   +end;
MPRINT(EM_DIAGRAM):   end;
1571870   +
1571871   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1571872   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1571873   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1571874   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1571875   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1571876   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1571877   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1571878   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1571879   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1571880   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1571881   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1571882   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1571883   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1571884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571885   +end;
MPRINT(EM_DIAGRAM):   end;
1571886   +else do;
MPRINT(EM_DIAGRAM):   else do;
1571887   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1571888   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1571889   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1571890   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1571891   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1571892   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1571893   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1571894   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1571895   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1571896   +         end;
MPRINT(EM_DIAGRAM):   end;
1571897   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1571898   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1571899   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1571900   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1571901   +            end;
MPRINT(EM_DIAGRAM):   end;
1571902   +         end;
MPRINT(EM_DIAGRAM):   end;
1571903   +      end;
MPRINT(EM_DIAGRAM):   end;
1571904   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1571905   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1571906   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1571907   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1571908   +         end;
MPRINT(EM_DIAGRAM):   end;
1571909   +      end;
MPRINT(EM_DIAGRAM):   end;
1571910   +   end;
MPRINT(EM_DIAGRAM):   end;
1571911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1571912   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1571913   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1571914   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1571915   +      end;
MPRINT(EM_DIAGRAM):   end;
1571916   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1571917   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1571918   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1571919   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1571920   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1571921   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1571922   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1571923   +         end;
MPRINT(EM_DIAGRAM):   end;
1571924   +      end;
MPRINT(EM_DIAGRAM):   end;
1571925   +   end;
MPRINT(EM_DIAGRAM):   end;
1571926   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1571927   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1571928   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1571929   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1571930   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1571931   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1571932   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1571933   +   end;
MPRINT(EM_DIAGRAM):   end;
1571934   +end;
MPRINT(EM_DIAGRAM):   end;
1571935   +
1571936   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1571937   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1571938   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1571939   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1571940   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1571941   +end;
MPRINT(EM_DIAGRAM):   end;
1571942   +
1571943   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1571944   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1571945   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1571946   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1571947   +
1571948   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1571949   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1571950   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1571951   +
1571952   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1571953   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1571954   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1571955   +
1571956   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1571957   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1571958   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1571959   +
1571960   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1571961   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1571962   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1571963   +
1571964   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1571965   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1571966   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1571967   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1571968   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1571969   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1571970   +
1571971   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1571972   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1571973   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1571974   +
1571975   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1571976   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1571977   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1571978   +
1571979   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1571980   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1571981   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1571982   +
1571983   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1571984   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1571985   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1571986   +
1571987   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1571988   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1571989   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1571990   +
1571991   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1571992   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1571993   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1571994   +
1571995   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1571996   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1571997   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1571998   +
1571999   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1572000   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1572001   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1572002   +
1572003   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1572004   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1572005   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1572006   +
1572007   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1572008   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1572009   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1572010   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1572011   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1572012   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1572013   +end;
MPRINT(EM_DIAGRAM):   end;
1572014   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1572015   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1572016   +
1572017   +REGDR1:
1572018   +
1572019   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1572020   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1572021   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1572022   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1572023   +end;
MPRINT(EM_DIAGRAM):   end;
1572024   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572025   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1572026   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1572027   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1572028   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1572029   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1572030   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1572031   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1572032   +   end;
MPRINT(EM_DIAGRAM):   end;
1572033   +end;
MPRINT(EM_DIAGRAM):   end;
1572034   +
1572035   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1572036   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1572037   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1572038   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1572039   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1572040   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1572041   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1572042   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1572043   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1572044   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1572045   +end;
MPRINT(EM_DIAGRAM):   end;
1572046   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1572047   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1572048   +
1572049   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1572050   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1572051   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1572052   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1572053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572054   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1572055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572056   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1572057   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1572058   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1572059   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1572060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572061   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1572062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572063   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1572064   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1572065   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1572066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572067   +* Ensmbl27: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 3 of 7;
1572068   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572069   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572070   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1572071   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1572072   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1572073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572074   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1572075   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1572076   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1572077   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1572078   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1572079   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1572080   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1572081   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1572082   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1572083   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1572084   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1572085   +LENGTH _WARN_ $4
1572086   +      F_DepVar  $ 12
1572087   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1572088   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1572089   +
1572090   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1572091   +
1572092   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1572093   +
1572094   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1572095   +
1572096   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1572097   +
1572098   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1572099   +
1572100   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1572101   +
1572102   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1572103   +
1572104   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1572105   +
1572106   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1572107   +
1572108   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1572109   +
1572110   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1572111   +
1572112   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1572113   +
1572114   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1572115   +
1572116   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1572117   +
1572118   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1572119   +
1572120   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1572121   +
1572122   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1572123   +
1572124   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1572125   +
1572126   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1572127   +
1572128   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1572129   +
1572130   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1572131   +
1572132   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1572133   +
1572134   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1572135   +
1572136   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1572137   +
1572138   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1572139   +
1572140   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1572141   +
1572142   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1572143   +
1572144   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1572145   +
1572146   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1572147   +
1572148   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1572149   +
1572150   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1572151   +
1572152   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1572153   +
1572154   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1572155   +
1572156   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1572157   +
1572158   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1572159   +
1572160   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1572161   +
1572162   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1572163   +
1572164   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1572165   +
1572166   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1572167   +
1572168   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1572169   +
1572170   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1572171   +
1572172   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1572173   +
1572174   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1572175   +
1572176   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1572177   +
1572178   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1572179   +
1572180   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1572181   +
1572182   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1572183   +
1572184   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1572185   +
1572186   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1572187   +
1572188   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1572189   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1572190   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1572191   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1572192   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572193   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572194   +end;
MPRINT(EM_DIAGRAM):   end;
1572195   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572196   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1572197   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1572198   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572199   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1572200   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1572201   +   end;
MPRINT(EM_DIAGRAM):   end;
1572202   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1572203   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1572204   +   end;
MPRINT(EM_DIAGRAM):   end;
1572205   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572206   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1572207   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572208   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572209   +   end;
MPRINT(EM_DIAGRAM):   end;
1572210   +end;
MPRINT(EM_DIAGRAM):   end;
1572211   +
1572212   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1572213   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1572214   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1572215   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1572216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572218   +end;
MPRINT(EM_DIAGRAM):   end;
1572219   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1572221   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1572222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572223   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1572224   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1572225   +   end;
MPRINT(EM_DIAGRAM):   end;
1572226   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1572227   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1572228   +   end;
MPRINT(EM_DIAGRAM):   end;
1572229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572230   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1572231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572233   +   end;
MPRINT(EM_DIAGRAM):   end;
1572234   +end;
MPRINT(EM_DIAGRAM):   end;
1572235   +
1572236   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1572237   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1572238   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1572239   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1572240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572242   +end;
MPRINT(EM_DIAGRAM):   end;
1572243   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572244   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1572245   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1572246   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572247   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1572248   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1572249   +   end;
MPRINT(EM_DIAGRAM):   end;
1572250   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1572251   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1572252   +   end;
MPRINT(EM_DIAGRAM):   end;
1572253   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572254   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1572255   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572256   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572257   +   end;
MPRINT(EM_DIAGRAM):   end;
1572258   +end;
MPRINT(EM_DIAGRAM):   end;
1572259   +
1572260   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1572261   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1572262   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1572263   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1572264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572266   +end;
MPRINT(EM_DIAGRAM):   end;
1572267   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572268   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1572269   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1572270   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572271   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1572272   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1572273   +   end;
MPRINT(EM_DIAGRAM):   end;
1572274   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1572275   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1572276   +   end;
MPRINT(EM_DIAGRAM):   end;
1572277   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572278   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1572279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572281   +   end;
MPRINT(EM_DIAGRAM):   end;
1572282   +end;
MPRINT(EM_DIAGRAM):   end;
1572283   +
1572284   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1572285   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1572286   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1572287   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1572288   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572290   +end;
MPRINT(EM_DIAGRAM):   end;
1572291   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572292   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1572293   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1572294   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572295   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1572296   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1572297   +   end;
MPRINT(EM_DIAGRAM):   end;
1572298   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1572299   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1572300   +   end;
MPRINT(EM_DIAGRAM):   end;
1572301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572302   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1572303   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572304   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572305   +   end;
MPRINT(EM_DIAGRAM):   end;
1572306   +end;
MPRINT(EM_DIAGRAM):   end;
1572307   +
1572308   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1572309   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1572310   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1572311   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1572312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572314   +end;
MPRINT(EM_DIAGRAM):   end;
1572315   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572316   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1572317   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1572318   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572319   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1572320   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1572321   +   end;
MPRINT(EM_DIAGRAM):   end;
1572322   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1572323   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1572324   +   end;
MPRINT(EM_DIAGRAM):   end;
1572325   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572326   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1572327   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572328   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572329   +   end;
MPRINT(EM_DIAGRAM):   end;
1572330   +end;
MPRINT(EM_DIAGRAM):   end;
1572331   +
1572332   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1572333   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1572334   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1572335   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1572336   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572337   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572338   +end;
MPRINT(EM_DIAGRAM):   end;
1572339   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572340   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1572341   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1572342   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572343   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1572344   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1572345   +   end;
MPRINT(EM_DIAGRAM):   end;
1572346   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1572347   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1572348   +   end;
MPRINT(EM_DIAGRAM):   end;
1572349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572350   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1572351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572353   +   end;
MPRINT(EM_DIAGRAM):   end;
1572354   +end;
MPRINT(EM_DIAGRAM):   end;
1572355   +
1572356   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1572357   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1572358   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1572359   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1572360   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1572361   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1572362   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1572363   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1572364   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1572365   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1572366   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1572367   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1572368   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572370   +end;
MPRINT(EM_DIAGRAM):   end;
1572371   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572372   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1572373   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1572374   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572375   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1572376   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1572377   +   end;
MPRINT(EM_DIAGRAM):   end;
1572378   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1572379   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1572380   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1572381   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1572382   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1572383   +   end;
MPRINT(EM_DIAGRAM):   end;
1572384   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1572385   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1572386   +   end;
MPRINT(EM_DIAGRAM):   end;
1572387   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1572388   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1572389   +   end;
MPRINT(EM_DIAGRAM):   end;
1572390   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1572391   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1572392   +   end;
MPRINT(EM_DIAGRAM):   end;
1572393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572394   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1572395   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1572396   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1572397   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1572398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572400   +   end;
MPRINT(EM_DIAGRAM):   end;
1572401   +end;
MPRINT(EM_DIAGRAM):   end;
1572402   +
1572403   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1572404   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1572405   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1572406   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1572407   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1572408   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1572409   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1572410   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1572411   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1572412   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1572413   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1572414   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1572415   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1572416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572418   +end;
MPRINT(EM_DIAGRAM):   end;
1572419   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572420   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1572421   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1572422   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572423   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1572424   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1572425   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1572426   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1572427   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1572428   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1572429   +         end;
MPRINT(EM_DIAGRAM):   end;
1572430   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1572431   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1572432   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1572433   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1572434   +            end;
MPRINT(EM_DIAGRAM):   end;
1572435   +         end;
MPRINT(EM_DIAGRAM):   end;
1572436   +      end;
MPRINT(EM_DIAGRAM):   end;
1572437   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1572438   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1572439   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1572440   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1572441   +         end;
MPRINT(EM_DIAGRAM):   end;
1572442   +      end;
MPRINT(EM_DIAGRAM):   end;
1572443   +   end;
MPRINT(EM_DIAGRAM):   end;
1572444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572445   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1572446   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1572447   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1572448   +      end;
MPRINT(EM_DIAGRAM):   end;
1572449   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1572450   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1572451   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1572452   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1572453   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1572454   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1572455   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1572456   +         end;
MPRINT(EM_DIAGRAM):   end;
1572457   +      end;
MPRINT(EM_DIAGRAM):   end;
1572458   +   end;
MPRINT(EM_DIAGRAM):   end;
1572459   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1572460   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1572461   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1572462   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1572463   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1572464   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572465   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572466   +   end;
MPRINT(EM_DIAGRAM):   end;
1572467   +end;
MPRINT(EM_DIAGRAM):   end;
1572468   +
1572469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572470   +*** Checking missing input Interval
1572471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1572472   +
1572473   +IF NMISS(
1572474   +   AcceptedCmpTotal ,
1572475   +   Age ,
1572476   +   Frq ,
1572477   +   Income ,
1572478   +   Kidhome ,
1572479   +   Mnt ,
1572480   +   MntFishProducts ,
1572481   +   MntFruits ,
1572482   +   MntGoldProds ,
1572483   +   MntMeatProducts ,
1572484   +   MntSweetProducts ,
1572485   +   MntWines ,
1572486   +   MonthsAsCustomer ,
1572487   +   NumCatalogPurchases ,
1572488   +   NumDealsPurchases ,
1572489   +   NumDistPurchases ,
1572490   +   NumStorePurchases ,
1572491   +   NumWebPurchases ,
1572492   +   NumWebVisitsMonth ,
1572493   +   RFMstat ,
1572494   +   RMntFrq ,
1572495   +   Recency ,
1572496   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1572497   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1572498   +
1572499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572500   +END;
MPRINT(EM_DIAGRAM):   END;
1572501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572502   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1572503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572504   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1572505   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1572506   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1572507   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1572508   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1572509   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1572510   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1572511   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1572512   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1572513   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1572514   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1572515   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1572516   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1572517   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1572518   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1572519   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1572520   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1572521   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1572522   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1572523   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1572524   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1572525   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1572526   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1572527   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1572528   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1572529   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1572530   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1572531   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1572532   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1572533   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1572534   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1572535   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1572536   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1572537   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1572538   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1572539   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1572540   +END;
MPRINT(EM_DIAGRAM):   END;
1572541   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1572542   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1572543   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1572544   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1572545   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1572546   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1572547   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1572548   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1572549   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1572550   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1572551   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1572552   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1572553   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1572554   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1572555   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1572556   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1572557   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1572558   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1572559   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1572560   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1572561   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1572562   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1572563   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1572564   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1572565   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1572566   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1572567   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1572568   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1572569   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1572570   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1572571   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1572572   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1572573   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1572574   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1572575   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1572576   +   ELSE S_NumCatalogPurchases
1572577   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1572578   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1572579   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1572580   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1572581   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1572582   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1572583   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1572584   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1572585   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1572586   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1572587   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1572588   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1572589   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1572590   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1572591   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1572592   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1572593   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1572594   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1572595   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1572596   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1572597   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1572598   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1572599   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1572600   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1572601   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1572602   +END;
MPRINT(EM_DIAGRAM):   END;
1572603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572604   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1572605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572607   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1572608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572610   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1572611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572612   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1572613   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1572614   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1572615   +        S_Income  +    -0.76740176580734 * S_Kidhome
1572616   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1572617   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1572618   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1572619   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1572620   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1572621   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1572622   +          +    -1.00050516074089 * S_NumDealsPurchases
1572623   +          +    -0.89322788176916 * S_NumDistPurchases
1572624   +          +     1.21914397196653 * S_NumStorePurchases
1572625   +          +     1.50867172673665 * S_NumWebPurchases
1572626   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1572627   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1572628   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1572629   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome +
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 *
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts +
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 *
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 *
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 *
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 *
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq +
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1572630   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1572631   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1572632   +        S_Income  +    -0.76288911429735 * S_Kidhome
1572633   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1572634   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1572635   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1572636   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1572637   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1572638   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1572639   +          +     0.79497206561332 * S_NumDealsPurchases
1572640   +          +    -0.13658888199464 * S_NumDistPurchases
1572641   +          +    -0.86436416316417 * S_NumStorePurchases
1572642   +          +    -0.85206550087617 * S_NumWebPurchases
1572643   +          +     1.72745004688732 * S_NumWebVisitsMonth
1572644   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1572645   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1572646   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age +
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome +
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 *
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts +
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 *
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 *
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 *
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 *
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq +
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1572647   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1572648   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1572649   +        S_Income  +    -0.48841499166688 * S_Kidhome
1572650   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1572651   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1572652   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1572653   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1572654   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1572655   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1572656   +          +    -0.00010125986409 * S_NumDealsPurchases
1572657   +          +    -0.00873530900019 * S_NumDistPurchases
1572658   +          +    -0.13188135131414 * S_NumStorePurchases
1572659   +          +    -0.10710067608125 * S_NumWebPurchases
1572660   +          +     0.99164053465149 * S_NumWebVisitsMonth
1572661   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1572662   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1572663   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age +
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome +
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 *
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts +
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 *
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 *
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 *
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 *
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq +
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1572664   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1572665   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1572666   +        S_Income  +    -0.57026847797175 * S_Kidhome
1572667   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1572668   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1572669   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1572670   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1572671   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1572672   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1572673   +          +     0.83618651452015 * S_NumDealsPurchases
1572674   +          +     0.22469306589917 * S_NumDistPurchases
1572675   +          +    -0.95889459414769 * S_NumStorePurchases
1572676   +          +    -0.95695646799114 * S_NumWebPurchases
1572677   +          +     0.96738689790948 * S_NumWebVisitsMonth
1572678   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1572679   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1572680   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome +
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 *
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts +
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 *
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 *
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 *
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 *
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq +
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1572681   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1572682   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1572683   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1572684   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1572685   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 *
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 +
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 *
HigherEducationBinary0 ;
1572686   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1572687   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1572688   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1572689   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1572690   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 *
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 +
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 *
HigherEducationBinary0 ;
1572691   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1572692   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1572693   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1572694   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1572695   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 *
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 +
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 *
HigherEducationBinary0 ;
1572696   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1572697   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1572698   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1572699   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1572700   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 *
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 +
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 *
HigherEducationBinary0 ;
1572701   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1572702   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1572703   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1572704   +          +     0.80885454992674 * Marital_StatusDivorced
1572705   +          +     -0.5568630572283 * Marital_StatusMarried
1572706   +          +    -0.03099047176508 * Marital_StatusSingle
1572707   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 *
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster +
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried +
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1572708   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1572709   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1572710   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1572711   +          +     0.13911597069393 * Marital_StatusDivorced
1572712   +          +    -1.50081060732787 * Marital_StatusMarried
1572713   +          +     1.41717012231539 * Marital_StatusSingle
1572714   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 *
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried +
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1572715   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1572716   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1572717   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1572718   +          +    -0.26412736340464 * Marital_StatusDivorced
1572719   +          +    -0.27049992388629 * Marital_StatusMarried
1572720   +          +     0.67476795725099 * Marital_StatusSingle
1572721   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 *
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried +
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1572722   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1572723   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1572724   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1572725   +          +      0.8954230457499 * Marital_StatusDivorced
1572726   +          +     0.73706556068242 * Marital_StatusMarried
1572727   +          +    -1.29073720538893 * Marital_StatusSingle
1572728   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 *
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried +
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1572729   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1572730   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1572731   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1572732   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1572733   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1572734   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1572735   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1572736   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1572737   +END;
MPRINT(EM_DIAGRAM):   END;
1572738   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1572739   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1572740   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1572741   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1572742   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1572743   +END;
MPRINT(EM_DIAGRAM):   END;
1572744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572745   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1572746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572747   +
1572748   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1572749   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1572750   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1572751   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1572752   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1572753   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572754   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1572755   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1572756   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1572757   +end;
MPRINT(EM_DIAGRAM):   end;
1572758   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572759   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1572760   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1572761   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1572762   +   end;
MPRINT(EM_DIAGRAM):   end;
1572763   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1572764   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1572765   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1572766   +   end;
MPRINT(EM_DIAGRAM):   end;
1572767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572768   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1572769   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1572770   +   end;
MPRINT(EM_DIAGRAM):   end;
1572771   +end;
MPRINT(EM_DIAGRAM):   end;
1572772   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1572773   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1572774   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 +
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1572775   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1572776   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1572777   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1572778   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1572779   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1572780   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1572781   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1572782   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1572783   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1572784   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1572785   +END;
MPRINT(EM_DIAGRAM):   END;
1572786   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1572787   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1572788   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1572789   +END;
MPRINT(EM_DIAGRAM):   END;
1572790   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1572791   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1572792   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1572793   +END;
MPRINT(EM_DIAGRAM):   END;
1572794   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1572795   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1572796   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1572797   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1572798   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1572799   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1572800   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1572801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572802   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1572803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1572804   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1572805   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1572806   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1572807   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1572808   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1572809   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1572810   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1572811   +END;
MPRINT(EM_DIAGRAM):   END;
1572812   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1572813   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1572814   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1572815   +drop
1572816   +H11
1572817   +H12
1572818   +H13
1572819   +H14
1572820   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1572821   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1572822   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1572823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572824   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1572825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572826   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1572827   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1572828   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1572829   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1572830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572831   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1572832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572833   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1572834   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1572835   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1572836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572837   +* Ensmbl27: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 4 of 7;
1572838   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572839   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572840   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1572841   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1572842   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1572843   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1572844   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1572845   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1572846   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1572847   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1572848   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1572849   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1572850   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1572851   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1572852   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1572853   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1572854   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1572855   +LENGTH _WARN_ $4
1572856   +      F_DepVar  $ 12
1572857   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1572858   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1572859   +
1572860   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1572861   +
1572862   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1572863   +
1572864   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1572865   +
1572866   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1572867   +
1572868   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1572869   +
1572870   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1572871   +
1572872   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1572873   +
1572874   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1572875   +
1572876   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1572877   +
1572878   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1572879   +
1572880   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1572881   +
1572882   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1572883   +
1572884   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1572885   +
1572886   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1572887   +
1572888   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1572889   +
1572890   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1572891   +
1572892   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1572893   +
1572894   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1572895   +
1572896   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1572897   +
1572898   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1572899   +
1572900   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1572901   +
1572902   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1572903   +
1572904   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1572905   +
1572906   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1572907   +
1572908   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1572909   +
1572910   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1572911   +
1572912   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1572913   +
1572914   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1572915   +
1572916   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1572917   +
1572918   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1572919   +
1572920   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1572921   +
1572922   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1572923   +
1572924   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1572925   +
1572926   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1572927   +
1572928   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1572929   +
1572930   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1572931   +
1572932   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1572933   +
1572934   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1572935   +
1572936   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1572937   +
1572938   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1572939   +
1572940   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1572941   +
1572942   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1572943   +
1572944   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1572945   +
1572946   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1572947   +
1572948   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1572949   +
1572950   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1572951   +
1572952   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1572953   +
1572954   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1572955   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1572956   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1572957   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1572958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572960   +end;
MPRINT(EM_DIAGRAM):   end;
1572961   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1572963   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1572964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1572966   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1572967   +   end;
MPRINT(EM_DIAGRAM):   end;
1572968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1572969   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1572970   +   end;
MPRINT(EM_DIAGRAM):   end;
1572971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572972   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1572973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572975   +   end;
MPRINT(EM_DIAGRAM):   end;
1572976   +end;
MPRINT(EM_DIAGRAM):   end;
1572977   +
1572978   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1572979   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1572980   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1572981   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1572982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1572983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572984   +end;
MPRINT(EM_DIAGRAM):   end;
1572985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1572986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1572987   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1572988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1572989   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1572990   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1572991   +   end;
MPRINT(EM_DIAGRAM):   end;
1572992   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1572993   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1572994   +   end;
MPRINT(EM_DIAGRAM):   end;
1572995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1572996   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1572997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1572998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1572999   +   end;
MPRINT(EM_DIAGRAM):   end;
1573000   +end;
MPRINT(EM_DIAGRAM):   end;
1573001   +
1573002   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1573003   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1573004   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1573005   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1573006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573008   +end;
MPRINT(EM_DIAGRAM):   end;
1573009   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573011   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1573012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573013   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1573014   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1573015   +   end;
MPRINT(EM_DIAGRAM):   end;
1573016   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1573017   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1573018   +   end;
MPRINT(EM_DIAGRAM):   end;
1573019   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573020   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1573021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573023   +   end;
MPRINT(EM_DIAGRAM):   end;
1573024   +end;
MPRINT(EM_DIAGRAM):   end;
1573025   +
1573026   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1573027   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1573028   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1573029   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1573030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573032   +end;
MPRINT(EM_DIAGRAM):   end;
1573033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573035   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1573036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1573038   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1573039   +   end;
MPRINT(EM_DIAGRAM):   end;
1573040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1573041   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1573042   +   end;
MPRINT(EM_DIAGRAM):   end;
1573043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573044   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1573045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573047   +   end;
MPRINT(EM_DIAGRAM):   end;
1573048   +end;
MPRINT(EM_DIAGRAM):   end;
1573049   +
1573050   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1573051   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1573052   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1573053   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1573054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573056   +end;
MPRINT(EM_DIAGRAM):   end;
1573057   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573059   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1573060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573061   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1573062   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1573063   +   end;
MPRINT(EM_DIAGRAM):   end;
1573064   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1573065   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1573066   +   end;
MPRINT(EM_DIAGRAM):   end;
1573067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573068   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1573069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573071   +   end;
MPRINT(EM_DIAGRAM):   end;
1573072   +end;
MPRINT(EM_DIAGRAM):   end;
1573073   +
1573074   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1573075   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1573076   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1573077   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1573078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573080   +end;
MPRINT(EM_DIAGRAM):   end;
1573081   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573083   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1573084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573085   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1573086   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1573087   +   end;
MPRINT(EM_DIAGRAM):   end;
1573088   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1573089   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1573090   +   end;
MPRINT(EM_DIAGRAM):   end;
1573091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573092   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1573093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573095   +   end;
MPRINT(EM_DIAGRAM):   end;
1573096   +end;
MPRINT(EM_DIAGRAM):   end;
1573097   +
1573098   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1573099   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1573100   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1573101   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1573102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573104   +end;
MPRINT(EM_DIAGRAM):   end;
1573105   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573106   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573107   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1573108   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573109   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1573110   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1573111   +   end;
MPRINT(EM_DIAGRAM):   end;
1573112   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1573113   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1573114   +   end;
MPRINT(EM_DIAGRAM):   end;
1573115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573116   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1573117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573119   +   end;
MPRINT(EM_DIAGRAM):   end;
1573120   +end;
MPRINT(EM_DIAGRAM):   end;
1573121   +
1573122   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1573123   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1573124   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1573125   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1573126   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1573127   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1573128   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1573129   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1573130   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1573131   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1573132   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1573133   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1573134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573136   +end;
MPRINT(EM_DIAGRAM):   end;
1573137   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573138   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1573139   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1573140   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573141   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1573142   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1573143   +   end;
MPRINT(EM_DIAGRAM):   end;
1573144   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1573145   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1573146   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1573147   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1573148   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1573149   +   end;
MPRINT(EM_DIAGRAM):   end;
1573150   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1573151   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1573152   +   end;
MPRINT(EM_DIAGRAM):   end;
1573153   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1573154   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1573155   +   end;
MPRINT(EM_DIAGRAM):   end;
1573156   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1573157   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1573158   +   end;
MPRINT(EM_DIAGRAM):   end;
1573159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573160   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1573161   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1573162   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1573163   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1573164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573166   +   end;
MPRINT(EM_DIAGRAM):   end;
1573167   +end;
MPRINT(EM_DIAGRAM):   end;
1573168   +
1573169   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1573170   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1573171   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1573172   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1573173   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1573174   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1573175   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1573176   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1573177   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1573178   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1573179   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1573180   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1573181   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1573182   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573183   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573184   +end;
MPRINT(EM_DIAGRAM):   end;
1573185   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573186   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1573187   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1573188   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573189   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1573190   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1573191   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1573192   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1573193   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1573194   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1573195   +         end;
MPRINT(EM_DIAGRAM):   end;
1573196   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1573197   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1573198   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1573199   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1573200   +            end;
MPRINT(EM_DIAGRAM):   end;
1573201   +         end;
MPRINT(EM_DIAGRAM):   end;
1573202   +      end;
MPRINT(EM_DIAGRAM):   end;
1573203   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1573204   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1573205   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1573206   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1573207   +         end;
MPRINT(EM_DIAGRAM):   end;
1573208   +      end;
MPRINT(EM_DIAGRAM):   end;
1573209   +   end;
MPRINT(EM_DIAGRAM):   end;
1573210   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573211   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1573212   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1573213   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1573214   +      end;
MPRINT(EM_DIAGRAM):   end;
1573215   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1573216   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1573217   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1573218   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1573219   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1573220   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1573221   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1573222   +         end;
MPRINT(EM_DIAGRAM):   end;
1573223   +      end;
MPRINT(EM_DIAGRAM):   end;
1573224   +   end;
MPRINT(EM_DIAGRAM):   end;
1573225   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1573226   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1573227   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1573228   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1573229   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1573230   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573231   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573232   +   end;
MPRINT(EM_DIAGRAM):   end;
1573233   +end;
MPRINT(EM_DIAGRAM):   end;
1573234   +
1573235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573236   +*** Checking missing input Interval
1573237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1573238   +
1573239   +IF NMISS(
1573240   +   AcceptedCmpTotal ,
1573241   +   Age ,
1573242   +   Frq ,
1573243   +   Income ,
1573244   +   Kidhome ,
1573245   +   Mnt ,
1573246   +   MntFishProducts ,
1573247   +   MntFruits ,
1573248   +   MntGoldProds ,
1573249   +   MntMeatProducts ,
1573250   +   MntSweetProducts ,
1573251   +   MntWines ,
1573252   +   MonthsAsCustomer ,
1573253   +   NumCatalogPurchases ,
1573254   +   NumDealsPurchases ,
1573255   +   NumDistPurchases ,
1573256   +   NumStorePurchases ,
1573257   +   NumWebPurchases ,
1573258   +   NumWebVisitsMonth ,
1573259   +   RFMstat ,
1573260   +   RMntFrq ,
1573261   +   Recency ,
1573262   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1573263   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1573264   +
1573265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573266   +END;
MPRINT(EM_DIAGRAM):   END;
1573267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573268   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1573269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573270   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1573271   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1573272   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1573273   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1573274   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1573275   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1573276   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1573277   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1573278   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1573279   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1573280   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1573281   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1573282   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1573283   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1573284   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1573285   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1573286   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1573287   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1573288   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1573289   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1573290   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1573291   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1573292   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1573293   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1573294   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1573295   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1573296   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1573297   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1573298   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1573299   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1573300   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1573301   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1573302   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1573303   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1573304   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1573305   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1573306   +END;
MPRINT(EM_DIAGRAM):   END;
1573307   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1573308   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1573309   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1573310   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1573311   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1573312   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1573313   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1573314   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1573315   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1573316   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1573317   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1573318   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1573319   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1573320   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1573321   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1573322   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1573323   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1573324   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1573325   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1573326   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1573327   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1573328   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1573329   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1573330   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1573331   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1573332   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1573333   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1573334   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1573335   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1573336   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1573337   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1573338   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1573339   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1573340   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1573341   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1573342   +   ELSE S_NumCatalogPurchases
1573343   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1573344   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1573345   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1573346   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1573347   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1573348   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1573349   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1573350   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1573351   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1573352   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1573353   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1573354   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1573355   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1573356   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1573357   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1573358   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1573359   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1573360   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1573361   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1573362   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1573363   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1573364   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1573365   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1573366   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1573367   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1573368   +END;
MPRINT(EM_DIAGRAM):   END;
1573369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573370   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1573371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573373   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1573374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573376   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1573377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573378   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1573379   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1573380   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1573381   +        S_Income  +    -1.07733254688396 * S_Kidhome
1573382   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1573383   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1573384   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1573385   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1573386   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1573387   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1573388   +          +     0.34431711603003 * S_NumDealsPurchases
1573389   +          +      0.7134923732819 * S_NumDistPurchases
1573390   +          +     0.05901777448936 * S_NumStorePurchases
1573391   +          +    -0.19803026616936 * S_NumWebPurchases
1573392   +          +     1.34202846183228 * S_NumWebVisitsMonth
1573393   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1573394   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1573395   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age +
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome +
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 *
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts +
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 *
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 *
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 *
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 *
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq +
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1573396   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1573397   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1573398   +        S_Income  +    -0.00255151514163 * S_Kidhome
1573399   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1573400   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1573401   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1573402   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1573403   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1573404   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1573405   +          +     0.45752917132477 * S_NumDealsPurchases
1573406   +          +      0.1559495599293 * S_NumDistPurchases
1573407   +          +    -0.33402213718695 * S_NumStorePurchases
1573408   +          +    -0.39372662704902 * S_NumWebPurchases
1573409   +          +     0.52518189694069 * S_NumWebVisitsMonth
1573410   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1573411   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1573412   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome +
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 *
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts +
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 *
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 *
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 *
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 *
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq +
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1573413   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1573414   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1573415   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1573416   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1573417   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 *
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 +
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 *
HigherEducationBinary0 ;
1573418   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1573419   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1573420   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1573421   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1573422   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 *
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 +
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 *
HigherEducationBinary0 ;
1573423   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1573424   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1573425   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1573426   +          +     0.46710555357393 * Marital_StatusDivorced
1573427   +          +    -1.27560428667174 * Marital_StatusMarried
1573428   +          +      1.3147344073121 * Marital_StatusSingle
1573429   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 *
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried +
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1573430   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1573431   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1573432   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1573433   +          +     0.07422027097612 * Marital_StatusDivorced
1573434   +          +     0.00271855575037 * Marital_StatusMarried
1573435   +          +    -0.00749566028051 * Marital_StatusSingle
1573436   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 *
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster +
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried +
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1573437   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1573438   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1573439   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1573440   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1573441   +END;
MPRINT(EM_DIAGRAM):   END;
1573442   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1573443   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1573444   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1573445   +END;
MPRINT(EM_DIAGRAM):   END;
1573446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573447   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1573448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573449   +
1573450   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1573451   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1573452   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1573453   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1573454   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1573455   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573456   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1573457   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1573458   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1573459   +end;
MPRINT(EM_DIAGRAM):   end;
1573460   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573461   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1573462   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1573463   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1573464   +   end;
MPRINT(EM_DIAGRAM):   end;
1573465   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1573466   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1573467   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1573468   +   end;
MPRINT(EM_DIAGRAM):   end;
1573469   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573470   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1573471   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1573472   +   end;
MPRINT(EM_DIAGRAM):   end;
1573473   +end;
MPRINT(EM_DIAGRAM):   end;
1573474   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1573475   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1573476   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1573477   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1573478   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1573479   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1573480   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1573481   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1573482   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1573483   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1573484   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1573485   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1573486   +END;
MPRINT(EM_DIAGRAM):   END;
1573487   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1573488   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1573489   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1573490   +END;
MPRINT(EM_DIAGRAM):   END;
1573491   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1573492   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1573493   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1573494   +END;
MPRINT(EM_DIAGRAM):   END;
1573495   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1573496   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1573497   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1573498   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1573499   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1573500   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1573501   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1573502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573503   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1573504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573505   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1573506   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1573507   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1573508   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1573509   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1573510   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1573511   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1573512   +END;
MPRINT(EM_DIAGRAM):   END;
1573513   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1573514   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1573515   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1573516   +drop
1573517   +H11
1573518   +H12
1573519   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1573520   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1573521   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1573522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1573523   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1573524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1573525   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1573526   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1573527   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1573528   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1573529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1573530   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1573531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1573532   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1573533   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1573534   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1573535   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1573536   +* Ensmbl27: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 5 of 7;
1573537   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1573538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1573539   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1573540   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1573541   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1573542   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1573543   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1573544   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1573545   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1573546   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1573547   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1573548   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1573549   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1573550   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1573551   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1573552   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1573553   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1573554   +LENGTH _WARN_ $4
1573555   +      F_DepVar  $ 12
1573556   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1573557   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1573558   +
1573559   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1573560   +
1573561   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1573562   +
1573563   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1573564   +
1573565   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1573566   +
1573567   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1573568   +
1573569   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1573570   +
1573571   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1573572   +
1573573   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1573574   +
1573575   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1573576   +
1573577   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1573578   +
1573579   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1573580   +
1573581   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1573582   +
1573583   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1573584   +
1573585   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1573586   +
1573587   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1573588   +
1573589   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1573590   +
1573591   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1573592   +
1573593   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1573594   +
1573595   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1573596   +
1573597   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1573598   +
1573599   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1573600   +
1573601   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1573602   +
1573603   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1573604   +
1573605   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1573606   +
1573607   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1573608   +
1573609   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1573610   +
1573611   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1573612   +
1573613   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1573614   +
1573615   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1573616   +
1573617   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1573618   +
1573619   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1573620   +
1573621   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1573622   +
1573623   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1573624   +
1573625   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1573626   +
1573627   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1573628   +
1573629   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1573630   +
1573631   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1573632   +
1573633   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1573634   +
1573635   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1573636   +
1573637   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1573638   +
1573639   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1573640   +
1573641   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1573642   +
1573643   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1573644   +
1573645   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1573646   +
1573647   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1573648   +
1573649   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1573650   +
1573651   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1573652   +
1573653   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1573654   +
1573655   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1573656   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1573657   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1573658   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1573659   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573660   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573661   +end;
MPRINT(EM_DIAGRAM):   end;
1573662   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573663   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573664   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1573665   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573666   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1573667   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1573668   +   end;
MPRINT(EM_DIAGRAM):   end;
1573669   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1573670   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1573671   +   end;
MPRINT(EM_DIAGRAM):   end;
1573672   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573673   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1573674   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573675   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573676   +   end;
MPRINT(EM_DIAGRAM):   end;
1573677   +end;
MPRINT(EM_DIAGRAM):   end;
1573678   +
1573679   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1573680   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1573681   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1573682   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1573683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573685   +end;
MPRINT(EM_DIAGRAM):   end;
1573686   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573687   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573688   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1573689   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573690   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1573691   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1573692   +   end;
MPRINT(EM_DIAGRAM):   end;
1573693   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1573694   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1573695   +   end;
MPRINT(EM_DIAGRAM):   end;
1573696   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573697   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1573698   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573699   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573700   +   end;
MPRINT(EM_DIAGRAM):   end;
1573701   +end;
MPRINT(EM_DIAGRAM):   end;
1573702   +
1573703   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1573704   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1573705   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1573706   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1573707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573709   +end;
MPRINT(EM_DIAGRAM):   end;
1573710   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573711   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573712   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1573713   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573714   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1573715   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1573716   +   end;
MPRINT(EM_DIAGRAM):   end;
1573717   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1573718   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1573719   +   end;
MPRINT(EM_DIAGRAM):   end;
1573720   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573721   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1573722   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573723   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573724   +   end;
MPRINT(EM_DIAGRAM):   end;
1573725   +end;
MPRINT(EM_DIAGRAM):   end;
1573726   +
1573727   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1573728   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1573729   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1573730   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1573731   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573732   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573733   +end;
MPRINT(EM_DIAGRAM):   end;
1573734   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573735   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573736   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1573737   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573738   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1573739   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1573740   +   end;
MPRINT(EM_DIAGRAM):   end;
1573741   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1573742   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1573743   +   end;
MPRINT(EM_DIAGRAM):   end;
1573744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573745   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1573746   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573747   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573748   +   end;
MPRINT(EM_DIAGRAM):   end;
1573749   +end;
MPRINT(EM_DIAGRAM):   end;
1573750   +
1573751   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1573752   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1573753   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1573754   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1573755   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573756   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573757   +end;
MPRINT(EM_DIAGRAM):   end;
1573758   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573759   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573760   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1573761   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573762   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1573763   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1573764   +   end;
MPRINT(EM_DIAGRAM):   end;
1573765   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1573766   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1573767   +   end;
MPRINT(EM_DIAGRAM):   end;
1573768   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573769   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1573770   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573771   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573772   +   end;
MPRINT(EM_DIAGRAM):   end;
1573773   +end;
MPRINT(EM_DIAGRAM):   end;
1573774   +
1573775   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1573776   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1573777   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1573778   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1573779   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573781   +end;
MPRINT(EM_DIAGRAM):   end;
1573782   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573783   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573784   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1573785   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573786   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1573787   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1573788   +   end;
MPRINT(EM_DIAGRAM):   end;
1573789   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1573790   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1573791   +   end;
MPRINT(EM_DIAGRAM):   end;
1573792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573793   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1573794   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573795   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573796   +   end;
MPRINT(EM_DIAGRAM):   end;
1573797   +end;
MPRINT(EM_DIAGRAM):   end;
1573798   +
1573799   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1573800   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1573801   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1573802   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1573803   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573804   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573805   +end;
MPRINT(EM_DIAGRAM):   end;
1573806   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573807   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1573808   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1573809   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573810   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1573811   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1573812   +   end;
MPRINT(EM_DIAGRAM):   end;
1573813   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1573814   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1573815   +   end;
MPRINT(EM_DIAGRAM):   end;
1573816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573817   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1573818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573820   +   end;
MPRINT(EM_DIAGRAM):   end;
1573821   +end;
MPRINT(EM_DIAGRAM):   end;
1573822   +
1573823   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1573824   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1573825   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1573826   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1573827   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1573828   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1573829   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1573830   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1573831   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1573832   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1573833   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1573834   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1573835   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573836   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573837   +end;
MPRINT(EM_DIAGRAM):   end;
1573838   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573839   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1573840   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1573841   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573842   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1573843   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1573844   +   end;
MPRINT(EM_DIAGRAM):   end;
1573845   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1573846   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1573847   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1573848   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1573849   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1573850   +   end;
MPRINT(EM_DIAGRAM):   end;
1573851   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1573852   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1573853   +   end;
MPRINT(EM_DIAGRAM):   end;
1573854   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1573855   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1573856   +   end;
MPRINT(EM_DIAGRAM):   end;
1573857   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1573858   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1573859   +   end;
MPRINT(EM_DIAGRAM):   end;
1573860   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573861   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1573862   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1573863   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1573864   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1573865   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573866   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573867   +   end;
MPRINT(EM_DIAGRAM):   end;
1573868   +end;
MPRINT(EM_DIAGRAM):   end;
1573869   +
1573870   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1573871   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1573872   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1573873   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1573874   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1573875   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1573876   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1573877   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1573878   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1573879   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1573880   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1573881   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1573882   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1573883   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1573884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573885   +end;
MPRINT(EM_DIAGRAM):   end;
1573886   +else do;
MPRINT(EM_DIAGRAM):   else do;
1573887   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1573888   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1573889   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1573890   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1573891   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1573892   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1573893   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1573894   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1573895   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1573896   +         end;
MPRINT(EM_DIAGRAM):   end;
1573897   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1573898   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1573899   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1573900   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1573901   +            end;
MPRINT(EM_DIAGRAM):   end;
1573902   +         end;
MPRINT(EM_DIAGRAM):   end;
1573903   +      end;
MPRINT(EM_DIAGRAM):   end;
1573904   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1573905   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1573906   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1573907   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1573908   +         end;
MPRINT(EM_DIAGRAM):   end;
1573909   +      end;
MPRINT(EM_DIAGRAM):   end;
1573910   +   end;
MPRINT(EM_DIAGRAM):   end;
1573911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1573912   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1573913   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1573914   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1573915   +      end;
MPRINT(EM_DIAGRAM):   end;
1573916   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1573917   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1573918   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1573919   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1573920   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1573921   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1573922   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1573923   +         end;
MPRINT(EM_DIAGRAM):   end;
1573924   +      end;
MPRINT(EM_DIAGRAM):   end;
1573925   +   end;
MPRINT(EM_DIAGRAM):   end;
1573926   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1573927   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1573928   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1573929   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1573930   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1573931   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1573932   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573933   +   end;
MPRINT(EM_DIAGRAM):   end;
1573934   +end;
MPRINT(EM_DIAGRAM):   end;
1573935   +
1573936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573937   +*** Checking missing input Interval
1573938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1573939   +
1573940   +IF NMISS(
1573941   +   AcceptedCmpTotal ,
1573942   +   Age ,
1573943   +   Frq ,
1573944   +   Income ,
1573945   +   Kidhome ,
1573946   +   Mnt ,
1573947   +   MntFishProducts ,
1573948   +   MntFruits ,
1573949   +   MntGoldProds ,
1573950   +   MntMeatProducts ,
1573951   +   MntSweetProducts ,
1573952   +   MntWines ,
1573953   +   MonthsAsCustomer ,
1573954   +   NumCatalogPurchases ,
1573955   +   NumDealsPurchases ,
1573956   +   NumDistPurchases ,
1573957   +   NumStorePurchases ,
1573958   +   NumWebPurchases ,
1573959   +   NumWebVisitsMonth ,
1573960   +   RFMstat ,
1573961   +   RMntFrq ,
1573962   +   Recency ,
1573963   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1573964   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1573965   +
1573966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1573967   +END;
MPRINT(EM_DIAGRAM):   END;
1573968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573969   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1573970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1573971   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1573972   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1573973   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1573974   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1573975   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1573976   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1573977   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1573978   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1573979   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1573980   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1573981   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1573982   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1573983   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1573984   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1573985   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1573986   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1573987   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1573988   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1573989   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1573990   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1573991   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1573992   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1573993   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1573994   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1573995   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1573996   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1573997   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1573998   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1573999   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1574000   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1574001   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1574002   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1574003   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1574004   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1574005   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1574006   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1574007   +END;
MPRINT(EM_DIAGRAM):   END;
1574008   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1574009   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1574010   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1574011   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1574012   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1574013   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1574014   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1574015   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1574016   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1574017   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1574018   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1574019   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1574020   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1574021   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1574022   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1574023   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1574024   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1574025   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1574026   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1574027   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1574028   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1574029   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1574030   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1574031   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1574032   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1574033   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1574034   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1574035   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1574036   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1574037   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1574038   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1574039   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1574040   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1574041   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1574042   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1574043   +   ELSE S_NumCatalogPurchases
1574044   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1574045   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1574046   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1574047   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1574048   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1574049   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1574050   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1574051   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1574052   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1574053   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1574054   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1574055   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1574056   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1574057   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1574058   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1574059   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1574060   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1574061   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1574062   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1574063   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1574064   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1574065   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1574066   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1574067   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1574068   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1574069   +END;
MPRINT(EM_DIAGRAM):   END;
1574070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574071   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1574072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574073   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574074   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1574075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574077   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1574078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574079   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1574080   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1574081   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1574082   +        S_Income  +     0.49557647195287 * S_Kidhome
1574083   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1574084   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1574085   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1574086   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1574087   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1574088   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1574089   +          +     1.29965538748336 * S_NumDealsPurchases
1574090   +          +     0.16818868463142 * S_NumDistPurchases
1574091   +          +    -0.64507792847411 * S_NumStorePurchases
1574092   +          +    -0.52243329275268 * S_NumWebPurchases
1574093   +          +     1.48521107923182 * S_NumWebVisitsMonth
1574094   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1574095   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1574096   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome +
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 *
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts +
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 *
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 *
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 *
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 *
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq +
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1574097   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1574098   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1574099   +        S_Income  +       0.536631748871 * S_Kidhome
1574100   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1574101   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1574102   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1574103   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1574104   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1574105   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1574106   +          +    -0.63220849663702 * S_NumDealsPurchases
1574107   +          +    -0.03517440588176 * S_NumDistPurchases
1574108   +          +     0.90435516280473 * S_NumStorePurchases
1574109   +          +     1.02540776095101 * S_NumWebPurchases
1574110   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1574111   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1574112   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1574113   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome +
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 *
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts +
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 *
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 *
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 *
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 *
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq +
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1574114   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1574115   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1574116   +        S_Income  +     0.45173611630992 * S_Kidhome
1574117   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1574118   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1574119   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1574120   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1574121   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1574122   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1574123   +          +     0.00572910064772 * S_NumDealsPurchases
1574124   +          +    -0.43545754325176 * S_NumDistPurchases
1574125   +          +     0.12831980635185 * S_NumStorePurchases
1574126   +          +     0.02223697618186 * S_NumWebPurchases
1574127   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1574128   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1574129   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1574130   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome +
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 *
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts +
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 *
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 *
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 *
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 *
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq +
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1574131   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1574132   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1574133   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1574134   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1574135   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 *
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 +
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 *
HigherEducationBinary0 ;
1574136   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1574137   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1574138   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1574139   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1574140   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 *
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 +
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 *
HigherEducationBinary0 ;
1574141   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1574142   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1574143   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1574144   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1574145   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 *
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 +
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 *
HigherEducationBinary0 ;
1574146   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1574147   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1574148   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1574149   +          +     0.14010081581672 * Marital_StatusDivorced
1574150   +          +     0.03574033044092 * Marital_StatusMarried
1574151   +          +    -0.14272769898675 * Marital_StatusSingle
1574152   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 *
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried +
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1574153   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1574154   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1574155   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1574156   +          +    -0.14878433798537 * Marital_StatusDivorced
1574157   +          +     0.14990226067603 * Marital_StatusMarried
1574158   +          +    -0.50903755449357 * Marital_StatusSingle
1574159   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 *
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried +
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1574160   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1574161   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1574162   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1574163   +          +    -0.52568922939912 * Marital_StatusDivorced
1574164   +          +     1.74121506979092 * Marital_StatusMarried
1574165   +          +    -1.16029880777095 * Marital_StatusSingle
1574166   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 *
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster +
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried +
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1574167   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1574168   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1574169   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1574170   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1574171   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1574172   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1574173   +END;
MPRINT(EM_DIAGRAM):   END;
1574174   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1574175   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1574176   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1574177   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1574178   +END;
MPRINT(EM_DIAGRAM):   END;
1574179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574180   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1574181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574182   +
1574183   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1574184   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1574185   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1574186   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1574187   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1574188   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1574189   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1574190   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1574191   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1574192   +end;
MPRINT(EM_DIAGRAM):   end;
1574193   +else do;
MPRINT(EM_DIAGRAM):   else do;
1574194   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1574195   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1574196   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1574197   +   end;
MPRINT(EM_DIAGRAM):   end;
1574198   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1574199   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1574200   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1574201   +   end;
MPRINT(EM_DIAGRAM):   end;
1574202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1574203   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1574204   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1574205   +   end;
MPRINT(EM_DIAGRAM):   end;
1574206   +end;
MPRINT(EM_DIAGRAM):   end;
1574207   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1574208   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1574209   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 +
-3.01894159959464 * H13 ;
1574210   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1574211   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1574212   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1574213   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1574214   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1574215   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1574216   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1574217   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1574218   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1574219   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1574220   +END;
MPRINT(EM_DIAGRAM):   END;
1574221   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1574222   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1574223   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1574224   +END;
MPRINT(EM_DIAGRAM):   END;
1574225   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1574226   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1574227   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1574228   +END;
MPRINT(EM_DIAGRAM):   END;
1574229   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1574230   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1574231   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1574232   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1574233   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1574234   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1574235   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1574236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574237   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1574238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574239   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1574240   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1574241   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1574242   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1574243   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1574244   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1574245   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1574246   +END;
MPRINT(EM_DIAGRAM):   END;
1574247   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1574248   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1574249   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1574250   +drop
1574251   +H11
1574252   +H12
1574253   +H13
1574254   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1574255   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1574256   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1574257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1574258   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1574259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1574260   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1574261   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1574262   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1574263   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1574264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1574265   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1574266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1574267   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1574268   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1574269   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1574270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1574271   +* Ensmbl27: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 6 of 7;
1574272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1574273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1574274   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1574275   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1574276   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1574277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1574278   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1574279   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1574280   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1574281   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1574282   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1574283   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1574284   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1574285   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1574286   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1574287   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1574288   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1574289   +LENGTH _WARN_ $4
1574290   +      F_DepVar  $ 12
1574291   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1574292   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1574293   +
1574294   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1574295   +
1574296   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1574297   +
1574298   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1574299   +
1574300   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1574301   +
1574302   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1574303   +
1574304   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1574305   +
1574306   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1574307   +
1574308   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1574309   +
1574310   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1574311   +
1574312   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1574313   +
1574314   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1574315   +
1574316   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1574317   +
1574318   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1574319   +
1574320   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1574321   +
1574322   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1574323   +
1574324   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1574325   +
1574326   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1574327   +
1574328   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1574329   +
1574330   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1574331   +
1574332   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1574333   +
1574334   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1574335   +
1574336   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1574337   +
1574338   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1574339   +
1574340   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1574341   +
1574342   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1574343   +
1574344   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1574345   +
1574346   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1574347   +
1574348   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1574349   +
1574350   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1574351   +
1574352   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1574353   +
1574354   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1574355   +
1574356   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1574357   +
1574358   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1574359   +
1574360   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1574361   +
1574362   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1574363   +
1574364   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1574365   +
1574366   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1574367   +
1574368   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1574369   +
1574370   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1574371   +
1574372   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1574373   +
1574374   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1574375   +
1574376   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1574377   +
1574378   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1574379   +
1574380   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1574381   +
1574382   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1574383   +
1574384   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1574385   +
1574386   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1574387   +
1574388   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1574389   +
1574390   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1574391   +
1574392   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1574393   +
1574394   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1574395   +
1574396   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1574397   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1574398   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1574399   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1574400   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1574401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574402   +end;
MPRINT(EM_DIAGRAM):   end;
1574403   +else do;
MPRINT(EM_DIAGRAM):   else do;
1574404   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1574405   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1574406   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1574407   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1574408   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1574409   +   end;
MPRINT(EM_DIAGRAM):   end;
1574410   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1574411   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1574412   +   end;
MPRINT(EM_DIAGRAM):   end;
1574413   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1574414   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1574415   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1574416   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574417   +   end;
MPRINT(EM_DIAGRAM):   end;
1574418   +end;
MPRINT(EM_DIAGRAM):   end;
1574419   +
1574420   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1574421   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1574422   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1574423   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1574424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1574425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574426   +end;
MPRINT(EM_DIAGRAM):   end;
1574427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1574428   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1574429   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1574430   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1574431   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1574432   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1574433   +   end;
MPRINT(EM_DIAGRAM):   end;
1574434   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1574435   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1574436   +   end;
MPRINT(EM_DIAGRAM):   end;
1574437   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1574438   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1574439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1574440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574441   +   end;
MPRINT(EM_DIAGRAM):   end;
1574442   +end;
MPRINT(EM_DIAGRAM):   end;
1574443   +
1574444   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1574445   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1574446   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1574447   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1574448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1574449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574450   +end;
MPRINT(EM_DIAGRAM):   end;
1574451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1574452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1574453   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1574454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1574455   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1574456   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1574457   +   end;
MPRINT(EM_DIAGRAM):   end;
The SAS System
 
1574458   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1574459   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1574460   +   end;
MPRINT(EM_DIAGRAM):   end;
1574461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1574462   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1574463   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1574464   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574465   +   end;
MPRINT(EM_DIAGRAM):   end;
1574466   +end;
MPRINT(EM_DIAGRAM):   end;
1574467   +
1574468   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1574469   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1574470   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1574471   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1574472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1574473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574474   +end;
MPRINT(EM_DIAGRAM):   end;
1574475   +else do;
MPRINT(EM_DIAGRAM):   else do;
1574476   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1574477   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1574478   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1574479   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1574480   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1574481   +   end;
MPRINT(EM_DIAGRAM):   end;
1574482   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1574483   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1574484   +   end;
MPRINT(EM_DIAGRAM):   end;
1574485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1574486   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1574487   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1574488   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574489   +   end;
MPRINT(EM_DIAGRAM):   end;
1574490   +end;
MPRINT(EM_DIAGRAM):   end;
1574491   +
1574492   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1574493   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1574494   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1574495   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1574496   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1574497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574498   +end;
MPRINT(EM_DIAGRAM):   end;
1574499   +else do;
MPRINT(EM_DIAGRAM):   else do;
1574500   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1574501   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1574502   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1574503   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1574504   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1574505   +   end;
MPRINT(EM_DIAGRAM):   end;
1574506   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1574507   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1574508   +   end;
MPRINT(EM_DIAGRAM):   end;
1574509   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1574510   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1574511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1574512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574513   +   end;
MPRINT(EM_DIAGRAM):   end;
1574514   +end;
MPRINT(EM_DIAGRAM):   end;
1574515   +
1574516   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1574517   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1574518   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1574519   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1574520   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1574521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574522   +end;
MPRINT(EM_DIAGRAM):   end;
1574523   +else do;
MPRINT(EM_DIAGRAM):   else do;
1574524   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1574525   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1574526   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1574527   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1574528   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1574529   +   end;
MPRINT(EM_DIAGRAM):   end;
1574530   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1574531   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1574532   +   end;
MPRINT(EM_DIAGRAM):   end;
1574533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1574534   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1574535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1574536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574537   +   end;
MPRINT(EM_DIAGRAM):   end;
1574538   +end;
MPRINT(EM_DIAGRAM):   end;
1574539   +
1574540   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1574541   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1574542   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1574543   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1574544   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1574545   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574546   +end;
MPRINT(EM_DIAGRAM):   end;
1574547   +else do;
MPRINT(EM_DIAGRAM):   else do;
1574548   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1574549   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1574550   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1574551   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1574552   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1574553   +   end;
MPRINT(EM_DIAGRAM):   end;
1574554   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1574555   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1574556   +   end;
MPRINT(EM_DIAGRAM):   end;
1574557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1574558   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1574559   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1574560   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574561   +   end;
MPRINT(EM_DIAGRAM):   end;
1574562   +end;
MPRINT(EM_DIAGRAM):   end;
1574563   +
1574564   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1574565   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1574566   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1574567   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1574568   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1574569   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1574570   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1574571   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1574572   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1574573   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1574574   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1574575   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1574576   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1574577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574578   +end;
MPRINT(EM_DIAGRAM):   end;
1574579   +else do;
MPRINT(EM_DIAGRAM):   else do;
1574580   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1574581   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1574582   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1574583   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1574584   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1574585   +   end;
MPRINT(EM_DIAGRAM):   end;
1574586   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1574587   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1574588   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1574589   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1574590   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1574591   +   end;
MPRINT(EM_DIAGRAM):   end;
1574592   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1574593   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1574594   +   end;
MPRINT(EM_DIAGRAM):   end;
1574595   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1574596   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1574597   +   end;
MPRINT(EM_DIAGRAM):   end;
1574598   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1574599   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1574600   +   end;
MPRINT(EM_DIAGRAM):   end;
1574601   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1574602   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1574603   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1574604   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1574605   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1574606   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1574607   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574608   +   end;
MPRINT(EM_DIAGRAM):   end;
1574609   +end;
MPRINT(EM_DIAGRAM):   end;
1574610   +
1574611   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1574612   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1574613   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1574614   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1574615   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1574616   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1574617   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1574618   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1574619   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1574620   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1574621   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1574622   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1574623   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1574624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1574625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574626   +end;
MPRINT(EM_DIAGRAM):   end;
1574627   +else do;
MPRINT(EM_DIAGRAM):   else do;
1574628   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1574629   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1574630   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1574631   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1574632   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1574633   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1574634   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1574635   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1574636   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1574637   +         end;
MPRINT(EM_DIAGRAM):   end;
1574638   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1574639   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1574640   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1574641   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1574642   +            end;
MPRINT(EM_DIAGRAM):   end;
1574643   +         end;
MPRINT(EM_DIAGRAM):   end;
1574644   +      end;
MPRINT(EM_DIAGRAM):   end;
1574645   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1574646   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1574647   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1574648   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1574649   +         end;
MPRINT(EM_DIAGRAM):   end;
1574650   +      end;
MPRINT(EM_DIAGRAM):   end;
1574651   +   end;
MPRINT(EM_DIAGRAM):   end;
1574652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1574653   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1574654   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1574655   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1574656   +      end;
MPRINT(EM_DIAGRAM):   end;
1574657   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1574658   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1574659   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1574660   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1574661   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1574662   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1574663   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1574664   +         end;
MPRINT(EM_DIAGRAM):   end;
1574665   +      end;
MPRINT(EM_DIAGRAM):   end;
1574666   +   end;
MPRINT(EM_DIAGRAM):   end;
1574667   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1574668   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1574669   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1574670   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1574671   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1574672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1574673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574674   +   end;
MPRINT(EM_DIAGRAM):   end;
1574675   +end;
MPRINT(EM_DIAGRAM):   end;
1574676   +
1574677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574678   +*** Checking missing input Interval
1574679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1574680   +
1574681   +IF NMISS(
1574682   +   AcceptedCmpTotal ,
1574683   +   Age ,
1574684   +   Frq ,
1574685   +   Income ,
1574686   +   Kidhome ,
1574687   +   Mnt ,
1574688   +   MntFishProducts ,
1574689   +   MntFruits ,
1574690   +   MntGoldProds ,
1574691   +   MntMeatProducts ,
1574692   +   MntSweetProducts ,
1574693   +   MntWines ,
1574694   +   MonthsAsCustomer ,
1574695   +   NumCatalogPurchases ,
1574696   +   NumDealsPurchases ,
1574697   +   NumDistPurchases ,
1574698   +   NumStorePurchases ,
1574699   +   NumWebPurchases ,
1574700   +   NumWebVisitsMonth ,
1574701   +   RFMstat ,
1574702   +   RMntFrq ,
1574703   +   Recency ,
1574704   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1574705   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1574706   +
1574707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1574708   +END;
MPRINT(EM_DIAGRAM):   END;
1574709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574710   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1574711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574712   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1574713   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1574714   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1574715   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1574716   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1574717   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1574718   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1574719   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1574720   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1574721   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1574722   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1574723   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1574724   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1574725   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1574726   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1574727   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1574728   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1574729   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1574730   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1574731   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1574732   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1574733   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1574734   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1574735   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1574736   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1574737   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1574738   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1574739   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1574740   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1574741   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1574742   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1574743   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1574744   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1574745   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1574746   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1574747   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1574748   +END;
MPRINT(EM_DIAGRAM):   END;
1574749   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1574750   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1574751   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1574752   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1574753   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1574754   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1574755   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1574756   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1574757   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1574758   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1574759   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1574760   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1574761   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1574762   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1574763   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1574764   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1574765   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1574766   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1574767   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1574768   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1574769   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1574770   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1574771   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1574772   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1574773   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1574774   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1574775   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1574776   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1574777   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1574778   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1574779   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1574780   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1574781   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1574782   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1574783   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1574784   +   ELSE S_NumCatalogPurchases
1574785   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1574786   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1574787   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1574788   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1574789   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1574790   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1574791   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1574792   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1574793   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1574794   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1574795   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1574796   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1574797   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1574798   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1574799   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1574800   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1574801   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1574802   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1574803   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1574804   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1574805   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1574806   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1574807   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1574808   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1574809   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1574810   +END;
MPRINT(EM_DIAGRAM):   END;
1574811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574812   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1574813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574815   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1574816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574818   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1574819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1574820   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1574821   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1574822   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1574823   +        S_Income  +    -0.09693130155866 * S_Kidhome
1574824   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1574825   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1574826   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1574827   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1574828   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1574829   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1574830   +          +     0.87256063855463 * S_NumDealsPurchases
1574831   +          +     0.24228318068596 * S_NumDistPurchases
1574832   +          +    -0.65575177240856 * S_NumStorePurchases
1574833   +          +    -0.94105747825406 * S_NumWebPurchases
1574834   +          +     0.88098930350141 * S_NumWebVisitsMonth
1574835   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1574836   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1574837   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome +
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 *
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts +
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 *
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 *
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 *
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 *
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq +
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1574838   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1574839   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1574840   +        S_Income  +    -0.48351377369429 * S_Kidhome
1574841   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1574842   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1574843   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1574844   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1574845   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1574846   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1574847   +          +     0.19198092320653 * S_NumDealsPurchases
1574848   +          +    -0.01877290175933 * S_NumDistPurchases
1574849   +          +    -0.61698509852352 * S_NumStorePurchases
1574850   +          +    -0.36114842161331 * S_NumWebPurchases
1574851   +          +     0.87653599441887 * S_NumWebVisitsMonth
1574852   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1574853   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1574854   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age +
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome +
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 *
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts +
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 *
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 *
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 *
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 *
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq +
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1574855   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1574856   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1574857   +        S_Income  +    -0.03117320792997 * S_Kidhome
1574858   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1574859   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1574860   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1574861   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1574862   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1574863   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1574864   +          +    -0.17772008430544 * S_NumDealsPurchases
1574865   +          +    -0.24320624261016 * S_NumDistPurchases
1574866   +          +     0.42056923271106 * S_NumStorePurchases
1574867   +          +    -0.28718554863857 * S_NumWebPurchases
1574868   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1574869   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1574870   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1574871   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age +
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome +
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 *
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts +
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 *
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 *
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 *
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 *
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq +
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1574872   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1574873   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1574874   +        S_Income  +     -0.0433863245185 * S_Kidhome
1574875   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1574876   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1574877   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1574878   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1574879   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1574880   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1574881   +          +    -0.43652501997552 * S_NumDealsPurchases
1574882   +          +     0.17317052107867 * S_NumDistPurchases
1574883   +          +     0.23672921935551 * S_NumStorePurchases
1574884   +          +     0.49273989445476 * S_NumWebPurchases
1574885   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1574886   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1574887   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1574888   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age +
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome +
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 *
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts +
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 *
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 *
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 *
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 *
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq +
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1574889   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1574890   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1574891   +        S_Income  +     0.59347379159371 * S_Kidhome
1574892   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1574893   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1574894   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1574895   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1574896   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1574897   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1574898   +          +     0.06887104992711 * S_NumDealsPurchases
1574899   +          +    -0.03976087278251 * S_NumDistPurchases
1574900   +          +     -0.0289014951041 * S_NumStorePurchases
1574901   +          +    -0.08062500939119 * S_NumWebPurchases
1574902   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1574903   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1574904   +        S_RMntFrq  +       0.940313744576 * S_Recency
1574905   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome +
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 *
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts +
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 *
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 *
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 *
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 *
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq +
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1574906   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1574907   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1574908   +        S_Income  +    -0.55245961592835 * S_Kidhome
1574909   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1574910   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1574911   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1574912   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1574913   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1574914   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1574915   +          +    -0.50731731808528 * S_NumDealsPurchases
1574916   +          +     -0.4854662155502 * S_NumDistPurchases
1574917   +          +     0.21175181231244 * S_NumStorePurchases
1574918   +          +     0.04923223410585 * S_NumWebPurchases
1574919   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1574920   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1574921   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1574922   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome +
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 *
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts +
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 *
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 *
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 *
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 *
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq +
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1574923   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1574924   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1574925   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1574926   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1574927   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 *
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 +
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 *
HigherEducationBinary0 ;
1574928   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1574929   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1574930   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1574931   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1574932   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 *
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 +
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 *
HigherEducationBinary0 ;
1574933   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1574934   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1574935   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1574936   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1574937   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 *
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 +
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 *
HigherEducationBinary0 ;
1574938   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1574939   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1574940   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1574941   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1574942   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 *
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 +
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 *
HigherEducationBinary0 ;
1574943   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1574944   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1574945   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1574946   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1574947   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 *
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 +
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 *
HigherEducationBinary0 ;
1574948   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1574949   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1574950   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1574951   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1574952   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 *
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 +
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 *
HigherEducationBinary0 ;
1574953   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1574954   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1574955   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1574956   +          +     0.13102231169849 * Marital_StatusDivorced
1574957   +          +     0.13221932247035 * Marital_StatusMarried
1574958   +          +    -0.28666963919866 * Marital_StatusSingle
1574959   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 *
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster +
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried +
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1574960   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1574961   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1574962   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1574963   +          +     0.36873255525654 * Marital_StatusDivorced
1574964   +          +    -0.54422050380085 * Marital_StatusMarried
1574965   +          +     0.58130553469516 * Marital_StatusSingle
1574966   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 *
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried +
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1574967   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1574968   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1574969   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1574970   +          +    -0.07480235993304 * Marital_StatusDivorced
1574971   +          +     0.31705972445069 * Marital_StatusMarried
1574972   +          +    -0.08626328185895 * Marital_StatusSingle
1574973   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 *
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried +
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1574974   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1574975   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1574976   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1574977   +          +    -0.06733679615115 * Marital_StatusDivorced
1574978   +          +     0.23111557732379 * Marital_StatusMarried
1574979   +          +    -0.34379469870478 * Marital_StatusSingle
1574980   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 *
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried +
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1574981   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1574982   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1574983   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1574984   +          +    -0.07108588070668 * Marital_StatusDivorced
1574985   +          +     1.10060875265784 * Marital_StatusMarried
1574986   +          +    -0.74271327534863 * Marital_StatusSingle
1574987   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 *
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster +
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried +
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1574988   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1574989   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1574990   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1574991   +          +    -0.19461023827362 * Marital_StatusDivorced
1574992   +          +     -0.4165676037681 * Marital_StatusMarried
1574993   +          +     0.43379324993555 * Marital_StatusSingle
1574994   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 *
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried +
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1574995   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1574996   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1574997   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1574998   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1574999   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1575000   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1575001   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1575002   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1575003   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1575004   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1575005   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1575006   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1575007   +END;
MPRINT(EM_DIAGRAM):   END;
1575008   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1575009   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1575010   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1575011   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1575012   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1575013   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1575014   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1575015   +END;
MPRINT(EM_DIAGRAM):   END;
1575016   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575017   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1575018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575019   +
1575020   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1575021   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1575022   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1575023   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1575024   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1575025   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575026   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1575027   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1575028   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1575029   +end;
MPRINT(EM_DIAGRAM):   end;
1575030   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575031   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1575032   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1575033   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1575034   +   end;
MPRINT(EM_DIAGRAM):   end;
1575035   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1575036   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1575037   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1575038   +   end;
MPRINT(EM_DIAGRAM):   end;
1575039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575040   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1575041   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1575042   +   end;
MPRINT(EM_DIAGRAM):   end;
1575043   +end;
MPRINT(EM_DIAGRAM):   end;
1575044   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1575045   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1575046   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1575047   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 +
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 +
-2.08728996739757 * H16 ;
1575048   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1575049   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1575050   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1575051   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1575052   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1575053   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1575054   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1575055   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1575056   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1575057   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1575058   +END;
MPRINT(EM_DIAGRAM):   END;
1575059   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1575060   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1575061   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1575062   +END;
MPRINT(EM_DIAGRAM):   END;
1575063   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1575064   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1575065   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1575066   +END;
MPRINT(EM_DIAGRAM):   END;
1575067   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1575068   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1575069   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1575070   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1575071   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1575072   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1575073   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1575074   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575075   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1575076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575077   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1575078   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1575079   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1575080   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1575081   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1575082   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1575083   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1575084   +END;
MPRINT(EM_DIAGRAM):   END;
1575085   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1575086   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1575087   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1575088   +drop
1575089   +H11
1575090   +H12
1575091   +H13
1575092   +H14
1575093   +H15
1575094   +H16
1575095   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1575096   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1575097   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1575098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575099   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1575100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575101   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1575102   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1575103   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1575104   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1575105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575106   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1575107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575108   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1575109   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1575110   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1575111   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575112   +* Ensmbl27: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 7 of 7;
1575113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575115   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1575116   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1575117   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1575118   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575119   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1575120   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1575121   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1575122   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1575123   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1575124   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1575125   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1575126   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1575127   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1575128   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1575129   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1575130   +LENGTH _WARN_ $4
1575131   +      F_DepVar  $ 12
1575132   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1575133   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1575134   +
1575135   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1575136   +
1575137   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1575138   +
1575139   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1575140   +
1575141   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1575142   +
1575143   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1575144   +
1575145   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1575146   +
1575147   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1575148   +
1575149   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1575150   +
1575151   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1575152   +
1575153   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1575154   +
1575155   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1575156   +
1575157   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1575158   +
1575159   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1575160   +
1575161   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1575162   +
1575163   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1575164   +
1575165   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1575166   +
1575167   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1575168   +
1575169   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1575170   +
1575171   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1575172   +
1575173   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1575174   +
1575175   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1575176   +
1575177   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1575178   +
1575179   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1575180   +
1575181   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1575182   +
1575183   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1575184   +
1575185   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1575186   +
1575187   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1575188   +
1575189   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1575190   +
1575191   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1575192   +
1575193   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1575194   +
1575195   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1575196   +
1575197   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1575198   +
1575199   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1575200   +
1575201   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1575202   +
1575203   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1575204   +
1575205   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1575206   +
1575207   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1575208   +
1575209   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1575210   +
1575211   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1575212   +
1575213   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1575214   +
1575215   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1575216   +
1575217   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1575218   +
1575219   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1575220   +
1575221   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1575222   +
1575223   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1575224   +
1575225   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1575226   +
1575227   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1575228   +
1575229   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1575230   +
1575231   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1575232   +
1575233   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1575234   +
1575235   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1575236   +
1575237   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1575238   +
1575239   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1575240   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1575241   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1575242   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1575243   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1575244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575245   +end;
MPRINT(EM_DIAGRAM):   end;
1575246   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575247   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1575248   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1575249   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575250   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1575251   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1575252   +   end;
MPRINT(EM_DIAGRAM):   end;
1575253   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1575254   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1575255   +   end;
MPRINT(EM_DIAGRAM):   end;
1575256   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575257   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1575258   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1575259   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575260   +   end;
MPRINT(EM_DIAGRAM):   end;
1575261   +end;
MPRINT(EM_DIAGRAM):   end;
1575262   +
1575263   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1575264   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1575265   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1575266   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1575267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1575268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575269   +end;
MPRINT(EM_DIAGRAM):   end;
1575270   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575271   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1575272   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1575273   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575274   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1575275   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1575276   +   end;
MPRINT(EM_DIAGRAM):   end;
1575277   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1575278   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1575279   +   end;
MPRINT(EM_DIAGRAM):   end;
1575280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575281   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1575282   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1575283   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575284   +   end;
MPRINT(EM_DIAGRAM):   end;
1575285   +end;
MPRINT(EM_DIAGRAM):   end;
1575286   +
1575287   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1575288   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1575289   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1575290   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1575291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1575292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575293   +end;
MPRINT(EM_DIAGRAM):   end;
1575294   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575295   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1575296   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1575297   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575298   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1575299   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1575300   +   end;
MPRINT(EM_DIAGRAM):   end;
1575301   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1575302   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1575303   +   end;
MPRINT(EM_DIAGRAM):   end;
1575304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575305   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1575306   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1575307   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575308   +   end;
MPRINT(EM_DIAGRAM):   end;
1575309   +end;
MPRINT(EM_DIAGRAM):   end;
1575310   +
1575311   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1575312   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1575313   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1575314   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1575315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1575316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575317   +end;
MPRINT(EM_DIAGRAM):   end;
1575318   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575319   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1575320   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1575321   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575322   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1575323   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1575324   +   end;
MPRINT(EM_DIAGRAM):   end;
1575325   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1575326   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1575327   +   end;
MPRINT(EM_DIAGRAM):   end;
1575328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575329   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1575330   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1575331   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575332   +   end;
MPRINT(EM_DIAGRAM):   end;
1575333   +end;
MPRINT(EM_DIAGRAM):   end;
1575334   +
1575335   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1575336   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1575337   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1575338   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1575339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1575340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575341   +end;
MPRINT(EM_DIAGRAM):   end;
1575342   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575343   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1575344   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1575345   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575346   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1575347   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1575348   +   end;
MPRINT(EM_DIAGRAM):   end;
1575349   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1575350   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1575351   +   end;
MPRINT(EM_DIAGRAM):   end;
1575352   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575353   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1575354   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1575355   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575356   +   end;
MPRINT(EM_DIAGRAM):   end;
1575357   +end;
MPRINT(EM_DIAGRAM):   end;
1575358   +
1575359   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1575360   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1575361   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1575362   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1575363   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1575364   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575365   +end;
MPRINT(EM_DIAGRAM):   end;
1575366   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575367   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1575368   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1575369   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575370   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1575371   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1575372   +   end;
MPRINT(EM_DIAGRAM):   end;
1575373   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1575374   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1575375   +   end;
MPRINT(EM_DIAGRAM):   end;
1575376   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575377   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1575378   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1575379   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575380   +   end;
MPRINT(EM_DIAGRAM):   end;
1575381   +end;
MPRINT(EM_DIAGRAM):   end;
1575382   +
1575383   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1575384   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1575385   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1575386   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1575387   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1575388   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575389   +end;
MPRINT(EM_DIAGRAM):   end;
1575390   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575391   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1575392   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1575393   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575394   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1575395   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1575396   +   end;
MPRINT(EM_DIAGRAM):   end;
1575397   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1575398   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1575399   +   end;
MPRINT(EM_DIAGRAM):   end;
1575400   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575401   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1575402   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1575403   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575404   +   end;
MPRINT(EM_DIAGRAM):   end;
1575405   +end;
MPRINT(EM_DIAGRAM):   end;
1575406   +
1575407   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1575408   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1575409   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1575410   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1575411   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1575412   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1575413   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1575414   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1575415   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1575416   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1575417   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1575418   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1575419   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1575420   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575421   +end;
MPRINT(EM_DIAGRAM):   end;
1575422   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575423   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1575424   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1575425   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575426   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1575427   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1575428   +   end;
MPRINT(EM_DIAGRAM):   end;
1575429   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1575430   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1575431   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1575432   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1575433   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1575434   +   end;
MPRINT(EM_DIAGRAM):   end;
1575435   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1575436   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1575437   +   end;
MPRINT(EM_DIAGRAM):   end;
1575438   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1575439   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1575440   +   end;
MPRINT(EM_DIAGRAM):   end;
1575441   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1575442   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1575443   +   end;
MPRINT(EM_DIAGRAM):   end;
1575444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575445   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1575446   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1575447   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1575448   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1575449   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1575450   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575451   +   end;
MPRINT(EM_DIAGRAM):   end;
1575452   +end;
MPRINT(EM_DIAGRAM):   end;
1575453   +
1575454   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1575455   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1575456   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1575457   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1575458   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1575459   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1575460   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1575461   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1575462   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1575463   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1575464   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1575465   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1575466   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1575467   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1575468   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575469   +end;
MPRINT(EM_DIAGRAM):   end;
1575470   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575471   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1575472   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1575473   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575474   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1575475   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1575476   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1575477   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1575478   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1575479   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1575480   +         end;
MPRINT(EM_DIAGRAM):   end;
1575481   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1575482   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1575483   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1575484   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1575485   +            end;
MPRINT(EM_DIAGRAM):   end;
1575486   +         end;
MPRINT(EM_DIAGRAM):   end;
1575487   +      end;
MPRINT(EM_DIAGRAM):   end;
1575488   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1575489   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1575490   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1575491   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1575492   +         end;
MPRINT(EM_DIAGRAM):   end;
1575493   +      end;
MPRINT(EM_DIAGRAM):   end;
1575494   +   end;
MPRINT(EM_DIAGRAM):   end;
1575495   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575496   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1575497   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1575498   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1575499   +      end;
MPRINT(EM_DIAGRAM):   end;
1575500   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1575501   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1575502   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1575503   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1575504   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1575505   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1575506   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1575507   +         end;
MPRINT(EM_DIAGRAM):   end;
1575508   +      end;
MPRINT(EM_DIAGRAM):   end;
1575509   +   end;
MPRINT(EM_DIAGRAM):   end;
1575510   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1575511   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1575512   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1575513   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1575514   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1575515   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1575516   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575517   +   end;
MPRINT(EM_DIAGRAM):   end;
1575518   +end;
MPRINT(EM_DIAGRAM):   end;
1575519   +
1575520   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575521   +*** Checking missing input Interval
1575522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1575523   +
1575524   +IF NMISS(
1575525   +   AcceptedCmpTotal ,
1575526   +   Age ,
1575527   +   Frq ,
1575528   +   Income ,
1575529   +   Kidhome ,
1575530   +   Mnt ,
1575531   +   MntFishProducts ,
1575532   +   MntFruits ,
1575533   +   MntGoldProds ,
1575534   +   MntMeatProducts ,
1575535   +   MntSweetProducts ,
1575536   +   MntWines ,
1575537   +   MonthsAsCustomer ,
1575538   +   NumCatalogPurchases ,
1575539   +   NumDealsPurchases ,
1575540   +   NumDistPurchases ,
1575541   +   NumStorePurchases ,
1575542   +   NumWebPurchases ,
1575543   +   NumWebVisitsMonth ,
1575544   +   RFMstat ,
1575545   +   RMntFrq ,
1575546   +   Recency ,
1575547   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1575548   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1575549   +
1575550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1575551   +END;
MPRINT(EM_DIAGRAM):   END;
1575552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575553   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1575554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575555   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1575556   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1575557   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1575558   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1575559   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1575560   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1575561   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1575562   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1575563   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1575564   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1575565   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1575566   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1575567   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1575568   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1575569   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1575570   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1575571   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1575572   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1575573   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1575574   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1575575   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1575576   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1575577   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1575578   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1575579   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1575580   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1575581   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1575582   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1575583   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1575584   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1575585   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1575586   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1575587   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1575588   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1575589   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1575590   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1575591   +END;
MPRINT(EM_DIAGRAM):   END;
1575592   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1575593   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1575594   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1575595   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1575596   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1575597   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1575598   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1575599   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1575600   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1575601   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1575602   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1575603   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1575604   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1575605   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1575606   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1575607   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1575608   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1575609   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1575610   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1575611   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1575612   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1575613   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1575614   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1575615   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1575616   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1575617   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1575618   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1575619   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1575620   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1575621   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1575622   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1575623   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1575624   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1575625   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1575626   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1575627   +   ELSE S_NumCatalogPurchases
1575628   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1575629   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1575630   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1575631   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1575632   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1575633   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1575634   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1575635   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1575636   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1575637   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1575638   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1575639   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1575640   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1575641   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1575642   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1575643   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1575644   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1575645   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1575646   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1575647   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1575648   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1575649   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1575650   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1575651   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1575652   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1575653   +END;
MPRINT(EM_DIAGRAM):   END;
1575654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575655   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1575656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575658   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1575659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575660   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575661   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1575662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575663   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1575664   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1575665   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1575666   +        S_Income  +    -0.48552270697514 * S_Kidhome
1575667   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1575668   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1575669   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1575670   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1575671   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1575672   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1575673   +          +    -0.23083265836869 * S_NumDealsPurchases
1575674   +          +     0.18257445063797 * S_NumDistPurchases
1575675   +          +     0.38040778765927 * S_NumStorePurchases
1575676   +          +     0.25798779223068 * S_NumWebPurchases
1575677   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1575678   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1575679   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1575680   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome +
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 *
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts +
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 *
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 *
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 *
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 *
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq +
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1575681   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1575682   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1575683   +        S_Income  +     0.23694585796773 * S_Kidhome
1575684   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1575685   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1575686   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1575687   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1575688   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1575689   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1575690   +          +    -0.07783411363525 * S_NumDealsPurchases
1575691   +          +     0.41281579441285 * S_NumDistPurchases
1575692   +          +     0.22243606867939 * S_NumStorePurchases
1575693   +          +     0.27174952755013 * S_NumWebPurchases
1575694   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1575695   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1575696   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1575697   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome +
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 *
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts +
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 *
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 *
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 *
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 *
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq +
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1575698   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1575699   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1575700   +        S_Income  +     0.20802765248799 * S_Kidhome
1575701   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1575702   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1575703   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1575704   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1575705   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1575706   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1575707   +          +     0.09455783738093 * S_NumDealsPurchases
1575708   +          +    -0.06039304909585 * S_NumDistPurchases
1575709   +          +    -0.10306611685636 * S_NumStorePurchases
1575710   +          +    -0.00323837049664 * S_NumWebPurchases
1575711   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1575712   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1575713   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1575714   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome +
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 *
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts +
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 *
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 *
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 *
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 *
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq +
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1575715   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1575716   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1575717   +        S_Income  +     0.26381864865425 * S_Kidhome
1575718   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1575719   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1575720   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1575721   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1575722   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1575723   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1575724   +          +      0.8306613243419 * S_NumDealsPurchases
1575725   +          +     0.31439474207278 * S_NumDistPurchases
1575726   +          +    -0.62131474975756 * S_NumStorePurchases
1575727   +          +    -1.04845843654047 * S_NumWebPurchases
1575728   +          +     0.13255915506164 * S_NumWebVisitsMonth
1575729   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1575730   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1575731   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age +
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome +
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 *
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts +
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 *
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 *
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 *
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 *
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq +
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1575732   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1575733   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1575734   +        S_Income  +    -0.71599192201946 * S_Kidhome
1575735   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1575736   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1575737   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1575738   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1575739   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1575740   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1575741   +          +     0.63537278643623 * S_NumDealsPurchases
1575742   +          +     0.00410348485264 * S_NumDistPurchases
1575743   +          +    -0.78287523583925 * S_NumStorePurchases
1575744   +          +    -0.73614491225189 * S_NumWebPurchases
1575745   +          +      1.5997596522354 * S_NumWebVisitsMonth
1575746   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1575747   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1575748   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome +
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 *
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts +
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 *
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 *
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 *
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 *
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq +
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1575749   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1575750   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1575751   +        S_Income  +    -0.23853377939411 * S_Kidhome
1575752   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1575753   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1575754   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1575755   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1575756   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1575757   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1575758   +          +    -0.30899603957269 * S_NumDealsPurchases
1575759   +          +     0.11839581082877 * S_NumDistPurchases
1575760   +          +     0.20149797391098 * S_NumStorePurchases
1575761   +          +      0.1616654107491 * S_NumWebPurchases
1575762   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1575763   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1575764   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1575765   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome +
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 *
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts +
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 *
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 *
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 *
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 *
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq +
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1575766   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1575767   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1575768   +        S_Income  +    -0.48650790963695 * S_Kidhome
1575769   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1575770   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1575771   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1575772   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1575773   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1575774   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1575775   +          +    -0.18889005468777 * S_NumDealsPurchases
1575776   +          +     0.17240918361456 * S_NumDistPurchases
1575777   +          +     0.11704610685994 * S_NumStorePurchases
1575778   +          +     0.23031393640508 * S_NumWebPurchases
1575779   +          +     0.66002859819524 * S_NumWebVisitsMonth
1575780   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1575781   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1575782   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome +
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 *
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts +
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 *
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 *
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 *
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 *
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq +
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1575783   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1575784   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1575785   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1575786   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1575787   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 *
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 +
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 *
HigherEducationBinary0 ;
1575788   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1575789   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1575790   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1575791   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1575792   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 *
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 +
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 *
HigherEducationBinary0 ;
1575793   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1575794   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1575795   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1575796   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1575797   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 *
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 +
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 *
HigherEducationBinary0 ;
1575798   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1575799   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1575800   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1575801   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1575802   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 *
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 +
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 *
HigherEducationBinary0 ;
1575803   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1575804   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1575805   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1575806   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1575807   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 *
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 +
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 *
HigherEducationBinary0 ;
1575808   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1575809   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1575810   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1575811   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1575812   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 *
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 +
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 *
HigherEducationBinary0 ;
1575813   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1575814   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1575815   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1575816   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1575817   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 *
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 +
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 *
HigherEducationBinary0 ;
1575818   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1575819   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1575820   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1575821   +          +     0.43452164349556 * Marital_StatusDivorced
1575822   +          +    -0.46042593279944 * Marital_StatusMarried
1575823   +          +     0.45533323427801 * Marital_StatusSingle
1575824   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 *
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster +
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried +
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1575825   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1575826   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1575827   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1575828   +          +     0.11002244687305 * Marital_StatusDivorced
1575829   +          +     0.52424349905683 * Marital_StatusMarried
1575830   +          +     -0.3969250366321 * Marital_StatusSingle
1575831   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 *
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried +
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1575832   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1575833   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1575834   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1575835   +          +    -0.05300704180744 * Marital_StatusDivorced
1575836   +          +     0.07805487103106 * Marital_StatusMarried
1575837   +          +     0.20033339442958 * Marital_StatusSingle
1575838   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 *
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster +
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried +
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1575839   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1575840   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1575841   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1575842   +          +    -0.42379596543146 * Marital_StatusDivorced
1575843   +          +     0.66738351478416 * Marital_StatusMarried
1575844   +          +    -0.37324277578462 * Marital_StatusSingle
1575845   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 *
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster +
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried +
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1575846   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1575847   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1575848   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1575849   +          +     0.88761025578489 * Marital_StatusDivorced
1575850   +          +    -0.85905539883385 * Marital_StatusMarried
1575851   +          +     0.73467737758558 * Marital_StatusSingle
1575852   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 *
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried +
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1575853   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1575854   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1575855   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1575856   +          +    -0.11980818075461 * Marital_StatusDivorced
1575857   +          +    -0.16572953052582 * Marital_StatusMarried
1575858   +          +     0.34617421331983 * Marital_StatusSingle
1575859   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 *
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried +
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1575860   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1575861   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1575862   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1575863   +          +     0.14874886057777 * Marital_StatusDivorced
1575864   +          +     -1.0463076915992 * Marital_StatusMarried
1575865   +          +     0.72937563672763 * Marital_StatusSingle
1575866   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 *
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried +
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1575867   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1575868   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1575869   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1575870   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1575871   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1575872   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1575873   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1575874   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1575875   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1575876   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1575877   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1575878   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1575879   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1575880   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1575881   +END;
MPRINT(EM_DIAGRAM):   END;
1575882   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1575883   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1575884   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1575885   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1575886   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1575887   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1575888   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1575889   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1575890   +END;
MPRINT(EM_DIAGRAM):   END;
1575891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575892   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1575893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575894   +
1575895   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1575896   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1575897   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1575898   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1575899   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1575900   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1575901   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1575902   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1575903   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1575904   +end;
MPRINT(EM_DIAGRAM):   end;
1575905   +else do;
MPRINT(EM_DIAGRAM):   else do;
1575906   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1575907   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1575908   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1575909   +   end;
MPRINT(EM_DIAGRAM):   end;
1575910   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1575911   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1575912   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1575913   +   end;
MPRINT(EM_DIAGRAM):   end;
1575914   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1575915   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1575916   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1575917   +   end;
MPRINT(EM_DIAGRAM):   end;
1575918   +end;
MPRINT(EM_DIAGRAM):   end;
1575919   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1575920   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1575921   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1575922   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1575923   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 +
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 *
H16 + 2.19267705077374 * H17 ;
1575924   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1575925   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1575926   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1575927   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1575928   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1575929   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1575930   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1575931   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1575932   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1575933   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1575934   +END;
MPRINT(EM_DIAGRAM):   END;
1575935   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1575936   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1575937   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1575938   +END;
MPRINT(EM_DIAGRAM):   END;
1575939   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1575940   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1575941   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1575942   +END;
MPRINT(EM_DIAGRAM):   END;
1575943   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1575944   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1575945   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1575946   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1575947   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1575948   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1575949   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1575950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575951   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1575952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1575953   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1575954   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1575955   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1575956   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1575957   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1575958   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1575959   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1575960   +END;
MPRINT(EM_DIAGRAM):   END;
1575961   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1575962   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1575963   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1575964   +drop
1575965   +H11
1575966   +H12
1575967   +H13
1575968   +H14
1575969   +H15
1575970   +H16
1575971   +H17
1575972   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1575973   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1575974   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1575975   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575976   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1575977   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575978   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1575979   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1575980   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1575981   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1575982   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575983   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1575984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575985   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1575986   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1575987   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1575988   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575989   +* Ensmbl27: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Maximum Posteriors of 7 models;
1575990   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1575991   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1575992   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1575993   +P_DepVar1 = max(
1575994   +Reg5_P_DepVar1 ,
1575995   +Reg_P_DepVar1 ,
1575996   +Neural4_P_DepVar1 ,
1575997   +Neural2_P_DepVar1 ,
1575998   +Neural3_P_DepVar1 ,
1575999   +Neural9_P_DepVar1 ,
1576000   +Neural10_P_DepVar1
1576001   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Reg5_P_DepVar1 , Reg_P_DepVar1 , Neural4_P_DepVar1 ,
Neural2_P_DepVar1 , Neural3_P_DepVar1 , Neural9_P_DepVar1 , Neural10_P_DepVar1 );
1576002   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1576003   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1576004   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1576005   +end;
MPRINT(EM_DIAGRAM):   end;
1576006   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1576007   +P_DepVar0 = max(
1576008   +Reg5_P_DepVar0 ,
1576009   +Reg_P_DepVar0 ,
1576010   +Neural4_P_DepVar0 ,
1576011   +Neural2_P_DepVar0 ,
1576012   +Neural3_P_DepVar0 ,
1576013   +Neural9_P_DepVar0 ,
1576014   +Neural10_P_DepVar0
1576015   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Reg5_P_DepVar0 , Reg_P_DepVar0 , Neural4_P_DepVar0 ,
Neural2_P_DepVar0 , Neural3_P_DepVar0 , Neural9_P_DepVar0 , Neural10_P_DepVar0 );
1576016   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1576017   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1576018   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1576019   +end;
MPRINT(EM_DIAGRAM):   end;
1576020   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1576021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1576022   +* Ensmbl27: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Classification Vars;
1576023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1576024   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1576025   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1576026   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1576027   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1576028   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1576029   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1576030   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1576031   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1576032   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1576033   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1576034   +end;
MPRINT(EM_DIAGRAM):   end;
1576035   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1576036   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1576037   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1576038   +end;
MPRINT(EM_DIAGRAM):   end;
1576039   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1576040   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1576041   +* Ensmbl27: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Producing Unformatted variable;
1576042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1576043   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1576044   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1576045   +else
1576046   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1576047   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1576048   +* Ensmbl27: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing _WARN_ Variable;
1576049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1576050   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1576051   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1576052   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1576053   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1576054   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1576055   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1576056   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1576057   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1576058   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1576059   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1576060   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1576061   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1576062   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1576063   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1576064   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1576065   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1576066   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1576067   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1576068   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1576069   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1576070   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1576071   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1576072   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1576073   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1576074   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1576075   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1576076   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1576077   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1576077  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1576078   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1576078  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1576079   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1576079  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1576080   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1576080  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1576081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1576082   +* Ensmbl27: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Residual Vars;
1576083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1576084   +if
1576085   +F_DepVar NE '1'
1576086   +AND F_DepVar NE '0'
1576087   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1576088   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1576089   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1576090   +end;
MPRINT(EM_DIAGRAM):   end;
1576091   +else do;
MPRINT(EM_DIAGRAM):   else do;
1576092   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1576093   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1576094   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1576095   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1576096   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1576097   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1576098   +END;
MPRINT(EM_DIAGRAM):   END;
1576099   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1576100    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL27_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1576101    quit;
1576102    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl27_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl27_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl27_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1576162    filename _pref
1576162  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
1576163    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1576164    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
1576165   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1576166   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1576167   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1576168   +
1576169   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1576170   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1576171   +
1576172   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1576173   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1576174   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1576175   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1576176   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1576177   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1576178   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1576179   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1576180   +
1576181   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1576182   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1576183   +
1576184   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1576185   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1576186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576188   +end;
MPRINT(EM_DIAGRAM):   end;
1576189   +
1576190   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1576191   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1576192   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576193   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576194   +end;
MPRINT(EM_DIAGRAM):   end;
1576195   +
1576196   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1576197   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1576198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576200   +end;
MPRINT(EM_DIAGRAM):   end;
1576201   +
1576202   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1576203   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1576204   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576205   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576206   +end;
MPRINT(EM_DIAGRAM):   end;
1576207   +
1576208   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1576209   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1576210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576212   +end;
MPRINT(EM_DIAGRAM):   end;
1576213   +
1576214   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1576215   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1576216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576218   +end;
MPRINT(EM_DIAGRAM):   end;
1576219   +
1576220   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1576221   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1576222   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576223   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576224   +end;
MPRINT(EM_DIAGRAM):   end;
1576225   +
1576226   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1576227   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1576228   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576229   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576230   +end;
MPRINT(EM_DIAGRAM):   end;
1576231   +
1576232   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1576233   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1576234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576236   +end;
MPRINT(EM_DIAGRAM):   end;
1576237   +
1576238   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1576239   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1576240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576242   +end;
MPRINT(EM_DIAGRAM):   end;
1576243   +
1576244   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1576245   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1576246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576248   +end;
MPRINT(EM_DIAGRAM):   end;
1576249   +
1576250   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1576251   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1576252   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576253   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576254   +end;
MPRINT(EM_DIAGRAM):   end;
1576255   +
1576256   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1576257   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1576258   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1576259   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1576260   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1576261   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1576262   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1576263   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1576264   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1576265   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1576266   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1576267   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1576268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576270   +end;
MPRINT(EM_DIAGRAM):   end;
1576271   +else do;
MPRINT(EM_DIAGRAM):   else do;
1576272   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1576273   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1576274   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1576275   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1576276   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1576277   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1576278   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1576279   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1576280   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1576281   +         end;
MPRINT(EM_DIAGRAM):   end;
1576282   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1576283   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1576284   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1576285   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1576286   +            end;
MPRINT(EM_DIAGRAM):   end;
1576287   +         end;
MPRINT(EM_DIAGRAM):   end;
1576288   +      end;
MPRINT(EM_DIAGRAM):   end;
1576289   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1576290   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1576291   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1576292   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1576293   +         end;
MPRINT(EM_DIAGRAM):   end;
1576294   +      end;
MPRINT(EM_DIAGRAM):   end;
1576295   +   end;
MPRINT(EM_DIAGRAM):   end;
1576296   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1576297   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1576298   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1576299   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1576300   +      end;
MPRINT(EM_DIAGRAM):   end;
1576301   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1576302   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1576303   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1576304   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1576305   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1576306   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1576307   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1576308   +         end;
MPRINT(EM_DIAGRAM):   end;
1576309   +      end;
MPRINT(EM_DIAGRAM):   end;
1576310   +   end;
MPRINT(EM_DIAGRAM):   end;
1576311   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1576312   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1576313   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1576314   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1576315   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1576316   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1576317   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576318   +   end;
MPRINT(EM_DIAGRAM):   end;
1576319   +end;
MPRINT(EM_DIAGRAM):   end;
1576320   +
1576321   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1576322   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1576323   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1576324   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1576325   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1576326   +end;
MPRINT(EM_DIAGRAM):   end;
1576327   +
1576328   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1576329   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1576330   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1576331   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1576332   +
1576333   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1576334   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1576335   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1576336   +
1576337   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1576338   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1576339   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1576340   +
1576341   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1576342   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1576343   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1576344   +
1576345   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1576346   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1576347   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1576348   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1576349   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1576350   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1576351   +
1576352   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1576353   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1576354   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1576355   +
1576356   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1576357   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1576358   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1576359   +
1576360   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1576361   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1576362   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1576363   +
1576364   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1576365   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1576366   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1576367   +
1576368   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1576369   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1576370   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1576371   +
1576372   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1576373   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1576374   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1576375   +
1576376   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1576377   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1576378   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1576379   +
1576380   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1576381   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1576382   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1576383   +
1576384   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1576385   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1576386   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1576387   +
1576388   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1576389   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1576390   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1576391   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1576392   +
1576393   +REG5DR1:
1576394   +
1576395   +
1576396   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
1576397   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1576398   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1576399   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1576400   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1576401   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1576402   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1576403   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1576404   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1576405   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1576406   +end;
MPRINT(EM_DIAGRAM):   end;
1576407   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1576408   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1576409   +
1576410   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1576411   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1576412   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1576413    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1576414    quit;
1576415    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1576416    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1576417    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1576418    retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
1576419    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1576420    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
1576421    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1576422    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576423    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576424    proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
1576425    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576426    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1576427    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1576428    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1576429    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1576430    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576431    proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
1576432    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1576433    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1576434    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576435    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576436    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1576437    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1576438    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576439    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576440    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1576441    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1576441  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.
 
1576442    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1576443    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1576444    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576445    filename _pref
1576445  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1576446    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1576447    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1576448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1576449   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1576450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1576451   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1576452   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1576453   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1576454    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1576455    quit;
1576456    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1576457    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1576458    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1576459    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1576460    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1576461    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576462    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1576463    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576464    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1576465    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1576466    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576467    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576468    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1576469    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1576470    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1576471    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576472    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1576473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1576474    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1576475    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576477    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1576478    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1576479    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576480    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1576481    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1576482    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1576482  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1576483    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576484    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1576485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576486    filename _pref
1576486  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1576487    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1576488    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1576489   +
1576490   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1576491   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1576491  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1576492   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1576493   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1576494   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1576495   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1576496   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1576497    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1576498    quit;
1576499    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1576500    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1576501    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1576502    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1576503    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1576504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1576505    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1576506    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576507    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576508    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1576509    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576510    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576511    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1576512    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1576513    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1576514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1576515    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1576516    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576517    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1576518    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576519    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576520    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1576521    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1576522    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576523    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1576524    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1576525    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1576525  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1576526    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576527    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1576528    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576529    filename _pref
1576529  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1576530    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1576531    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1576532   +
1576533   +
1576534   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1576535   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1576536   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1576537   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1576538   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1576539   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1576540   +
1576541   +
1576542   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1576543   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1576544   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1576545   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1576546   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1576547   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1576548   +
1576549   +
1576550   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1576551   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1576552   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1576553   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1576554   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1576555   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1576556   +
1576557   +
1576558   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1576559   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1576560   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1576561   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1576562   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1576563   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1576564   +
1576565   +
1576566   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1576567   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1576568   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1576569   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1576570   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1576571   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1576572   +
1576573   +
1576574   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1576575   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1576576   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1576577   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1576578   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1576579   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1576580   +
1576581   +
1576582   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1576583   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1576584   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1576585   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1576586   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1576587   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1576588   +
1576589   +
1576590   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1576591   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1576592   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1576593   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1576594   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1576595   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1576596   +if
1576597   +_FILTERNORM1 not in ( '.')
1576598   + and
1576599   +_FILTERNORM2 not in ( '.')
1576600   + and
1576601   +_FILTERNORM3 not in ( '.')
1576602   + and
1576603   +_FILTERNORM4 not in ( '.')
1576604   + and
1576605   +_FILTERNORM5 not in ( '.')
1576606   + and
1576607   +_FILTERNORM6 not in ( '.')
1576608   + and
1576609   +_FILTERNORM7 not in ( ' ')
1576610   + and
1576611   +_FILTERNORM8 not in ( ' ')
1576612   +and
1576613   +( Dt_Customer ne .)
1576614   +and ( Income ne . and (Income<=107000))
1576615   +and ( Kidhome ne .)
1576616   +and ( MntFishProducts ne .)
1576617   +and ( MntFruits ne .)
1576618   +and ( MntGoldProds ne .)
1576619   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1576620   +and ( MntSweetProducts ne .)
1576621   +and ( MntWines ne .)
1576622   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1576623   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1576624   +and ( NumStorePurchases ne .)
1576625   +and ( NumWebPurchases ne .)
1576626   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1576627   +and ( Recency ne .)
1576628   +and ( Teenhome ne .)
1576629   +and ( Year_Birth ne .)
1576630   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1576631   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1576632   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1576633   +end;
MPRINT(EM_DIAGRAM):   end;
1576634   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1576635   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1576636    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1576637    quit;
1576638    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1576639    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1576640    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1576641    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1576642    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1576643    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1576644    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1576645    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576646    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576647    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1576648    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576649    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576650    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1576651    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1576652    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1576653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576654    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1576655    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1576656    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1576657    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576658    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576659    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1576660    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1576661    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1576662    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576663    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1576664    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1576664  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1576665    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576666    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1576667    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1576668    %macro varDept(fcmpdata=,id=);
1576669    %global nobs&id scoreFlag&id;
1576670    %let scoreFlag&id = 0;
1576671    %if &id=1 or ^&fcmpStart %then %do;
1576672    proc sort data=&fcmpdata out=_temp&id nodupkey;
1576673    by NAME;
1576674    where id=&id and LHS in( %let j=1;
1576675    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1576676    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1576677    "&var" %let j = %eval(&j+1);
1576678    %end;
1576679    );
1576680    run;
1576681    %let dsid = %sysfunc(open(_temp&id));
1576682    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1576683    %let dsid = %sysfunc(close(&dsid));
1576684    %if &&nobs&id %then %do;
1576685    %let scoreFlag&id = 1;
1576686    %let fcmpStart = 1;
1576687    %end;
1576688    %else %let fcmpStart = 0;
1576689    %end;
1576690    %else %do;
1576691    proc sort data=&fcmpdata out=_tempid;
1576692    where id=&id;
1576693    by LHS;
1576694    run;
1576695    %let dsid = %sysfunc(open(_tempid));
1576696    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1576697    %let dsid = %sysfunc(close(&dsid));
1576698    %if ^&&nobs&id %then %do;
1576699    proc datasets lib=work nolist;
1576700    delete _tempid;
1576701    run;
1576702    quit;
1576703    %end;
1576704    %else %do;
1576705    data _tempAll;
1576706    set %let j=%eval(&id-1);
1576707    %do x=1 %to &j;
1576708    %if &&nobs&x %then %do;
1576709    _temp&x %end;
1576710    %end;
1576711    ;
1576712    run;
1576713    proc sql;
1576714    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1576714  ! work._tempid p2 where p.name=p2.lhs;
1576715    quit;
1576716    data _temp&id;
1576717    set _temp&id;
1576718    where LHS ne '' and NAME ne '' and Node ne '';
1576719    run;
1576720    proc datasets lib=work nolist;
1576721    delete _tempAll;
1576722    run;
1576723    %let dsid = %sysfunc(open(_temp&id));
1576724    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1576725    %let dsid = %sysfunc(close(&dsid));
1576726    %if ^&&nobs&id %then %do;
1576727    proc datasets lib=work nolist;
1576728    delete _temp&id;
1576729    run;
1576730    quit;
1576731    %end;
1576732    %else %do;
1576733    %let scoreFlag&id = 1;
1576734    data _temp&id;
1576735    set _temp&id;
1576736    where LHS ne NAME and node ne '';
1576737    run;
1576738    %let dsid = %sysfunc(open(_temp&id));
1576739    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1576740    %let dsid = %sysfunc(close(&dsid));
1576741    %if ^&&nobs&id %then %do;
1576742    proc datasets lib=work nolist;
1576743    delete _temp&id;
1576744    run;
1576745    quit;
1576746    %end;
1576747    %else %do;
1576748    proc sort data=_temp&id nodupkey;
1576749    by LHS NAME;
1576750    run;
1576751    %end;
1576752    %end;
1576753    %end;
1576754    %end;
1576755    %mend varDept;
1576756    %macro optCode(outdata=fcmpdata);
1576757    %global fcmpStart;
1576758    %let fcmpStart = 0;
1576759    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1576760    %let NumNodes=9;
1576761    %do k=1 %to &NumNodes;
1576762    %vardept(fcmpdata=&outdata, id=&k);
1576763    %end;
1576764    %mend optCode;
1576765    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1576766    filename _pref
1576766  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
1576767    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1576768    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
1576769   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1576770   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1576771   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1576772   +
1576773   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1576774   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1576775   +
1576776   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1576777   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1576778   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1576779   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1576780   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1576781   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1576782   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1576783   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1576784   +
1576785   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1576786   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1576787   +
1576788   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1576789   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1576790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576792   +end;
MPRINT(EM_DIAGRAM):   end;
1576793   +
1576794   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1576795   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1576796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576798   +end;
MPRINT(EM_DIAGRAM):   end;
1576799   +
1576800   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1576801   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1576802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576804   +end;
MPRINT(EM_DIAGRAM):   end;
1576805   +
1576806   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1576807   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1576808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576810   +end;
MPRINT(EM_DIAGRAM):   end;
1576811   +
1576812   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1576813   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1576814   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576816   +end;
MPRINT(EM_DIAGRAM):   end;
1576817   +
1576818   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1576819   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1576820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576822   +end;
MPRINT(EM_DIAGRAM):   end;
1576823   +
1576824   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1576825   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1576826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576828   +end;
MPRINT(EM_DIAGRAM):   end;
1576829   +
1576830   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1576831   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1576832   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576833   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576834   +end;
MPRINT(EM_DIAGRAM):   end;
1576835   +
1576836   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1576837   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1576838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576840   +end;
MPRINT(EM_DIAGRAM):   end;
1576841   +
1576842   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1576843   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1576844   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576845   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576846   +end;
MPRINT(EM_DIAGRAM):   end;
1576847   +
1576848   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1576849   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1576850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576852   +end;
MPRINT(EM_DIAGRAM):   end;
1576853   +
1576854   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1576855   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1576856   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576857   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576858   +end;
MPRINT(EM_DIAGRAM):   end;
1576859   +
1576860   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1576861   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1576862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576864   +end;
MPRINT(EM_DIAGRAM):   end;
1576865   +
1576866   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1576867   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1576868   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1576869   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1576870   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1576871   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1576872   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1576873   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1576874   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1576875   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1576876   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1576877   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1576878   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1576879   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576880   +end;
MPRINT(EM_DIAGRAM):   end;
1576881   +else do;
MPRINT(EM_DIAGRAM):   else do;
1576882   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1576883   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1576884   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1576885   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1576886   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1576887   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1576888   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1576889   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1576890   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1576891   +         end;
MPRINT(EM_DIAGRAM):   end;
1576892   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1576893   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1576894   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1576895   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1576896   +            end;
MPRINT(EM_DIAGRAM):   end;
1576897   +         end;
MPRINT(EM_DIAGRAM):   end;
1576898   +      end;
MPRINT(EM_DIAGRAM):   end;
1576899   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1576900   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1576901   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1576902   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1576903   +         end;
MPRINT(EM_DIAGRAM):   end;
1576904   +      end;
MPRINT(EM_DIAGRAM):   end;
1576905   +   end;
MPRINT(EM_DIAGRAM):   end;
1576906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1576907   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1576908   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1576909   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1576910   +      end;
MPRINT(EM_DIAGRAM):   end;
1576911   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1576912   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1576913   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1576914   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1576915   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1576916   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1576917   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1576918   +         end;
MPRINT(EM_DIAGRAM):   end;
1576919   +      end;
MPRINT(EM_DIAGRAM):   end;
1576920   +   end;
MPRINT(EM_DIAGRAM):   end;
1576921   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1576922   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1576923   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1576924   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1576925   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1576926   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1576927   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1576928   +   end;
MPRINT(EM_DIAGRAM):   end;
1576929   +end;
MPRINT(EM_DIAGRAM):   end;
1576930   +
1576931   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1576932   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1576933   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1576934   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1576935   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1576936   +end;
MPRINT(EM_DIAGRAM):   end;
1576937   +
1576938   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1576939   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1576940   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1576941   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1576942   +
1576943   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1576944   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1576945   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1576946   +
1576947   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1576948   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1576949   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1576950   +
1576951   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1576952   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1576953   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1576954   +
1576955   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1576956   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1576957   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1576958   +
1576959   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1576960   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1576961   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1576962   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1576963   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1576964   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1576965   +
1576966   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1576967   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1576968   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1576969   +
1576970   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1576971   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1576972   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1576973   +
1576974   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1576975   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1576976   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1576977   +
1576978   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1576979   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1576980   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1576981   +
1576982   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1576983   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1576984   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1576985   +
1576986   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1576987   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1576988   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1576989   +
1576990   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1576991   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1576992   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1576993   +
1576994   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1576995   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1576996   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1576997   +
1576998   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1576999   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1577000   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1577001   +
1577002   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1577003   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1577004   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1577005   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1577006   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1577007   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1577008   +end;
MPRINT(EM_DIAGRAM):   end;
1577009   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1577010   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1577011   +
1577012   +REGDR1:
1577013   +
1577014   +
1577015   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
1577016   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1577017   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1577018   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1577019   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1577020   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1577021   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1577022   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1577023   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1577024   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1577025   +end;
MPRINT(EM_DIAGRAM):   end;
1577026   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1577027   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1577028   +
1577029   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1577030   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1577031   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1577032    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1577033    quit;
1577034    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1577035    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1577036    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1577037    retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
1577038    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1577039    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1577040    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1577041    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577042    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577043    proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
1577044    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577046    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1577047    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1577048    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1577049    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1577050    proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
1577051    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1577052    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1577053    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577054    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1577055    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1577056    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1577057    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577058    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577059    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1577060    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1577060  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.
 
1577061    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1577062    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1577063    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577064    filename _pref
1577064  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1577065    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1577066    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1577067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1577068   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1577069   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1577070   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1577071   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1577072   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1577073    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1577074    quit;
1577075    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1577076    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1577077    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1577078    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1577079    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1577080    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577081    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1577082    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577084    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1577085    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577086    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1577087    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1577088    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1577089    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1577090    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577091    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1577092    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1577093    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1577094    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577095    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577096    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1577097    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1577098    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577099    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577100    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1577101    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1577101  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1577102    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577103    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1577104    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577105    filename _pref
1577105  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1577106    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1577107    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1577108   +
1577109   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1577110   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1577110  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1577111   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1577112   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1577113   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1577114   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1577115   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1577116    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1577117    quit;
1577118    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1577119    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1577120    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1577121    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1577122    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1577123    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577124    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1577125    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577126    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1577127    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1577128    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577129    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577130    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1577131    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1577132    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1577133    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577134    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1577135    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1577136    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1577137    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577139    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1577140    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1577141    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577142    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577143    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1577144    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1577144  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1577145    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1577146    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1577147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577148    filename _pref
1577148  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1577149    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1577150    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1577151   +
1577152   +
1577153   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1577154   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1577155   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1577156   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1577157   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1577158   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1577159   +
1577160   +
1577161   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1577162   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1577163   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1577164   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1577165   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1577166   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1577167   +
1577168   +
1577169   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1577170   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1577171   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1577172   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1577173   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1577174   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1577175   +
1577176   +
1577177   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1577178   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1577179   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1577180   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1577181   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1577182   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1577183   +
1577184   +
1577185   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1577186   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1577187   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1577188   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1577189   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1577190   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1577191   +
1577192   +
1577193   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1577194   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1577195   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1577196   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1577197   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1577198   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1577199   +
1577200   +
1577201   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1577202   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1577203   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1577204   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1577205   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1577206   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1577207   +
1577208   +
1577209   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1577210   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1577211   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1577212   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1577213   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1577214   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1577215   +if
1577216   +_FILTERNORM1 not in ( '.')
1577217   + and
1577218   +_FILTERNORM2 not in ( '.')
1577219   + and
1577220   +_FILTERNORM3 not in ( '.')
1577221   + and
1577222   +_FILTERNORM4 not in ( '.')
1577223   + and
1577224   +_FILTERNORM5 not in ( '.')
1577225   + and
1577226   +_FILTERNORM6 not in ( '.')
1577227   + and
1577228   +_FILTERNORM7 not in ( ' ')
1577229   + and
1577230   +_FILTERNORM8 not in ( ' ')
1577231   +and
1577232   +( Dt_Customer ne .)
1577233   +and ( Income ne . and (Income<=107000))
1577234   +and ( Kidhome ne .)
1577235   +and ( MntFishProducts ne .)
1577236   +and ( MntFruits ne .)
1577237   +and ( MntGoldProds ne .)
1577238   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1577239   +and ( MntSweetProducts ne .)
1577240   +and ( MntWines ne .)
1577241   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1577242   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1577243   +and ( NumStorePurchases ne .)
1577244   +and ( NumWebPurchases ne .)
1577245   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1577246   +and ( Recency ne .)
1577247   +and ( Teenhome ne .)
1577248   +and ( Year_Birth ne .)
1577249   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1577250   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1577251   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1577252   +end;
MPRINT(EM_DIAGRAM):   end;
1577253   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1577254   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1577255    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1577256    quit;
1577257    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1577258    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1577259    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1577260    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1577261    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1577262    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577263    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1577264    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577265    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1577266    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1577267    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577269    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1577270    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1577271    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1577272    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577273    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1577274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1577275    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1577276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577277    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577278    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1577279    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1577280    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1577281    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1577282    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1577283    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1577283  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1577284    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577285    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1577286    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1577287    %macro varDept(fcmpdata=,id=);
1577288    %global nobs&id scoreFlag&id;
1577289    %let scoreFlag&id = 0;
1577290    %if &id=1 or ^&fcmpStart %then %do;
1577291    proc sort data=&fcmpdata out=_temp&id nodupkey;
1577292    by NAME;
1577293    where id=&id and LHS in( %let j=1;
1577294    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1577295    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1577296    "&var" %let j = %eval(&j+1);
1577297    %end;
1577298    );
1577299    run;
1577300    %let dsid = %sysfunc(open(_temp&id));
1577301    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1577302    %let dsid = %sysfunc(close(&dsid));
1577303    %if &&nobs&id %then %do;
1577304    %let scoreFlag&id = 1;
1577305    %let fcmpStart = 1;
1577306    %end;
1577307    %else %let fcmpStart = 0;
1577308    %end;
1577309    %else %do;
1577310    proc sort data=&fcmpdata out=_tempid;
1577311    where id=&id;
1577312    by LHS;
1577313    run;
1577314    %let dsid = %sysfunc(open(_tempid));
1577315    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1577316    %let dsid = %sysfunc(close(&dsid));
1577317    %if ^&&nobs&id %then %do;
1577318    proc datasets lib=work nolist;
1577319    delete _tempid;
1577320    run;
1577321    quit;
1577322    %end;
1577323    %else %do;
1577324    data _tempAll;
1577325    set %let j=%eval(&id-1);
1577326    %do x=1 %to &j;
1577327    %if &&nobs&x %then %do;
1577328    _temp&x %end;
1577329    %end;
1577330    ;
1577331    run;
1577332    proc sql;
1577333    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1577333  ! work._tempid p2 where p.name=p2.lhs;
1577334    quit;
1577335    data _temp&id;
1577336    set _temp&id;
1577337    where LHS ne '' and NAME ne '' and Node ne '';
1577338    run;
1577339    proc datasets lib=work nolist;
1577340    delete _tempAll;
1577341    run;
1577342    %let dsid = %sysfunc(open(_temp&id));
1577343    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1577344    %let dsid = %sysfunc(close(&dsid));
1577345    %if ^&&nobs&id %then %do;
1577346    proc datasets lib=work nolist;
1577347    delete _temp&id;
1577348    run;
1577349    quit;
1577350    %end;
1577351    %else %do;
1577352    %let scoreFlag&id = 1;
1577353    data _temp&id;
1577354    set _temp&id;
1577355    where LHS ne NAME and node ne '';
1577356    run;
1577357    %let dsid = %sysfunc(open(_temp&id));
1577358    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1577359    %let dsid = %sysfunc(close(&dsid));
1577360    %if ^&&nobs&id %then %do;
1577361    proc datasets lib=work nolist;
1577362    delete _temp&id;
1577363    run;
1577364    quit;
1577365    %end;
1577366    %else %do;
1577367    proc sort data=_temp&id nodupkey;
1577368    by LHS NAME;
1577369    run;
1577370    %end;
1577371    %end;
1577372    %end;
1577373    %end;
1577374    %mend varDept;
1577375    %macro optCode(outdata=fcmpdata);
1577376    %global fcmpStart;
1577377    %let fcmpStart = 0;
1577378    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1577379    %let NumNodes=9;
1577380    %do k=1 %to &NumNodes;
1577381    %vardept(fcmpdata=&outdata, id=&k);
1577382    %end;
1577383    %mend optCode;
1577384    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 56 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1577385    filename _pref
1577385  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
1577386    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1577387    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
1577388   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1577389   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1577390   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1577391   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1577392   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1577393   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1577394   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1577395   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1577396   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1577397   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1577398   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1577399   +LENGTH _WARN_ $4
1577400   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1577401   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1577402   +
1577403   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1577404   +
1577405   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1577406   +
1577407   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1577408   +
1577409   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1577410   +
1577411   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1577412   +
1577413   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1577414   +
1577415   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1577416   +
1577417   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1577418   +
1577419   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1577420   +
1577421   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1577422   +
1577423   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1577424   +
1577425   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1577426   +
1577427   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1577428   +
1577429   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1577430   +
1577431   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1577432   +
1577433   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1577434   +
1577435   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1577436   +
1577437   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1577438   +
1577439   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1577440   +
1577441   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1577442   +
1577443   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1577444   +
1577445   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1577446   +
1577447   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1577448   +
1577449   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1577450   +
1577451   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1577452   +
1577453   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1577454   +
1577455   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1577456   +
1577457   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1577458   +
1577459   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1577460   +
1577461   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1577462   +
1577463   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1577464   +
1577465   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1577466   +
1577467   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1577468   +
1577469   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1577470   +
1577471   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1577472   +
1577473   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1577474   +
1577475   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1577476   +
1577477   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1577478   +
1577479   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1577480   +
1577481   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1577482   +
1577483   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1577484   +
1577485   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1577486   +
1577487   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1577488   +
1577489   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1577490   +
1577491   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1577492   +
1577493   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1577494   +
1577495   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1577496   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1577497   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1577498   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1577499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1577500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577501   +end;
MPRINT(EM_DIAGRAM):   end;
1577502   +else do;
MPRINT(EM_DIAGRAM):   else do;
1577503   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1577504   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1577505   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1577506   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1577507   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1577508   +   end;
MPRINT(EM_DIAGRAM):   end;
1577509   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1577510   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1577511   +   end;
MPRINT(EM_DIAGRAM):   end;
1577512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1577513   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1577514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1577515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577516   +   end;
MPRINT(EM_DIAGRAM):   end;
1577517   +end;
MPRINT(EM_DIAGRAM):   end;
1577518   +
1577519   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1577520   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1577521   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1577522   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1577523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1577524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577525   +end;
MPRINT(EM_DIAGRAM):   end;
1577526   +else do;
MPRINT(EM_DIAGRAM):   else do;
1577527   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1577528   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1577529   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1577530   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1577531   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1577532   +   end;
MPRINT(EM_DIAGRAM):   end;
1577533   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1577534   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1577535   +   end;
MPRINT(EM_DIAGRAM):   end;
1577536   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1577537   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1577538   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1577539   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577540   +   end;
MPRINT(EM_DIAGRAM):   end;
1577541   +end;
MPRINT(EM_DIAGRAM):   end;
1577542   +
1577543   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1577544   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1577545   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1577546   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1577547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1577548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577549   +end;
MPRINT(EM_DIAGRAM):   end;
1577550   +else do;
MPRINT(EM_DIAGRAM):   else do;
1577551   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1577552   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1577553   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1577554   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1577555   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1577556   +   end;
MPRINT(EM_DIAGRAM):   end;
1577557   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1577558   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1577559   +   end;
MPRINT(EM_DIAGRAM):   end;
1577560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1577561   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1577562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1577563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577564   +   end;
MPRINT(EM_DIAGRAM):   end;
1577565   +end;
MPRINT(EM_DIAGRAM):   end;
1577566   +
1577567   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1577568   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1577569   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1577570   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1577571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1577572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577573   +end;
MPRINT(EM_DIAGRAM):   end;
1577574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1577575   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1577576   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1577577   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1577578   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1577579   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1577580   +   end;
MPRINT(EM_DIAGRAM):   end;
1577581   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1577582   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1577583   +   end;
MPRINT(EM_DIAGRAM):   end;
1577584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1577585   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1577586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1577587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577588   +   end;
MPRINT(EM_DIAGRAM):   end;
1577589   +end;
MPRINT(EM_DIAGRAM):   end;
1577590   +
1577591   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1577592   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1577593   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1577594   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1577595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1577596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577597   +end;
MPRINT(EM_DIAGRAM):   end;
1577598   +else do;
MPRINT(EM_DIAGRAM):   else do;
1577599   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1577600   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1577601   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1577602   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1577603   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1577604   +   end;
MPRINT(EM_DIAGRAM):   end;
1577605   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1577606   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1577607   +   end;
MPRINT(EM_DIAGRAM):   end;
1577608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1577609   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1577610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1577611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577612   +   end;
MPRINT(EM_DIAGRAM):   end;
1577613   +end;
MPRINT(EM_DIAGRAM):   end;
1577614   +
1577615   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1577616   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1577617   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1577618   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1577619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1577620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577621   +end;
MPRINT(EM_DIAGRAM):   end;
1577622   +else do;
MPRINT(EM_DIAGRAM):   else do;
1577623   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1577624   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1577625   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1577626   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1577627   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1577628   +   end;
MPRINT(EM_DIAGRAM):   end;
1577629   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1577630   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1577631   +   end;
MPRINT(EM_DIAGRAM):   end;
1577632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1577633   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1577634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1577635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577636   +   end;
MPRINT(EM_DIAGRAM):   end;
1577637   +end;
MPRINT(EM_DIAGRAM):   end;
1577638   +
1577639   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1577640   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1577641   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1577642   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1577643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1577644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577645   +end;
MPRINT(EM_DIAGRAM):   end;
1577646   +else do;
MPRINT(EM_DIAGRAM):   else do;
1577647   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1577648   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1577649   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1577650   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1577651   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1577652   +   end;
MPRINT(EM_DIAGRAM):   end;
1577653   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1577654   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1577655   +   end;
MPRINT(EM_DIAGRAM):   end;
1577656   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1577657   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1577658   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1577659   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577660   +   end;
MPRINT(EM_DIAGRAM):   end;
1577661   +end;
MPRINT(EM_DIAGRAM):   end;
1577662   +
1577663   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1577664   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1577665   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1577666   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1577667   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1577668   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1577669   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1577670   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1577671   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1577672   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1577673   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1577674   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1577675   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1577676   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577677   +end;
MPRINT(EM_DIAGRAM):   end;
1577678   +else do;
MPRINT(EM_DIAGRAM):   else do;
1577679   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1577680   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1577681   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1577682   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1577683   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1577684   +   end;
MPRINT(EM_DIAGRAM):   end;
1577685   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1577686   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1577687   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1577688   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1577689   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1577690   +   end;
MPRINT(EM_DIAGRAM):   end;
1577691   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1577692   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1577693   +   end;
MPRINT(EM_DIAGRAM):   end;
1577694   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1577695   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1577696   +   end;
MPRINT(EM_DIAGRAM):   end;
1577697   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1577698   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1577699   +   end;
MPRINT(EM_DIAGRAM):   end;
1577700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1577701   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1577702   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1577703   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1577704   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1577705   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1577706   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577707   +   end;
MPRINT(EM_DIAGRAM):   end;
1577708   +end;
MPRINT(EM_DIAGRAM):   end;
1577709   +
1577710   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1577711   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1577712   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1577713   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1577714   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1577715   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1577716   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1577717   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1577718   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1577719   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1577720   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1577721   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1577722   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1577723   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1577724   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577725   +end;
MPRINT(EM_DIAGRAM):   end;
1577726   +else do;
MPRINT(EM_DIAGRAM):   else do;
1577727   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1577728   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1577729   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1577730   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1577731   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1577732   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1577733   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1577734   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1577735   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1577736   +         end;
MPRINT(EM_DIAGRAM):   end;
1577737   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1577738   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1577739   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1577740   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1577741   +            end;
MPRINT(EM_DIAGRAM):   end;
1577742   +         end;
MPRINT(EM_DIAGRAM):   end;
1577743   +      end;
MPRINT(EM_DIAGRAM):   end;
1577744   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1577745   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1577746   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1577747   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1577748   +         end;
MPRINT(EM_DIAGRAM):   end;
1577749   +      end;
MPRINT(EM_DIAGRAM):   end;
1577750   +   end;
MPRINT(EM_DIAGRAM):   end;
1577751   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1577752   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1577753   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1577754   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1577755   +      end;
MPRINT(EM_DIAGRAM):   end;
1577756   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1577757   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1577758   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1577759   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1577760   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1577761   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1577762   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1577763   +         end;
MPRINT(EM_DIAGRAM):   end;
1577764   +      end;
MPRINT(EM_DIAGRAM):   end;
1577765   +   end;
MPRINT(EM_DIAGRAM):   end;
1577766   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1577767   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1577768   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1577769   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1577770   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1577771   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1577772   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577773   +   end;
MPRINT(EM_DIAGRAM):   end;
1577774   +end;
MPRINT(EM_DIAGRAM):   end;
1577775   +
1577776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1577777   +*** Checking missing input Interval
1577778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1577779   +
1577780   +IF NMISS(
1577781   +   AcceptedCmpTotal ,
1577782   +   Age ,
1577783   +   Frq ,
1577784   +   Income ,
1577785   +   Kidhome ,
1577786   +   Mnt ,
1577787   +   MntFishProducts ,
1577788   +   MntFruits ,
1577789   +   MntGoldProds ,
1577790   +   MntMeatProducts ,
1577791   +   MntSweetProducts ,
1577792   +   MntWines ,
1577793   +   MonthsAsCustomer ,
1577794   +   NumCatalogPurchases ,
1577795   +   NumDealsPurchases ,
1577796   +   NumDistPurchases ,
1577797   +   NumStorePurchases ,
1577798   +   NumWebPurchases ,
1577799   +   NumWebVisitsMonth ,
1577800   +   RFMstat ,
1577801   +   RMntFrq ,
1577802   +   Recency ,
1577803   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1577804   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1577805   +
1577806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1577807   +END;
MPRINT(EM_DIAGRAM):   END;
1577808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1577809   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1577810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1577811   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1577812   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1577813   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1577814   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1577815   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1577816   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1577817   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1577818   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1577819   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1577820   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1577821   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1577822   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1577823   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1577824   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1577825   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1577826   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1577827   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1577828   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1577829   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1577830   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1577831   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1577832   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1577833   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1577834   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1577835   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1577836   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1577837   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1577838   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1577839   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1577840   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1577841   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1577842   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1577843   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1577844   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1577845   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1577846   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1577847   +END;
MPRINT(EM_DIAGRAM):   END;
1577848   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1577849   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1577850   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1577851   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1577852   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1577853   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1577854   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1577855   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1577856   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1577857   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1577858   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1577859   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1577860   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1577861   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1577862   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1577863   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1577864   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1577865   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1577866   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1577867   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1577868   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1577869   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1577870   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1577871   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1577872   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1577873   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1577874   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1577875   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1577876   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1577877   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1577878   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1577879   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1577880   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1577881   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1577882   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1577883   +   ELSE S_NumCatalogPurchases
1577884   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1577885   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1577886   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1577887   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1577888   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1577889   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1577890   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1577891   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1577892   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1577893   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1577894   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1577895   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1577896   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1577897   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1577898   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1577899   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1577900   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1577901   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1577902   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1577903   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1577904   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1577905   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1577906   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1577907   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1577908   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1577909   +END;
MPRINT(EM_DIAGRAM):   END;
1577910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1577911   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1577912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1577913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1577914   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1577915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1577916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1577917   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1577918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1577919   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1577920   +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
1577921   +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
1577922   +        S_Income  +    -0.76740176580734 * S_Kidhome
1577923   +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
1577924   +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
1577925   +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
1577926   +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
1577927   +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
1577928   +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
1577929   +          +    -1.00050516074089 * S_NumDealsPurchases
1577930   +          +    -0.89322788176916 * S_NumDistPurchases
1577931   +          +     1.21914397196653 * S_NumStorePurchases
1577932   +          +     1.50867172673665 * S_NumWebPurchases
1577933   +          +    -0.78565948522753 * S_NumWebVisitsMonth
1577934   +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
1577935   +        S_RMntFrq  +     0.54722353861156 * S_Recency
1577936   +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome +
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 *
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts +
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 *
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 *
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 *
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 *
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq +
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
1577937   +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
1577938   +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
1577939   +        S_Income  +    -0.76288911429735 * S_Kidhome
1577940   +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
1577941   +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
1577942   +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
1577943   +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
1577944   +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
1577945   +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
1577946   +          +     0.79497206561332 * S_NumDealsPurchases
1577947   +          +    -0.13658888199464 * S_NumDistPurchases
1577948   +          +    -0.86436416316417 * S_NumStorePurchases
1577949   +          +    -0.85206550087617 * S_NumWebPurchases
1577950   +          +     1.72745004688732 * S_NumWebVisitsMonth
1577951   +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
1577952   +        S_RMntFrq  +    -1.61929009656969 * S_Recency
1577953   +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age +
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome +
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 *
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts +
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 *
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 *
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 *
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 *
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq +
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
1577954   +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
1577955   +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
1577956   +        S_Income  +    -0.48841499166688 * S_Kidhome
1577957   +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
1577958   +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
1577959   +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
1577960   +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
1577961   +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
1577962   +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
1577963   +          +    -0.00010125986409 * S_NumDealsPurchases
1577964   +          +    -0.00873530900019 * S_NumDistPurchases
1577965   +          +    -0.13188135131414 * S_NumStorePurchases
1577966   +          +    -0.10710067608125 * S_NumWebPurchases
1577967   +          +     0.99164053465149 * S_NumWebVisitsMonth
1577968   +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
1577969   +        S_RMntFrq  +    -1.11555213179399 * S_Recency
1577970   +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age +
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome +
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 *
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts +
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 *
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 *
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 *
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 *
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq +
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
1577971   +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
1577972   +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
1577973   +        S_Income  +    -0.57026847797175 * S_Kidhome
1577974   +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
1577975   +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
1577976   +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
1577977   +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
1577978   +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
1577979   +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
1577980   +          +     0.83618651452015 * S_NumDealsPurchases
1577981   +          +     0.22469306589917 * S_NumDistPurchases
1577982   +          +    -0.95889459414769 * S_NumStorePurchases
1577983   +          +    -0.95695646799114 * S_NumWebPurchases
1577984   +          +     0.96738689790948 * S_NumWebVisitsMonth
1577985   +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
1577986   +        S_RMntFrq  +    -1.86789718822119 * S_Recency
1577987   +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome +
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 *
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts +
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 *
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 *
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 *
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 *
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq +
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
1577988   +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
1577989   +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
1577990   +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
1577991   +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
1577992   +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 *
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 +
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 *
HigherEducationBinary0 ;
1577993   +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
1577994   +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
1577995   +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
1577996   +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
1577997   +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 *
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 +
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 *
HigherEducationBinary0 ;
1577998   +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
1577999   +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
1578000   +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
1578001   +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
1578002   +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 *
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 +
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 *
HigherEducationBinary0 ;
1578003   +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
1578004   +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
1578005   +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
1578006   +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
1578007   +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 *
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 +
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 *
HigherEducationBinary0 ;
1578008   +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
1578009   +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
1578010   +        EducationGraduation  +    -0.23468159779626 * EducationMaster
1578011   +          +     0.80885454992674 * Marital_StatusDivorced
1578012   +          +     -0.5568630572283 * Marital_StatusMarried
1578013   +          +    -0.03099047176508 * Marital_StatusSingle
1578014   +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 *
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster +
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried +
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
1578015   +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
1578016   +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
1578017   +        EducationGraduation  +    -0.56110080484509 * EducationMaster
1578018   +          +     0.13911597069393 * Marital_StatusDivorced
1578019   +          +    -1.50081060732787 * Marital_StatusMarried
1578020   +          +     1.41717012231539 * Marital_StatusSingle
1578021   +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 *
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried +
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
1578022   +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
1578023   +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
1578024   +        EducationGraduation  +     0.00076803730381 * EducationMaster
1578025   +          +    -0.26412736340464 * Marital_StatusDivorced
1578026   +          +    -0.27049992388629 * Marital_StatusMarried
1578027   +          +     0.67476795725099 * Marital_StatusSingle
1578028   +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 *
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried +
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
1578029   +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
1578030   +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
1578031   +        EducationGraduation  +     0.46303431308465 * EducationMaster
1578032   +          +      0.8954230457499 * Marital_StatusDivorced
1578033   +          +     0.73706556068242 * Marital_StatusMarried
1578034   +          +    -1.29073720538893 * Marital_StatusSingle
1578035   +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 *
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried +
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
1578036   +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
1578037   +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
1578038   +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
1578039   +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
1578040   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1578041   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1578042   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1578043   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1578044   +END;
MPRINT(EM_DIAGRAM):   END;
1578045   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1578046   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1578047   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1578048   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1578049   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1578050   +END;
MPRINT(EM_DIAGRAM):   END;
1578051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578052   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1578053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578054   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1578055   +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
1578056   +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 +
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
1578057   +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
1578058   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1578059   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1578060   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1578061   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1578062   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1578063   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1578064   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1578065   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1578066   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1578067   +END;
MPRINT(EM_DIAGRAM):   END;
1578068   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1578069   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1578070   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1578071   +END;
MPRINT(EM_DIAGRAM):   END;
1578072   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1578073   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1578074   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1578075   +END;
MPRINT(EM_DIAGRAM):   END;
1578076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578077   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1578078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578079   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1578080   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1578081   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1578082   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1578083   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1578084   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1578085   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1578086   +END;
MPRINT(EM_DIAGRAM):   END;
1578087   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1578088   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1578089   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1578090   +drop
1578091   +H11
1578092   +H12
1578093   +H13
1578094   +H14
1578095   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1578096   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1578097    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1578098    quit;
1578099    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1578100    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1578101    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1578102    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
1578103    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1578104    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578105    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1578106    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578107    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1578108    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
1578109    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578111    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1578112    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1578113    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1578114    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578115    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
1578116    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1578117    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1578118    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578120    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1578121    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1578122    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578123    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1578124    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1578125    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1578125  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.
 
1578126    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578127    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1578128    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1578129    filename _pref
1578129  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1578130    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1578131    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1578132   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1578133   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1578134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1578135   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1578136   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1578137   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1578138    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1578139    quit;
1578140    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1578141    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1578142    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1578143    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1578144    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1578145    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578146    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1578147    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578148    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578149    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1578150    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578151    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578152    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1578153    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1578154    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1578155    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578156    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1578157    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1578158    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1578159    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578161    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1578162    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1578163    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578164    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578165    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1578166    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1578166  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1578167    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1578168    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1578169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578170    filename _pref
1578170  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1578171    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1578172    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1578173   +
1578174   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1578175   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1578175  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1578176   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1578177   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1578178   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1578179   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1578180   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1578181    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1578182    quit;
1578183    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1578184    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1578185    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1578186    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1578187    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1578188    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578189    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1578190    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578192    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1578193    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578194    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1578195    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1578196    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1578197    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1578198    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578199    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1578200    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578201    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1578202    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1578204    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1578205    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1578206    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578207    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578208    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1578209    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1578209  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1578210    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578211    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1578212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1578213    filename _pref
1578213  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1578214    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1578215    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1578216   +
1578217   +
1578218   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1578219   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1578220   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1578221   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1578222   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1578223   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1578224   +
1578225   +
1578226   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1578227   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1578228   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1578229   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1578230   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1578231   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1578232   +
1578233   +
1578234   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1578235   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1578236   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1578237   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1578238   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1578239   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1578240   +
1578241   +
1578242   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1578243   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1578244   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1578245   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1578246   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1578247   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1578248   +
1578249   +
1578250   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1578251   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1578252   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1578253   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1578254   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1578255   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1578256   +
1578257   +
1578258   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1578259   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1578260   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1578261   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1578262   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1578263   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1578264   +
1578265   +
1578266   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1578267   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1578268   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1578269   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1578270   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1578271   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1578272   +
1578273   +
1578274   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1578275   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1578276   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1578277   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1578278   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1578279   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1578280   +if
1578281   +_FILTERNORM1 not in ( '.')
1578282   + and
1578283   +_FILTERNORM2 not in ( '.')
1578284   + and
1578285   +_FILTERNORM3 not in ( '.')
1578286   + and
1578287   +_FILTERNORM4 not in ( '.')
1578288   + and
1578289   +_FILTERNORM5 not in ( '.')
1578290   + and
1578291   +_FILTERNORM6 not in ( '.')
1578292   + and
1578293   +_FILTERNORM7 not in ( ' ')
1578294   + and
1578295   +_FILTERNORM8 not in ( ' ')
1578296   +and
1578297   +( Dt_Customer ne .)
1578298   +and ( Income ne . and (Income<=107000))
1578299   +and ( Kidhome ne .)
1578300   +and ( MntFishProducts ne .)
1578301   +and ( MntFruits ne .)
1578302   +and ( MntGoldProds ne .)
1578303   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1578304   +and ( MntSweetProducts ne .)
1578305   +and ( MntWines ne .)
1578306   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1578307   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1578308   +and ( NumStorePurchases ne .)
1578309   +and ( NumWebPurchases ne .)
1578310   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1578311   +and ( Recency ne .)
1578312   +and ( Teenhome ne .)
1578313   +and ( Year_Birth ne .)
1578314   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1578315   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1578316   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1578317   +end;
MPRINT(EM_DIAGRAM):   end;
1578318   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1578319   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1578320    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1578321    quit;
1578322    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1578323    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1578324    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1578325    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1578326    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1578327    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578328    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1578329    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578330    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578331    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1578332    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578333    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578334    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1578335    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1578336    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1578337    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578338    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1578339    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1578340    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1578341    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578342    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578343    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1578344    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1578345    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1578346    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1578347    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1578348    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1578348  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1578349    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578350    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1578351    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578352    %macro varDept(fcmpdata=,id=);
1578353    %global nobs&id scoreFlag&id;
1578354    %let scoreFlag&id = 0;
1578355    %if &id=1 or ^&fcmpStart %then %do;
1578356    proc sort data=&fcmpdata out=_temp&id nodupkey;
1578357    by NAME;
1578358    where id=&id and LHS in( %let j=1;
1578359    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1578360    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1578361    "&var" %let j = %eval(&j+1);
1578362    %end;
1578363    );
1578364    run;
1578365    %let dsid = %sysfunc(open(_temp&id));
1578366    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1578367    %let dsid = %sysfunc(close(&dsid));
1578368    %if &&nobs&id %then %do;
1578369    %let scoreFlag&id = 1;
1578370    %let fcmpStart = 1;
1578371    %end;
1578372    %else %let fcmpStart = 0;
1578373    %end;
1578374    %else %do;
1578375    proc sort data=&fcmpdata out=_tempid;
1578376    where id=&id;
1578377    by LHS;
1578378    run;
1578379    %let dsid = %sysfunc(open(_tempid));
1578380    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1578381    %let dsid = %sysfunc(close(&dsid));
1578382    %if ^&&nobs&id %then %do;
1578383    proc datasets lib=work nolist;
1578384    delete _tempid;
1578385    run;
1578386    quit;
1578387    %end;
1578388    %else %do;
1578389    data _tempAll;
1578390    set %let j=%eval(&id-1);
1578391    %do x=1 %to &j;
1578392    %if &&nobs&x %then %do;
1578393    _temp&x %end;
1578394    %end;
1578395    ;
1578396    run;
1578397    proc sql;
1578398    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1578398  ! work._tempid p2 where p.name=p2.lhs;
1578399    quit;
1578400    data _temp&id;
1578401    set _temp&id;
1578402    where LHS ne '' and NAME ne '' and Node ne '';
1578403    run;
1578404    proc datasets lib=work nolist;
1578405    delete _tempAll;
1578406    run;
1578407    %let dsid = %sysfunc(open(_temp&id));
1578408    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1578409    %let dsid = %sysfunc(close(&dsid));
1578410    %if ^&&nobs&id %then %do;
1578411    proc datasets lib=work nolist;
1578412    delete _temp&id;
1578413    run;
1578414    quit;
1578415    %end;
1578416    %else %do;
1578417    %let scoreFlag&id = 1;
1578418    data _temp&id;
1578419    set _temp&id;
1578420    where LHS ne NAME and node ne '';
1578421    run;
1578422    %let dsid = %sysfunc(open(_temp&id));
1578423    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1578424    %let dsid = %sysfunc(close(&dsid));
1578425    %if ^&&nobs&id %then %do;
1578426    proc datasets lib=work nolist;
1578427    delete _temp&id;
1578428    run;
1578429    quit;
1578430    %end;
1578431    %else %do;
1578432    proc sort data=_temp&id nodupkey;
1578433    by LHS NAME;
1578434    run;
1578435    %end;
1578436    %end;
1578437    %end;
1578438    %end;
1578439    %mend varDept;
1578440    %macro optCode(outdata=fcmpdata);
1578441    %global fcmpStart;
1578442    %let fcmpStart = 0;
1578443    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1578444    %let NumNodes=9;
1578445    %do k=1 %to &NumNodes;
1578446    %vardept(fcmpdata=&outdata, id=&k);
1578447    %end;
1578448    %mend optCode;
1578449    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1578450    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1578451    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1578452    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1578453    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1578454    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1578455    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1578456    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1578457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578458    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1578459    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1578459  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1578460    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
1578461    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1578462    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1578463    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1578464    filename _pref
1578464  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1578465    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1578466    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1578467   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1578468   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1578469   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1578470   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1578471   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1578472   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1578473   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1578474   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1578475   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1578476   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1578477   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1578478   +LENGTH _WARN_ $4
1578479   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1578480   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1578481   +
1578482   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1578483   +
1578484   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1578485   +
1578486   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1578487   +
1578488   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1578489   +
1578490   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1578491   +
1578492   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1578493   +
1578494   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1578495   +
1578496   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1578497   +
1578498   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1578499   +
1578500   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1578501   +
1578502   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1578503   +
1578504   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1578505   +
1578506   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1578507   +
1578508   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1578509   +
1578510   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1578511   +
1578512   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1578513   +
1578514   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1578515   +
1578516   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1578517   +
1578518   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1578519   +
1578520   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1578521   +
1578522   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1578523   +
1578524   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1578525   +
1578526   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1578527   +
1578528   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1578529   +
1578530   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1578531   +
1578532   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1578533   +
1578534   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1578535   +
1578536   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1578537   +
1578538   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1578539   +
1578540   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1578541   +
1578542   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1578543   +
1578544   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1578545   +
1578546   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1578547   +
1578548   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1578549   +
1578550   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1578551   +
1578552   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1578553   +
1578554   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1578555   +
1578556   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1578557   +
1578558   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1578559   +
1578560   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1578561   +
1578562   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1578563   +
1578564   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1578565   +
1578566   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1578567   +
1578568   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1578569   +
1578570   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1578571   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1578572   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1578573   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1578574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1578575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578576   +end;
MPRINT(EM_DIAGRAM):   end;
1578577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1578578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1578579   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1578580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1578581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1578582   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1578583   +   end;
MPRINT(EM_DIAGRAM):   end;
1578584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1578585   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1578586   +   end;
MPRINT(EM_DIAGRAM):   end;
1578587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1578588   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1578589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1578590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578591   +   end;
MPRINT(EM_DIAGRAM):   end;
1578592   +end;
MPRINT(EM_DIAGRAM):   end;
1578593   +
1578594   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1578595   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1578596   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1578597   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1578598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1578599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578600   +end;
MPRINT(EM_DIAGRAM):   end;
1578601   +else do;
MPRINT(EM_DIAGRAM):   else do;
1578602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1578603   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1578604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1578605   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1578606   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1578607   +   end;
MPRINT(EM_DIAGRAM):   end;
1578608   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1578609   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1578610   +   end;
MPRINT(EM_DIAGRAM):   end;
1578611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1578612   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1578613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1578614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578615   +   end;
MPRINT(EM_DIAGRAM):   end;
1578616   +end;
MPRINT(EM_DIAGRAM):   end;
1578617   +
1578618   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1578619   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1578620   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1578621   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1578622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1578623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578624   +end;
MPRINT(EM_DIAGRAM):   end;
1578625   +else do;
MPRINT(EM_DIAGRAM):   else do;
1578626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1578627   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1578628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1578629   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1578630   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1578631   +   end;
MPRINT(EM_DIAGRAM):   end;
1578632   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1578633   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1578634   +   end;
MPRINT(EM_DIAGRAM):   end;
1578635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1578636   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1578637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1578638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578639   +   end;
MPRINT(EM_DIAGRAM):   end;
1578640   +end;
MPRINT(EM_DIAGRAM):   end;
1578641   +
1578642   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1578643   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1578644   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1578645   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1578646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1578647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578648   +end;
MPRINT(EM_DIAGRAM):   end;
1578649   +else do;
MPRINT(EM_DIAGRAM):   else do;
1578650   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1578651   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1578652   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1578653   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1578654   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1578655   +   end;
MPRINT(EM_DIAGRAM):   end;
1578656   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1578657   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1578658   +   end;
MPRINT(EM_DIAGRAM):   end;
1578659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1578660   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1578661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1578662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578663   +   end;
MPRINT(EM_DIAGRAM):   end;
1578664   +end;
MPRINT(EM_DIAGRAM):   end;
1578665   +
1578666   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1578667   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1578668   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1578669   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1578670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1578671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578672   +end;
MPRINT(EM_DIAGRAM):   end;
1578673   +else do;
MPRINT(EM_DIAGRAM):   else do;
1578674   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1578675   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1578676   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1578677   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1578678   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1578679   +   end;
MPRINT(EM_DIAGRAM):   end;
1578680   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1578681   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1578682   +   end;
MPRINT(EM_DIAGRAM):   end;
1578683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1578684   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1578685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1578686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578687   +   end;
MPRINT(EM_DIAGRAM):   end;
1578688   +end;
MPRINT(EM_DIAGRAM):   end;
1578689   +
1578690   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1578691   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1578692   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1578693   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1578694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1578695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578696   +end;
MPRINT(EM_DIAGRAM):   end;
1578697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1578698   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1578699   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1578700   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1578701   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1578702   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1578703   +   end;
MPRINT(EM_DIAGRAM):   end;
1578704   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1578705   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1578706   +   end;
MPRINT(EM_DIAGRAM):   end;
1578707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1578708   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1578709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1578710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578711   +   end;
MPRINT(EM_DIAGRAM):   end;
1578712   +end;
The SAS System
 
MPRINT(EM_DIAGRAM):   end;
1578713   +
1578714   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1578715   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1578716   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1578717   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1578718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1578719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578720   +end;
MPRINT(EM_DIAGRAM):   end;
1578721   +else do;
MPRINT(EM_DIAGRAM):   else do;
1578722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1578723   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1578724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1578725   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1578726   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1578727   +   end;
MPRINT(EM_DIAGRAM):   end;
1578728   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1578729   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1578730   +   end;
MPRINT(EM_DIAGRAM):   end;
1578731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1578732   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1578733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1578734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578735   +   end;
MPRINT(EM_DIAGRAM):   end;
1578736   +end;
MPRINT(EM_DIAGRAM):   end;
1578737   +
1578738   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1578739   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1578740   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1578741   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1578742   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1578743   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1578744   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1578745   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1578746   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1578747   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1578748   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1578749   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1578750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1578751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578752   +end;
MPRINT(EM_DIAGRAM):   end;
1578753   +else do;
MPRINT(EM_DIAGRAM):   else do;
1578754   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1578755   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1578756   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1578757   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1578758   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1578759   +   end;
MPRINT(EM_DIAGRAM):   end;
1578760   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1578761   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1578762   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1578763   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1578764   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1578765   +   end;
MPRINT(EM_DIAGRAM):   end;
1578766   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1578767   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1578768   +   end;
MPRINT(EM_DIAGRAM):   end;
1578769   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1578770   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1578771   +   end;
MPRINT(EM_DIAGRAM):   end;
1578772   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1578773   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1578774   +   end;
MPRINT(EM_DIAGRAM):   end;
1578775   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1578776   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1578777   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1578778   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1578779   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1578780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1578781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578782   +   end;
MPRINT(EM_DIAGRAM):   end;
1578783   +end;
MPRINT(EM_DIAGRAM):   end;
1578784   +
1578785   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1578786   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1578787   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1578788   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1578789   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1578790   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1578791   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1578792   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1578793   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1578794   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1578795   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1578796   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1578797   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1578798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1578799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578800   +end;
MPRINT(EM_DIAGRAM):   end;
1578801   +else do;
MPRINT(EM_DIAGRAM):   else do;
1578802   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1578803   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1578804   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1578805   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1578806   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1578807   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1578808   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1578809   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1578810   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1578811   +         end;
MPRINT(EM_DIAGRAM):   end;
1578812   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1578813   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1578814   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1578815   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1578816   +            end;
MPRINT(EM_DIAGRAM):   end;
1578817   +         end;
MPRINT(EM_DIAGRAM):   end;
1578818   +      end;
MPRINT(EM_DIAGRAM):   end;
1578819   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1578820   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1578821   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1578822   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1578823   +         end;
MPRINT(EM_DIAGRAM):   end;
1578824   +      end;
MPRINT(EM_DIAGRAM):   end;
1578825   +   end;
MPRINT(EM_DIAGRAM):   end;
1578826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1578827   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1578828   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1578829   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1578830   +      end;
MPRINT(EM_DIAGRAM):   end;
1578831   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1578832   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1578833   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1578834   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1578835   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1578836   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1578837   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1578838   +         end;
MPRINT(EM_DIAGRAM):   end;
1578839   +      end;
MPRINT(EM_DIAGRAM):   end;
1578840   +   end;
MPRINT(EM_DIAGRAM):   end;
1578841   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1578842   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1578843   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1578844   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1578845   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1578846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1578847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578848   +   end;
MPRINT(EM_DIAGRAM):   end;
1578849   +end;
MPRINT(EM_DIAGRAM):   end;
1578850   +
1578851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578852   +*** Checking missing input Interval
1578853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1578854   +
1578855   +IF NMISS(
1578856   +   AcceptedCmpTotal ,
1578857   +   Age ,
1578858   +   Frq ,
1578859   +   Income ,
1578860   +   Kidhome ,
1578861   +   Mnt ,
1578862   +   MntFishProducts ,
1578863   +   MntFruits ,
1578864   +   MntGoldProds ,
1578865   +   MntMeatProducts ,
1578866   +   MntSweetProducts ,
1578867   +   MntWines ,
1578868   +   MonthsAsCustomer ,
1578869   +   NumCatalogPurchases ,
1578870   +   NumDealsPurchases ,
1578871   +   NumDistPurchases ,
1578872   +   NumStorePurchases ,
1578873   +   NumWebPurchases ,
1578874   +   NumWebVisitsMonth ,
1578875   +   RFMstat ,
1578876   +   RMntFrq ,
1578877   +   Recency ,
1578878   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1578879   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1578880   +
1578881   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1578882   +END;
MPRINT(EM_DIAGRAM):   END;
1578883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578884   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1578885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578886   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1578887   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1578888   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1578889   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1578890   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1578891   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1578892   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1578893   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1578894   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1578895   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1578896   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1578897   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1578898   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1578899   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1578900   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1578901   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1578902   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1578903   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1578904   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1578905   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1578906   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1578907   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1578908   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1578909   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1578910   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1578911   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1578912   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1578913   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1578914   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1578915   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1578916   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1578917   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1578918   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1578919   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1578920   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1578921   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1578922   +END;
MPRINT(EM_DIAGRAM):   END;
1578923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1578924   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1578925   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1578926   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1578927   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1578928   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1578929   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1578930   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1578931   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1578932   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1578933   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1578934   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1578935   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1578936   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1578937   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1578938   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1578939   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1578940   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1578941   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1578942   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1578943   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1578944   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1578945   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1578946   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1578947   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1578948   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1578949   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1578950   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1578951   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1578952   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1578953   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1578954   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1578955   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1578956   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1578957   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1578958   +   ELSE S_NumCatalogPurchases
1578959   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1578960   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1578961   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1578962   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1578963   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1578964   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1578965   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1578966   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1578967   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1578968   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1578969   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1578970   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1578971   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1578972   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1578973   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1578974   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1578975   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1578976   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1578977   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1578978   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1578979   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1578980   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1578981   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1578982   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1578983   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1578984   +END;
MPRINT(EM_DIAGRAM):   END;
1578985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578986   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1578987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578989   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1578990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578992   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1578993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1578994   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1578995   +   H11  =     0.29826703645426 * S_AcceptedCmpTotal  +     0.15697971691903 *
1578996   +        S_Age  +     0.23461282570638 * S_Frq  +     1.19102937406401 *
1578997   +        S_Income  +    -1.07733254688396 * S_Kidhome
1578998   +          +    -0.33583261729212 * S_Mnt  +    -0.11888436193301 *
1578999   +        S_MntFishProducts  +    -0.05814254496984 * S_MntFruits
1579000   +          +    -0.04858745452587 * S_MntGoldProds  +      0.3667645995656 *
1579001   +        S_MntMeatProducts  +    -0.21988876501204 * S_MntSweetProducts
1579002   +          +    -0.61059390525054 * S_MntWines  +     0.00092084314614 *
1579003   +        S_MonthsAsCustomer  +     0.54496187286849 * S_NumCatalogPurchases
1579004   +          +     0.34431711603003 * S_NumDealsPurchases
1579005   +          +      0.7134923732819 * S_NumDistPurchases
1579006   +          +     0.05901777448936 * S_NumStorePurchases
1579007   +          +    -0.19803026616936 * S_NumWebPurchases
1579008   +          +     1.34202846183228 * S_NumWebVisitsMonth
1579009   +          +    -0.00966063174687 * S_RFMstat  +      1.1682763791158 *
1579010   +        S_RMntFrq  +     -1.5783614311206 * S_Recency
1579011   +          +    -0.86615007185598 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29826703645426 * S_AcceptedCmpTotal + 0.15697971691903 * S_Age +
0.23461282570638 * S_Frq + 1.19102937406401 * S_Income + -1.07733254688396 * S_Kidhome +
-0.33583261729212 * S_Mnt + -0.11888436193301 * S_MntFishProducts + -0.05814254496984 *
S_MntFruits + -0.04858745452587 * S_MntGoldProds + 0.3667645995656 * S_MntMeatProducts +
-0.21988876501204 * S_MntSweetProducts + -0.61059390525054 * S_MntWines + 0.00092084314614 *
S_MonthsAsCustomer + 0.54496187286849 * S_NumCatalogPurchases + 0.34431711603003 *
S_NumDealsPurchases + 0.7134923732819 * S_NumDistPurchases + 0.05901777448936 *
S_NumStorePurchases + -0.19803026616936 * S_NumWebPurchases + 1.34202846183228 *
S_NumWebVisitsMonth + -0.00966063174687 * S_RFMstat + 1.1682763791158 * S_RMntFrq +
-1.5783614311206 * S_Recency + -0.86615007185598 * S_Teenhome ;
1579012   +   H12  =     0.31539636502876 * S_AcceptedCmpTotal  +    -0.09120698189101 *
1579013   +        S_Age  +    -0.16047371294111 * S_Frq  +     0.10332544707897 *
1579014   +        S_Income  +    -0.00255151514163 * S_Kidhome
1579015   +          +     -0.6244795214846 * S_Mnt  +    -0.04456914029634 *
1579016   +        S_MntFishProducts  +    -0.25034302469802 * S_MntFruits
1579017   +          +    -0.01382048416477 * S_MntGoldProds  +     0.62771849929232 *
1579018   +        S_MntMeatProducts  +    -0.10544462075559 * S_MntSweetProducts
1579019   +          +    -1.14278622972432 * S_MntWines  +    -0.05003914800645 *
1579020   +        S_MonthsAsCustomer  +      0.6710737019024 * S_NumCatalogPurchases
1579021   +          +     0.45752917132477 * S_NumDealsPurchases
1579022   +          +      0.1559495599293 * S_NumDistPurchases
1579023   +          +    -0.33402213718695 * S_NumStorePurchases
1579024   +          +    -0.39372662704902 * S_NumWebPurchases
1579025   +          +     0.52518189694069 * S_NumWebVisitsMonth
1579026   +          +     0.20792116189174 * S_RFMstat  +     0.70812503749061 *
1579027   +        S_RMntFrq  +    -0.55958127169883 * S_Recency
1579028   +          +     -0.0258290856513 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31539636502876 * S_AcceptedCmpTotal + -0.09120698189101 * S_Age
+ -0.16047371294111 * S_Frq + 0.10332544707897 * S_Income + -0.00255151514163 * S_Kidhome +
-0.6244795214846 * S_Mnt + -0.04456914029634 * S_MntFishProducts + -0.25034302469802 *
S_MntFruits + -0.01382048416477 * S_MntGoldProds + 0.62771849929232 * S_MntMeatProducts +
-0.10544462075559 * S_MntSweetProducts + -1.14278622972432 * S_MntWines + -0.05003914800645 *
S_MonthsAsCustomer + 0.6710737019024 * S_NumCatalogPurchases + 0.45752917132477 *
S_NumDealsPurchases + 0.1559495599293 * S_NumDistPurchases + -0.33402213718695 *
S_NumStorePurchases + -0.39372662704902 * S_NumWebPurchases + 0.52518189694069 *
S_NumWebVisitsMonth + 0.20792116189174 * S_RFMstat + 0.70812503749061 * S_RMntFrq +
-0.55958127169883 * S_Recency + -0.0258290856513 * S_Teenhome ;
1579029   +   H11  = H11  +    -0.25971995423182 * AcceptedCmp10
1579030   +          +    -0.69514628752614 * AcceptedCmp20  +    -0.58018580299701 *
1579031   +        AcceptedCmp30  +    -0.51765902369518 * AcceptedCmp40
1579032   +          +    -0.28865447081321 * AcceptedCmp50  +    -0.24274935814707 *
1579033   +        Complain0  +     0.22896253328668 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25971995423182 * AcceptedCmp10 + -0.69514628752614 *
AcceptedCmp20 + -0.58018580299701 * AcceptedCmp30 + -0.51765902369518 * AcceptedCmp40 +
-0.28865447081321 * AcceptedCmp50 + -0.24274935814707 * Complain0 + 0.22896253328668 *
HigherEducationBinary0 ;
1579034   +   H12  = H12  +    -0.36422014721577 * AcceptedCmp10
1579035   +          +    -0.33935224236696 * AcceptedCmp20  +    -0.02769341136535 *
1579036   +        AcceptedCmp30  +     0.00249827590135 * AcceptedCmp40
1579037   +          +    -0.12215452407246 * AcceptedCmp50  +    -0.06120770811057 *
1579038   +        Complain0  +    -0.17583398868314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36422014721577 * AcceptedCmp10 + -0.33935224236696 *
AcceptedCmp20 + -0.02769341136535 * AcceptedCmp30 + 0.00249827590135 * AcceptedCmp40 +
-0.12215452407246 * AcceptedCmp50 + -0.06120770811057 * Complain0 + -0.17583398868314 *
HigherEducationBinary0 ;
1579039   +   H11  = H11  +     0.04224544798856 * Education2n_Cycle
1579040   +          +     0.10277173896375 * EducationBasic  +    -0.09701911853138 *
1579041   +        EducationGraduation  +    -0.33241802819869 * EducationMaster
1579042   +          +     0.46710555357393 * Marital_StatusDivorced
1579043   +          +    -1.27560428667174 * Marital_StatusMarried
1579044   +          +      1.3147344073121 * Marital_StatusSingle
1579045   +          +    -0.94608038425304 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04224544798856 * Education2n_Cycle + 0.10277173896375 *
EducationBasic + -0.09701911853138 * EducationGraduation + -0.33241802819869 * EducationMaster
+ 0.46710555357393 * Marital_StatusDivorced + -1.27560428667174 * Marital_StatusMarried +
1.3147344073121 * Marital_StatusSingle + -0.94608038425304 * Marital_StatusTogether ;
1579046   +   H12  = H12  +     0.04163481507152 * Education2n_Cycle
1579047   +          +    -0.00016575189413 * EducationBasic  +     0.02172522774318 *
1579048   +        EducationGraduation  +     0.00777311406141 * EducationMaster
1579049   +          +     0.07422027097612 * Marital_StatusDivorced
1579050   +          +     0.00271855575037 * Marital_StatusMarried
1579051   +          +    -0.00749566028051 * Marital_StatusSingle
1579052   +          +    -0.02405151242932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04163481507152 * Education2n_Cycle + -0.00016575189413 *
EducationBasic + 0.02172522774318 * EducationGraduation + 0.00777311406141 * EducationMaster +
0.07422027097612 * Marital_StatusDivorced + 0.00271855575037 * Marital_StatusMarried +
-0.00749566028051 * Marital_StatusSingle + -0.02405151242932 * Marital_StatusTogether ;
1579053   +   H11  =    -2.08482511384401 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08482511384401 + H11 ;
1579054   +   H12  =    -0.67114363009913 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67114363009913 + H12 ;
1579055   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1579056   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1579057   +END;
MPRINT(EM_DIAGRAM):   END;
1579058   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1579059   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1579060   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1579061   +END;
MPRINT(EM_DIAGRAM):   END;
1579062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1579063   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1579064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1579065   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1579066   +   P_DepVar1  =     5.63818801183109 * H11  +     6.13534906030496 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63818801183109 * H11 + 6.13534906030496 * H12 ;
1579067   +   P_DepVar1  =     3.21441657896649 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.21441657896649 + P_DepVar1 ;
1579068   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1579069   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1579070   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1579071   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1579072   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1579073   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1579074   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1579075   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1579076   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1579077   +END;
MPRINT(EM_DIAGRAM):   END;
1579078   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1579079   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1579080   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1579081   +END;
MPRINT(EM_DIAGRAM):   END;
1579082   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1579083   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1579084   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1579085   +END;
MPRINT(EM_DIAGRAM):   END;
1579086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1579087   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1579088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1579089   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1579090   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1579091   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1579092   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1579093   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1579094   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1579095   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1579096   +END;
MPRINT(EM_DIAGRAM):   END;
1579097   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1579098   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1579099   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1579100   +drop
1579101   +H11
1579102   +H12
1579103   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1579104   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1579105    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1579106    quit;
1579107    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1579108    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1579109    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1579110    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1579111    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1579112    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579113    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1579114    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579115    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579116    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1579117    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579118    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579119    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1579120    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1579121    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1579122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579123    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1579124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1579125    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1579126    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579128    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1579129    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1579130    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579131    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579132    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1579133    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1579133  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.
 
1579134    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579135    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1579136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579137    filename _pref
1579137  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1579138    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1579139    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1579140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1579141   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1579142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1579143   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1579144   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1579145   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1579146    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1579147    quit;
1579148    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1579149    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1579150    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1579151    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1579152    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1579153    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579154    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1579155    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579156    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579157    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1579158    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579159    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579160    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1579161    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1579162    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1579163    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579164    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1579165    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1579166    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1579167    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579168    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579169    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1579170    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1579171    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579172    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579173    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1579174    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1579174  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1579175    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579176    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1579177    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579178    filename _pref
1579178  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1579179    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1579180    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1579181   +
1579182   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1579183   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1579183  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1579184   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1579185   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1579186   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1579187   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1579188   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1579189    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1579190    quit;
1579191    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1579192    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1579193    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1579194    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1579195    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1579196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579197    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1579198    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579199    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579200    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1579201    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579202    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579203    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1579204    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1579205    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1579206    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579207    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1579208    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579209    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1579210    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579212    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1579213    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1579214    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579215    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579216    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1579217    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1579217  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1579218    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579219    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1579220    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579221    filename _pref
1579221  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1579222    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1579223    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1579224   +
1579225   +
1579226   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1579227   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1579228   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1579229   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1579230   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1579231   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1579232   +
1579233   +
1579234   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1579235   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1579236   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1579237   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1579238   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1579239   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1579240   +
1579241   +
1579242   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1579243   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1579244   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1579245   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1579246   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1579247   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1579248   +
1579249   +
1579250   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1579251   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1579252   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1579253   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1579254   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1579255   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1579256   +
1579257   +
1579258   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1579259   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1579260   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1579261   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1579262   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1579263   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1579264   +
1579265   +
1579266   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1579267   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1579268   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1579269   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1579270   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1579271   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1579272   +
1579273   +
1579274   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1579275   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1579276   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1579277   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1579278   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1579279   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1579280   +
1579281   +
1579282   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1579283   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1579284   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1579285   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1579286   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1579287   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1579288   +if
1579289   +_FILTERNORM1 not in ( '.')
1579290   + and
1579291   +_FILTERNORM2 not in ( '.')
1579292   + and
1579293   +_FILTERNORM3 not in ( '.')
1579294   + and
1579295   +_FILTERNORM4 not in ( '.')
1579296   + and
1579297   +_FILTERNORM5 not in ( '.')
1579298   + and
1579299   +_FILTERNORM6 not in ( '.')
1579300   + and
1579301   +_FILTERNORM7 not in ( ' ')
1579302   + and
1579303   +_FILTERNORM8 not in ( ' ')
1579304   +and
1579305   +( Dt_Customer ne .)
1579306   +and ( Income ne . and (Income<=107000))
1579307   +and ( Kidhome ne .)
1579308   +and ( MntFishProducts ne .)
1579309   +and ( MntFruits ne .)
1579310   +and ( MntGoldProds ne .)
1579311   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1579312   +and ( MntSweetProducts ne .)
1579313   +and ( MntWines ne .)
1579314   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1579315   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1579316   +and ( NumStorePurchases ne .)
1579317   +and ( NumWebPurchases ne .)
1579318   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1579319   +and ( Recency ne .)
1579320   +and ( Teenhome ne .)
1579321   +and ( Year_Birth ne .)
1579322   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1579323   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1579324   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1579325   +end;
MPRINT(EM_DIAGRAM):   end;
1579326   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1579327   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1579328    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1579329    quit;
1579330    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1579331    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1579332    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1579333    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1579334    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1579335    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579336    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1579337    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579339    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1579340    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579341    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579342    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1579343    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1579344    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1579345    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579346    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1579347    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1579348    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1579349    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579351    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1579352    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1579353    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1579354    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579355    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1579356    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1579356  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1579357    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579358    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1579359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1579360    %macro varDept(fcmpdata=,id=);
1579361    %global nobs&id scoreFlag&id;
1579362    %let scoreFlag&id = 0;
1579363    %if &id=1 or ^&fcmpStart %then %do;
1579364    proc sort data=&fcmpdata out=_temp&id nodupkey;
1579365    by NAME;
1579366    where id=&id and LHS in( %let j=1;
1579367    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1579368    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1579369    "&var" %let j = %eval(&j+1);
1579370    %end;
1579371    );
1579372    run;
1579373    %let dsid = %sysfunc(open(_temp&id));
1579374    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1579375    %let dsid = %sysfunc(close(&dsid));
1579376    %if &&nobs&id %then %do;
1579377    %let scoreFlag&id = 1;
1579378    %let fcmpStart = 1;
1579379    %end;
1579380    %else %let fcmpStart = 0;
1579381    %end;
1579382    %else %do;
1579383    proc sort data=&fcmpdata out=_tempid;
1579384    where id=&id;
1579385    by LHS;
1579386    run;
1579387    %let dsid = %sysfunc(open(_tempid));
1579388    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1579389    %let dsid = %sysfunc(close(&dsid));
1579390    %if ^&&nobs&id %then %do;
1579391    proc datasets lib=work nolist;
1579392    delete _tempid;
1579393    run;
1579394    quit;
1579395    %end;
1579396    %else %do;
1579397    data _tempAll;
1579398    set %let j=%eval(&id-1);
1579399    %do x=1 %to &j;
1579400    %if &&nobs&x %then %do;
1579401    _temp&x %end;
1579402    %end;
1579403    ;
1579404    run;
1579405    proc sql;
1579406    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1579406  ! work._tempid p2 where p.name=p2.lhs;
1579407    quit;
1579408    data _temp&id;
1579409    set _temp&id;
1579410    where LHS ne '' and NAME ne '' and Node ne '';
1579411    run;
1579412    proc datasets lib=work nolist;
1579413    delete _tempAll;
1579414    run;
1579415    %let dsid = %sysfunc(open(_temp&id));
1579416    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1579417    %let dsid = %sysfunc(close(&dsid));
1579418    %if ^&&nobs&id %then %do;
1579419    proc datasets lib=work nolist;
1579420    delete _temp&id;
1579421    run;
1579422    quit;
1579423    %end;
1579424    %else %do;
1579425    %let scoreFlag&id = 1;
1579426    data _temp&id;
1579427    set _temp&id;
1579428    where LHS ne NAME and node ne '';
1579429    run;
1579430    %let dsid = %sysfunc(open(_temp&id));
1579431    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1579432    %let dsid = %sysfunc(close(&dsid));
1579433    %if ^&&nobs&id %then %do;
1579434    proc datasets lib=work nolist;
1579435    delete _temp&id;
1579436    run;
1579437    quit;
1579438    %end;
1579439    %else %do;
1579440    proc sort data=_temp&id nodupkey;
1579441    by LHS NAME;
1579442    run;
1579443    %end;
1579444    %end;
1579445    %end;
1579446    %end;
1579447    %mend varDept;
1579448    %macro optCode(outdata=fcmpdata);
1579449    %global fcmpStart;
1579450    %let fcmpStart = 0;
1579451    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1579452    %let NumNodes=9;
1579453    %do k=1 %to &NumNodes;
1579454    %vardept(fcmpdata=&outdata, id=&k);
1579455    %end;
1579456    %mend optCode;
1579457    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1579458    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1579459    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1579460    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1579461    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579462    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1579463    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1579464    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1579465    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579466    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1579467    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1579467  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1579468    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579469    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1579470    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1579471    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1579472    filename _pref
1579472  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1579473    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1579474    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1579475   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1579476   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1579477   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1579478   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1579479   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1579480   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1579481   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1579482   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1579483   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1579484   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1579485   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1579486   +LENGTH _WARN_ $4
1579487   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1579488   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1579489   +
1579490   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1579491   +
1579492   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1579493   +
1579494   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1579495   +
1579496   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1579497   +
1579498   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1579499   +
1579500   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1579501   +
1579502   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1579503   +
1579504   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1579505   +
1579506   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1579507   +
1579508   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1579509   +
1579510   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1579511   +
1579512   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1579513   +
1579514   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1579515   +
1579516   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1579517   +
1579518   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1579519   +
1579520   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1579521   +
1579522   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1579523   +
1579524   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1579525   +
1579526   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1579527   +
1579528   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1579529   +
1579530   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1579531   +
1579532   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1579533   +
1579534   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1579535   +
1579536   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1579537   +
1579538   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1579539   +
1579540   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1579541   +
1579542   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1579543   +
1579544   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1579545   +
1579546   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1579547   +
1579548   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1579549   +
1579550   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1579551   +
1579552   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1579553   +
1579554   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1579555   +
1579556   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1579557   +
1579558   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1579559   +
1579560   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1579561   +
1579562   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1579563   +
1579564   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1579565   +
1579566   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1579567   +
1579568   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1579569   +
1579570   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1579571   +
1579572   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1579573   +
1579574   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1579575   +
1579576   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1579577   +
1579578   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1579579   +
1579580   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1579581   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1579582   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1579583   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1579584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1579585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579586   +end;
MPRINT(EM_DIAGRAM):   end;
1579587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1579588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1579589   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1579590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1579591   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1579592   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1579593   +   end;
MPRINT(EM_DIAGRAM):   end;
1579594   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1579595   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1579596   +   end;
MPRINT(EM_DIAGRAM):   end;
1579597   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1579598   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1579599   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1579600   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579601   +   end;
MPRINT(EM_DIAGRAM):   end;
1579602   +end;
MPRINT(EM_DIAGRAM):   end;
1579603   +
1579604   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1579605   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1579606   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1579607   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1579608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1579609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579610   +end;
MPRINT(EM_DIAGRAM):   end;
1579611   +else do;
MPRINT(EM_DIAGRAM):   else do;
1579612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1579613   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1579614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1579615   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1579616   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1579617   +   end;
MPRINT(EM_DIAGRAM):   end;
1579618   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1579619   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1579620   +   end;
MPRINT(EM_DIAGRAM):   end;
1579621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1579622   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1579623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1579624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579625   +   end;
MPRINT(EM_DIAGRAM):   end;
1579626   +end;
MPRINT(EM_DIAGRAM):   end;
1579627   +
1579628   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1579629   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1579630   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1579631   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1579632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1579633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579634   +end;
MPRINT(EM_DIAGRAM):   end;
1579635   +else do;
MPRINT(EM_DIAGRAM):   else do;
1579636   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1579637   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1579638   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1579639   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1579640   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1579641   +   end;
MPRINT(EM_DIAGRAM):   end;
1579642   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1579643   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1579644   +   end;
MPRINT(EM_DIAGRAM):   end;
1579645   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1579646   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1579647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1579648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579649   +   end;
MPRINT(EM_DIAGRAM):   end;
1579650   +end;
MPRINT(EM_DIAGRAM):   end;
1579651   +
1579652   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1579653   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1579654   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1579655   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1579656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1579657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579658   +end;
MPRINT(EM_DIAGRAM):   end;
1579659   +else do;
MPRINT(EM_DIAGRAM):   else do;
1579660   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1579661   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1579662   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1579663   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1579664   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1579665   +   end;
MPRINT(EM_DIAGRAM):   end;
1579666   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1579667   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1579668   +   end;
MPRINT(EM_DIAGRAM):   end;
1579669   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1579670   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1579671   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1579672   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579673   +   end;
MPRINT(EM_DIAGRAM):   end;
1579674   +end;
MPRINT(EM_DIAGRAM):   end;
1579675   +
1579676   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1579677   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1579678   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1579679   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1579680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1579681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579682   +end;
MPRINT(EM_DIAGRAM):   end;
1579683   +else do;
MPRINT(EM_DIAGRAM):   else do;
1579684   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1579685   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1579686   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1579687   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1579688   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1579689   +   end;
MPRINT(EM_DIAGRAM):   end;
1579690   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1579691   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1579692   +   end;
MPRINT(EM_DIAGRAM):   end;
1579693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1579694   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1579695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1579696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579697   +   end;
MPRINT(EM_DIAGRAM):   end;
1579698   +end;
MPRINT(EM_DIAGRAM):   end;
1579699   +
1579700   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1579701   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1579702   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1579703   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1579704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1579705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579706   +end;
MPRINT(EM_DIAGRAM):   end;
1579707   +else do;
MPRINT(EM_DIAGRAM):   else do;
1579708   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1579709   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1579710   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1579711   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1579712   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1579713   +   end;
MPRINT(EM_DIAGRAM):   end;
1579714   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1579715   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1579716   +   end;
MPRINT(EM_DIAGRAM):   end;
1579717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1579718   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1579719   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1579720   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579721   +   end;
MPRINT(EM_DIAGRAM):   end;
1579722   +end;
MPRINT(EM_DIAGRAM):   end;
1579723   +
1579724   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1579725   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1579726   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1579727   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1579728   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1579729   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579730   +end;
MPRINT(EM_DIAGRAM):   end;
1579731   +else do;
MPRINT(EM_DIAGRAM):   else do;
1579732   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1579733   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1579734   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1579735   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1579736   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1579737   +   end;
MPRINT(EM_DIAGRAM):   end;
1579738   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1579739   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1579740   +   end;
MPRINT(EM_DIAGRAM):   end;
1579741   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1579742   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1579743   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1579744   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579745   +   end;
MPRINT(EM_DIAGRAM):   end;
1579746   +end;
MPRINT(EM_DIAGRAM):   end;
1579747   +
1579748   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1579749   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1579750   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1579751   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1579752   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1579753   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1579754   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1579755   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1579756   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1579757   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1579758   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1579759   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1579760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1579761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579762   +end;
MPRINT(EM_DIAGRAM):   end;
1579763   +else do;
MPRINT(EM_DIAGRAM):   else do;
1579764   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1579765   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1579766   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1579767   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1579768   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1579769   +   end;
MPRINT(EM_DIAGRAM):   end;
1579770   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1579771   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1579772   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1579773   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1579774   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1579775   +   end;
MPRINT(EM_DIAGRAM):   end;
1579776   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1579777   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1579778   +   end;
MPRINT(EM_DIAGRAM):   end;
1579779   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1579780   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1579781   +   end;
MPRINT(EM_DIAGRAM):   end;
1579782   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1579783   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1579784   +   end;
MPRINT(EM_DIAGRAM):   end;
1579785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1579786   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1579787   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1579788   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1579789   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1579790   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1579791   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579792   +   end;
MPRINT(EM_DIAGRAM):   end;
1579793   +end;
MPRINT(EM_DIAGRAM):   end;
1579794   +
1579795   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1579796   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1579797   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1579798   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1579799   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1579800   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1579801   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1579802   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1579803   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1579804   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1579805   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1579806   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1579807   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1579808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1579809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579810   +end;
MPRINT(EM_DIAGRAM):   end;
1579811   +else do;
MPRINT(EM_DIAGRAM):   else do;
1579812   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1579813   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1579814   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1579815   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1579816   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1579817   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1579818   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1579819   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1579820   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1579821   +         end;
MPRINT(EM_DIAGRAM):   end;
1579822   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1579823   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1579824   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1579825   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1579826   +            end;
MPRINT(EM_DIAGRAM):   end;
1579827   +         end;
MPRINT(EM_DIAGRAM):   end;
1579828   +      end;
MPRINT(EM_DIAGRAM):   end;
1579829   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1579830   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1579831   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1579832   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1579833   +         end;
MPRINT(EM_DIAGRAM):   end;
1579834   +      end;
MPRINT(EM_DIAGRAM):   end;
1579835   +   end;
MPRINT(EM_DIAGRAM):   end;
1579836   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1579837   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1579838   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1579839   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1579840   +      end;
MPRINT(EM_DIAGRAM):   end;
1579841   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1579842   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1579843   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1579844   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1579845   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1579846   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1579847   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1579848   +         end;
MPRINT(EM_DIAGRAM):   end;
1579849   +      end;
MPRINT(EM_DIAGRAM):   end;
1579850   +   end;
MPRINT(EM_DIAGRAM):   end;
1579851   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1579852   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1579853   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1579854   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1579855   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1579856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1579857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579858   +   end;
MPRINT(EM_DIAGRAM):   end;
1579859   +end;
MPRINT(EM_DIAGRAM):   end;
1579860   +
1579861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1579862   +*** Checking missing input Interval
1579863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1579864   +
1579865   +IF NMISS(
1579866   +   AcceptedCmpTotal ,
1579867   +   Age ,
1579868   +   Frq ,
1579869   +   Income ,
1579870   +   Kidhome ,
1579871   +   Mnt ,
1579872   +   MntFishProducts ,
1579873   +   MntFruits ,
1579874   +   MntGoldProds ,
1579875   +   MntMeatProducts ,
1579876   +   MntSweetProducts ,
1579877   +   MntWines ,
1579878   +   MonthsAsCustomer ,
1579879   +   NumCatalogPurchases ,
1579880   +   NumDealsPurchases ,
1579881   +   NumDistPurchases ,
1579882   +   NumStorePurchases ,
1579883   +   NumWebPurchases ,
1579884   +   NumWebVisitsMonth ,
1579885   +   RFMstat ,
1579886   +   RMntFrq ,
1579887   +   Recency ,
1579888   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1579889   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1579890   +
1579891   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1579892   +END;
MPRINT(EM_DIAGRAM):   END;
1579893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1579894   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1579895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1579896   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1579897   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1579898   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1579899   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1579900   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1579901   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1579902   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1579903   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1579904   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1579905   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1579906   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1579907   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1579908   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1579909   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1579910   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1579911   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1579912   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1579913   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1579914   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1579915   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1579916   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1579917   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1579918   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1579919   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1579920   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1579921   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1579922   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1579923   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1579924   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1579925   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1579926   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1579927   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1579928   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1579929   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1579930   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1579931   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1579932   +END;
MPRINT(EM_DIAGRAM):   END;
1579933   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1579934   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1579935   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1579936   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1579937   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1579938   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1579939   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1579940   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1579941   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1579942   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1579943   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1579944   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1579945   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1579946   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1579947   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1579948   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1579949   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1579950   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1579951   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1579952   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1579953   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1579954   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1579955   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1579956   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1579957   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1579958   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1579959   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1579960   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1579961   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1579962   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1579963   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1579964   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1579965   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1579966   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1579967   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1579968   +   ELSE S_NumCatalogPurchases
1579969   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1579970   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1579971   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1579972   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1579973   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1579974   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1579975   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1579976   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1579977   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1579978   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1579979   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1579980   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1579981   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1579982   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1579983   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1579984   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1579985   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1579986   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1579987   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1579988   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1579989   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1579990   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1579991   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1579992   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1579993   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1579994   +END;
MPRINT(EM_DIAGRAM):   END;
1579995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1579996   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1579997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1579998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1579999   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1580000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1580001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1580002   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1580003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1580004   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1580005   +   H11  =     0.82431393325232 * S_AcceptedCmpTotal  +    -0.24437546316664 *
1580006   +        S_Age  +     0.04980963495807 * S_Frq  +     0.45407850108884 *
1580007   +        S_Income  +     0.49557647195287 * S_Kidhome
1580008   +          +     -0.1165553674999 * S_Mnt  +     0.01222533616219 *
1580009   +        S_MntFishProducts  +    -0.41115048548782 * S_MntFruits
1580010   +          +    -0.08036993359755 * S_MntGoldProds  +     0.96221240785571 *
1580011   +        S_MntMeatProducts  +    -0.16135957564319 * S_MntSweetProducts
1580012   +          +    -0.90767817872688 * S_MntWines  +     0.08646361465438 *
1580013   +        S_MonthsAsCustomer  +     0.91553292240934 * S_NumCatalogPurchases
1580014   +          +     1.29965538748336 * S_NumDealsPurchases
1580015   +          +     0.16818868463142 * S_NumDistPurchases
1580016   +          +    -0.64507792847411 * S_NumStorePurchases
1580017   +          +    -0.52243329275268 * S_NumWebPurchases
1580018   +          +     1.48521107923182 * S_NumWebVisitsMonth
1580019   +          +     0.63592400348078 * S_RFMstat  +     0.20527412289882 *
1580020   +        S_RMntFrq  +    -0.98906722125244 * S_Recency
1580021   +          +    -0.03988070661387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.82431393325232 * S_AcceptedCmpTotal + -0.24437546316664 * S_Age
+ 0.04980963495807 * S_Frq + 0.45407850108884 * S_Income + 0.49557647195287 * S_Kidhome +
-0.1165553674999 * S_Mnt + 0.01222533616219 * S_MntFishProducts + -0.41115048548782 *
S_MntFruits + -0.08036993359755 * S_MntGoldProds + 0.96221240785571 * S_MntMeatProducts +
-0.16135957564319 * S_MntSweetProducts + -0.90767817872688 * S_MntWines + 0.08646361465438 *
S_MonthsAsCustomer + 0.91553292240934 * S_NumCatalogPurchases + 1.29965538748336 *
S_NumDealsPurchases + 0.16818868463142 * S_NumDistPurchases + -0.64507792847411 *
S_NumStorePurchases + -0.52243329275268 * S_NumWebPurchases + 1.48521107923182 *
S_NumWebVisitsMonth + 0.63592400348078 * S_RFMstat + 0.20527412289882 * S_RMntFrq +
-0.98906722125244 * S_Recency + -0.03988070661387 * S_Teenhome ;
1580022   +   H12  =    -0.85457733338805 * S_AcceptedCmpTotal  +    -0.10908740830879 *
1580023   +        S_Age  +     0.23871710798266 * S_Frq  +     -0.4461298250204 *
1580024   +        S_Income  +       0.536631748871 * S_Kidhome
1580025   +          +     0.17002278092324 * S_Mnt  +       0.920464590856 *
1580026   +        S_MntFishProducts  +    -0.00903258985331 * S_MntFruits
1580027   +          +    -0.17279327024019 * S_MntGoldProds  +    -1.54160736881216 *
1580028   +        S_MntMeatProducts  +     -0.4648913726402 * S_MntSweetProducts
1580029   +          +     0.57143386515411 * S_MntWines  +     0.24142041613871 *
1580030   +        S_MonthsAsCustomer  +    -0.83796913244958 * S_NumCatalogPurchases
1580031   +          +    -0.63220849663702 * S_NumDealsPurchases
1580032   +          +    -0.03517440588176 * S_NumDistPurchases
1580033   +          +     0.90435516280473 * S_NumStorePurchases
1580034   +          +     1.02540776095101 * S_NumWebPurchases
1580035   +          +    -1.28191505341115 * S_NumWebVisitsMonth
1580036   +          +    -0.11378266924649 * S_RFMstat  +     0.03807061592798 *
1580037   +        S_RMntFrq  +     1.40016934350616 * S_Recency
1580038   +          +     0.35867691999281 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.85457733338805 * S_AcceptedCmpTotal + -0.10908740830879 * S_Age
+ 0.23871710798266 * S_Frq + -0.4461298250204 * S_Income + 0.536631748871 * S_Kidhome +
0.17002278092324 * S_Mnt + 0.920464590856 * S_MntFishProducts + -0.00903258985331 *
S_MntFruits + -0.17279327024019 * S_MntGoldProds + -1.54160736881216 * S_MntMeatProducts +
-0.4648913726402 * S_MntSweetProducts + 0.57143386515411 * S_MntWines + 0.24142041613871 *
S_MonthsAsCustomer + -0.83796913244958 * S_NumCatalogPurchases + -0.63220849663702 *
S_NumDealsPurchases + -0.03517440588176 * S_NumDistPurchases + 0.90435516280473 *
S_NumStorePurchases + 1.02540776095101 * S_NumWebPurchases + -1.28191505341115 *
S_NumWebVisitsMonth + -0.11378266924649 * S_RFMstat + 0.03807061592798 * S_RMntFrq +
1.40016934350616 * S_Recency + 0.35867691999281 * S_Teenhome ;
1580039   +   H13  =    -0.20214613583172 * S_AcceptedCmpTotal  +    -0.08485650033326 *
1580040   +        S_Age  +    -0.18099568987856 * S_Frq  +    -0.94988777941912 *
1580041   +        S_Income  +     0.45173611630992 * S_Kidhome
1580042   +          +     0.16255145875039 * S_Mnt  +     -0.2106658262114 *
1580043   +        S_MntFishProducts  +     0.11411813647871 * S_MntFruits
1580044   +          +     0.05776635958358 * S_MntGoldProds  +    -0.45006986702929 *
1580045   +        S_MntMeatProducts  +     0.27595999471005 * S_MntSweetProducts
1580046   +          +     0.30172600965104 * S_MntWines  +    -0.28834849513354 *
1580047   +        S_MonthsAsCustomer  +     -0.6157349155467 * S_NumCatalogPurchases
1580048   +          +     0.00572910064772 * S_NumDealsPurchases
1580049   +          +    -0.43545754325176 * S_NumDistPurchases
1580050   +          +     0.12831980635185 * S_NumStorePurchases
1580051   +          +     0.02223697618186 * S_NumWebPurchases
1580052   +          +    -0.56915644226881 * S_NumWebVisitsMonth
1580053   +          +     0.05007568576792 * S_RFMstat  +    -0.30445216337419 *
1580054   +        S_RMntFrq  +     1.48913085892527 * S_Recency
1580055   +          +     0.80884710155772 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.20214613583172 * S_AcceptedCmpTotal + -0.08485650033326 * S_Age
+ -0.18099568987856 * S_Frq + -0.94988777941912 * S_Income + 0.45173611630992 * S_Kidhome +
0.16255145875039 * S_Mnt + -0.2106658262114 * S_MntFishProducts + 0.11411813647871 *
S_MntFruits + 0.05776635958358 * S_MntGoldProds + -0.45006986702929 * S_MntMeatProducts +
0.27595999471005 * S_MntSweetProducts + 0.30172600965104 * S_MntWines + -0.28834849513354 *
S_MonthsAsCustomer + -0.6157349155467 * S_NumCatalogPurchases + 0.00572910064772 *
S_NumDealsPurchases + -0.43545754325176 * S_NumDistPurchases + 0.12831980635185 *
S_NumStorePurchases + 0.02223697618186 * S_NumWebPurchases + -0.56915644226881 *
S_NumWebVisitsMonth + 0.05007568576792 * S_RFMstat + -0.30445216337419 * S_RMntFrq +
1.48913085892527 * S_Recency + 0.80884710155772 * S_Teenhome ;
1580056   +   H11  = H11  +    -0.52086717889535 * AcceptedCmp10
1580057   +          +     0.00550028682004 * AcceptedCmp20  +    -0.87724743468894 *
1580058   +        AcceptedCmp30  +    -0.32959568721062 * AcceptedCmp40
1580059   +          +    -0.13482043919092 * AcceptedCmp50  +     0.06933604016215 *
1580060   +        Complain0  +    -0.50442289088499 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.52086717889535 * AcceptedCmp10 + 0.00550028682004 *
AcceptedCmp20 + -0.87724743468894 * AcceptedCmp30 + -0.32959568721062 * AcceptedCmp40 +
-0.13482043919092 * AcceptedCmp50 + 0.06933604016215 * Complain0 + -0.50442289088499 *
HigherEducationBinary0 ;
1580061   +   H12  = H12  +     0.20328100089168 * AcceptedCmp10
1580062   +          +     0.03943917420904 * AcceptedCmp20  +    -0.31361026104733 *
1580063   +        AcceptedCmp30  +     -0.0942890959605 * AcceptedCmp40
1580064   +          +     1.02715852672516 * AcceptedCmp50  +    -0.02048413740806 *
1580065   +        Complain0  +    -0.01968112719035 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20328100089168 * AcceptedCmp10 + 0.03943917420904 *
AcceptedCmp20 + -0.31361026104733 * AcceptedCmp30 + -0.0942890959605 * AcceptedCmp40 +
1.02715852672516 * AcceptedCmp50 + -0.02048413740806 * Complain0 + -0.01968112719035 *
HigherEducationBinary0 ;
1580066   +   H13  = H13  +     0.16429021243944 * AcceptedCmp10
1580067   +          +     0.56588075626118 * AcceptedCmp20  +     0.43207926875502 *
1580068   +        AcceptedCmp30  +     0.36141171703205 * AcceptedCmp40
1580069   +          +     0.09022955258394 * AcceptedCmp50  +     0.25104408334841 *
1580070   +        Complain0  +    -0.33955733314538 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16429021243944 * AcceptedCmp10 + 0.56588075626118 *
AcceptedCmp20 + 0.43207926875502 * AcceptedCmp30 + 0.36141171703205 * AcceptedCmp40 +
0.09022955258394 * AcceptedCmp50 + 0.25104408334841 * Complain0 + -0.33955733314538 *
HigherEducationBinary0 ;
1580071   +   H11  = H11  +     0.02728610609824 * Education2n_Cycle
1580072   +          +     0.09667850193508 * EducationBasic  +     0.25463002600203 *
1580073   +        EducationGraduation  +    -0.04410148154511 * EducationMaster
1580074   +          +     0.14010081581672 * Marital_StatusDivorced
1580075   +          +     0.03574033044092 * Marital_StatusMarried
1580076   +          +    -0.14272769898675 * Marital_StatusSingle
1580077   +          +    -0.16346346400543 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02728610609824 * Education2n_Cycle + 0.09667850193508 *
EducationBasic + 0.25463002600203 * EducationGraduation + -0.04410148154511 * EducationMaster
+ 0.14010081581672 * Marital_StatusDivorced + 0.03574033044092 * Marital_StatusMarried +
-0.14272769898675 * Marital_StatusSingle + -0.16346346400543 * Marital_StatusTogether ;
1580078   +   H12  = H12  +    -0.18247012906814 * Education2n_Cycle
1580079   +          +     0.29026668916871 * EducationBasic  +    -0.06412041802554 *
1580080   +        EducationGraduation  +     0.03249333625443 * EducationMaster
1580081   +          +    -0.14878433798537 * Marital_StatusDivorced
1580082   +          +     0.14990226067603 * Marital_StatusMarried
1580083   +          +    -0.50903755449357 * Marital_StatusSingle
1580084   +          +     0.20423545450988 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18247012906814 * Education2n_Cycle + 0.29026668916871 *
EducationBasic + -0.06412041802554 * EducationGraduation + 0.03249333625443 * EducationMaster
+ -0.14878433798537 * Marital_StatusDivorced + 0.14990226067603 * Marital_StatusMarried +
-0.50903755449357 * Marital_StatusSingle + 0.20423545450988 * Marital_StatusTogether ;
1580085   +   H13  = H13  +     0.00835518102749 * Education2n_Cycle
1580086   +          +    -0.11705366846147 * EducationBasic  +     0.21923266852082 *
1580087   +        EducationGraduation  +     0.20051442484384 * EducationMaster
1580088   +          +    -0.52568922939912 * Marital_StatusDivorced
1580089   +          +     1.74121506979092 * Marital_StatusMarried
1580090   +          +    -1.16029880777095 * Marital_StatusSingle
1580091   +          +     0.99005497791089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00835518102749 * Education2n_Cycle + -0.11705366846147 *
EducationBasic + 0.21923266852082 * EducationGraduation + 0.20051442484384 * EducationMaster +
-0.52568922939912 * Marital_StatusDivorced + 1.74121506979092 * Marital_StatusMarried +
-1.16029880777095 * Marital_StatusSingle + 0.99005497791089 * Marital_StatusTogether ;
1580092   +   H11  =     -1.1924504292448 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1924504292448 + H11 ;
1580093   +   H12  =      0.3842553583407 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.3842553583407 + H12 ;
1580094   +   H13  =     1.78452931786241 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.78452931786241 + H13 ;
1580095   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1580096   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1580097   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1580098   +END;
MPRINT(EM_DIAGRAM):   END;
1580099   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1580100   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1580101   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1580102   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1580103   +END;
MPRINT(EM_DIAGRAM):   END;
1580104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1580105   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1580106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1580107   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1580108   +   P_DepVar1  =      2.3103575015601 * H11  +    -2.81440392573378 * H12
1580109   +          +    -3.01894159959464 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.3103575015601 * H11 + -2.81440392573378 * H12 +
-3.01894159959464 * H13 ;
1580110   +   P_DepVar1  =    -0.30419422660322 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.30419422660322 + P_DepVar1 ;
1580111   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1580112   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1580113   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1580114   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1580115   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1580116   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1580117   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1580118   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1580119   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1580120   +END;
MPRINT(EM_DIAGRAM):   END;
1580121   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1580122   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1580123   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1580124   +END;
MPRINT(EM_DIAGRAM):   END;
1580125   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1580126   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1580127   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1580128   +END;
MPRINT(EM_DIAGRAM):   END;
1580129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1580130   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1580131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1580132   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1580133   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1580134   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1580135   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1580136   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1580137   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1580138   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1580139   +END;
MPRINT(EM_DIAGRAM):   END;
1580140   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1580141   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1580142   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1580143   +drop
1580144   +H11
1580145   +H12
1580146   +H13
1580147   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1580148   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1580149    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1580150    quit;
1580151    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1580152    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1580153    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1580154    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1580155    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1580156    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580157    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1580158    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580159    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1580160    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1580161    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580163    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1580164    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1580165    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1580166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1580167    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1580168    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1580169    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1580170    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580172    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1580173    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1580174    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580175    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580176    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1580177    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1580177  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.
 
1580178    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580179    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1580180    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1580181    filename _pref
1580181  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1580182    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1580183    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1580184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1580185   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1580186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1580187   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1580188   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1580189   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1580190    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1580191    quit;
1580192    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1580193    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1580194    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1580195    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1580196    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1580197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580198    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1580199    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580200    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580201    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1580202    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1580204    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1580205    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1580206    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1580207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580208    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1580209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1580210    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1580211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580213    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1580214    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1580215    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580216    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1580217    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1580218    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1580218  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1580219    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580220    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1580221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580222    filename _pref
1580222  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1580223    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1580224    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1580225   +
1580226   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1580227   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1580227  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1580228   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1580229   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1580230   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1580231   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1580232   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1580233    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1580234    quit;
1580235    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1580236    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1580237    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1580238    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1580239    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1580240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580241    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1580242    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1580244    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1580245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580247    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1580248    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1580249    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1580250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580251    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1580252    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580253    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1580254    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580256    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1580257    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1580258    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580259    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580260    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1580261    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1580261  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1580262    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580263    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1580264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580265    filename _pref
1580265  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1580266    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1580267    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1580268   +
1580269   +
1580270   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1580271   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1580272   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1580273   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1580274   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1580275   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1580276   +
1580277   +
1580278   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1580279   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1580280   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1580281   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1580282   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1580283   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1580284   +
1580285   +
1580286   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1580287   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1580288   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1580289   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1580290   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1580291   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1580292   +
1580293   +
1580294   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1580295   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1580296   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1580297   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1580298   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1580299   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1580300   +
1580301   +
1580302   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1580303   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1580304   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1580305   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1580306   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1580307   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1580308   +
1580309   +
1580310   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1580311   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1580312   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1580313   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1580314   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1580315   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1580316   +
1580317   +
1580318   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1580319   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1580320   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1580321   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1580322   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1580323   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1580324   +
1580325   +
1580326   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1580327   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1580328   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1580329   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1580330   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1580331   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1580332   +if
1580333   +_FILTERNORM1 not in ( '.')
1580334   + and
1580335   +_FILTERNORM2 not in ( '.')
1580336   + and
1580337   +_FILTERNORM3 not in ( '.')
1580338   + and
1580339   +_FILTERNORM4 not in ( '.')
1580340   + and
1580341   +_FILTERNORM5 not in ( '.')
1580342   + and
1580343   +_FILTERNORM6 not in ( '.')
1580344   + and
1580345   +_FILTERNORM7 not in ( ' ')
1580346   + and
1580347   +_FILTERNORM8 not in ( ' ')
1580348   +and
1580349   +( Dt_Customer ne .)
1580350   +and ( Income ne . and (Income<=107000))
1580351   +and ( Kidhome ne .)
1580352   +and ( MntFishProducts ne .)
1580353   +and ( MntFruits ne .)
1580354   +and ( MntGoldProds ne .)
1580355   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1580356   +and ( MntSweetProducts ne .)
1580357   +and ( MntWines ne .)
1580358   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1580359   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1580360   +and ( NumStorePurchases ne .)
1580361   +and ( NumWebPurchases ne .)
1580362   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1580363   +and ( Recency ne .)
1580364   +and ( Teenhome ne .)
1580365   +and ( Year_Birth ne .)
1580366   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1580367   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1580368   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1580369   +end;
MPRINT(EM_DIAGRAM):   end;
1580370   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1580371   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1580372    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1580373    quit;
1580374    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1580375    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1580376    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1580377    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1580378    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1580379    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1580380    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1580381    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580382    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580383    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1580384    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580385    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580386    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1580387    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1580388    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1580389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1580390    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1580391    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1580392    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1580393    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580394    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1580395    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1580396    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1580397    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1580398    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580399    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1580400    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1580400  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1580401    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580402    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1580403    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580404    %macro varDept(fcmpdata=,id=);
1580405    %global nobs&id scoreFlag&id;
1580406    %let scoreFlag&id = 0;
1580407    %if &id=1 or ^&fcmpStart %then %do;
1580408    proc sort data=&fcmpdata out=_temp&id nodupkey;
1580409    by NAME;
1580410    where id=&id and LHS in( %let j=1;
1580411    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1580412    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1580413    "&var" %let j = %eval(&j+1);
1580414    %end;
1580415    );
1580416    run;
1580417    %let dsid = %sysfunc(open(_temp&id));
1580418    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1580419    %let dsid = %sysfunc(close(&dsid));
1580420    %if &&nobs&id %then %do;
1580421    %let scoreFlag&id = 1;
1580422    %let fcmpStart = 1;
1580423    %end;
1580424    %else %let fcmpStart = 0;
1580425    %end;
1580426    %else %do;
1580427    proc sort data=&fcmpdata out=_tempid;
1580428    where id=&id;
1580429    by LHS;
1580430    run;
1580431    %let dsid = %sysfunc(open(_tempid));
1580432    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1580433    %let dsid = %sysfunc(close(&dsid));
1580434    %if ^&&nobs&id %then %do;
1580435    proc datasets lib=work nolist;
1580436    delete _tempid;
1580437    run;
1580438    quit;
1580439    %end;
1580440    %else %do;
1580441    data _tempAll;
1580442    set %let j=%eval(&id-1);
1580443    %do x=1 %to &j;
1580444    %if &&nobs&x %then %do;
1580445    _temp&x %end;
1580446    %end;
1580447    ;
1580448    run;
1580449    proc sql;
1580450    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1580450  ! work._tempid p2 where p.name=p2.lhs;
1580451    quit;
1580452    data _temp&id;
1580453    set _temp&id;
1580454    where LHS ne '' and NAME ne '' and Node ne '';
1580455    run;
1580456    proc datasets lib=work nolist;
1580457    delete _tempAll;
1580458    run;
1580459    %let dsid = %sysfunc(open(_temp&id));
1580460    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1580461    %let dsid = %sysfunc(close(&dsid));
1580462    %if ^&&nobs&id %then %do;
1580463    proc datasets lib=work nolist;
1580464    delete _temp&id;
1580465    run;
1580466    quit;
1580467    %end;
1580468    %else %do;
1580469    %let scoreFlag&id = 1;
1580470    data _temp&id;
1580471    set _temp&id;
1580472    where LHS ne NAME and node ne '';
1580473    run;
1580474    %let dsid = %sysfunc(open(_temp&id));
1580475    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1580476    %let dsid = %sysfunc(close(&dsid));
1580477    %if ^&&nobs&id %then %do;
1580478    proc datasets lib=work nolist;
1580479    delete _temp&id;
1580480    run;
1580481    quit;
1580482    %end;
1580483    %else %do;
1580484    proc sort data=_temp&id nodupkey;
1580485    by LHS NAME;
1580486    run;
1580487    %end;
1580488    %end;
1580489    %end;
1580490    %end;
1580491    %mend varDept;
1580492    %macro optCode(outdata=fcmpdata);
1580493    %global fcmpStart;
1580494    %let fcmpStart = 0;
1580495    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1580496    %let NumNodes=9;
1580497    %do k=1 %to &NumNodes;
1580498    %vardept(fcmpdata=&outdata, id=&k);
1580499    %end;
1580500    %mend optCode;
1580501    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1580502    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1580503    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1580504    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1580505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580506    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1580507    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1580508    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1580509    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580510    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1580511    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1580511  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1580512    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1580513    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1580514    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1580515    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1580516    filename _pref
1580516  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1580517    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1580518    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1580519   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1580520   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1580521   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1580522   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1580523   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1580524   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1580525   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1580526   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1580527   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1580528   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1580529   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1580530   +LENGTH _WARN_ $4
1580531   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1580532   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1580533   +
1580534   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1580535   +
1580536   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1580537   +
1580538   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1580539   +
1580540   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1580541   +
1580542   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1580543   +
1580544   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1580545   +
1580546   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1580547   +
1580548   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1580549   +
1580550   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1580551   +
1580552   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1580553   +
1580554   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1580555   +
1580556   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1580557   +
1580558   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1580559   +
1580560   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1580561   +
1580562   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1580563   +
1580564   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1580565   +
1580566   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1580567   +
1580568   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1580569   +
1580570   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1580571   +
1580572   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1580573   +
1580574   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1580575   +
1580576   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1580577   +
1580578   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1580579   +
1580580   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1580581   +
1580582   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1580583   +
1580584   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1580585   +
1580586   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1580587   +
1580588   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1580589   +
1580590   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1580591   +
1580592   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1580593   +
1580594   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1580595   +
1580596   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1580597   +
1580598   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1580599   +
1580600   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1580601   +
1580602   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1580603   +
1580604   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1580605   +
1580606   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1580607   +
1580608   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1580609   +
1580610   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1580611   +
1580612   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1580613   +
1580614   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1580615   +
1580616   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1580617   +
1580618   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1580619   +
1580620   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1580621   +
1580622   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1580623   +
1580624   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1580625   +
1580626   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1580627   +
1580628   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1580629   +
1580630   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1580631   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1580632   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1580633   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1580634   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1580635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580636   +end;
MPRINT(EM_DIAGRAM):   end;
1580637   +else do;
MPRINT(EM_DIAGRAM):   else do;
1580638   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1580639   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1580640   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1580641   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1580642   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1580643   +   end;
MPRINT(EM_DIAGRAM):   end;
1580644   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1580645   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1580646   +   end;
MPRINT(EM_DIAGRAM):   end;
1580647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1580648   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1580649   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1580650   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580651   +   end;
MPRINT(EM_DIAGRAM):   end;
1580652   +end;
MPRINT(EM_DIAGRAM):   end;
1580653   +
1580654   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1580655   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1580656   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1580657   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1580658   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1580659   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580660   +end;
MPRINT(EM_DIAGRAM):   end;
1580661   +else do;
MPRINT(EM_DIAGRAM):   else do;
1580662   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1580663   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1580664   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1580665   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1580666   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1580667   +   end;
MPRINT(EM_DIAGRAM):   end;
1580668   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1580669   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1580670   +   end;
MPRINT(EM_DIAGRAM):   end;
1580671   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1580672   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1580673   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1580674   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580675   +   end;
MPRINT(EM_DIAGRAM):   end;
1580676   +end;
MPRINT(EM_DIAGRAM):   end;
1580677   +
1580678   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1580679   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1580680   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1580681   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1580682   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1580683   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580684   +end;
MPRINT(EM_DIAGRAM):   end;
1580685   +else do;
MPRINT(EM_DIAGRAM):   else do;
1580686   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1580687   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1580688   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1580689   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1580690   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1580691   +   end;
MPRINT(EM_DIAGRAM):   end;
1580692   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1580693   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1580694   +   end;
MPRINT(EM_DIAGRAM):   end;
1580695   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1580696   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1580697   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1580698   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580699   +   end;
MPRINT(EM_DIAGRAM):   end;
1580700   +end;
MPRINT(EM_DIAGRAM):   end;
1580701   +
1580702   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1580703   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1580704   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1580705   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1580706   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1580707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580708   +end;
MPRINT(EM_DIAGRAM):   end;
1580709   +else do;
MPRINT(EM_DIAGRAM):   else do;
1580710   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1580711   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1580712   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1580713   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1580714   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1580715   +   end;
MPRINT(EM_DIAGRAM):   end;
1580716   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1580717   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1580718   +   end;
MPRINT(EM_DIAGRAM):   end;
1580719   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1580720   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1580721   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1580722   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580723   +   end;
MPRINT(EM_DIAGRAM):   end;
1580724   +end;
MPRINT(EM_DIAGRAM):   end;
1580725   +
1580726   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1580727   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1580728   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1580729   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1580730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1580731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580732   +end;
MPRINT(EM_DIAGRAM):   end;
1580733   +else do;
MPRINT(EM_DIAGRAM):   else do;
1580734   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1580735   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1580736   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1580737   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1580738   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1580739   +   end;
MPRINT(EM_DIAGRAM):   end;
1580740   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1580741   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1580742   +   end;
MPRINT(EM_DIAGRAM):   end;
1580743   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1580744   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1580745   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1580746   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580747   +   end;
MPRINT(EM_DIAGRAM):   end;
1580748   +end;
MPRINT(EM_DIAGRAM):   end;
1580749   +
1580750   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1580751   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1580752   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1580753   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1580754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1580755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580756   +end;
MPRINT(EM_DIAGRAM):   end;
1580757   +else do;
MPRINT(EM_DIAGRAM):   else do;
1580758   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1580759   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1580760   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1580761   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1580762   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1580763   +   end;
MPRINT(EM_DIAGRAM):   end;
1580764   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1580765   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1580766   +   end;
MPRINT(EM_DIAGRAM):   end;
1580767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1580768   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1580769   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1580770   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580771   +   end;
MPRINT(EM_DIAGRAM):   end;
1580772   +end;
MPRINT(EM_DIAGRAM):   end;
1580773   +
1580774   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1580775   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1580776   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1580777   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1580778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1580779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580780   +end;
MPRINT(EM_DIAGRAM):   end;
1580781   +else do;
MPRINT(EM_DIAGRAM):   else do;
1580782   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1580783   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1580784   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1580785   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1580786   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1580787   +   end;
MPRINT(EM_DIAGRAM):   end;
1580788   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1580789   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1580790   +   end;
MPRINT(EM_DIAGRAM):   end;
1580791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1580792   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1580793   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1580794   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580795   +   end;
MPRINT(EM_DIAGRAM):   end;
1580796   +end;
MPRINT(EM_DIAGRAM):   end;
1580797   +
1580798   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1580799   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1580800   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1580801   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1580802   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1580803   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1580804   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1580805   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1580806   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1580807   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1580808   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1580809   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1580810   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1580811   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580812   +end;
MPRINT(EM_DIAGRAM):   end;
1580813   +else do;
MPRINT(EM_DIAGRAM):   else do;
1580814   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1580815   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1580816   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1580817   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1580818   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1580819   +   end;
MPRINT(EM_DIAGRAM):   end;
1580820   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1580821   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1580822   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1580823   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1580824   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1580825   +   end;
MPRINT(EM_DIAGRAM):   end;
1580826   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1580827   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1580828   +   end;
MPRINT(EM_DIAGRAM):   end;
1580829   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1580830   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1580831   +   end;
MPRINT(EM_DIAGRAM):   end;
1580832   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1580833   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1580834   +   end;
MPRINT(EM_DIAGRAM):   end;
1580835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1580836   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1580837   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1580838   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1580839   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1580840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1580841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580842   +   end;
MPRINT(EM_DIAGRAM):   end;
1580843   +end;
MPRINT(EM_DIAGRAM):   end;
1580844   +
1580845   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1580846   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1580847   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1580848   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1580849   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1580850   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1580851   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1580852   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1580853   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1580854   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1580855   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1580856   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1580857   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1580858   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1580859   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580860   +end;
MPRINT(EM_DIAGRAM):   end;
1580861   +else do;
MPRINT(EM_DIAGRAM):   else do;
1580862   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1580863   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1580864   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1580865   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1580866   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1580867   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1580868   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1580869   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1580870   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1580871   +         end;
MPRINT(EM_DIAGRAM):   end;
1580872   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1580873   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1580874   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1580875   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1580876   +            end;
MPRINT(EM_DIAGRAM):   end;
1580877   +         end;
MPRINT(EM_DIAGRAM):   end;
1580878   +      end;
MPRINT(EM_DIAGRAM):   end;
1580879   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1580880   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1580881   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1580882   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1580883   +         end;
MPRINT(EM_DIAGRAM):   end;
1580884   +      end;
MPRINT(EM_DIAGRAM):   end;
1580885   +   end;
MPRINT(EM_DIAGRAM):   end;
1580886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1580887   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1580888   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1580889   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1580890   +      end;
MPRINT(EM_DIAGRAM):   end;
1580891   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1580892   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1580893   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1580894   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1580895   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1580896   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1580897   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1580898   +         end;
MPRINT(EM_DIAGRAM):   end;
1580899   +      end;
MPRINT(EM_DIAGRAM):   end;
1580900   +   end;
MPRINT(EM_DIAGRAM):   end;
1580901   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1580902   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1580903   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1580904   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1580905   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1580906   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1580907   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580908   +   end;
MPRINT(EM_DIAGRAM):   end;
1580909   +end;
MPRINT(EM_DIAGRAM):   end;
1580910   +
1580911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1580912   +*** Checking missing input Interval
1580913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1580914   +
1580915   +IF NMISS(
1580916   +   AcceptedCmpTotal ,
1580917   +   Age ,
1580918   +   Frq ,
1580919   +   Income ,
1580920   +   Kidhome ,
1580921   +   Mnt ,
1580922   +   MntFishProducts ,
1580923   +   MntFruits ,
1580924   +   MntGoldProds ,
1580925   +   MntMeatProducts ,
1580926   +   MntSweetProducts ,
1580927   +   MntWines ,
1580928   +   MonthsAsCustomer ,
1580929   +   NumCatalogPurchases ,
1580930   +   NumDealsPurchases ,
1580931   +   NumDistPurchases ,
1580932   +   NumStorePurchases ,
1580933   +   NumWebPurchases ,
1580934   +   NumWebVisitsMonth ,
1580935   +   RFMstat ,
1580936   +   RMntFrq ,
1580937   +   Recency ,
1580938   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1580939   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1580940   +
1580941   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1580942   +END;
MPRINT(EM_DIAGRAM):   END;
1580943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1580944   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1580945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1580946   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1580947   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1580948   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1580949   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1580950   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1580951   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1580952   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1580953   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1580954   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1580955   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1580956   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1580957   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1580958   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1580959   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1580960   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1580961   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1580962   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1580963   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1580964   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1580965   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1580966   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1580967   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1580968   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1580969   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1580970   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1580971   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1580972   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1580973   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1580974   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1580975   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1580976   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1580977   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1580978   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1580979   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1580980   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1580981   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1580982   +END;
MPRINT(EM_DIAGRAM):   END;
1580983   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1580984   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1580985   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1580986   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1580987   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1580988   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1580989   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1580990   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1580991   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1580992   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1580993   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1580994   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1580995   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1580996   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1580997   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1580998   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1580999   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1581000   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1581001   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1581002   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1581003   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1581004   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1581005   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1581006   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1581007   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1581008   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1581009   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1581010   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1581011   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1581012   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1581013   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1581014   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1581015   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1581016   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1581017   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1581018   +   ELSE S_NumCatalogPurchases
1581019   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1581020   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1581021   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1581022   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1581023   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1581024   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1581025   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1581026   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1581027   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1581028   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1581029   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1581030   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1581031   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1581032   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1581033   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1581034   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1581035   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1581036   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1581037   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1581038   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1581039   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1581040   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1581041   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1581042   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1581043   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1581044   +END;
MPRINT(EM_DIAGRAM):   END;
1581045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1581046   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1581047   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1581048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1581049   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1581050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1581051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1581052   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1581053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1581054   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1581055   +   H11  =     0.17227825084993 * S_AcceptedCmpTotal  +    -0.35897435315006 *
1581056   +        S_Age  +     -0.3932766506917 * S_Frq  +    -0.23444370980081 *
1581057   +        S_Income  +    -0.09693130155866 * S_Kidhome
1581058   +          +     0.11864048453975 * S_Mnt  +     0.01528238534369 *
1581059   +        S_MntFishProducts  +    -0.09259557951548 * S_MntFruits
1581060   +          +     0.05969318141204 * S_MntGoldProds  +     0.99547231281801 *
1581061   +        S_MntMeatProducts  +    -0.25636636148893 * S_MntSweetProducts
1581062   +          +    -0.23280858183939 * S_MntWines  +     0.01485687960844 *
1581063   +        S_MonthsAsCustomer  +     0.46331209297655 * S_NumCatalogPurchases
1581064   +          +     0.87256063855463 * S_NumDealsPurchases
1581065   +          +     0.24228318068596 * S_NumDistPurchases
1581066   +          +    -0.65575177240856 * S_NumStorePurchases
1581067   +          +    -0.94105747825406 * S_NumWebPurchases
1581068   +          +     0.88098930350141 * S_NumWebVisitsMonth
1581069   +          +     0.43037763592334 * S_RFMstat  +     0.00264221767606 *
1581070   +        S_RMntFrq  +    -0.85535806265966 * S_Recency
1581071   +          +     0.17984473068663 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17227825084993 * S_AcceptedCmpTotal + -0.35897435315006 * S_Age
+ -0.3932766506917 * S_Frq + -0.23444370980081 * S_Income + -0.09693130155866 * S_Kidhome +
0.11864048453975 * S_Mnt + 0.01528238534369 * S_MntFishProducts + -0.09259557951548 *
S_MntFruits + 0.05969318141204 * S_MntGoldProds + 0.99547231281801 * S_MntMeatProducts +
-0.25636636148893 * S_MntSweetProducts + -0.23280858183939 * S_MntWines + 0.01485687960844 *
S_MonthsAsCustomer + 0.46331209297655 * S_NumCatalogPurchases + 0.87256063855463 *
S_NumDealsPurchases + 0.24228318068596 * S_NumDistPurchases + -0.65575177240856 *
S_NumStorePurchases + -0.94105747825406 * S_NumWebPurchases + 0.88098930350141 *
S_NumWebVisitsMonth + 0.43037763592334 * S_RFMstat + 0.00264221767606 * S_RMntFrq +
-0.85535806265966 * S_Recency + 0.17984473068663 * S_Teenhome ;
1581072   +   H12  =     0.57138332539966 * S_AcceptedCmpTotal  +      0.1128864870659 *
1581073   +        S_Age  +    -0.40144519272361 * S_Frq  +     0.40865873494034 *
1581074   +        S_Income  +    -0.48351377369429 * S_Kidhome
1581075   +          +    -0.21126302838609 * S_Mnt  +    -0.13286738458748 *
1581076   +        S_MntFishProducts  +    -0.15177328838404 * S_MntFruits
1581077   +          +    -0.08690223863381 * S_MntGoldProds  +     0.55028065542155 *
1581078   +        S_MntMeatProducts  +     0.03465853700356 * S_MntSweetProducts
1581079   +          +    -0.36583108783554 * S_MntWines  +    -0.07953133843048 *
1581080   +        S_MonthsAsCustomer  +     0.35029448876648 * S_NumCatalogPurchases
1581081   +          +     0.19198092320653 * S_NumDealsPurchases
1581082   +          +    -0.01877290175933 * S_NumDistPurchases
1581083   +          +    -0.61698509852352 * S_NumStorePurchases
1581084   +          +    -0.36114842161331 * S_NumWebPurchases
1581085   +          +     0.87653599441887 * S_NumWebVisitsMonth
1581086   +          +     0.01472697060019 * S_RFMstat  +    -0.09150885166339 *
1581087   +        S_RMntFrq  +    -0.80072298913329 * S_Recency
1581088   +          +    -0.34612719566417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57138332539966 * S_AcceptedCmpTotal + 0.1128864870659 * S_Age +
-0.40144519272361 * S_Frq + 0.40865873494034 * S_Income + -0.48351377369429 * S_Kidhome +
-0.21126302838609 * S_Mnt + -0.13286738458748 * S_MntFishProducts + -0.15177328838404 *
S_MntFruits + -0.08690223863381 * S_MntGoldProds + 0.55028065542155 * S_MntMeatProducts +
0.03465853700356 * S_MntSweetProducts + -0.36583108783554 * S_MntWines + -0.07953133843048 *
S_MonthsAsCustomer + 0.35029448876648 * S_NumCatalogPurchases + 0.19198092320653 *
S_NumDealsPurchases + -0.01877290175933 * S_NumDistPurchases + -0.61698509852352 *
S_NumStorePurchases + -0.36114842161331 * S_NumWebPurchases + 0.87653599441887 *
S_NumWebVisitsMonth + 0.01472697060019 * S_RFMstat + -0.09150885166339 * S_RMntFrq +
-0.80072298913329 * S_Recency + -0.34612719566417 * S_Teenhome ;
1581089   +   H13  =      0.0597463942527 * S_AcceptedCmpTotal  +    -0.36701504704853 *
1581090   +        S_Age  +    -0.01250086784138 * S_Frq  +    -0.32284317044563 *
1581091   +        S_Income  +    -0.03117320792997 * S_Kidhome
1581092   +          +    -0.12100989193946 * S_Mnt  +     0.18274702953753 *
1581093   +        S_MntFishProducts  +      0.1211309953434 * S_MntFruits
1581094   +          +    -0.05289091409232 * S_MntGoldProds  +      0.1824264866433 *
1581095   +        S_MntMeatProducts  +      0.4296258201021 * S_MntSweetProducts
1581096   +          +     0.04206079784398 * S_MntWines  +     0.04832696006423 *
1581097   +        S_MonthsAsCustomer  +    -0.23733345425196 * S_NumCatalogPurchases
1581098   +          +    -0.17772008430544 * S_NumDealsPurchases
1581099   +          +    -0.24320624261016 * S_NumDistPurchases
1581100   +          +     0.42056923271106 * S_NumStorePurchases
1581101   +          +    -0.28718554863857 * S_NumWebPurchases
1581102   +          +    -0.30313092121817 * S_NumWebVisitsMonth
1581103   +          +    -0.47052824863277 * S_RFMstat  +    -0.00842911791446 *
1581104   +        S_RMntFrq  +     0.82617945600505 * S_Recency
1581105   +          +    -0.05336202971823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0597463942527 * S_AcceptedCmpTotal + -0.36701504704853 * S_Age +
-0.01250086784138 * S_Frq + -0.32284317044563 * S_Income + -0.03117320792997 * S_Kidhome +
-0.12100989193946 * S_Mnt + 0.18274702953753 * S_MntFishProducts + 0.1211309953434 *
S_MntFruits + -0.05289091409232 * S_MntGoldProds + 0.1824264866433 * S_MntMeatProducts +
0.4296258201021 * S_MntSweetProducts + 0.04206079784398 * S_MntWines + 0.04832696006423 *
S_MonthsAsCustomer + -0.23733345425196 * S_NumCatalogPurchases + -0.17772008430544 *
S_NumDealsPurchases + -0.24320624261016 * S_NumDistPurchases + 0.42056923271106 *
S_NumStorePurchases + -0.28718554863857 * S_NumWebPurchases + -0.30313092121817 *
S_NumWebVisitsMonth + -0.47052824863277 * S_RFMstat + -0.00842911791446 * S_RMntFrq +
0.82617945600505 * S_Recency + -0.05336202971823 * S_Teenhome ;
1581106   +   H14  =     0.02019319314089 * S_AcceptedCmpTotal  +     0.03898103386981 *
1581107   +        S_Age  +     0.03796208124972 * S_Frq  +    -0.50346649839213 *
1581108   +        S_Income  +     -0.0433863245185 * S_Kidhome
1581109   +          +     0.02388861329131 * S_Mnt  +    -0.18742637467481 *
1581110   +        S_MntFishProducts  +    -0.11073504127781 * S_MntFruits
1581111   +          +    -0.18016966550319 * S_MntGoldProds  +    -0.67856577571321 *
1581112   +        S_MntMeatProducts  +     0.05991191644653 * S_MntSweetProducts
1581113   +          +     0.43807808644827 * S_MntWines  +     0.27181262278974 *
1581114   +        S_MonthsAsCustomer  +     -0.6558311197401 * S_NumCatalogPurchases
1581115   +          +    -0.43652501997552 * S_NumDealsPurchases
1581116   +          +     0.17317052107867 * S_NumDistPurchases
1581117   +          +     0.23672921935551 * S_NumStorePurchases
1581118   +          +     0.49273989445476 * S_NumWebPurchases
1581119   +          +    -0.73529346403649 * S_NumWebVisitsMonth
1581120   +          +     0.22856238532547 * S_RFMstat  +    -0.02103839940459 *
1581121   +        S_RMntFrq  +     0.80988206266401 * S_Recency
1581122   +          +     0.30277843941643 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02019319314089 * S_AcceptedCmpTotal + 0.03898103386981 * S_Age +
0.03796208124972 * S_Frq + -0.50346649839213 * S_Income + -0.0433863245185 * S_Kidhome +
0.02388861329131 * S_Mnt + -0.18742637467481 * S_MntFishProducts + -0.11073504127781 *
S_MntFruits + -0.18016966550319 * S_MntGoldProds + -0.67856577571321 * S_MntMeatProducts +
0.05991191644653 * S_MntSweetProducts + 0.43807808644827 * S_MntWines + 0.27181262278974 *
S_MonthsAsCustomer + -0.6558311197401 * S_NumCatalogPurchases + -0.43652501997552 *
S_NumDealsPurchases + 0.17317052107867 * S_NumDistPurchases + 0.23672921935551 *
S_NumStorePurchases + 0.49273989445476 * S_NumWebPurchases + -0.73529346403649 *
S_NumWebVisitsMonth + 0.22856238532547 * S_RFMstat + -0.02103839940459 * S_RMntFrq +
0.80988206266401 * S_Recency + 0.30277843941643 * S_Teenhome ;
1581123   +   H15  =    -0.12782497283186 * S_AcceptedCmpTotal  +     0.09143345078334 *
1581124   +        S_Age  +    -0.30004671755515 * S_Frq  +    -0.68184412168814 *
1581125   +        S_Income  +     0.59347379159371 * S_Kidhome
1581126   +          +    -0.10835406360776 * S_Mnt  +      0.0640243948872 *
1581127   +        S_MntFishProducts  +     0.05027070080574 * S_MntFruits
1581128   +          +     0.04455105043017 * S_MntGoldProds  +    -0.55728831896651 *
1581129   +        S_MntMeatProducts  +     0.06199248308407 * S_MntSweetProducts
1581130   +          +      0.1868999468046 * S_MntWines  +    -0.12299371058925 *
1581131   +        S_MonthsAsCustomer  +    -0.62488078405339 * S_NumCatalogPurchases
1581132   +          +     0.06887104992711 * S_NumDealsPurchases
1581133   +          +    -0.03976087278251 * S_NumDistPurchases
1581134   +          +     -0.0289014951041 * S_NumStorePurchases
1581135   +          +    -0.08062500939119 * S_NumWebPurchases
1581136   +          +    -0.71462296517075 * S_NumWebVisitsMonth
1581137   +          +    -0.11377548637273 * S_RFMstat  +     0.19733700510386 *
1581138   +        S_RMntFrq  +       0.940313744576 * S_Recency
1581139   +          +     0.37444891766454 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12782497283186 * S_AcceptedCmpTotal + 0.09143345078334 * S_Age
+ -0.30004671755515 * S_Frq + -0.68184412168814 * S_Income + 0.59347379159371 * S_Kidhome +
-0.10835406360776 * S_Mnt + 0.0640243948872 * S_MntFishProducts + 0.05027070080574 *
S_MntFruits + 0.04455105043017 * S_MntGoldProds + -0.55728831896651 * S_MntMeatProducts +
0.06199248308407 * S_MntSweetProducts + 0.1868999468046 * S_MntWines + -0.12299371058925 *
S_MonthsAsCustomer + -0.62488078405339 * S_NumCatalogPurchases + 0.06887104992711 *
S_NumDealsPurchases + -0.03976087278251 * S_NumDistPurchases + -0.0289014951041 *
S_NumStorePurchases + -0.08062500939119 * S_NumWebPurchases + -0.71462296517075 *
S_NumWebVisitsMonth + -0.11377548637273 * S_RFMstat + 0.19733700510386 * S_RMntFrq +
0.940313744576 * S_Recency + 0.37444891766454 * S_Teenhome ;
1581140   +   H16  =    -0.37591308014212 * S_AcceptedCmpTotal  +     0.05917896678576 *
1581141   +        S_Age  +    -0.43031069931257 * S_Frq  +    -0.42974942031533 *
1581142   +        S_Income  +    -0.55245961592835 * S_Kidhome
1581143   +          +    -0.26354112696813 * S_Mnt  +     0.15756056481829 *
1581144   +        S_MntFishProducts  +     0.04619169977057 * S_MntFruits
1581145   +          +    -0.20058684564436 * S_MntGoldProds  +    -0.22897141024738 *
1581146   +        S_MntMeatProducts  +    -0.19503418550354 * S_MntSweetProducts
1581147   +          +    -0.05348514434376 * S_MntWines  +    -0.28328149915929 *
1581148   +        S_MonthsAsCustomer  +    -0.57208668962595 * S_NumCatalogPurchases
1581149   +          +    -0.50731731808528 * S_NumDealsPurchases
1581150   +          +     -0.4854662155502 * S_NumDistPurchases
1581151   +          +     0.21175181231244 * S_NumStorePurchases
1581152   +          +     0.04923223410585 * S_NumWebPurchases
1581153   +          +    -0.18340723050528 * S_NumWebVisitsMonth
1581154   +          +    -0.06704119861732 * S_RFMstat  +    -0.09834520024696 *
1581155   +        S_RMntFrq  +     0.03672019550127 * S_Recency
1581156   +          +    -0.11056450789352 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.37591308014212 * S_AcceptedCmpTotal + 0.05917896678576 * S_Age
+ -0.43031069931257 * S_Frq + -0.42974942031533 * S_Income + -0.55245961592835 * S_Kidhome +
-0.26354112696813 * S_Mnt + 0.15756056481829 * S_MntFishProducts + 0.04619169977057 *
S_MntFruits + -0.20058684564436 * S_MntGoldProds + -0.22897141024738 * S_MntMeatProducts +
-0.19503418550354 * S_MntSweetProducts + -0.05348514434376 * S_MntWines + -0.28328149915929 *
S_MonthsAsCustomer + -0.57208668962595 * S_NumCatalogPurchases + -0.50731731808528 *
S_NumDealsPurchases + -0.4854662155502 * S_NumDistPurchases + 0.21175181231244 *
S_NumStorePurchases + 0.04923223410585 * S_NumWebPurchases + -0.18340723050528 *
S_NumWebVisitsMonth + -0.06704119861732 * S_RFMstat + -0.09834520024696 * S_RMntFrq +
0.03672019550127 * S_Recency + -0.11056450789352 * S_Teenhome ;
1581157   +   H11  = H11  +    -0.79820393951491 * AcceptedCmp10
1581158   +          +    -0.38041846667774 * AcceptedCmp20  +    -0.37174269081632 *
1581159   +        AcceptedCmp30  +    -0.56039021370892 * AcceptedCmp40
1581160   +          +    -0.37328812969331 * AcceptedCmp50  +    -0.16972467612261 *
1581161   +        Complain0  +     0.11922736270144 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.79820393951491 * AcceptedCmp10 + -0.38041846667774 *
AcceptedCmp20 + -0.37174269081632 * AcceptedCmp30 + -0.56039021370892 * AcceptedCmp40 +
-0.37328812969331 * AcceptedCmp50 + -0.16972467612261 * Complain0 + 0.11922736270144 *
HigherEducationBinary0 ;
1581162   +   H12  = H12  +    -0.06460210959882 * AcceptedCmp10
1581163   +          +     0.03831828968857 * AcceptedCmp20  +    -0.20150120201902 *
1581164   +        AcceptedCmp30  +      -0.165941240668 * AcceptedCmp40
1581165   +          +    -0.27319864205665 * AcceptedCmp50  +     0.04941377504078 *
1581166   +        Complain0  +     0.02482339093361 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.06460210959882 * AcceptedCmp10 + 0.03831828968857 *
AcceptedCmp20 + -0.20150120201902 * AcceptedCmp30 + -0.165941240668 * AcceptedCmp40 +
-0.27319864205665 * AcceptedCmp50 + 0.04941377504078 * Complain0 + 0.02482339093361 *
HigherEducationBinary0 ;
1581167   +   H13  = H13  +     0.20625392351014 * AcceptedCmp10
1581168   +          +     0.05985202871988 * AcceptedCmp20  +     0.19835128690632 *
1581169   +        AcceptedCmp30  +    -0.17639506744072 * AcceptedCmp40
1581170   +          +     0.06041519016299 * AcceptedCmp50  +     0.07347874692955 *
1581171   +        Complain0  +     0.43776762973062 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20625392351014 * AcceptedCmp10 + 0.05985202871988 *
AcceptedCmp20 + 0.19835128690632 * AcceptedCmp30 + -0.17639506744072 * AcceptedCmp40 +
0.06041519016299 * AcceptedCmp50 + 0.07347874692955 * Complain0 + 0.43776762973062 *
HigherEducationBinary0 ;
1581172   +   H14  = H14  +    -0.24371330715684 * AcceptedCmp10
1581173   +          +     0.07785751221157 * AcceptedCmp20  +     0.21552314167821 *
1581174   +        AcceptedCmp30  +    -0.36429216849779 * AcceptedCmp40
1581175   +          +     0.22820782079823 * AcceptedCmp50  +    -0.06220515715418 *
1581176   +        Complain0  +     0.06800151570974 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24371330715684 * AcceptedCmp10 + 0.07785751221157 *
AcceptedCmp20 + 0.21552314167821 * AcceptedCmp30 + -0.36429216849779 * AcceptedCmp40 +
0.22820782079823 * AcceptedCmp50 + -0.06220515715418 * Complain0 + 0.06800151570974 *
HigherEducationBinary0 ;
1581177   +   H15  = H15  +     0.40797286619993 * AcceptedCmp10
1581178   +          +      0.5463048033936 * AcceptedCmp20  +     0.37950739019627 *
1581179   +        AcceptedCmp30  +     0.43129361670671 * AcceptedCmp40
1581180   +          +     0.26391850975795 * AcceptedCmp50  +     0.21623972419845 *
1581181   +        Complain0  +    -0.23181478812423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.40797286619993 * AcceptedCmp10 + 0.5463048033936 *
AcceptedCmp20 + 0.37950739019627 * AcceptedCmp30 + 0.43129361670671 * AcceptedCmp40 +
0.26391850975795 * AcceptedCmp50 + 0.21623972419845 * Complain0 + -0.23181478812423 *
HigherEducationBinary0 ;
1581182   +   H16  = H16  +     0.19621998791625 * AcceptedCmp10
1581183   +          +     0.04256165580848 * AcceptedCmp20  +     0.09581896662257 *
1581184   +        AcceptedCmp30  +     -0.0426969488761 * AcceptedCmp40
1581185   +          +     0.21671665373977 * AcceptedCmp50  +     0.10456597268655 *
1581186   +        Complain0  +     0.52856843195109 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19621998791625 * AcceptedCmp10 + 0.04256165580848 *
AcceptedCmp20 + 0.09581896662257 * AcceptedCmp30 + -0.0426969488761 * AcceptedCmp40 +
0.21671665373977 * AcceptedCmp50 + 0.10456597268655 * Complain0 + 0.52856843195109 *
HigherEducationBinary0 ;
1581187   +   H11  = H11  +    -0.11843960014452 * Education2n_Cycle
1581188   +          +    -0.07012048352204 * EducationBasic  +     0.08286668277494 *
1581189   +        EducationGraduation  +     0.02300933722966 * EducationMaster
1581190   +          +     0.13102231169849 * Marital_StatusDivorced
1581191   +          +     0.13221932247035 * Marital_StatusMarried
1581192   +          +    -0.28666963919866 * Marital_StatusSingle
1581193   +          +     0.03279140045326 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11843960014452 * Education2n_Cycle + -0.07012048352204 *
EducationBasic + 0.08286668277494 * EducationGraduation + 0.02300933722966 * EducationMaster +
0.13102231169849 * Marital_StatusDivorced + 0.13221932247035 * Marital_StatusMarried +
-0.28666963919866 * Marital_StatusSingle + 0.03279140045326 * Marital_StatusTogether ;
1581194   +   H12  = H12  +      0.0507383271228 * Education2n_Cycle
1581195   +          +    -0.26935804488352 * EducationBasic  +     0.21019019731154 *
1581196   +        EducationGraduation  +    -0.07908948704317 * EducationMaster
1581197   +          +     0.36873255525654 * Marital_StatusDivorced
1581198   +          +    -0.54422050380085 * Marital_StatusMarried
1581199   +          +     0.58130553469516 * Marital_StatusSingle
1581200   +          +    -0.45705895751154 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.0507383271228 * Education2n_Cycle + -0.26935804488352 *
EducationBasic + 0.21019019731154 * EducationGraduation + -0.07908948704317 * EducationMaster
+ 0.36873255525654 * Marital_StatusDivorced + -0.54422050380085 * Marital_StatusMarried +
0.58130553469516 * Marital_StatusSingle + -0.45705895751154 * Marital_StatusTogether ;
1581201   +   H13  = H13  +     0.00945821683572 * Education2n_Cycle
1581202   +          +     0.23733742838274 * EducationBasic  +    -0.23078712741841 *
1581203   +        EducationGraduation  +    -0.07901552637344 * EducationMaster
1581204   +          +    -0.07480235993304 * Marital_StatusDivorced
1581205   +          +     0.31705972445069 * Marital_StatusMarried
1581206   +          +    -0.08626328185895 * Marital_StatusSingle
1581207   +          +     0.16945934711301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00945821683572 * Education2n_Cycle + 0.23733742838274 *
EducationBasic + -0.23078712741841 * EducationGraduation + -0.07901552637344 * EducationMaster
+ -0.07480235993304 * Marital_StatusDivorced + 0.31705972445069 * Marital_StatusMarried +
-0.08626328185895 * Marital_StatusSingle + 0.16945934711301 * Marital_StatusTogether ;
1581208   +   H14  = H14  +    -0.22202899453458 * Education2n_Cycle
1581209   +          +     -0.0160188207075 * EducationBasic  +     0.14051813975792 *
1581210   +        EducationGraduation  +    -0.03299708857042 * EducationMaster
1581211   +          +    -0.06733679615115 * Marital_StatusDivorced
1581212   +          +     0.23111557732379 * Marital_StatusMarried
1581213   +          +    -0.34379469870478 * Marital_StatusSingle
1581214   +          +     0.53462698992075 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22202899453458 * Education2n_Cycle + -0.0160188207075 *
EducationBasic + 0.14051813975792 * EducationGraduation + -0.03299708857042 * EducationMaster
+ -0.06733679615115 * Marital_StatusDivorced + 0.23111557732379 * Marital_StatusMarried +
-0.34379469870478 * Marital_StatusSingle + 0.53462698992075 * Marital_StatusTogether ;
1581215   +   H15  = H15  +     0.01779725067062 * Education2n_Cycle
1581216   +          +    -0.42224201770092 * EducationBasic  +     0.19142041579368 *
1581217   +        EducationGraduation  +     0.36450188671808 * EducationMaster
1581218   +          +    -0.07108588070668 * Marital_StatusDivorced
1581219   +          +     1.10060875265784 * Marital_StatusMarried
1581220   +          +    -0.74271327534863 * Marital_StatusSingle
1581221   +          +      0.6377382903462 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01779725067062 * Education2n_Cycle + -0.42224201770092 *
EducationBasic + 0.19142041579368 * EducationGraduation + 0.36450188671808 * EducationMaster +
-0.07108588070668 * Marital_StatusDivorced + 1.10060875265784 * Marital_StatusMarried +
-0.74271327534863 * Marital_StatusSingle + 0.6377382903462 * Marital_StatusTogether ;
1581222   +   H16  = H16  +    -0.20161800254313 * Education2n_Cycle
1581223   +          +    -0.23593457747929 * EducationBasic  +    -0.13976317584992 *
1581224   +        EducationGraduation  +     -0.1267485848879 * EducationMaster
1581225   +          +    -0.19461023827362 * Marital_StatusDivorced
1581226   +          +     -0.4165676037681 * Marital_StatusMarried
1581227   +          +     0.43379324993555 * Marital_StatusSingle
1581228   +          +    -0.26127159942792 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.20161800254313 * Education2n_Cycle + -0.23593457747929 *
EducationBasic + -0.13976317584992 * EducationGraduation + -0.1267485848879 * EducationMaster
+ -0.19461023827362 * Marital_StatusDivorced + -0.4165676037681 * Marital_StatusMarried +
0.43379324993555 * Marital_StatusSingle + -0.26127159942792 * Marital_StatusTogether ;
1581229   +   H11  =    -0.04282324533175 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04282324533175 + H11 ;
1581230   +   H12  =     0.36287611211168 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36287611211168 + H12 ;
1581231   +   H13  =     -1.3878030230984 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.3878030230984 + H13 ;
1581232   +   H14  =     1.37150577164663 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37150577164663 + H14 ;
1581233   +   H15  =     0.89739467268843 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.89739467268843 + H15 ;
1581234   +   H16  =    -2.09989763249594 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.09989763249594 + H16 ;
1581235   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1581236   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1581237   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1581238   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1581239   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1581240   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1581241   +END;
MPRINT(EM_DIAGRAM):   END;
1581242   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1581243   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1581244   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1581245   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1581246   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1581247   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1581248   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1581249   +END;
MPRINT(EM_DIAGRAM):   END;
1581250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1581251   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1581252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1581253   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1581254   +   P_DepVar1  =     1.91116365814564 * H11  +     2.55646733130594 * H12
1581255   +          +    -1.79147922835153 * H13  +    -1.82934213401644 * H14
1581256   +          +    -2.98884663870471 * H15  +    -2.08728996739757 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.91116365814564 * H11 + 2.55646733130594 * H12 +
-1.79147922835153 * H13 + -1.82934213401644 * H14 + -2.98884663870471 * H15 +
-2.08728996739757 * H16 ;
1581257   +   P_DepVar1  =    -2.10699336957956 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.10699336957956 + P_DepVar1 ;
1581258   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1581259   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1581260   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1581261   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1581262   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1581263   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1581264   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1581265   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1581266   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1581267   +END;
MPRINT(EM_DIAGRAM):   END;
1581268   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1581269   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1581270   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1581271   +END;
MPRINT(EM_DIAGRAM):   END;
1581272   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1581273   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1581274   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1581275   +END;
MPRINT(EM_DIAGRAM):   END;
1581276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1581277   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1581278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1581279   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1581280   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1581281   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1581282   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1581283   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1581284   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1581285   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1581286   +END;
MPRINT(EM_DIAGRAM):   END;
1581287   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1581288   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1581289   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1581290   +drop
1581291   +H11
1581292   +H12
1581293   +H13
1581294   +H14
1581295   +H15
1581296   +H16
1581297   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1581298   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1581299    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1581300    quit;
1581301    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1581302    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1581303    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1581304    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1581305    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1581306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581307    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1581308    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1581310    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1581311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581312    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581313    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1581314    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1581315    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1581316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1581317    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1581318    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1581319    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1581320    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1581322    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1581323    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1581324    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581325    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581326    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1581327    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1581327  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.
 
1581328    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581329    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1581330    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1581331    filename _pref
1581331  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1581332    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1581333    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1581334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1581335   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1581336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1581337   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1581338   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1581339   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1581340    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1581341    quit;
1581342    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1581343    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1581344    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1581345    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1581346    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1581347    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581348    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1581349    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581351    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1581352    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581353    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1581354    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1581355    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1581356    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1581357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581358    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1581359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1581360    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1581361    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581362    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581363    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1581364    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1581365    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581366    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581367    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1581368    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1581368  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1581369    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1581370    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1581371    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581372    filename _pref
1581372  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1581373    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1581374    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1581375   +
1581376   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1581377   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1581377  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1581378   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1581379   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1581380   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1581381   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1581382   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1581383    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1581384    quit;
1581385    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1581386    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1581387    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1581388    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1581389    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1581390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581391    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1581392    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581393    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1581394    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1581395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581396    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581397    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1581398    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1581399    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1581400    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
1581401    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1581402    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581403    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1581404    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581405    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581406    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1581407    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1581408    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581409    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.01 seconds
 
 
1581410    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1581411    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1581411  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1581412    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581413    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1581414    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581415    filename _pref
1581415  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1581416    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1581417    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1581418   +
1581419   +
1581420   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1581421   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1581422   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1581423   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1581424   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1581425   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1581426   +
1581427   +
1581428   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1581429   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1581430   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1581431   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1581432   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1581433   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1581434   +
1581435   +
1581436   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1581437   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1581438   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1581439   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1581440   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1581441   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1581442   +
1581443   +
1581444   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1581445   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1581446   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1581447   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1581448   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1581449   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1581450   +
1581451   +
1581452   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1581453   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1581454   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1581455   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1581456   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1581457   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1581458   +
1581459   +
1581460   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1581461   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1581462   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1581463   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1581464   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1581465   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1581466   +
1581467   +
1581468   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1581469   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1581470   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1581471   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1581472   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1581473   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1581474   +
1581475   +
1581476   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1581477   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1581478   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1581479   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1581480   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1581481   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1581482   +if
1581483   +_FILTERNORM1 not in ( '.')
1581484   + and
1581485   +_FILTERNORM2 not in ( '.')
1581486   + and
1581487   +_FILTERNORM3 not in ( '.')
1581488   + and
1581489   +_FILTERNORM4 not in ( '.')
1581490   + and
1581491   +_FILTERNORM5 not in ( '.')
1581492   + and
1581493   +_FILTERNORM6 not in ( '.')
1581494   + and
1581495   +_FILTERNORM7 not in ( ' ')
1581496   + and
1581497   +_FILTERNORM8 not in ( ' ')
1581498   +and
1581499   +( Dt_Customer ne .)
1581500   +and ( Income ne . and (Income<=107000))
1581501   +and ( Kidhome ne .)
1581502   +and ( MntFishProducts ne .)
1581503   +and ( MntFruits ne .)
1581504   +and ( MntGoldProds ne .)
1581505   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1581506   +and ( MntSweetProducts ne .)
1581507   +and ( MntWines ne .)
1581508   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1581509   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1581510   +and ( NumStorePurchases ne .)
1581511   +and ( NumWebPurchases ne .)
1581512   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1581513   +and ( Recency ne .)
1581514   +and ( Teenhome ne .)
1581515   +and ( Year_Birth ne .)
1581516   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1581517   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1581518   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1581519   +end;
MPRINT(EM_DIAGRAM):   end;
1581520   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1581521   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1581522    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1581523    quit;
1581524    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1581525    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1581526    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1581527    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1581528    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1581529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581530    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1581531    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581532    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581533    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1581534    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581535    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581536    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1581537    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1581538    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1581539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581540    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1581541    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
 
 
1581542    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1581543    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581544    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581545    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1581546    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1581547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1581548    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1581549    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1581550    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1581550  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1581551    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581552    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1581553    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581554    %macro varDept(fcmpdata=,id=);
1581555    %global nobs&id scoreFlag&id;
1581556    %let scoreFlag&id = 0;
1581557    %if &id=1 or ^&fcmpStart %then %do;
1581558    proc sort data=&fcmpdata out=_temp&id nodupkey;
1581559    by NAME;
1581560    where id=&id and LHS in( %let j=1;
1581561    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1581562    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1581563    "&var" %let j = %eval(&j+1);
1581564    %end;
1581565    );
1581566    run;
1581567    %let dsid = %sysfunc(open(_temp&id));
1581568    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1581569    %let dsid = %sysfunc(close(&dsid));
1581570    %if &&nobs&id %then %do;
1581571    %let scoreFlag&id = 1;
1581572    %let fcmpStart = 1;
1581573    %end;
1581574    %else %let fcmpStart = 0;
1581575    %end;
1581576    %else %do;
1581577    proc sort data=&fcmpdata out=_tempid;
1581578    where id=&id;
1581579    by LHS;
1581580    run;
1581581    %let dsid = %sysfunc(open(_tempid));
1581582    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1581583    %let dsid = %sysfunc(close(&dsid));
1581584    %if ^&&nobs&id %then %do;
1581585    proc datasets lib=work nolist;
1581586    delete _tempid;
1581587    run;
1581588    quit;
1581589    %end;
1581590    %else %do;
1581591    data _tempAll;
1581592    set %let j=%eval(&id-1);
1581593    %do x=1 %to &j;
1581594    %if &&nobs&x %then %do;
1581595    _temp&x %end;
1581596    %end;
1581597    ;
1581598    run;
1581599    proc sql;
1581600    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1581600  ! work._tempid p2 where p.name=p2.lhs;
1581601    quit;
1581602    data _temp&id;
1581603    set _temp&id;
1581604    where LHS ne '' and NAME ne '' and Node ne '';
1581605    run;
1581606    proc datasets lib=work nolist;
1581607    delete _tempAll;
1581608    run;
1581609    %let dsid = %sysfunc(open(_temp&id));
1581610    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1581611    %let dsid = %sysfunc(close(&dsid));
1581612    %if ^&&nobs&id %then %do;
1581613    proc datasets lib=work nolist;
1581614    delete _temp&id;
1581615    run;
1581616    quit;
1581617    %end;
1581618    %else %do;
1581619    %let scoreFlag&id = 1;
1581620    data _temp&id;
1581621    set _temp&id;
1581622    where LHS ne NAME and node ne '';
1581623    run;
1581624    %let dsid = %sysfunc(open(_temp&id));
1581625    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1581626    %let dsid = %sysfunc(close(&dsid));
1581627    %if ^&&nobs&id %then %do;
1581628    proc datasets lib=work nolist;
1581629    delete _temp&id;
1581630    run;
1581631    quit;
1581632    %end;
1581633    %else %do;
1581634    proc sort data=_temp&id nodupkey;
1581635    by LHS NAME;
1581636    run;
1581637    %end;
1581638    %end;
1581639    %end;
1581640    %end;
1581641    %mend varDept;
1581642    %macro optCode(outdata=fcmpdata);
1581643    %global fcmpStart;
1581644    %let fcmpStart = 0;
1581645    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1581646    %let NumNodes=9;
1581647    %do k=1 %to &NumNodes;
1581648    %vardept(fcmpdata=&outdata, id=&k);
1581649    %end;
1581650    %mend optCode;
1581651    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1581652    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1581653    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1581654    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1581655    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1581656    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1581657    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1581658    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1581659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581660    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1581661    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1581661  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1581662    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1581663    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1581664    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1581665    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1581666    filename _pref
1581666  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
1581667    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1581668    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
1581669   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1581670   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1581671   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1581672   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1581673   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1581674   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1581675   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1581676   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1581677   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1581678   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1581679   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1581680   +LENGTH _WARN_ $4
1581681   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1581682   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1581683   +
1581684   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1581685   +
1581686   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1581687   +
1581688   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1581689   +
1581690   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1581691   +
1581692   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1581693   +
1581694   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1581695   +
1581696   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1581697   +
1581698   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1581699   +
1581700   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1581701   +
1581702   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1581703   +
1581704   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1581705   +
1581706   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1581707   +
1581708   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1581709   +
1581710   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1581711   +
1581712   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1581713   +
1581714   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1581715   +
1581716   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1581717   +
1581718   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1581719   +
1581720   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1581721   +
1581722   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1581723   +
1581724   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1581725   +
1581726   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1581727   +
1581728   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1581729   +
1581730   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1581731   +
1581732   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1581733   +
1581734   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1581735   +
1581736   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1581737   +
1581738   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1581739   +
1581740   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1581741   +
1581742   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1581743   +
1581744   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1581745   +
1581746   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1581747   +
1581748   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1581749   +
1581750   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1581751   +
1581752   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1581753   +
1581754   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1581755   +
1581756   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1581757   +
1581758   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1581759   +
1581760   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1581761   +
1581762   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1581763   +
1581764   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1581765   +
1581766   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1581767   +
1581768   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1581769   +
1581770   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1581771   +
1581772   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1581773   +
1581774   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1581775   +
1581776   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1581777   +
1581778   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1581779   +
1581780   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1581781   +
1581782   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1581783   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1581784   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1581785   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1581786   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1581787   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581788   +end;
MPRINT(EM_DIAGRAM):   end;
1581789   +else do;
MPRINT(EM_DIAGRAM):   else do;
1581790   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1581791   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1581792   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1581793   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1581794   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1581795   +   end;
MPRINT(EM_DIAGRAM):   end;
1581796   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1581797   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1581798   +   end;
MPRINT(EM_DIAGRAM):   end;
1581799   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1581800   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1581801   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1581802   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581803   +   end;
MPRINT(EM_DIAGRAM):   end;
1581804   +end;
MPRINT(EM_DIAGRAM):   end;
1581805   +
1581806   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1581807   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1581808   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1581809   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1581810   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1581811   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581812   +end;
MPRINT(EM_DIAGRAM):   end;
1581813   +else do;
MPRINT(EM_DIAGRAM):   else do;
1581814   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1581815   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1581816   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1581817   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1581818   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1581819   +   end;
MPRINT(EM_DIAGRAM):   end;
1581820   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1581821   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1581822   +   end;
MPRINT(EM_DIAGRAM):   end;
1581823   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1581824   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1581825   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1581826   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581827   +   end;
MPRINT(EM_DIAGRAM):   end;
1581828   +end;
MPRINT(EM_DIAGRAM):   end;
1581829   +
1581830   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1581831   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1581832   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1581833   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1581834   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1581835   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581836   +end;
MPRINT(EM_DIAGRAM):   end;
1581837   +else do;
MPRINT(EM_DIAGRAM):   else do;
1581838   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1581839   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1581840   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1581841   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1581842   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1581843   +   end;
MPRINT(EM_DIAGRAM):   end;
1581844   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1581845   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1581846   +   end;
MPRINT(EM_DIAGRAM):   end;
1581847   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1581848   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1581849   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1581850   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581851   +   end;
MPRINT(EM_DIAGRAM):   end;
1581852   +end;
MPRINT(EM_DIAGRAM):   end;
1581853   +
1581854   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1581855   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1581856   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1581857   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1581858   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1581859   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581860   +end;
MPRINT(EM_DIAGRAM):   end;
1581861   +else do;
MPRINT(EM_DIAGRAM):   else do;
1581862   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1581863   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1581864   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1581865   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1581866   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1581867   +   end;
MPRINT(EM_DIAGRAM):   end;
1581868   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1581869   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1581870   +   end;
MPRINT(EM_DIAGRAM):   end;
1581871   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1581872   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1581873   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1581874   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581875   +   end;
MPRINT(EM_DIAGRAM):   end;
1581876   +end;
MPRINT(EM_DIAGRAM):   end;
1581877   +
1581878   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1581879   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1581880   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1581881   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1581882   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1581883   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581884   +end;
MPRINT(EM_DIAGRAM):   end;
1581885   +else do;
MPRINT(EM_DIAGRAM):   else do;
1581886   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1581887   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1581888   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1581889   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1581890   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1581891   +   end;
MPRINT(EM_DIAGRAM):   end;
1581892   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1581893   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1581894   +   end;
MPRINT(EM_DIAGRAM):   end;
1581895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1581896   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1581897   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1581898   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581899   +   end;
MPRINT(EM_DIAGRAM):   end;
1581900   +end;
MPRINT(EM_DIAGRAM):   end;
1581901   +
1581902   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1581903   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1581904   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1581905   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1581906   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1581907   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581908   +end;
MPRINT(EM_DIAGRAM):   end;
1581909   +else do;
MPRINT(EM_DIAGRAM):   else do;
1581910   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1581911   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1581912   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1581913   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1581914   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1581915   +   end;
MPRINT(EM_DIAGRAM):   end;
1581916   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1581917   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1581918   +   end;
MPRINT(EM_DIAGRAM):   end;
1581919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1581920   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1581921   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1581922   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581923   +   end;
MPRINT(EM_DIAGRAM):   end;
1581924   +end;
MPRINT(EM_DIAGRAM):   end;
1581925   +
1581926   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1581927   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1581928   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1581929   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1581930   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1581931   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581932   +end;
MPRINT(EM_DIAGRAM):   end;
1581933   +else do;
MPRINT(EM_DIAGRAM):   else do;
1581934   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1581935   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1581936   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1581937   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1581938   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1581939   +   end;
MPRINT(EM_DIAGRAM):   end;
1581940   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1581941   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1581942   +   end;
MPRINT(EM_DIAGRAM):   end;
1581943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1581944   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1581945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1581946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581947   +   end;
MPRINT(EM_DIAGRAM):   end;
1581948   +end;
MPRINT(EM_DIAGRAM):   end;
1581949   +
1581950   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1581951   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1581952   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1581953   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1581954   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1581955   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1581956   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1581957   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1581958   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1581959   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1581960   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1581961   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1581962   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1581963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581964   +end;
MPRINT(EM_DIAGRAM):   end;
1581965   +else do;
MPRINT(EM_DIAGRAM):   else do;
1581966   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1581967   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1581968   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1581969   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1581970   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1581971   +   end;
MPRINT(EM_DIAGRAM):   end;
1581972   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1581973   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1581974   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1581975   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1581976   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1581977   +   end;
MPRINT(EM_DIAGRAM):   end;
1581978   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1581979   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1581980   +   end;
MPRINT(EM_DIAGRAM):   end;
1581981   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1581982   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1581983   +   end;
MPRINT(EM_DIAGRAM):   end;
1581984   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1581985   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1581986   +   end;
MPRINT(EM_DIAGRAM):   end;
1581987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1581988   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1581989   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1581990   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1581991   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1581992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1581993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1581994   +   end;
MPRINT(EM_DIAGRAM):   end;
1581995   +end;
MPRINT(EM_DIAGRAM):   end;
1581996   +
1581997   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1581998   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1581999   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1582000   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1582001   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1582002   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1582003   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1582004   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1582005   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1582006   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1582007   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1582008   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1582009   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1582010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1582011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582012   +end;
MPRINT(EM_DIAGRAM):   end;
1582013   +else do;
MPRINT(EM_DIAGRAM):   else do;
1582014   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1582015   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1582016   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1582017   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1582018   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1582019   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1582020   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1582021   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1582022   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582023   +         end;
MPRINT(EM_DIAGRAM):   end;
1582024   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1582025   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1582026   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1582027   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582028   +            end;
MPRINT(EM_DIAGRAM):   end;
1582029   +         end;
MPRINT(EM_DIAGRAM):   end;
1582030   +      end;
MPRINT(EM_DIAGRAM):   end;
1582031   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1582032   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1582033   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1582034   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582035   +         end;
MPRINT(EM_DIAGRAM):   end;
1582036   +      end;
MPRINT(EM_DIAGRAM):   end;
1582037   +   end;
MPRINT(EM_DIAGRAM):   end;
1582038   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1582039   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1582040   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1582041   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582042   +      end;
MPRINT(EM_DIAGRAM):   end;
1582043   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1582044   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1582045   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1582046   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1582047   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1582048   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1582049   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1582050   +         end;
MPRINT(EM_DIAGRAM):   end;
1582051   +      end;
MPRINT(EM_DIAGRAM):   end;
1582052   +   end;
MPRINT(EM_DIAGRAM):   end;
1582053   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1582054   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1582055   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1582056   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1582057   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1582058   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1582059   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582060   +   end;
MPRINT(EM_DIAGRAM):   end;
1582061   +end;
MPRINT(EM_DIAGRAM):   end;
1582062   +
1582063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582064   +*** Checking missing input Interval
1582065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1582066   +
1582067   +IF NMISS(
1582068   +   AcceptedCmpTotal ,
1582069   +   Age ,
1582070   +   Frq ,
1582071   +   Income ,
1582072   +   Kidhome ,
1582073   +   Mnt ,
1582074   +   MntFishProducts ,
1582075   +   MntFruits ,
1582076   +   MntGoldProds ,
1582077   +   MntMeatProducts ,
1582078   +   MntSweetProducts ,
1582079   +   MntWines ,
1582080   +   MonthsAsCustomer ,
1582081   +   NumCatalogPurchases ,
1582082   +   NumDealsPurchases ,
1582083   +   NumDistPurchases ,
1582084   +   NumStorePurchases ,
1582085   +   NumWebPurchases ,
1582086   +   NumWebVisitsMonth ,
1582087   +   RFMstat ,
1582088   +   RMntFrq ,
1582089   +   Recency ,
1582090   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1582091   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1582092   +
1582093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1582094   +END;
MPRINT(EM_DIAGRAM):   END;
1582095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582096   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1582097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582098   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1582099   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1582100   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1582101   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1582102   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1582103   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1582104   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1582105   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1582106   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1582107   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1582108   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1582109   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1582110   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1582111   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1582112   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1582113   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1582114   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1582115   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1582116   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1582117   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1582118   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1582119   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1582120   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1582121   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1582122   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1582123   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1582124   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1582125   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1582126   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1582127   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1582128   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1582129   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1582130   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1582131   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1582132   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1582133   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1582134   +END;
MPRINT(EM_DIAGRAM):   END;
1582135   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1582136   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1582137   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1582138   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1582139   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1582140   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1582141   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1582142   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1582143   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1582144   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1582145   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1582146   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1582147   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1582148   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1582149   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1582150   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1582151   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1582152   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1582153   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1582154   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1582155   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1582156   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1582157   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1582158   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1582159   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1582160   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1582161   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1582162   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1582163   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1582164   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1582165   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1582166   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1582167   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1582168   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
1582169   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1582170   +   ELSE S_NumCatalogPurchases
1582171   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1582172   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1582173   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1582174   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1582175   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1582176   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1582177   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1582178   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1582179   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1582180   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1582181   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1582182   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1582183   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1582184   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1582185   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1582186   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1582187   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1582188   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1582189   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1582190   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1582191   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1582192   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1582193   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1582194   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1582195   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1582196   +END;
MPRINT(EM_DIAGRAM):   END;
1582197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582198   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1582199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582201   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1582202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582204   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1582205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582206   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1582207   +   H11  =    -0.57767711260067 * S_AcceptedCmpTotal  +    -0.24565202115681 *
1582208   +        S_Age  +     0.28237167938814 * S_Frq  +    -0.14233074057941 *
1582209   +        S_Income  +    -0.48552270697514 * S_Kidhome
1582210   +          +     0.01742868253924 * S_Mnt  +     0.40285078623388 *
1582211   +        S_MntFishProducts  +    -0.05908477313283 * S_MntFruits
1582212   +          +    -0.22243233697782 * S_MntGoldProds  +    -1.17693779318926 *
1582213   +        S_MntMeatProducts  +     0.01461501397476 * S_MntSweetProducts
1582214   +          +     0.39575970251622 * S_MntWines  +     0.09444807481214 *
1582215   +        S_MonthsAsCustomer  +    -0.53872641456476 * S_NumCatalogPurchases
1582216   +          +    -0.23083265836869 * S_NumDealsPurchases
1582217   +          +     0.18257445063797 * S_NumDistPurchases
1582218   +          +     0.38040778765927 * S_NumStorePurchases
1582219   +          +     0.25798779223068 * S_NumWebPurchases
1582220   +          +    -0.11407865954525 * S_NumWebVisitsMonth
1582221   +          +    -0.27830792997478 * S_RFMstat  +    -0.16107125268737 *
1582222   +        S_RMntFrq  +     0.39037056980062 * S_Recency
1582223   +          +     0.40608185739512 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.57767711260067 * S_AcceptedCmpTotal + -0.24565202115681 * S_Age
+ 0.28237167938814 * S_Frq + -0.14233074057941 * S_Income + -0.48552270697514 * S_Kidhome +
0.01742868253924 * S_Mnt + 0.40285078623388 * S_MntFishProducts + -0.05908477313283 *
S_MntFruits + -0.22243233697782 * S_MntGoldProds + -1.17693779318926 * S_MntMeatProducts +
0.01461501397476 * S_MntSweetProducts + 0.39575970251622 * S_MntWines + 0.09444807481214 *
S_MonthsAsCustomer + -0.53872641456476 * S_NumCatalogPurchases + -0.23083265836869 *
S_NumDealsPurchases + 0.18257445063797 * S_NumDistPurchases + 0.38040778765927 *
S_NumStorePurchases + 0.25798779223068 * S_NumWebPurchases + -0.11407865954525 *
S_NumWebVisitsMonth + -0.27830792997478 * S_RFMstat + -0.16107125268737 * S_RMntFrq +
0.39037056980062 * S_Recency + 0.40608185739512 * S_Teenhome ;
1582224   +   H12  =    -0.34424851582147 * S_AcceptedCmpTotal  +     0.13660525926359 *
1582225   +        S_Age  +     0.23405883754868 * S_Frq  +    -0.13337059355005 *
1582226   +        S_Income  +     0.23694585796773 * S_Kidhome
1582227   +          +      0.4901632038269 * S_Mnt  +     0.05999578465889 *
1582228   +        S_MntFishProducts  +     0.03082414442522 * S_MntFruits
1582229   +          +    -0.24918186130548 * S_MntGoldProds  +    -0.88501518933423 *
1582230   +        S_MntMeatProducts  +     0.12858064823466 * S_MntSweetProducts
1582231   +          +     0.64920006983604 * S_MntWines  +     0.24344238362884 *
1582232   +        S_MonthsAsCustomer  +    -0.13156200891896 * S_NumCatalogPurchases
1582233   +          +    -0.07783411363525 * S_NumDealsPurchases
1582234   +          +     0.41281579441285 * S_NumDistPurchases
1582235   +          +     0.22243606867939 * S_NumStorePurchases
1582236   +          +     0.27174952755013 * S_NumWebPurchases
1582237   +          +    -0.60083819502794 * S_NumWebVisitsMonth
1582238   +          +    -0.13817336671298 * S_RFMstat  +      0.3324108445191 *
1582239   +        S_RMntFrq  +     0.36081297418321 * S_Recency
1582240   +          +     0.22032899481074 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.34424851582147 * S_AcceptedCmpTotal + 0.13660525926359 * S_Age
+ 0.23405883754868 * S_Frq + -0.13337059355005 * S_Income + 0.23694585796773 * S_Kidhome +
0.4901632038269 * S_Mnt + 0.05999578465889 * S_MntFishProducts + 0.03082414442522 *
S_MntFruits + -0.24918186130548 * S_MntGoldProds + -0.88501518933423 * S_MntMeatProducts +
0.12858064823466 * S_MntSweetProducts + 0.64920006983604 * S_MntWines + 0.24344238362884 *
S_MonthsAsCustomer + -0.13156200891896 * S_NumCatalogPurchases + -0.07783411363525 *
S_NumDealsPurchases + 0.41281579441285 * S_NumDistPurchases + 0.22243606867939 *
S_NumStorePurchases + 0.27174952755013 * S_NumWebPurchases + -0.60083819502794 *
S_NumWebVisitsMonth + -0.13817336671298 * S_RFMstat + 0.3324108445191 * S_RMntFrq +
0.36081297418321 * S_Recency + 0.22032899481074 * S_Teenhome ;
1582241   +   H13  =    -0.62755413066471 * S_AcceptedCmpTotal  +    -0.10259881548923 *
1582242   +        S_Age  +     0.04904692713298 * S_Frq  +    -0.23224576059777 *
1582243   +        S_Income  +     0.20802765248799 * S_Kidhome
1582244   +          +    -0.15268411625244 * S_Mnt  +    -0.48987569059027 *
1582245   +        S_MntFishProducts  +    -0.14244239893529 * S_MntFruits
1582246   +          +     0.10351032202518 * S_MntGoldProds  +     0.32573653231071 *
1582247   +        S_MntMeatProducts  +     -0.3175031724236 * S_MntSweetProducts
1582248   +          +     0.03692571780893 * S_MntWines  +     0.04373598871023 *
1582249   +        S_MonthsAsCustomer  +     0.02008637671067 * S_NumCatalogPurchases
1582250   +          +     0.09455783738093 * S_NumDealsPurchases
1582251   +          +    -0.06039304909585 * S_NumDistPurchases
1582252   +          +    -0.10306611685636 * S_NumStorePurchases
1582253   +          +    -0.00323837049664 * S_NumWebPurchases
1582254   +          +    -0.02899441658685 * S_NumWebVisitsMonth
1582255   +          +    -0.19007543493775 * S_RFMstat  +     -0.0760616923089 *
1582256   +        S_RMntFrq  +    -0.10387156664208 * S_Recency
1582257   +          +     0.07932105576904 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62755413066471 * S_AcceptedCmpTotal + -0.10259881548923 * S_Age
+ 0.04904692713298 * S_Frq + -0.23224576059777 * S_Income + 0.20802765248799 * S_Kidhome +
-0.15268411625244 * S_Mnt + -0.48987569059027 * S_MntFishProducts + -0.14244239893529 *
S_MntFruits + 0.10351032202518 * S_MntGoldProds + 0.32573653231071 * S_MntMeatProducts +
-0.3175031724236 * S_MntSweetProducts + 0.03692571780893 * S_MntWines + 0.04373598871023 *
S_MonthsAsCustomer + 0.02008637671067 * S_NumCatalogPurchases + 0.09455783738093 *
S_NumDealsPurchases + -0.06039304909585 * S_NumDistPurchases + -0.10306611685636 *
S_NumStorePurchases + -0.00323837049664 * S_NumWebPurchases + -0.02899441658685 *
S_NumWebVisitsMonth + -0.19007543493775 * S_RFMstat + -0.0760616923089 * S_RMntFrq +
-0.10387156664208 * S_Recency + 0.07932105576904 * S_Teenhome ;
1582258   +   H14  =     0.59804906125706 * S_AcceptedCmpTotal  +       0.048025485549 *
1582259   +        S_Age  +      0.2385514201746 * S_Frq  +     0.08479106864241 *
1582260   +        S_Income  +     0.26381864865425 * S_Kidhome
1582261   +          +     0.28889342773086 * S_Mnt  +    -0.21694370369651 *
1582262   +        S_MntFishProducts  +    -0.01726780576394 * S_MntFruits
1582263   +          +    -0.03596803527884 * S_MntGoldProds  +     2.02178262606311 *
1582264   +        S_MntMeatProducts  +     0.28631958927098 * S_MntSweetProducts
1582265   +          +    -0.70527934035036 * S_MntWines  +      0.0067588579357 *
1582266   +        S_MonthsAsCustomer  +     1.79201675789091 * S_NumCatalogPurchases
1582267   +          +      0.8306613243419 * S_NumDealsPurchases
1582268   +          +     0.31439474207278 * S_NumDistPurchases
1582269   +          +    -0.62131474975756 * S_NumStorePurchases
1582270   +          +    -1.04845843654047 * S_NumWebPurchases
1582271   +          +     0.13255915506164 * S_NumWebVisitsMonth
1582272   +          +     0.37283745370069 * S_RFMstat  +    -0.00709301508027 *
1582273   +        S_RMntFrq  +    -0.38407240508995 * S_Recency
1582274   +          +    -0.01872338760754 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.59804906125706 * S_AcceptedCmpTotal + 0.048025485549 * S_Age +
0.2385514201746 * S_Frq + 0.08479106864241 * S_Income + 0.26381864865425 * S_Kidhome +
0.28889342773086 * S_Mnt + -0.21694370369651 * S_MntFishProducts + -0.01726780576394 *
S_MntFruits + -0.03596803527884 * S_MntGoldProds + 2.02178262606311 * S_MntMeatProducts +
0.28631958927098 * S_MntSweetProducts + -0.70527934035036 * S_MntWines + 0.0067588579357 *
S_MonthsAsCustomer + 1.79201675789091 * S_NumCatalogPurchases + 0.8306613243419 *
S_NumDealsPurchases + 0.31439474207278 * S_NumDistPurchases + -0.62131474975756 *
S_NumStorePurchases + -1.04845843654047 * S_NumWebPurchases + 0.13255915506164 *
S_NumWebVisitsMonth + 0.37283745370069 * S_RFMstat + -0.00709301508027 * S_RMntFrq +
-0.38407240508995 * S_Recency + -0.01872338760754 * S_Teenhome ;
1582275   +   H15  =     0.52947177432466 * S_AcceptedCmpTotal  +    -0.03040503223875 *
1582276   +        S_Age  +    -0.18793482590486 * S_Frq  +      0.6935756549022 *
1582277   +        S_Income  +    -0.71599192201946 * S_Kidhome
1582278   +          +     0.07961196010588 * S_Mnt  +     0.08170851848499 *
1582279   +        S_MntFishProducts  +    -0.09701911126913 * S_MntFruits
1582280   +          +    -0.10391699524462 * S_MntGoldProds  +     0.90380593073375 *
1582281   +        S_MntMeatProducts  +    -0.04455643318364 * S_MntSweetProducts
1582282   +          +    -0.40964982046114 * S_MntWines  +     0.01724114428235 *
1582283   +        S_MonthsAsCustomer  +     0.68455913387131 * S_NumCatalogPurchases
1582284   +          +     0.63537278643623 * S_NumDealsPurchases
1582285   +          +     0.00410348485264 * S_NumDistPurchases
1582286   +          +    -0.78287523583925 * S_NumStorePurchases
1582287   +          +    -0.73614491225189 * S_NumWebPurchases
1582288   +          +      1.5997596522354 * S_NumWebVisitsMonth
1582289   +          +     0.06183649633006 * S_RFMstat  +    -0.50480588353928 *
1582290   +        S_RMntFrq  +    -1.33062648259706 * S_Recency
1582291   +          +    -0.30553409454465 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.52947177432466 * S_AcceptedCmpTotal + -0.03040503223875 * S_Age
+ -0.18793482590486 * S_Frq + 0.6935756549022 * S_Income + -0.71599192201946 * S_Kidhome +
0.07961196010588 * S_Mnt + 0.08170851848499 * S_MntFishProducts + -0.09701911126913 *
S_MntFruits + -0.10391699524462 * S_MntGoldProds + 0.90380593073375 * S_MntMeatProducts +
-0.04455643318364 * S_MntSweetProducts + -0.40964982046114 * S_MntWines + 0.01724114428235 *
S_MonthsAsCustomer + 0.68455913387131 * S_NumCatalogPurchases + 0.63537278643623 *
S_NumDealsPurchases + 0.00410348485264 * S_NumDistPurchases + -0.78287523583925 *
S_NumStorePurchases + -0.73614491225189 * S_NumWebPurchases + 1.5997596522354 *
S_NumWebVisitsMonth + 0.06183649633006 * S_RFMstat + -0.50480588353928 * S_RMntFrq +
-1.33062648259706 * S_Recency + -0.30553409454465 * S_Teenhome ;
1582292   +   H16  =    -0.14433986599972 * S_AcceptedCmpTotal  +     0.33628191767642 *
1582293   +        S_Age  +     0.24327822994895 * S_Frq  +      0.2593103121451 *
1582294   +        S_Income  +    -0.23853377939411 * S_Kidhome
1582295   +          +     0.01602761388094 * S_Mnt  +    -0.02328787783663 *
1582296   +        S_MntFishProducts  +     0.00968922234423 * S_MntFruits
1582297   +          +     0.11007108230683 * S_MntGoldProds  +    -0.08340432424598 *
1582298   +        S_MntMeatProducts  +    -0.15484304103951 * S_MntSweetProducts
1582299   +          +    -0.29018175577267 * S_MntWines  +      0.1806827453054 *
1582300   +        S_MonthsAsCustomer  +     0.22550821879825 * S_NumCatalogPurchases
1582301   +          +    -0.30899603957269 * S_NumDealsPurchases
1582302   +          +     0.11839581082877 * S_NumDistPurchases
1582303   +          +     0.20149797391098 * S_NumStorePurchases
1582304   +          +      0.1616654107491 * S_NumWebPurchases
1582305   +          +    -0.19271225686551 * S_NumWebVisitsMonth
1582306   +          +    -0.21711023135071 * S_RFMstat  +    -0.09549242746094 *
1582307   +        S_RMntFrq  +     0.01047910170627 * S_Recency
1582308   +          +     -0.3020815550654 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14433986599972 * S_AcceptedCmpTotal + 0.33628191767642 * S_Age
+ 0.24327822994895 * S_Frq + 0.2593103121451 * S_Income + -0.23853377939411 * S_Kidhome +
0.01602761388094 * S_Mnt + -0.02328787783663 * S_MntFishProducts + 0.00968922234423 *
S_MntFruits + 0.11007108230683 * S_MntGoldProds + -0.08340432424598 * S_MntMeatProducts +
-0.15484304103951 * S_MntSweetProducts + -0.29018175577267 * S_MntWines + 0.1806827453054 *
S_MonthsAsCustomer + 0.22550821879825 * S_NumCatalogPurchases + -0.30899603957269 *
S_NumDealsPurchases + 0.11839581082877 * S_NumDistPurchases + 0.20149797391098 *
S_NumStorePurchases + 0.1616654107491 * S_NumWebPurchases + -0.19271225686551 *
S_NumWebVisitsMonth + -0.21711023135071 * S_RFMstat + -0.09549242746094 * S_RMntFrq +
0.01047910170627 * S_Recency + -0.3020815550654 * S_Teenhome ;
1582309   +   H17  =     0.16650809883276 * S_AcceptedCmpTotal  +    -0.11521097834811 *
1582310   +        S_Age  +     0.03152846916741 * S_Frq  +     0.40983774195025 *
1582311   +        S_Income  +    -0.48650790963695 * S_Kidhome
1582312   +          +        0.11225072991 * S_Mnt  +    -0.28542831709139 *
1582313   +        S_MntFishProducts  +    -0.08029856004002 * S_MntFruits
1582314   +          +     0.10583838856319 * S_MntGoldProds  +     -0.0290614813393 *
1582315   +        S_MntMeatProducts  +    -0.01096619652537 * S_MntSweetProducts
1582316   +          +     0.04262480980522 * S_MntWines  +    -0.11669432787059 *
1582317   +        S_MonthsAsCustomer  +     0.33955671970437 * S_NumCatalogPurchases
1582318   +          +    -0.18889005468777 * S_NumDealsPurchases
1582319   +          +     0.17240918361456 * S_NumDistPurchases
1582320   +          +     0.11704610685994 * S_NumStorePurchases
1582321   +          +     0.23031393640508 * S_NumWebPurchases
1582322   +          +     0.66002859819524 * S_NumWebVisitsMonth
1582323   +          +     0.10481676703972 * S_RFMstat  +     0.11650152002645 *
1582324   +        S_RMntFrq  +    -1.13361206334881 * S_Recency
1582325   +          +    -0.49528314963169 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.16650809883276 * S_AcceptedCmpTotal + -0.11521097834811 * S_Age
+ 0.03152846916741 * S_Frq + 0.40983774195025 * S_Income + -0.48650790963695 * S_Kidhome +
0.11225072991 * S_Mnt + -0.28542831709139 * S_MntFishProducts + -0.08029856004002 *
S_MntFruits + 0.10583838856319 * S_MntGoldProds + -0.0290614813393 * S_MntMeatProducts +
-0.01096619652537 * S_MntSweetProducts + 0.04262480980522 * S_MntWines + -0.11669432787059 *
S_MonthsAsCustomer + 0.33955671970437 * S_NumCatalogPurchases + -0.18889005468777 *
S_NumDealsPurchases + 0.17240918361456 * S_NumDistPurchases + 0.11704610685994 *
S_NumStorePurchases + 0.23031393640508 * S_NumWebPurchases + 0.66002859819524 *
S_NumWebVisitsMonth + 0.10481676703972 * S_RFMstat + 0.11650152002645 * S_RMntFrq +
-1.13361206334881 * S_Recency + -0.49528314963169 * S_Teenhome ;
1582326   +   H11  = H11  +     0.13446791078699 * AcceptedCmp10
1582327   +          +     0.04429639307375 * AcceptedCmp20  +    -0.13028621637792 *
1582328   +        AcceptedCmp30  +    -0.11510727830726 * AcceptedCmp40
1582329   +          +     0.07003922045545 * AcceptedCmp50  +    -0.27409707884649 *
1582330   +        Complain0  +    -0.02797941377984 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13446791078699 * AcceptedCmp10 + 0.04429639307375 *
AcceptedCmp20 + -0.13028621637792 * AcceptedCmp30 + -0.11510727830726 * AcceptedCmp40 +
0.07003922045545 * AcceptedCmp50 + -0.27409707884649 * Complain0 + -0.02797941377984 *
HigherEducationBinary0 ;
1582331   +   H12  = H12  +     0.01887281842523 * AcceptedCmp10
1582332   +          +     0.17827111339959 * AcceptedCmp20  +      0.3834139334955 *
1582333   +        AcceptedCmp30  +    -0.35411645339173 * AcceptedCmp40
1582334   +          +      0.3826012381491 * AcceptedCmp50  +    -0.04061443041339 *
1582335   +        Complain0  +    -0.39126131137052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01887281842523 * AcceptedCmp10 + 0.17827111339959 *
AcceptedCmp20 + 0.3834139334955 * AcceptedCmp30 + -0.35411645339173 * AcceptedCmp40 +
0.3826012381491 * AcceptedCmp50 + -0.04061443041339 * Complain0 + -0.39126131137052 *
HigherEducationBinary0 ;
1582336   +   H13  = H13  +    -0.22268259643926 * AcceptedCmp10
1582337   +          +     0.06118190510274 * AcceptedCmp20  +    -0.03457087111822 *
1582338   +        AcceptedCmp30  +    -0.25288986318995 * AcceptedCmp40
1582339   +          +    -0.04364508506974 * AcceptedCmp50  +     0.04941913394343 *
1582340   +        Complain0  +    -0.02882050630994 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22268259643926 * AcceptedCmp10 + 0.06118190510274 *
AcceptedCmp20 + -0.03457087111822 * AcceptedCmp30 + -0.25288986318995 * AcceptedCmp40 +
-0.04364508506974 * AcceptedCmp50 + 0.04941913394343 * Complain0 + -0.02882050630994 *
HigherEducationBinary0 ;
1582341   +   H14  = H14  +    -0.32915676878874 * AcceptedCmp10
1582342   +          +    -0.10336607872934 * AcceptedCmp20  +      0.1864520200397 *
1582343   +        AcceptedCmp30  +      0.2697012880513 * AcceptedCmp40
1582344   +          +    -0.09721530691585 * AcceptedCmp50  +     0.08632814308981 *
1582345   +        Complain0  +    -0.04468927647522 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32915676878874 * AcceptedCmp10 + -0.10336607872934 *
AcceptedCmp20 + 0.1864520200397 * AcceptedCmp30 + 0.2697012880513 * AcceptedCmp40 +
-0.09721530691585 * AcceptedCmp50 + 0.08632814308981 * Complain0 + -0.04468927647522 *
HigherEducationBinary0 ;
1582346   +   H15  = H15  +    -0.25850522391607 * AcceptedCmp10
1582347   +          +    -0.17803227567502 * AcceptedCmp20  +     -0.1568149803523 *
1582348   +        AcceptedCmp30  +    -0.36395079518876 * AcceptedCmp40
1582349   +          +    -0.34483131403759 * AcceptedCmp50  +     0.01555003563174 *
1582350   +        Complain0  +    -0.28594415027284 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25850522391607 * AcceptedCmp10 + -0.17803227567502 *
AcceptedCmp20 + -0.1568149803523 * AcceptedCmp30 + -0.36395079518876 * AcceptedCmp40 +
-0.34483131403759 * AcceptedCmp50 + 0.01555003563174 * Complain0 + -0.28594415027284 *
HigherEducationBinary0 ;
1582351   +   H16  = H16  +     0.01397091810403 * AcceptedCmp10
1582352   +          +      0.0463641834644 * AcceptedCmp20  +    -0.03977784328807 *
1582353   +        AcceptedCmp30  +     -0.0160913549772 * AcceptedCmp40
1582354   +          +    -0.07333292395504 * AcceptedCmp50  +    -0.06469674138589 *
1582355   +        Complain0  +     0.23688207596397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01397091810403 * AcceptedCmp10 + 0.0463641834644 *
AcceptedCmp20 + -0.03977784328807 * AcceptedCmp30 + -0.0160913549772 * AcceptedCmp40 +
-0.07333292395504 * AcceptedCmp50 + -0.06469674138589 * Complain0 + 0.23688207596397 *
HigherEducationBinary0 ;
1582356   +   H17  = H17  +     0.01442797851067 * AcceptedCmp10
1582357   +          +    -0.17701474731803 * AcceptedCmp20  +    -0.28388805248716 *
1582358   +        AcceptedCmp30  +    -0.27327948779158 * AcceptedCmp40
1582359   +          +    -0.13168193470011 * AcceptedCmp50  +    -0.14127010572854 *
1582360   +        Complain0  +     0.33010560570117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01442797851067 * AcceptedCmp10 + -0.17701474731803 *
AcceptedCmp20 + -0.28388805248716 * AcceptedCmp30 + -0.27327948779158 * AcceptedCmp40 +
-0.13168193470011 * AcceptedCmp50 + -0.14127010572854 * Complain0 + 0.33010560570117 *
HigherEducationBinary0 ;
1582361   +   H11  = H11  +     0.06224136252276 * Education2n_Cycle
1582362   +          +     0.29245093750846 * EducationBasic  +     0.31778509227349 *
1582363   +        EducationGraduation  +     0.02842294928395 * EducationMaster
1582364   +          +     0.43452164349556 * Marital_StatusDivorced
1582365   +          +    -0.46042593279944 * Marital_StatusMarried
1582366   +          +     0.45533323427801 * Marital_StatusSingle
1582367   +          +    -0.35509352048115 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06224136252276 * Education2n_Cycle + 0.29245093750846 *
EducationBasic + 0.31778509227349 * EducationGraduation + 0.02842294928395 * EducationMaster +
0.43452164349556 * Marital_StatusDivorced + -0.46042593279944 * Marital_StatusMarried +
0.45533323427801 * Marital_StatusSingle + -0.35509352048115 * Marital_StatusTogether ;
1582368   +   H12  = H12  +    -0.15299990287677 * Education2n_Cycle
1582369   +          +     0.02656890344215 * EducationBasic  +    -0.05706986878494 *
1582370   +        EducationGraduation  +     0.29768497071806 * EducationMaster
1582371   +          +     0.11002244687305 * Marital_StatusDivorced
1582372   +          +     0.52424349905683 * Marital_StatusMarried
1582373   +          +     -0.3969250366321 * Marital_StatusSingle
1582374   +          +     0.61408135981641 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15299990287677 * Education2n_Cycle + 0.02656890344215 *
EducationBasic + -0.05706986878494 * EducationGraduation + 0.29768497071806 * EducationMaster
+ 0.11002244687305 * Marital_StatusDivorced + 0.52424349905683 * Marital_StatusMarried +
-0.3969250366321 * Marital_StatusSingle + 0.61408135981641 * Marital_StatusTogether ;
1582375   +   H13  = H13  +     0.07276942595416 * Education2n_Cycle
1582376   +          +      0.2275172950841 * EducationBasic  +     -0.0976909406084 *
1582377   +        EducationGraduation  +     0.19833004850974 * EducationMaster
1582378   +          +    -0.05300704180744 * Marital_StatusDivorced
1582379   +          +     0.07805487103106 * Marital_StatusMarried
1582380   +          +     0.20033339442958 * Marital_StatusSingle
1582381   +          +     0.21842395296443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07276942595416 * Education2n_Cycle + 0.2275172950841 *
EducationBasic + -0.0976909406084 * EducationGraduation + 0.19833004850974 * EducationMaster +
-0.05300704180744 * Marital_StatusDivorced + 0.07805487103106 * Marital_StatusMarried +
0.20033339442958 * Marital_StatusSingle + 0.21842395296443 * Marital_StatusTogether ;
1582382   +   H14  = H14  +    -0.17400384354577 * Education2n_Cycle
1582383   +          +     0.11225346861296 * EducationBasic  +     -0.0442458725683 *
1582384   +        EducationGraduation  +     0.29409181424889 * EducationMaster
1582385   +          +    -0.42379596543146 * Marital_StatusDivorced
1582386   +          +     0.66738351478416 * Marital_StatusMarried
1582387   +          +    -0.37324277578462 * Marital_StatusSingle
1582388   +          +     0.69171114809758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.17400384354577 * Education2n_Cycle + 0.11225346861296 *
EducationBasic + -0.0442458725683 * EducationGraduation + 0.29409181424889 * EducationMaster +
-0.42379596543146 * Marital_StatusDivorced + 0.66738351478416 * Marital_StatusMarried +
-0.37324277578462 * Marital_StatusSingle + 0.69171114809758 * Marital_StatusTogether ;
1582389   +   H15  = H15  +     0.14908434818686 * Education2n_Cycle
1582390   +          +    -0.26880623082589 * EducationBasic  +     0.32861255886248 *
1582391   +        EducationGraduation  +    -0.20061683006464 * EducationMaster
1582392   +          +     0.88761025578489 * Marital_StatusDivorced
1582393   +          +    -0.85905539883385 * Marital_StatusMarried
1582394   +          +     0.73467737758558 * Marital_StatusSingle
1582395   +          +    -0.96025981753604 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14908434818686 * Education2n_Cycle + -0.26880623082589 *
EducationBasic + 0.32861255886248 * EducationGraduation + -0.20061683006464 * EducationMaster
+ 0.88761025578489 * Marital_StatusDivorced + -0.85905539883385 * Marital_StatusMarried +
0.73467737758558 * Marital_StatusSingle + -0.96025981753604 * Marital_StatusTogether ;
1582396   +   H16  = H16  +     0.06300683576162 * Education2n_Cycle
1582397   +          +    -0.33042090710562 * EducationBasic  +    -0.11648771701926 *
1582398   +        EducationGraduation  +    -0.12214773396989 * EducationMaster
1582399   +          +    -0.11980818075461 * Marital_StatusDivorced
1582400   +          +    -0.16572953052582 * Marital_StatusMarried
1582401   +          +     0.34617421331983 * Marital_StatusSingle
1582402   +          +    -0.11159044098264 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06300683576162 * Education2n_Cycle + -0.33042090710562 *
EducationBasic + -0.11648771701926 * EducationGraduation + -0.12214773396989 * EducationMaster
+ -0.11980818075461 * Marital_StatusDivorced + -0.16572953052582 * Marital_StatusMarried +
0.34617421331983 * Marital_StatusSingle + -0.11159044098264 * Marital_StatusTogether ;
1582403   +   H17  = H17  +     0.01575681216702 * Education2n_Cycle
1582404   +          +    -0.21038330244472 * EducationBasic  +    -0.13079470098556 *
1582405   +        EducationGraduation  +    -0.08509814368676 * EducationMaster
1582406   +          +     0.14874886057777 * Marital_StatusDivorced
1582407   +          +     -1.0463076915992 * Marital_StatusMarried
1582408   +          +     0.72937563672763 * Marital_StatusSingle
1582409   +          +    -0.65508763277891 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01575681216702 * Education2n_Cycle + -0.21038330244472 *
EducationBasic + -0.13079470098556 * EducationGraduation + -0.08509814368676 * EducationMaster
+ 0.14874886057777 * Marital_StatusDivorced + -1.0463076915992 * Marital_StatusMarried +
0.72937563672763 * Marital_StatusSingle + -0.65508763277891 * Marital_StatusTogether ;
1582410   +   H11  =     0.01708225019201 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.01708225019201 + H11 ;
1582411   +   H12  =    -0.57231824569332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.57231824569332 + H12 ;
1582412   +   H13  =    -1.03595775479654 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03595775479654 + H13 ;
1582413   +   H14  =     0.85578219568815 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85578219568815 + H14 ;
1582414   +   H15  =    -0.42875367789614 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42875367789614 + H15 ;
1582415   +   H16  =     -1.7731593212448 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7731593212448 + H16 ;
1582416   +   H17  =    -1.61118674590008 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.61118674590008 + H17 ;
1582417   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1582418   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1582419   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1582420   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1582421   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1582422   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1582423   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1582424   +END;
MPRINT(EM_DIAGRAM):   END;
1582425   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1582426   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1582427   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1582428   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1582429   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1582430   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1582431   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1582432   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1582433   +END;
MPRINT(EM_DIAGRAM):   END;
1582434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582435   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1582436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582437   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1582438   +   P_DepVar1  =    -1.64435097572782 * H11  +    -1.62763570310445 * H12
1582439   +          +     0.35714449519239 * H13  +     3.29820395171258 * H14
1582440   +          +     3.62007777753694 * H15  +     0.58503229487751 * H16
1582441   +          +     2.19267705077374 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.64435097572782 * H11 + -1.62763570310445 * H12 +
0.35714449519239 * H13 + 3.29820395171258 * H14 + 3.62007777753694 * H15 + 0.58503229487751 *
H16 + 2.19267705077374 * H17 ;
1582442   +   P_DepVar1  =    -2.18043832074058 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.18043832074058 + P_DepVar1 ;
1582443   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1582444   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1582445   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1582446   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1582447   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1582448   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1582449   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1582450   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1582451   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1582452   +END;
MPRINT(EM_DIAGRAM):   END;
1582453   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1582454   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1582455   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1582456   +END;
MPRINT(EM_DIAGRAM):   END;
1582457   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1582458   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1582459   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1582460   +END;
MPRINT(EM_DIAGRAM):   END;
1582461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582462   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1582463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1582464   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1582465   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1582466   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1582467   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1582468   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1582469   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1582470   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1582471   +END;
MPRINT(EM_DIAGRAM):   END;
1582472   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1582473   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1582474   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1582475   +drop
1582476   +H11
1582477   +H12
1582478   +H13
1582479   +H14
1582480   +H15
1582481   +H16
1582482   +H17
1582483   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1582484   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1582485    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1582486    quit;
1582487    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1582488    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1582489    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1582490    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
1582491    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1582492    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582493    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1582494    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582495    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1582496    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
1582497    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582499    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1582500    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1582501    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1582502    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582503    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
1582504    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1582505    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1582506    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582507    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582508    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1582509    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1582510    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582511    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582512    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1582513    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1582513  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.
 
1582514    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582515    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1582516    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582517    filename _pref
1582517  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1582518    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1582519    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1582520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582521   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1582522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1582523   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1582524   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1582525   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1582526    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1582527    quit;
1582528    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1582529    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1582530    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1582531    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1582532    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1582533    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582534    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1582535    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582537    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1582538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582540    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1582541    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1582542    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1582543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582544    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1582545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1582546    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1582547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582549    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1582550    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1582551    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582552    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1582553    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1582554    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1582554  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1582555    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582556    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1582557    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582558    filename _pref
1582558  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1582559    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1582560    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1582561   +
1582562   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1582563   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1582563  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1582564   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1582565   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1582566   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1582567   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1582568   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1582569    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1582570    quit;
1582571    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1582572    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1582573    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1582574    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1582575    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1582576    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582577    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1582578    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582580    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1582581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582582    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582583    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1582584    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1582585    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1582586    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1582587    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1582588    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582589    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1582590    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582592    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1582593    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1582594    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582595    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582596    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1582597    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1582597  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1582598    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582599    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1582600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582601    filename _pref
1582601  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1582602    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1582603    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1582604   +
1582605   +
1582606   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1582607   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1582608   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1582609   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1582610   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1582611   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1582612   +
1582613   +
1582614   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1582615   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1582616   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1582617   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1582618   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1582619   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1582620   +
1582621   +
1582622   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1582623   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1582624   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1582625   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1582626   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1582627   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1582628   +
1582629   +
1582630   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1582631   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1582632   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1582633   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1582634   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1582635   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1582636   +
1582637   +
1582638   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1582639   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1582640   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1582641   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1582642   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1582643   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1582644   +
1582645   +
1582646   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1582647   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1582648   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1582649   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1582650   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1582651   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1582652   +
1582653   +
1582654   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1582655   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1582656   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1582657   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1582658   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1582659   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1582660   +
1582661   +
1582662   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1582663   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1582664   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1582665   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1582666   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1582667   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1582668   +if
1582669   +_FILTERNORM1 not in ( '.')
1582670   + and
1582671   +_FILTERNORM2 not in ( '.')
1582672   + and
1582673   +_FILTERNORM3 not in ( '.')
1582674   + and
1582675   +_FILTERNORM4 not in ( '.')
1582676   + and
1582677   +_FILTERNORM5 not in ( '.')
1582678   + and
1582679   +_FILTERNORM6 not in ( '.')
1582680   + and
1582681   +_FILTERNORM7 not in ( ' ')
1582682   + and
1582683   +_FILTERNORM8 not in ( ' ')
1582684   +and
1582685   +( Dt_Customer ne .)
1582686   +and ( Income ne . and (Income<=107000))
1582687   +and ( Kidhome ne .)
1582688   +and ( MntFishProducts ne .)
1582689   +and ( MntFruits ne .)
1582690   +and ( MntGoldProds ne .)
1582691   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1582692   +and ( MntSweetProducts ne .)
1582693   +and ( MntWines ne .)
1582694   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1582695   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1582696   +and ( NumStorePurchases ne .)
1582697   +and ( NumWebPurchases ne .)
1582698   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1582699   +and ( Recency ne .)
1582700   +and ( Teenhome ne .)
1582701   +and ( Year_Birth ne .)
1582702   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1582703   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1582704   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1582705   +end;
MPRINT(EM_DIAGRAM):   end;
1582706   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1582707   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1582708    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1582709    quit;
1582710    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1582711    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1582712    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1582713    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1582714    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1582715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1582716    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1582717    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582718    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582719    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1582720    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582721    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582722    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1582723    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1582724    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1582725    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1582726    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1582727    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1582728    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1582729    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582730    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1582731    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1582732    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1582733    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1582734    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582735    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1582736    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1582736  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1582737    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582738    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1582739    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582740    %macro varDept(fcmpdata=,id=);
1582741    %global nobs&id scoreFlag&id;
1582742    %let scoreFlag&id = 0;
The SAS System
 
1582743    %if &id=1 or ^&fcmpStart %then %do;
1582744    proc sort data=&fcmpdata out=_temp&id nodupkey;
1582745    by NAME;
1582746    where id=&id and LHS in( %let j=1;
1582747    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1582748    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1582749    "&var" %let j = %eval(&j+1);
1582750    %end;
1582751    );
1582752    run;
1582753    %let dsid = %sysfunc(open(_temp&id));
1582754    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1582755    %let dsid = %sysfunc(close(&dsid));
1582756    %if &&nobs&id %then %do;
1582757    %let scoreFlag&id = 1;
1582758    %let fcmpStart = 1;
1582759    %end;
1582760    %else %let fcmpStart = 0;
1582761    %end;
1582762    %else %do;
1582763    proc sort data=&fcmpdata out=_tempid;
1582764    where id=&id;
1582765    by LHS;
1582766    run;
1582767    %let dsid = %sysfunc(open(_tempid));
1582768    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1582769    %let dsid = %sysfunc(close(&dsid));
1582770    %if ^&&nobs&id %then %do;
1582771    proc datasets lib=work nolist;
1582772    delete _tempid;
1582773    run;
1582774    quit;
1582775    %end;
1582776    %else %do;
1582777    data _tempAll;
1582778    set %let j=%eval(&id-1);
1582779    %do x=1 %to &j;
1582780    %if &&nobs&x %then %do;
1582781    _temp&x %end;
1582782    %end;
1582783    ;
1582784    run;
1582785    proc sql;
1582786    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1582786  ! work._tempid p2 where p.name=p2.lhs;
1582787    quit;
1582788    data _temp&id;
1582789    set _temp&id;
1582790    where LHS ne '' and NAME ne '' and Node ne '';
1582791    run;
1582792    proc datasets lib=work nolist;
1582793    delete _tempAll;
1582794    run;
1582795    %let dsid = %sysfunc(open(_temp&id));
1582796    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1582797    %let dsid = %sysfunc(close(&dsid));
1582798    %if ^&&nobs&id %then %do;
1582799    proc datasets lib=work nolist;
1582800    delete _temp&id;
1582801    run;
1582802    quit;
1582803    %end;
1582804    %else %do;
1582805    %let scoreFlag&id = 1;
1582806    data _temp&id;
1582807    set _temp&id;
1582808    where LHS ne NAME and node ne '';
1582809    run;
1582810    %let dsid = %sysfunc(open(_temp&id));
1582811    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1582812    %let dsid = %sysfunc(close(&dsid));
1582813    %if ^&&nobs&id %then %do;
1582814    proc datasets lib=work nolist;
1582815    delete _temp&id;
1582816    run;
1582817    quit;
1582818    %end;
1582819    %else %do;
1582820    proc sort data=_temp&id nodupkey;
1582821    by LHS NAME;
1582822    run;
1582823    %end;
1582824    %end;
1582825    %end;
1582826    %end;
1582827    %mend varDept;
1582828    %macro optCode(outdata=fcmpdata);
1582829    %global fcmpStart;
1582830    %let fcmpStart = 0;
1582831    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1582832    %let NumNodes=9;
1582833    %do k=1 %to &NumNodes;
1582834    %vardept(fcmpdata=&outdata, id=&k);
1582835    %end;
1582836    %mend optCode;
1582837    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1582838    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1582839    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1582840    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1582841    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582842    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1582843    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1582844    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1582845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1582846    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1582847    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1582847  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1582848    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1582849    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1582850    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1582851    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1582852    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1582853    * Ensmbl27: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing metadata for TRAIN data;
1582854    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL27_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl27_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl27_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl27_TRAIN out=WORK.M2XH_XCN noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2XH_XCN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2XH_XCN(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2XH_XCN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2XH_XCN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3TFHVK3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TFHVK3;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3TFHVK3;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RW6JBP(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3TFHVK3;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TFHVK3;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3TFHVK3;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TFHVK3;
MPRINT(EMADVISECOLUMNS):   set WORK.M3TFHVK3;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl27";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl27";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1583174    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1583175    set EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMINFO;
1583176    where DATA='Ensmbl27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1583177    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_EMINFO.
      WHERE (DATA='Ensmbl27') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1583178    data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMINFO;
1583179    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1583180    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1583181    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1583185    run;
1583186    data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMINFO;
1583187    set EMWS8.Ensmbl27_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMINFO WORK.MODELTEMP_INFO;
1583188    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1583189    proc sort data = EMWS8.Ensmbl27_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl27_EMINFO NOTHREADS;
1583190    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1583191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1583192    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1583193    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1583194    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.REG5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1583195    proc sort data = EMWS8.Ensmbl27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1583196    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1583197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1583198    data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMINFO;
1583199    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1583200    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1583201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1583202    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1583203    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1583204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1583205    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL27_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL27_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.32 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20. April 2016
Time:                17.32 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2J0LB9_
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2J0LB9_ new;
MPRINT(EM_DIAGRAM):   run;
1583229    data EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMOUTFIT;
1583230    set EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMOUTFIT;
1583231    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1583232    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1583232  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1583233    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1583234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL27_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL27_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
1583235    proc sort data=EMWS8.Ensmbl27_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl27_EMREPORTFIT nothreads;
1583236    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1583237    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL27_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL27_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1583238    %let _EMwarndup = 0;
1583239    %let _EMtargetdup =;
1583240    %let _EMASEtargetdup =;
1583241    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1583242    set EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMOUTFIT;
1583243    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1583244    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1583245    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1583246    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1583247    end;
MPRINT(EM_DIAGRAM):   end;
1583248    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL27_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1583249    proc sort data=EMWS8.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
1583250    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1583251    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1583252    proc sort data=EMWS8.Ensmbl27_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl27_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1583253    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1583254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL27_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1583255    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1583256    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1583257    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1583258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1583259    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1583260    set EMWS8.Ensmbl27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_CMeta_TRAIN;
1583261    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1583261  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1583262    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL27_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1583263    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1583264    set EMWS8.Ensmbl27_TRAIN(keep=
1583265    F_DepVar
1583266    I_DepVar
1583267    P_DepVar0
1583268    P_DepVar1
1583269    R_DepVar0
1583270    R_DepVar1
1583271    U_DepVar
1583272    _WARN_
1583273    DepVar
1583274    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1583275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL27_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.REG5_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL27_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl27_0GKGTB6 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl27_0GKGTB6;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl27_0GKGTB6(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl27_0GKGTB6;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl27_0GKGTB6;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0002143049 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1587541    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1587542    set EMWS8.Ensmbl27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_CMeta_TRAIN;
1587543    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1587543  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1587544    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL27_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1587545    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1587546    set EMWS8.Ensmbl27_VALIDATE(keep=
1587547    F_DepVar
1587548    I_DepVar
1587549    P_DepVar0
1587550    P_DepVar1
1587551    R_DepVar0
1587552    R_DepVar1
1587553    U_DepVar
1587554    _WARN_
1587555    DepVar
1587556    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1587557    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL27_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.REG5_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL27_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl27_2WJS28J nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl27_2WJS28J;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl27_2WJS28J(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMCLASSIFICATION WORK.Ensmbl27_2WJS28J;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl27_2WJS28J;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0002143066 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1591832    %let _cn = %sysfunc(getoption(CENTER));
1591833    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1591834    proc print data=EMWS8.Ensmbl27_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl27_EMREPORTFIT noobs label;
1591835    var STAT LABEL TRAIN
1591836    VALIDATE
1591837    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1591838    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1591839    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1591840    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1591841    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL27_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1789.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1591842    title10;
MPRINT(EM_DIAGRAM):   title10;
1591843    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1591844    proc sort data=EMWS8.Ensmbl27_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl27_EMCLASSIFICATION nothreads;
1591845    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1591846    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL27_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL27_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1591847    %let _cn = %sysfunc(getoption(CENTER));
1591848    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1591849    proc print data=EMWS8.Ensmbl27_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl27_EMCLASSIFICATION noobs label;
1591850    var from into pct_row pct_col count percent
1591851    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1591852    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1591853    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1591854    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1591855    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1591856    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1591857    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1591858    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1591859    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1591860    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1591861    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1591862    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL27_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1790.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1591863    title9;
MPRINT(EM_DIAGRAM):   title9;
1591864    title10;
MPRINT(EM_DIAGRAM):   title10;
1591865    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1591866    %let _cn = %sysfunc(getoption(CENTER));
1591867    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1591868    data EMWS8.Ensmbl27_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMEVENTREPORT;
1591869    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1591869  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1591870    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1591870  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1591870  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1591870  ! FALSEEVENT
1591871    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1591871  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1591871  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1591872       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1591873    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1591874    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1591875    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1591876    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1591877    set EMWS8.Ensmbl27_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMEVENTREPORT;
1591878    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL27_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL27_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1591879    proc print data=EMWS8.Ensmbl27_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl27_EMEVENTREPORT noobs label;
1591880    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1591881    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1591882    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1591883    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL27_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1791.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1591884    title10;
MPRINT(EM_DIAGRAM):   title10;
1591885    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1591886    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1591887    modify Ensmbl27_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl27_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1591888    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1591889    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1591889  ! ;
MPRINT(EM_DIAGRAM):   run;
1591890    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL27_EMRANK.DATA.
1591891    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
1591892    %let _cn = %sysfunc(getoption(CENTER));
1591893    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1591894    proc print data=EMWS8.Ensmbl27_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl27_EMRANK label noobs;
1591895    var
1591896    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1591897    by
1591898    notsorted DATAROLE
1591899    notsorted TARGET
1591900    notsorted TARGETLABEL
1591901    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1591902    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1591903    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1591904    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL27_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1792.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1591905    title10;
MPRINT(EM_DIAGRAM):   title10;
1591906    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1591907    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1591908    modify Ensmbl27_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl27_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1591909    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1591909  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1591910    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1591910  ! ;
MPRINT(EM_DIAGRAM):   run;
1591911    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL27_EMSCOREDIST.DATA.
1591912    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl27_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
