MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.58 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.58 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1X57ZKX 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1X57ZKX new;
MPRINT(EM_DIAGRAM):   run;
1551149    filename emflow
1551149  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring REG5_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551150    *------------------------------------------------------------*;
1551151    * Ensmbl27: Scoring REG5_TRAIN data;
1551152    *------------------------------------------------------------*;
1551153    data EMWS8.Ensmbl27_TRAIN
1551154    / view=EMWS8.Ensmbl27_TRAIN
1551155    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_TRAIN / view=EMWS8.Ensmbl27_TRAIN ;
1551156    set EMWS8.Reg5_TRAIN
1551157    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_TRAIN ;
1551158    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas.
1551159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551160   +* Ensmbl27: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Combine model for DepVar;
1551161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551162   +* Ensmbl27: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 1 of 7;
1551163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551165   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1551166   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1551167   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1551168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551169   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551170   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1551171   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1551172   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1551173   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551175   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1551176   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1551177   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1551178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551180   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1551181   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1551182   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1551183   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551184   +
1551185   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1551186   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1551186  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1551187   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1551188   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1551189   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1551190   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1551191   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1551192   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551193   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1551194   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1551195   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1551196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551198   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1551199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551200   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1551201   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1551202   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1551203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551204   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1551205   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1551206   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1551207   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551208   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551209   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1551210   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1551211   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1551212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551213   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551214   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1551215   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1551216   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1551217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551218   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1551219   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1551220   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1551221   +
1551222   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1551223   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1551224   +
1551225   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1551226   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1551227   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1551228   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1551229   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1551230   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1551231   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1551232   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1551233   +
1551234   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1551235   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1551236   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1551237   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1551238   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1551239   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1551240   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1551241   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1551242   +end;
MPRINT(EM_DIAGRAM):   end;
1551243   +else do;
MPRINT(EM_DIAGRAM):   else do;
1551244   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1551245   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1551246   +   end;
MPRINT(EM_DIAGRAM):   end;
1551247   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1551248   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1551249   +   end;
MPRINT(EM_DIAGRAM):   end;
1551250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1551251   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1551252   +   end;
MPRINT(EM_DIAGRAM):   end;
1551253   +end;
MPRINT(EM_DIAGRAM):   end;
1551254   +
1551255   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1551256   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1551257   +
1551258   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1551259   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1551260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551262   +end;
MPRINT(EM_DIAGRAM):   end;
1551263   +
1551264   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1551265   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1551266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551268   +end;
MPRINT(EM_DIAGRAM):   end;
1551269   +
1551270   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1551271   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1551272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551274   +end;
MPRINT(EM_DIAGRAM):   end;
1551275   +
1551276   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1551277   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1551278   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551280   +end;
MPRINT(EM_DIAGRAM):   end;
1551281   +
1551282   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1551283   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1551284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551286   +end;
MPRINT(EM_DIAGRAM):   end;
1551287   +
1551288   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1551289   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1551290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551292   +end;
MPRINT(EM_DIAGRAM):   end;
1551293   +
1551294   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1551295   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1551296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551298   +end;
MPRINT(EM_DIAGRAM):   end;
1551299   +
1551300   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1551301   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1551302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551304   +end;
MPRINT(EM_DIAGRAM):   end;
1551305   +
1551306   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1551307   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1551308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551310   +end;
MPRINT(EM_DIAGRAM):   end;
1551311   +
1551312   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1551313   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1551314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551316   +end;
MPRINT(EM_DIAGRAM):   end;
1551317   +
1551318   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1551319   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1551320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551322   +end;
MPRINT(EM_DIAGRAM):   end;
1551323   +
1551324   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1551325   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1551326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551328   +end;
MPRINT(EM_DIAGRAM):   end;
1551329   +
1551330   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1551331   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1551332   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1551333   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1551334   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1551335   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1551336   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1551337   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1551338   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1551339   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1551340   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1551341   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1551342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551344   +end;
MPRINT(EM_DIAGRAM):   end;
1551345   +else do;
MPRINT(EM_DIAGRAM):   else do;
1551346   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1551347   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1551348   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1551349   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1551350   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1551351   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1551352   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1551353   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1551354   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1551355   +         end;
MPRINT(EM_DIAGRAM):   end;
1551356   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1551357   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1551358   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1551359   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1551360   +            end;
MPRINT(EM_DIAGRAM):   end;
1551361   +         end;
MPRINT(EM_DIAGRAM):   end;
1551362   +      end;
MPRINT(EM_DIAGRAM):   end;
1551363   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1551364   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1551365   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1551366   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1551367   +         end;
MPRINT(EM_DIAGRAM):   end;
1551368   +      end;
MPRINT(EM_DIAGRAM):   end;
1551369   +   end;
MPRINT(EM_DIAGRAM):   end;
1551370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1551371   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1551372   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1551373   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1551374   +      end;
MPRINT(EM_DIAGRAM):   end;
1551375   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1551376   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1551377   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1551378   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1551379   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1551380   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1551381   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1551382   +         end;
MPRINT(EM_DIAGRAM):   end;
1551383   +      end;
MPRINT(EM_DIAGRAM):   end;
1551384   +   end;
MPRINT(EM_DIAGRAM):   end;
1551385   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1551386   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1551387   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1551388   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1551389   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1551390   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1551391   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551392   +   end;
MPRINT(EM_DIAGRAM):   end;
1551393   +end;
MPRINT(EM_DIAGRAM):   end;
1551394   +
1551395   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1551396   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1551397   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1551398   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1551399   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1551400   +end;
MPRINT(EM_DIAGRAM):   end;
1551401   +
1551402   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1551403   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1551404   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1551405   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1551406   +
1551407   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1551408   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1551409   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1551410   +
1551411   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1551412   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1551413   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1551414   +
1551415   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1551416   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1551417   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1551418   +
1551419   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1551420   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1551421   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1551422   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1551423   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1551424   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1551425   +
1551426   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1551427   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1551428   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1551429   +
1551430   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1551431   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1551432   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1551433   +
1551434   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1551435   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1551436   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1551437   +
1551438   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1551439   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1551440   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1551441   +
1551442   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1551443   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1551444   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1551445   +
1551446   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1551447   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1551448   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1551449   +
1551450   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1551451   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1551452   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1551453   +
1551454   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1551455   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1551456   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1551457   +
1551458   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1551459   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1551460   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1551461   +
1551462   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1551463   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1551464   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1551465   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1551466   +
1551467   +REG5DR1:
1551468   +
1551469   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1551470   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1551471   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1551472   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1551473   +end;
MPRINT(EM_DIAGRAM):   end;
1551474   +else do;
MPRINT(EM_DIAGRAM):   else do;
1551475   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1551476   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1551477   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1551478   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1551479   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1551480   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1551481   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1551482   +   end;
MPRINT(EM_DIAGRAM):   end;
1551483   +end;
MPRINT(EM_DIAGRAM):   end;
1551484   +
1551485   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1551486   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1551487   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1551488   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1551489   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1551490   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1551491   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1551492   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1551493   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1551494   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1551495   +end;
MPRINT(EM_DIAGRAM):   end;
1551496   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1551497   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1551498   +
1551499   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1551500   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1551501   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1551502   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1551503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551504   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1551505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551506   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1551507   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1551508   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1551509   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1551510   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551511   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1551512   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551513   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1551514   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1551515   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1551516   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551517   +* Ensmbl27: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 2 of 7;
1551518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551520   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1551521   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1551522   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1551523   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551524   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1551525   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1551526   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1551527   +
1551528   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1551529   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1551530   +
1551531   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1551532   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1551533   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1551534   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1551535   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1551536   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1551537   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1551538   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1551539   +
1551540   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1551541   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1551542   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1551543   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1551544   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1551545   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1551546   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1551547   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1551548   +end;
MPRINT(EM_DIAGRAM):   end;
1551549   +else do;
MPRINT(EM_DIAGRAM):   else do;
1551550   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1551551   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1551552   +   end;
MPRINT(EM_DIAGRAM):   end;
1551553   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1551554   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1551555   +   end;
MPRINT(EM_DIAGRAM):   end;
1551556   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1551557   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1551558   +   end;
MPRINT(EM_DIAGRAM):   end;
1551559   +end;
MPRINT(EM_DIAGRAM):   end;
1551560   +
1551561   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1551562   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1551563   +
1551564   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1551565   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1551566   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551567   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551568   +end;
MPRINT(EM_DIAGRAM):   end;
1551569   +
1551570   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1551571   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1551572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551574   +end;
MPRINT(EM_DIAGRAM):   end;
1551575   +
1551576   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1551577   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1551578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551580   +end;
MPRINT(EM_DIAGRAM):   end;
1551581   +
1551582   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1551583   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1551584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551586   +end;
MPRINT(EM_DIAGRAM):   end;
1551587   +
1551588   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1551589   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1551590   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551591   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551592   +end;
MPRINT(EM_DIAGRAM):   end;
1551593   +
1551594   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1551595   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1551596   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551598   +end;
MPRINT(EM_DIAGRAM):   end;
1551599   +
1551600   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1551601   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1551602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551604   +end;
MPRINT(EM_DIAGRAM):   end;
1551605   +
1551606   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1551607   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1551608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551610   +end;
MPRINT(EM_DIAGRAM):   end;
1551611   +
1551612   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1551613   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1551614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551616   +end;
MPRINT(EM_DIAGRAM):   end;
1551617   +
1551618   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1551619   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1551620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551622   +end;
MPRINT(EM_DIAGRAM):   end;
1551623   +
1551624   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1551625   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1551626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551628   +end;
MPRINT(EM_DIAGRAM):   end;
1551629   +
1551630   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1551631   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1551632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551634   +end;
MPRINT(EM_DIAGRAM):   end;
1551635   +
1551636   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1551637   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1551638   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551640   +end;
MPRINT(EM_DIAGRAM):   end;
1551641   +
1551642   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1551643   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1551644   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1551645   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1551646   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1551647   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1551648   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1551649   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1551650   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1551651   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1551652   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1551653   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1551654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551656   +end;
MPRINT(EM_DIAGRAM):   end;
1551657   +else do;
MPRINT(EM_DIAGRAM):   else do;
1551658   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1551659   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1551660   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1551661   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1551662   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1551663   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1551664   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1551665   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1551666   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1551667   +         end;
MPRINT(EM_DIAGRAM):   end;
1551668   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1551669   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1551670   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1551671   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1551672   +            end;
MPRINT(EM_DIAGRAM):   end;
1551673   +         end;
MPRINT(EM_DIAGRAM):   end;
1551674   +      end;
MPRINT(EM_DIAGRAM):   end;
1551675   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1551676   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1551677   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1551678   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1551679   +         end;
MPRINT(EM_DIAGRAM):   end;
1551680   +      end;
MPRINT(EM_DIAGRAM):   end;
1551681   +   end;
MPRINT(EM_DIAGRAM):   end;
1551682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1551683   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1551684   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1551685   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1551686   +      end;
MPRINT(EM_DIAGRAM):   end;
1551687   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1551688   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1551689   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1551690   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1551691   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1551692   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1551693   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1551694   +         end;
MPRINT(EM_DIAGRAM):   end;
1551695   +      end;
MPRINT(EM_DIAGRAM):   end;
1551696   +   end;
MPRINT(EM_DIAGRAM):   end;
1551697   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1551698   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1551699   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1551700   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1551701   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1551702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1551703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551704   +   end;
MPRINT(EM_DIAGRAM):   end;
1551705   +end;
MPRINT(EM_DIAGRAM):   end;
1551706   +
1551707   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1551708   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1551709   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1551710   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1551711   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1551712   +end;
MPRINT(EM_DIAGRAM):   end;
1551713   +
1551714   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1551715   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1551716   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1551717   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1551718   +
1551719   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1551720   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1551721   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1551722   +
1551723   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1551724   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1551725   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1551726   +
1551727   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1551728   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1551729   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1551730   +
1551731   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1551732   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1551733   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1551734   +
1551735   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1551736   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1551737   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1551738   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1551739   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1551740   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1551741   +
1551742   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1551743   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1551744   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1551745   +
1551746   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1551747   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1551748   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1551749   +
1551750   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1551751   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1551752   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1551753   +
1551754   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1551755   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1551756   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1551757   +
1551758   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1551759   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1551760   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1551761   +
1551762   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1551763   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1551764   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1551765   +
1551766   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1551767   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1551768   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1551769   +
1551770   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1551771   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1551772   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1551773   +
1551774   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1551775   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1551776   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1551777   +
1551778   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1551779   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1551780   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1551781   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1551782   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1551783   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1551784   +end;
MPRINT(EM_DIAGRAM):   end;
1551785   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1551786   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1551787   +
1551788   +REGDR1:
1551789   +
1551790   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1551791   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1551792   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1551793   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1551794   +end;
MPRINT(EM_DIAGRAM):   end;
1551795   +else do;
MPRINT(EM_DIAGRAM):   else do;
1551796   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1551797   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1551798   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1551799   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1551800   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1551801   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1551802   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1551803   +   end;
MPRINT(EM_DIAGRAM):   end;
1551804   +end;
MPRINT(EM_DIAGRAM):   end;
1551805   +
1551806   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1551807   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1551808   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1551809   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1551810   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1551811   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1551812   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1551813   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1551814   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1551815   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1551816   +end;
MPRINT(EM_DIAGRAM):   end;
1551817   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1551818   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1551819   +
1551820   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1551821   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1551822   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1551823   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1551824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551825   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1551826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551827   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1551828   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1551829   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1551830   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1551831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551832   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1551833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551834   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1551835   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1551836   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1551837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551838   +* Ensmbl27: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 3 of 7;
1551839   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551841   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1551842   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1551843   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1551844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1551845   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1551846   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1551847   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1551848   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1551849   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1551850   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1551851   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1551852   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1551853   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1551854   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1551855   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1551856   +LENGTH _WARN_ $4
1551857   +      F_DepVar  $ 12
1551858   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1551859   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1551860   +
1551861   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1551862   +
1551863   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1551864   +
1551865   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1551866   +
1551867   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1551868   +
1551869   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1551870   +
1551871   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1551872   +
1551873   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1551874   +
1551875   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1551876   +
1551877   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1551878   +
1551879   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1551880   +
1551881   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1551882   +
1551883   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1551884   +
1551885   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1551886   +
1551887   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1551888   +
1551889   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1551890   +
1551891   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1551892   +
1551893   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1551894   +
1551895   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1551896   +
1551897   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1551898   +
1551899   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1551900   +
1551901   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1551902   +
1551903   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1551904   +
1551905   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1551906   +
1551907   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1551908   +
1551909   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1551910   +
1551911   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1551912   +
1551913   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1551914   +
1551915   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1551916   +
1551917   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1551918   +
1551919   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1551920   +
1551921   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1551922   +
1551923   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1551924   +
1551925   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1551926   +
1551927   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1551928   +
1551929   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1551930   +
1551931   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1551932   +
1551933   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1551934   +
1551935   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1551936   +
1551937   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1551938   +
1551939   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1551940   +
1551941   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1551942   +
1551943   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1551944   +
1551945   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1551946   +
1551947   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1551948   +
1551949   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1551950   +
1551951   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1551952   +
1551953   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1551954   +
1551955   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1551956   +
1551957   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1551958   +
1551959   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1551960   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1551961   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1551962   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1551963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551965   +end;
MPRINT(EM_DIAGRAM):   end;
1551966   +else do;
MPRINT(EM_DIAGRAM):   else do;
1551967   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1551968   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1551969   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1551970   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1551971   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1551972   +   end;
MPRINT(EM_DIAGRAM):   end;
1551973   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1551974   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1551975   +   end;
MPRINT(EM_DIAGRAM):   end;
1551976   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1551977   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1551978   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1551979   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551980   +   end;
MPRINT(EM_DIAGRAM):   end;
1551981   +end;
MPRINT(EM_DIAGRAM):   end;
1551982   +
1551983   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1551984   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1551985   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1551986   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1551987   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1551988   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1551989   +end;
MPRINT(EM_DIAGRAM):   end;
1551990   +else do;
MPRINT(EM_DIAGRAM):   else do;
1551991   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1551992   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1551993   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1551994   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1551995   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1551996   +   end;
MPRINT(EM_DIAGRAM):   end;
1551997   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1551998   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1551999   +   end;
MPRINT(EM_DIAGRAM):   end;
1552000   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552001   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1552002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552004   +   end;
MPRINT(EM_DIAGRAM):   end;
1552005   +end;
MPRINT(EM_DIAGRAM):   end;
1552006   +
1552007   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1552008   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1552009   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1552010   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1552011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552013   +end;
MPRINT(EM_DIAGRAM):   end;
1552014   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552015   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552016   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1552017   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552018   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1552019   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1552020   +   end;
MPRINT(EM_DIAGRAM):   end;
1552021   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1552022   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1552023   +   end;
MPRINT(EM_DIAGRAM):   end;
1552024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552025   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1552026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552028   +   end;
MPRINT(EM_DIAGRAM):   end;
1552029   +end;
MPRINT(EM_DIAGRAM):   end;
1552030   +
1552031   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1552032   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1552033   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1552034   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1552035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552037   +end;
MPRINT(EM_DIAGRAM):   end;
1552038   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552039   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552040   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1552041   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552042   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1552043   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1552044   +   end;
MPRINT(EM_DIAGRAM):   end;
1552045   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1552046   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1552047   +   end;
MPRINT(EM_DIAGRAM):   end;
1552048   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552049   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1552050   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552051   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552052   +   end;
MPRINT(EM_DIAGRAM):   end;
1552053   +end;
MPRINT(EM_DIAGRAM):   end;
1552054   +
1552055   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1552056   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1552057   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1552058   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1552059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552061   +end;
MPRINT(EM_DIAGRAM):   end;
1552062   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552064   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1552065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552066   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1552067   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1552068   +   end;
MPRINT(EM_DIAGRAM):   end;
1552069   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1552070   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1552071   +   end;
MPRINT(EM_DIAGRAM):   end;
1552072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552073   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1552074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552076   +   end;
MPRINT(EM_DIAGRAM):   end;
1552077   +end;
MPRINT(EM_DIAGRAM):   end;
1552078   +
1552079   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1552080   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1552081   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1552082   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1552083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552085   +end;
MPRINT(EM_DIAGRAM):   end;
1552086   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552088   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1552089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552090   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1552091   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1552092   +   end;
MPRINT(EM_DIAGRAM):   end;
1552093   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1552094   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1552095   +   end;
MPRINT(EM_DIAGRAM):   end;
1552096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552097   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1552098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552100   +   end;
MPRINT(EM_DIAGRAM):   end;
1552101   +end;
MPRINT(EM_DIAGRAM):   end;
1552102   +
1552103   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1552104   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1552105   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1552106   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1552107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552109   +end;
MPRINT(EM_DIAGRAM):   end;
1552110   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552111   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552112   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1552113   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552114   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1552115   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1552116   +   end;
MPRINT(EM_DIAGRAM):   end;
1552117   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1552118   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1552119   +   end;
MPRINT(EM_DIAGRAM):   end;
1552120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552121   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1552122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552124   +   end;
MPRINT(EM_DIAGRAM):   end;
1552125   +end;
MPRINT(EM_DIAGRAM):   end;
1552126   +
1552127   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1552128   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1552129   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1552130   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1552131   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1552132   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1552133   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1552134   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1552135   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1552136   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1552137   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1552138   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1552139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552141   +end;
MPRINT(EM_DIAGRAM):   end;
1552142   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552143   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1552144   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1552145   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552146   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1552147   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1552148   +   end;
MPRINT(EM_DIAGRAM):   end;
1552149   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1552150   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1552151   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1552152   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1552153   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1552154   +   end;
MPRINT(EM_DIAGRAM):   end;
1552155   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1552156   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1552157   +   end;
MPRINT(EM_DIAGRAM):   end;
1552158   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1552159   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1552160   +   end;
MPRINT(EM_DIAGRAM):   end;
1552161   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1552162   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1552163   +   end;
MPRINT(EM_DIAGRAM):   end;
1552164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552165   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1552166   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1552167   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1552168   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1552169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552171   +   end;
MPRINT(EM_DIAGRAM):   end;
1552172   +end;
MPRINT(EM_DIAGRAM):   end;
1552173   +
1552174   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1552175   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1552176   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1552177   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1552178   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1552179   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1552180   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1552181   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1552182   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1552183   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1552184   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1552185   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1552186   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1552187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552189   +end;
MPRINT(EM_DIAGRAM):   end;
1552190   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552191   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1552192   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1552193   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552194   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1552195   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1552196   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1552197   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1552198   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1552199   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1552200   +         end;
MPRINT(EM_DIAGRAM):   end;
1552201   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1552202   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1552203   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1552204   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1552205   +            end;
MPRINT(EM_DIAGRAM):   end;
1552206   +         end;
MPRINT(EM_DIAGRAM):   end;
1552207   +      end;
MPRINT(EM_DIAGRAM):   end;
1552208   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1552209   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1552210   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1552211   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1552212   +         end;
MPRINT(EM_DIAGRAM):   end;
1552213   +      end;
MPRINT(EM_DIAGRAM):   end;
1552214   +   end;
MPRINT(EM_DIAGRAM):   end;
1552215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552216   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1552217   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1552218   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1552219   +      end;
MPRINT(EM_DIAGRAM):   end;
1552220   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1552221   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1552222   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1552223   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1552224   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1552225   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1552226   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1552227   +         end;
MPRINT(EM_DIAGRAM):   end;
1552228   +      end;
MPRINT(EM_DIAGRAM):   end;
1552229   +   end;
MPRINT(EM_DIAGRAM):   end;
1552230   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1552231   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1552232   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1552233   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1552234   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1552235   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552236   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552237   +   end;
MPRINT(EM_DIAGRAM):   end;
1552238   +end;
MPRINT(EM_DIAGRAM):   end;
1552239   +
1552240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552241   +*** Checking missing input Interval
1552242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1552243   +
1552244   +IF NMISS(
1552245   +   AcceptedCmpTotal ,
1552246   +   Age ,
1552247   +   Frq ,
1552248   +   Income ,
1552249   +   Kidhome ,
1552250   +   Mnt ,
1552251   +   MntFishProducts ,
1552252   +   MntFruits ,
1552253   +   MntGoldProds ,
1552254   +   MntMeatProducts ,
1552255   +   MntSweetProducts ,
1552256   +   MntWines ,
1552257   +   MonthsAsCustomer ,
1552258   +   NumCatalogPurchases ,
1552259   +   NumDealsPurchases ,
1552260   +   NumDistPurchases ,
1552261   +   NumStorePurchases ,
1552262   +   NumWebPurchases ,
1552263   +   NumWebVisitsMonth ,
1552264   +   RFMstat ,
1552265   +   RMntFrq ,
1552266   +   Recency ,
1552267   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1552268   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1552269   +
1552270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552271   +END;
MPRINT(EM_DIAGRAM):   END;
1552272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552273   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1552274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552275   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1552276   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1552277   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1552278   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1552279   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1552280   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1552281   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1552282   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1552283   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1552284   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1552285   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1552286   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1552287   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1552288   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1552289   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1552290   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1552291   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1552292   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1552293   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1552294   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1552295   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1552296   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1552297   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1552298   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1552299   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1552300   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1552301   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1552302   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1552303   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1552304   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1552305   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1552306   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1552307   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1552308   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1552309   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1552310   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1552311   +END;
MPRINT(EM_DIAGRAM):   END;
1552312   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1552313   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1552314   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1552315   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1552316   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1552317   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1552318   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1552319   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1552320   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1552321   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1552322   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1552323   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1552324   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1552325   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1552326   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1552327   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1552328   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1552329   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1552330   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1552331   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1552332   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1552333   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1552334   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1552335   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1552336   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1552337   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1552338   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1552339   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1552340   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1552341   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1552342   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1552343   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1552344   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1552345   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1552346   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1552347   +   ELSE S_NumCatalogPurchases
1552348   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1552349   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1552350   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1552351   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1552352   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1552353   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1552354   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1552355   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1552356   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1552357   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1552358   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1552359   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1552360   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1552361   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1552362   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1552363   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1552364   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1552365   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1552366   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1552367   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1552368   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1552369   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1552370   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1552371   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1552372   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1552373   +END;
MPRINT(EM_DIAGRAM):   END;
1552374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552375   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1552376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552378   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1552379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552381   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1552382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552383   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1552384   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1552385   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1552386   +        S_Income  +    -0.23050240180524 * S_Kidhome
1552387   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1552388   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1552389   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1552390   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1552391   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1552392   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1552393   +          +    -1.32257303635072 * S_NumDealsPurchases
1552394   +          +    -0.54480870554989 * S_NumDistPurchases
1552395   +          +     1.24793709956495 * S_NumStorePurchases
1552396   +          +      1.7974198103915 * S_NumWebPurchases
1552397   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1552398   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1552399   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1552400   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age 
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome + 
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 * 
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts + 
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 * 
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 * 
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 * 
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 * 
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq + 
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1552401   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1552402   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1552403   +        S_Income  +    -0.78793784980656 * S_Kidhome
1552404   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1552405   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1552406   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1552407   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1552408   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1552409   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1552410   +          +     0.70535680060775 * S_NumDealsPurchases
1552411   +          +    -0.15561838359391 * S_NumDistPurchases
1552412   +          +    -0.86545647977011 * S_NumStorePurchases
1552413   +          +    -0.78435825863867 * S_NumWebPurchases
1552414   +          +     1.76113949975149 * S_NumWebVisitsMonth
1552415   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1552416   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1552417   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age 
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome + 
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 * 
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts + 
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 * 
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 * 
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 * 
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 * 
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq + 
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1552418   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1552419   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1552420   +        S_Income  +    -0.59349067735666 * S_Kidhome
1552421   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1552422   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1552423   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1552424   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1552425   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1552426   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1552427   +          +     0.21510592309387 * S_NumDealsPurchases
1552428   +          +    -0.05401897321491 * S_NumDistPurchases
1552429   +          +     0.14945584086188 * S_NumStorePurchases
1552430   +          +    -0.09993898051701 * S_NumWebPurchases
1552431   +          +     1.40189771606069 * S_NumWebVisitsMonth
1552432   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1552433   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1552434   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age + 
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome + 
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 * 
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts + 
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 * 
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 * 
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 * 
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 * 
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq + 
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1552435   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1552436   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1552437   +        S_Income  +    -0.61129984920194 * S_Kidhome
1552438   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1552439   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1552440   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1552441   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1552442   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1552443   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1552444   +          +     0.81353732439473 * S_NumDealsPurchases
1552445   +          +     0.32933472931941 * S_NumDistPurchases
1552446   +          +    -1.28188012143595 * S_NumStorePurchases
1552447   +          +    -0.81914782214243 * S_NumWebPurchases
1552448   +          +     1.20332282902342 * S_NumWebVisitsMonth
1552449   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1552450   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1552451   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age + 
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome + 
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 * 
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts + 
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 * 
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 * 
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 * 
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 * 
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq + 
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1552452   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1552453   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1552454   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1552455   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1552456   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 * 
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 + 
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 * 
HigherEducationBinary0 ;
1552457   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1552458   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1552459   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1552460   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1552461   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 * 
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 + 
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 * 
HigherEducationBinary0 ;
1552462   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1552463   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1552464   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1552465   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1552466   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 * 
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 + 
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 * 
HigherEducationBinary0 ;
1552467   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1552468   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1552469   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1552470   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1552471   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 * 
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 + 
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 * 
HigherEducationBinary0 ;
1552472   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1552473   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1552474   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1552475   +          +     0.38068062371853 * Marital_StatusDivorced
1552476   +          +    -0.09269938603625 * Marital_StatusMarried
1552477   +          +    -0.17904543311137 * Marital_StatusSingle
1552478   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 * 
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster 
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried + 
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1552479   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1552480   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1552481   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1552482   +          +     0.46191454760643 * Marital_StatusDivorced
1552483   +          +    -1.36520525874032 * Marital_StatusMarried
1552484   +          +     1.36669525533789 * Marital_StatusSingle
1552485   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 * 
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster + 
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried + 
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1552486   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1552487   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1552488   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1552489   +          +     0.18693560360309 * Marital_StatusDivorced
1552490   +          +    -0.56475988428608 * Marital_StatusMarried
1552491   +          +     0.79263891340625 * Marital_StatusSingle
1552492   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 * 
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster 
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried + 
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1552493   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1552494   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1552495   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1552496   +          +     1.14025450669394 * Marital_StatusDivorced
1552497   +          +     0.78122963298728 * Marital_StatusMarried
1552498   +          +    -1.37860768059913 * Marital_StatusSingle
1552499   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 * 
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster 
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried + 
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1552500   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1552501   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1552502   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1552503   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1552504   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1552505   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1552506   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1552507   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1552508   +END;
MPRINT(EM_DIAGRAM):   END;
1552509   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1552510   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1552511   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1552512   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1552513   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1552514   +END;
MPRINT(EM_DIAGRAM):   END;
1552515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552516   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1552517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552518   +
1552519   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1552520   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1552521   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1552522   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1552523   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1552524   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552525   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1552526   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1552527   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1552528   +end;
MPRINT(EM_DIAGRAM):   end;
1552529   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552530   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1552531   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1552532   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1552533   +   end;
MPRINT(EM_DIAGRAM):   end;
1552534   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1552535   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1552536   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1552537   +   end;
MPRINT(EM_DIAGRAM):   end;
1552538   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552539   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1552540   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1552541   +   end;
MPRINT(EM_DIAGRAM):   end;
1552542   +end;
MPRINT(EM_DIAGRAM):   end;
1552543   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1552544   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1552545   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 + 
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1552546   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1552547   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1552548   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1552549   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1552550   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1552551   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1552552   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1552553   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1552554   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1552555   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1552556   +END;
MPRINT(EM_DIAGRAM):   END;
1552557   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1552558   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1552559   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1552560   +END;
MPRINT(EM_DIAGRAM):   END;
1552561   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1552562   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1552563   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1552564   +END;
MPRINT(EM_DIAGRAM):   END;
1552565   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1552566   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1552567   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1552568   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1552569   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1552570   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1552571   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1552572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552573   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1552574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1552575   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1552576   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1552577   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1552578   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1552579   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1552580   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1552581   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1552582   +END;
MPRINT(EM_DIAGRAM):   END;
1552583   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1552584   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1552585   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1552586   +drop
1552587   +H11
1552588   +H12
1552589   +H13
1552590   +H14
1552591   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1552592   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1552593   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1552594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1552595   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1552596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1552597   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1552598   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1552599   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1552600   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1552601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1552602   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1552603   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1552604   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1552605   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1552606   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1552607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1552608   +* Ensmbl27: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 4 of 7;
1552609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1552610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1552611   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1552612   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1552613   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1552614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1552615   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1552616   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1552617   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1552618   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1552619   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1552620   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1552621   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1552622   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1552623   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1552624   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1552625   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1552626   +LENGTH _WARN_ $4
1552627   +      F_DepVar  $ 12
1552628   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1552629   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1552630   +
1552631   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1552632   +
1552633   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1552634   +
1552635   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1552636   +
1552637   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1552638   +
1552639   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1552640   +
1552641   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1552642   +
1552643   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1552644   +
1552645   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1552646   +
1552647   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1552648   +
1552649   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1552650   +
1552651   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1552652   +
1552653   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1552654   +
1552655   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1552656   +
1552657   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1552658   +
1552659   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1552660   +
1552661   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1552662   +
1552663   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1552664   +
1552665   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1552666   +
1552667   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1552668   +
1552669   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1552670   +
1552671   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1552672   +
1552673   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1552674   +
1552675   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1552676   +
1552677   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1552678   +
1552679   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1552680   +
1552681   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1552682   +
1552683   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1552684   +
1552685   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1552686   +
1552687   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1552688   +
1552689   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1552690   +
1552691   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1552692   +
1552693   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1552694   +
1552695   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1552696   +
1552697   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1552698   +
1552699   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1552700   +
1552701   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1552702   +
1552703   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1552704   +
1552705   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1552706   +
1552707   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1552708   +
1552709   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1552710   +
1552711   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1552712   +
1552713   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1552714   +
1552715   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1552716   +
1552717   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1552718   +
1552719   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1552720   +
1552721   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1552722   +
1552723   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1552724   +
1552725   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1552726   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1552727   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1552728   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1552729   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552731   +end;
MPRINT(EM_DIAGRAM):   end;
1552732   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552733   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552734   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1552735   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552736   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1552737   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1552738   +   end;
MPRINT(EM_DIAGRAM):   end;
1552739   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1552740   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1552741   +   end;
MPRINT(EM_DIAGRAM):   end;
1552742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552743   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1552744   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552745   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552746   +   end;
MPRINT(EM_DIAGRAM):   end;
1552747   +end;
MPRINT(EM_DIAGRAM):   end;
1552748   +
1552749   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1552750   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1552751   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1552752   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1552753   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552754   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552755   +end;
MPRINT(EM_DIAGRAM):   end;
1552756   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552757   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552758   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1552759   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552760   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1552761   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1552762   +   end;
MPRINT(EM_DIAGRAM):   end;
1552763   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1552764   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1552765   +   end;
MPRINT(EM_DIAGRAM):   end;
1552766   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552767   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1552768   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552769   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552770   +   end;
MPRINT(EM_DIAGRAM):   end;
1552771   +end;
MPRINT(EM_DIAGRAM):   end;
1552772   +
1552773   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1552774   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1552775   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1552776   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1552777   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552778   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552779   +end;
MPRINT(EM_DIAGRAM):   end;
1552780   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552781   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552782   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1552783   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552784   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1552785   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1552786   +   end;
MPRINT(EM_DIAGRAM):   end;
1552787   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1552788   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1552789   +   end;
MPRINT(EM_DIAGRAM):   end;
1552790   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552791   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1552792   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552793   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552794   +   end;
MPRINT(EM_DIAGRAM):   end;
1552795   +end;
MPRINT(EM_DIAGRAM):   end;
1552796   +
1552797   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1552798   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1552799   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1552800   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1552801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552803   +end;
MPRINT(EM_DIAGRAM):   end;
1552804   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552805   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552806   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1552807   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552808   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1552809   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1552810   +   end;
MPRINT(EM_DIAGRAM):   end;
1552811   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1552812   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1552813   +   end;
MPRINT(EM_DIAGRAM):   end;
1552814   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552815   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1552816   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552817   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552818   +   end;
MPRINT(EM_DIAGRAM):   end;
1552819   +end;
MPRINT(EM_DIAGRAM):   end;
1552820   +
1552821   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1552822   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1552823   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1552824   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1552825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552827   +end;
MPRINT(EM_DIAGRAM):   end;
1552828   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552829   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552830   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1552831   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552832   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1552833   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1552834   +   end;
MPRINT(EM_DIAGRAM):   end;
1552835   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1552836   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1552837   +   end;
MPRINT(EM_DIAGRAM):   end;
1552838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552839   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1552840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552842   +   end;
MPRINT(EM_DIAGRAM):   end;
1552843   +end;
MPRINT(EM_DIAGRAM):   end;
1552844   +
1552845   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1552846   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1552847   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1552848   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1552849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552851   +end;
MPRINT(EM_DIAGRAM):   end;
1552852   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552854   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1552855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552856   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1552857   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1552858   +   end;
MPRINT(EM_DIAGRAM):   end;
1552859   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1552860   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1552861   +   end;
MPRINT(EM_DIAGRAM):   end;
1552862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552863   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1552864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552866   +   end;
MPRINT(EM_DIAGRAM):   end;
1552867   +end;
MPRINT(EM_DIAGRAM):   end;
1552868   +
1552869   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1552870   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1552871   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1552872   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1552873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552875   +end;
MPRINT(EM_DIAGRAM):   end;
1552876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1552878   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1552879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552880   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1552881   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1552882   +   end;
MPRINT(EM_DIAGRAM):   end;
1552883   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1552884   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1552885   +   end;
MPRINT(EM_DIAGRAM):   end;
1552886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552887   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1552888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552890   +   end;
MPRINT(EM_DIAGRAM):   end;
1552891   +end;
MPRINT(EM_DIAGRAM):   end;
1552892   +
1552893   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1552894   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1552895   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1552896   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1552897   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1552898   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1552899   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1552900   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1552901   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1552902   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1552903   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1552904   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1552905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552907   +end;
MPRINT(EM_DIAGRAM):   end;
1552908   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552909   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1552910   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1552911   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552912   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1552913   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1552914   +   end;
MPRINT(EM_DIAGRAM):   end;
1552915   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1552916   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1552917   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1552918   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1552919   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1552920   +   end;
MPRINT(EM_DIAGRAM):   end;
1552921   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1552922   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1552923   +   end;
MPRINT(EM_DIAGRAM):   end;
1552924   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1552925   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1552926   +   end;
MPRINT(EM_DIAGRAM):   end;
1552927   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1552928   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1552929   +   end;
MPRINT(EM_DIAGRAM):   end;
1552930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552931   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1552932   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1552933   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1552934   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1552935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1552936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552937   +   end;
MPRINT(EM_DIAGRAM):   end;
1552938   +end;
MPRINT(EM_DIAGRAM):   end;
1552939   +
1552940   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1552941   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1552942   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1552943   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1552944   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1552945   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1552946   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1552947   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1552948   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1552949   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1552950   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1552951   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1552952   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1552953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1552954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1552955   +end;
MPRINT(EM_DIAGRAM):   end;
1552956   +else do;
MPRINT(EM_DIAGRAM):   else do;
1552957   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1552958   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1552959   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1552960   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1552961   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1552962   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1552963   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1552964   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1552965   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1552966   +         end;
MPRINT(EM_DIAGRAM):   end;
1552967   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1552968   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1552969   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1552970   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1552971   +            end;
MPRINT(EM_DIAGRAM):   end;
1552972   +         end;
MPRINT(EM_DIAGRAM):   end;
1552973   +      end;
MPRINT(EM_DIAGRAM):   end;
1552974   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1552975   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1552976   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1552977   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1552978   +         end;
MPRINT(EM_DIAGRAM):   end;
1552979   +      end;
MPRINT(EM_DIAGRAM):   end;
1552980   +   end;
MPRINT(EM_DIAGRAM):   end;
1552981   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1552982   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1552983   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1552984   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1552985   +      end;
MPRINT(EM_DIAGRAM):   end;
1552986   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1552987   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1552988   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1552989   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1552990   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1552991   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1552992   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1552993   +         end;
MPRINT(EM_DIAGRAM):   end;
1552994   +      end;
MPRINT(EM_DIAGRAM):   end;
1552995   +   end;
MPRINT(EM_DIAGRAM):   end;
1552996   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1552997   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1552998   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1552999   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1553000   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1553001   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1553002   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553003   +   end;
MPRINT(EM_DIAGRAM):   end;
1553004   +end;
MPRINT(EM_DIAGRAM):   end;
1553005   +
1553006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553007   +*** Checking missing input Interval
1553008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1553009   +
1553010   +IF NMISS(
1553011   +   AcceptedCmpTotal ,
1553012   +   Age ,
1553013   +   Frq ,
1553014   +   Income ,
1553015   +   Kidhome ,
1553016   +   Mnt ,
1553017   +   MntFishProducts ,
1553018   +   MntFruits ,
1553019   +   MntGoldProds ,
1553020   +   MntMeatProducts ,
1553021   +   MntSweetProducts ,
1553022   +   MntWines ,
1553023   +   MonthsAsCustomer ,
1553024   +   NumCatalogPurchases ,
1553025   +   NumDealsPurchases ,
1553026   +   NumDistPurchases ,
1553027   +   NumStorePurchases ,
1553028   +   NumWebPurchases ,
1553029   +   NumWebVisitsMonth ,
1553030   +   RFMstat ,
1553031   +   RMntFrq ,
1553032   +   Recency ,
1553033   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1553034   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1553035   +
1553036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553037   +END;
MPRINT(EM_DIAGRAM):   END;
1553038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553039   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1553040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553041   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1553042   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1553043   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1553044   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1553045   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1553046   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1553047   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1553048   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1553049   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1553050   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1553051   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1553052   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1553053   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1553054   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1553055   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1553056   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1553057   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1553058   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1553059   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1553060   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1553061   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1553062   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1553063   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1553064   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1553065   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1553066   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1553067   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1553068   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1553069   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1553070   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1553071   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1553072   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1553073   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1553074   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1553075   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1553076   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1553077   +END;
MPRINT(EM_DIAGRAM):   END;
1553078   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1553079   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1553080   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1553081   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1553082   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1553083   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1553084   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1553085   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1553086   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1553087   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1553088   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1553089   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1553090   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1553091   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1553092   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1553093   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1553094   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1553095   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1553096   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1553097   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1553098   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1553099   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1553100   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1553101   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1553102   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1553103   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1553104   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1553105   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1553106   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1553107   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1553108   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1553109   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1553110   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1553111   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1553112   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1553113   +   ELSE S_NumCatalogPurchases
1553114   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1553115   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1553116   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1553117   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1553118   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1553119   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1553120   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1553121   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1553122   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1553123   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1553124   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1553125   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1553126   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1553127   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1553128   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1553129   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1553130   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1553131   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1553132   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1553133   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1553134   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1553135   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1553136   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1553137   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1553138   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1553139   +END;
MPRINT(EM_DIAGRAM):   END;
1553140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553141   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1553142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553144   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1553145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553147   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1553148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553149   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1553150   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1553151   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1553152   +        S_Income  +    -1.07652572934003 * S_Kidhome
1553153   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1553154   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1553155   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1553156   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1553157   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1553158   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1553159   +          +     0.34217069579861 * S_NumDealsPurchases
1553160   +          +      0.7126550962469 * S_NumDistPurchases
1553161   +          +     0.05810128676346 * S_NumStorePurchases
1553162   +          +     -0.1974592461824 * S_NumWebPurchases
1553163   +          +     1.33855646568468 * S_NumWebVisitsMonth
1553164   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1553165   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1553166   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1553167   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1553168   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1553169   +        S_Income  +    -0.00280376715329 * S_Kidhome
1553170   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1553171   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1553172   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1553173   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1553174   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1553175   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1553176   +          +     0.45694604326279 * S_NumDealsPurchases
1553177   +          +      0.1555582457419 * S_NumDistPurchases
1553178   +          +     -0.3340268446813 * S_NumStorePurchases
1553179   +          +    -0.39316217683753 * S_NumWebPurchases
1553180   +          +     0.52431656748667 * S_NumWebVisitsMonth
1553181   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1553182   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1553183   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1553184   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1553185   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1553186   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1553187   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1553188   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1553189   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1553190   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1553191   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1553192   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1553193   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1553194   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1553195   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1553196   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1553197   +          +     0.46676686502466 * Marital_StatusDivorced
1553198   +          +    -1.27760562209616 * Marital_StatusMarried
1553199   +          +     1.31419230639567 * Marital_StatusSingle
1553200   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1553201   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1553202   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1553203   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1553204   +          +     0.07434297903639 * Marital_StatusDivorced
1553205   +          +     0.00294493836325 * Marital_StatusMarried
1553206   +          +    -0.00745595849422 * Marital_StatusSingle
1553207   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1553208   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1553209   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1553210   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1553211   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1553212   +END;
MPRINT(EM_DIAGRAM):   END;
1553213   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1553214   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1553215   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1553216   +END;
MPRINT(EM_DIAGRAM):   END;
1553217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553218   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1553219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553220   +
1553221   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1553222   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1553223   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1553224   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1553225   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1553226   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553227   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1553228   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1553229   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1553230   +end;
MPRINT(EM_DIAGRAM):   end;
1553231   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553232   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1553233   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1553234   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1553235   +   end;
MPRINT(EM_DIAGRAM):   end;
1553236   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1553237   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1553238   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1553239   +   end;
MPRINT(EM_DIAGRAM):   end;
1553240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553241   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1553242   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1553243   +   end;
MPRINT(EM_DIAGRAM):   end;
1553244   +end;
MPRINT(EM_DIAGRAM):   end;
1553245   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1553246   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1553247   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1553248   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1553249   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1553250   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1553251   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1553252   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1553253   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1553254   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1553255   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1553256   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1553257   +END;
MPRINT(EM_DIAGRAM):   END;
1553258   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1553259   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1553260   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1553261   +END;
MPRINT(EM_DIAGRAM):   END;
1553262   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1553263   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1553264   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1553265   +END;
MPRINT(EM_DIAGRAM):   END;
1553266   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1553267   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1553268   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1553269   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1553270   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1553271   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1553272   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1553273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553274   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1553275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553276   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1553277   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1553278   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1553279   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1553280   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1553281   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1553282   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1553283   +END;
MPRINT(EM_DIAGRAM):   END;
1553284   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1553285   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1553286   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1553287   +drop
1553288   +H11
1553289   +H12
1553290   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1553291   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1553292   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1553293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1553294   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1553295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1553296   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1553297   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1553298   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1553299   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1553300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1553301   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1553302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1553303   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1553304   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1553305   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1553306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1553307   +* Ensmbl27: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 5 of 7;
1553308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1553309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1553310   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1553311   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1553312   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1553313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1553314   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1553315   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1553316   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1553317   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1553318   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1553319   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1553320   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1553321   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1553322   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1553323   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1553324   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1553325   +LENGTH _WARN_ $4
1553326   +      F_DepVar  $ 12
1553327   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1553328   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1553329   +
1553330   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1553331   +
1553332   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1553333   +
1553334   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1553335   +
1553336   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1553337   +
1553338   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1553339   +
1553340   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1553341   +
1553342   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1553343   +
1553344   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1553345   +
1553346   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1553347   +
1553348   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1553349   +
1553350   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1553351   +
1553352   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1553353   +
1553354   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1553355   +
1553356   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1553357   +
1553358   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1553359   +
1553360   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1553361   +
1553362   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1553363   +
1553364   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1553365   +
1553366   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1553367   +
1553368   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1553369   +
1553370   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1553371   +
1553372   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1553373   +
1553374   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1553375   +
1553376   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1553377   +
1553378   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1553379   +
1553380   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1553381   +
1553382   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1553383   +
1553384   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1553385   +
1553386   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1553387   +
1553388   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1553389   +
1553390   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1553391   +
1553392   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1553393   +
1553394   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1553395   +
1553396   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1553397   +
1553398   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1553399   +
1553400   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1553401   +
1553402   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1553403   +
1553404   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1553405   +
1553406   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1553407   +
1553408   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1553409   +
1553410   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1553411   +
1553412   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1553413   +
1553414   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1553415   +
1553416   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1553417   +
1553418   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1553419   +
1553420   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1553421   +
1553422   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1553423   +
1553424   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1553425   +
1553426   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1553427   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1553428   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1553429   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1553430   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1553431   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553432   +end;
MPRINT(EM_DIAGRAM):   end;
1553433   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553434   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1553435   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1553436   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553437   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1553438   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1553439   +   end;
MPRINT(EM_DIAGRAM):   end;
1553440   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1553441   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1553442   +   end;
MPRINT(EM_DIAGRAM):   end;
1553443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553444   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1553445   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1553446   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553447   +   end;
MPRINT(EM_DIAGRAM):   end;
1553448   +end;
MPRINT(EM_DIAGRAM):   end;
1553449   +
1553450   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1553451   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1553452   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1553453   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1553454   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1553455   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553456   +end;
MPRINT(EM_DIAGRAM):   end;
1553457   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553458   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1553459   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1553460   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553461   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1553462   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1553463   +   end;
MPRINT(EM_DIAGRAM):   end;
1553464   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1553465   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1553466   +   end;
MPRINT(EM_DIAGRAM):   end;
1553467   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553468   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1553469   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1553470   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553471   +   end;
MPRINT(EM_DIAGRAM):   end;
1553472   +end;
MPRINT(EM_DIAGRAM):   end;
1553473   +
1553474   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1553475   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1553476   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1553477   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1553478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1553479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553480   +end;
MPRINT(EM_DIAGRAM):   end;
1553481   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553482   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1553483   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1553484   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553485   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1553486   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1553487   +   end;
MPRINT(EM_DIAGRAM):   end;
1553488   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1553489   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1553490   +   end;
MPRINT(EM_DIAGRAM):   end;
1553491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553492   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1553493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1553494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553495   +   end;
MPRINT(EM_DIAGRAM):   end;
1553496   +end;
MPRINT(EM_DIAGRAM):   end;
1553497   +
1553498   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1553499   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1553500   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1553501   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1553502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1553503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553504   +end;
MPRINT(EM_DIAGRAM):   end;
1553505   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553506   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1553507   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1553508   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553509   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1553510   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1553511   +   end;
MPRINT(EM_DIAGRAM):   end;
1553512   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1553513   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1553514   +   end;
MPRINT(EM_DIAGRAM):   end;
1553515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553516   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1553517   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1553518   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553519   +   end;
MPRINT(EM_DIAGRAM):   end;
1553520   +end;
MPRINT(EM_DIAGRAM):   end;
1553521   +
1553522   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1553523   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1553524   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1553525   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1553526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1553527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553528   +end;
MPRINT(EM_DIAGRAM):   end;
1553529   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553530   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1553531   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1553532   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553533   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1553534   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1553535   +   end;
MPRINT(EM_DIAGRAM):   end;
1553536   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1553537   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1553538   +   end;
MPRINT(EM_DIAGRAM):   end;
1553539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553540   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1553541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1553542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553543   +   end;
MPRINT(EM_DIAGRAM):   end;
1553544   +end;
MPRINT(EM_DIAGRAM):   end;
1553545   +
1553546   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1553547   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1553548   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1553549   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1553550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1553551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553552   +end;
MPRINT(EM_DIAGRAM):   end;
1553553   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1553555   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1553556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553557   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1553558   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1553559   +   end;
MPRINT(EM_DIAGRAM):   end;
1553560   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1553561   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1553562   +   end;
MPRINT(EM_DIAGRAM):   end;
1553563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553564   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1553565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1553566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553567   +   end;
MPRINT(EM_DIAGRAM):   end;
1553568   +end;
MPRINT(EM_DIAGRAM):   end;
1553569   +
1553570   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1553571   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1553572   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1553573   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1553574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1553575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553576   +end;
MPRINT(EM_DIAGRAM):   end;
1553577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1553579   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1553580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553581   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1553582   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1553583   +   end;
MPRINT(EM_DIAGRAM):   end;
1553584   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1553585   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1553586   +   end;
MPRINT(EM_DIAGRAM):   end;
1553587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553588   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1553589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1553590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553591   +   end;
MPRINT(EM_DIAGRAM):   end;
1553592   +end;
MPRINT(EM_DIAGRAM):   end;
1553593   +
1553594   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1553595   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1553596   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1553597   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1553598   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1553599   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1553600   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1553601   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1553602   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1553603   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1553604   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1553605   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1553606   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1553607   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553608   +end;
MPRINT(EM_DIAGRAM):   end;
1553609   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553610   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1553611   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1553612   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553613   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1553614   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1553615   +   end;
MPRINT(EM_DIAGRAM):   end;
1553616   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1553617   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1553618   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1553619   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1553620   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1553621   +   end;
MPRINT(EM_DIAGRAM):   end;
1553622   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1553623   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1553624   +   end;
MPRINT(EM_DIAGRAM):   end;
1553625   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1553626   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1553627   +   end;
MPRINT(EM_DIAGRAM):   end;
1553628   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1553629   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1553630   +   end;
MPRINT(EM_DIAGRAM):   end;
1553631   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553632   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1553633   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1553634   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1553635   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1553636   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1553637   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553638   +   end;
MPRINT(EM_DIAGRAM):   end;
1553639   +end;
MPRINT(EM_DIAGRAM):   end;
1553640   +
1553641   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1553642   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1553643   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1553644   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1553645   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1553646   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1553647   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1553648   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1553649   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1553650   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1553651   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1553652   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1553653   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1553654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1553655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553656   +end;
MPRINT(EM_DIAGRAM):   end;
1553657   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553658   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1553659   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1553660   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553661   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1553662   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1553663   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1553664   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1553665   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1553666   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1553667   +         end;
MPRINT(EM_DIAGRAM):   end;
1553668   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1553669   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1553670   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1553671   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1553672   +            end;
MPRINT(EM_DIAGRAM):   end;
1553673   +         end;
MPRINT(EM_DIAGRAM):   end;
1553674   +      end;
MPRINT(EM_DIAGRAM):   end;
1553675   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1553676   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1553677   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1553678   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1553679   +         end;
MPRINT(EM_DIAGRAM):   end;
1553680   +      end;
MPRINT(EM_DIAGRAM):   end;
1553681   +   end;
MPRINT(EM_DIAGRAM):   end;
1553682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553683   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1553684   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1553685   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1553686   +      end;
MPRINT(EM_DIAGRAM):   end;
1553687   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1553688   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1553689   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1553690   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1553691   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1553692   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1553693   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1553694   +         end;
MPRINT(EM_DIAGRAM):   end;
1553695   +      end;
MPRINT(EM_DIAGRAM):   end;
1553696   +   end;
MPRINT(EM_DIAGRAM):   end;
1553697   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1553698   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1553699   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1553700   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1553701   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1553702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1553703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553704   +   end;
MPRINT(EM_DIAGRAM):   end;
1553705   +end;
MPRINT(EM_DIAGRAM):   end;
1553706   +
1553707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553708   +*** Checking missing input Interval
1553709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1553710   +
1553711   +IF NMISS(
1553712   +   AcceptedCmpTotal ,
1553713   +   Age ,
1553714   +   Frq ,
1553715   +   Income ,
1553716   +   Kidhome ,
1553717   +   Mnt ,
1553718   +   MntFishProducts ,
1553719   +   MntFruits ,
1553720   +   MntGoldProds ,
1553721   +   MntMeatProducts ,
1553722   +   MntSweetProducts ,
1553723   +   MntWines ,
1553724   +   MonthsAsCustomer ,
1553725   +   NumCatalogPurchases ,
1553726   +   NumDealsPurchases ,
1553727   +   NumDistPurchases ,
1553728   +   NumStorePurchases ,
1553729   +   NumWebPurchases ,
1553730   +   NumWebVisitsMonth ,
1553731   +   RFMstat ,
1553732   +   RMntFrq ,
1553733   +   Recency ,
1553734   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1553735   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1553736   +
1553737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1553738   +END;
MPRINT(EM_DIAGRAM):   END;
1553739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553740   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1553741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553742   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1553743   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1553744   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1553745   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1553746   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1553747   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1553748   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1553749   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1553750   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1553751   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1553752   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1553753   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1553754   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1553755   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1553756   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1553757   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1553758   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1553759   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1553760   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1553761   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1553762   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1553763   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1553764   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1553765   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1553766   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1553767   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1553768   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1553769   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1553770   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1553771   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1553772   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1553773   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1553774   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1553775   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1553776   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1553777   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1553778   +END;
MPRINT(EM_DIAGRAM):   END;
1553779   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1553780   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1553781   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1553782   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1553783   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1553784   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1553785   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1553786   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1553787   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1553788   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1553789   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1553790   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1553791   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1553792   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1553793   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1553794   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1553795   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1553796   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1553797   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1553798   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1553799   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1553800   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1553801   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1553802   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1553803   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1553804   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1553805   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1553806   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1553807   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1553808   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1553809   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1553810   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1553811   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1553812   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1553813   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1553814   +   ELSE S_NumCatalogPurchases
1553815   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1553816   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1553817   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1553818   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1553819   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1553820   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1553821   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1553822   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1553823   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1553824   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1553825   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1553826   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1553827   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1553828   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1553829   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1553830   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1553831   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1553832   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1553833   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1553834   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1553835   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1553836   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1553837   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1553838   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1553839   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1553840   +END;
MPRINT(EM_DIAGRAM):   END;
1553841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553842   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1553843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553845   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1553846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553848   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1553849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553850   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1553851   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1553852   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1553853   +        S_Income  +     0.48614351216065 * S_Kidhome
1553854   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1553855   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1553856   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1553857   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1553858   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1553859   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1553860   +          +     1.38069708066212 * S_NumDealsPurchases
1553861   +          +     0.18758966496994 * S_NumDistPurchases
1553862   +          +    -0.65306017966122 * S_NumStorePurchases
1553863   +          +    -0.65780154318734 * S_NumWebPurchases
1553864   +          +     1.42347048260615 * S_NumWebVisitsMonth
1553865   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1553866   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1553867   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1553868   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1553869   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1553870   +        S_Income  +     0.50072567449363 * S_Kidhome
1553871   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1553872   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1553873   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1553874   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1553875   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1553876   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1553877   +          +    -0.75291043162386 * S_NumDealsPurchases
1553878   +          +    -0.06780631818187 * S_NumDistPurchases
1553879   +          +     1.03453599373919 * S_NumStorePurchases
1553880   +          +     1.02348906006707 * S_NumWebPurchases
1553881   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1553882   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1553883   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1553884   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1553885   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1553886   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1553887   +        S_Income  +     0.57496607656903 * S_Kidhome
1553888   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1553889   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1553890   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1553891   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1553892   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1553893   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1553894   +          +     0.13431497076806 * S_NumDealsPurchases
1553895   +          +     -0.4516722514278 * S_NumDistPurchases
1553896   +          +     0.08636745161008 * S_NumStorePurchases
1553897   +          +    -0.01091843489919 * S_NumWebPurchases
1553898   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1553899   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1553900   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1553901   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1553902   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1553903   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1553904   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1553905   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1553906   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1553907   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1553908   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1553909   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1553910   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1553911   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1553912   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1553913   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1553914   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1553915   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1553916   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1553917   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1553918   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1553919   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1553920   +          +     0.09616912826117 * Marital_StatusDivorced
1553921   +          +     0.15377557778014 * Marital_StatusMarried
1553922   +          +    -0.20686296055741 * Marital_StatusSingle
1553923   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1553924   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1553925   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1553926   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1553927   +          +    -0.18362421441913 * Marital_StatusDivorced
1553928   +          +     0.14861660317702 * Marital_StatusMarried
1553929   +          +    -0.51051982152027 * Marital_StatusSingle
1553930   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1553931   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1553932   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1553933   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1553934   +          +    -0.65088528624708 * Marital_StatusDivorced
1553935   +          +     1.85383531288095 * Marital_StatusMarried
1553936   +          +    -1.45031245605509 * Marital_StatusSingle
1553937   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1553938   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1553939   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1553940   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1553941   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1553942   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1553943   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1553944   +END;
MPRINT(EM_DIAGRAM):   END;
1553945   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1553946   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1553947   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1553948   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1553949   +END;
MPRINT(EM_DIAGRAM):   END;
1553950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553951   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1553952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1553953   +
1553954   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1553955   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1553956   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1553957   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1553958   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1553959   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1553960   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1553961   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1553962   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1553963   +end;
MPRINT(EM_DIAGRAM):   end;
1553964   +else do;
MPRINT(EM_DIAGRAM):   else do;
1553965   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1553966   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1553967   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1553968   +   end;
MPRINT(EM_DIAGRAM):   end;
1553969   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1553970   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1553971   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1553972   +   end;
MPRINT(EM_DIAGRAM):   end;
1553973   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1553974   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1553975   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1553976   +   end;
MPRINT(EM_DIAGRAM):   end;
1553977   +end;
MPRINT(EM_DIAGRAM):   end;
1553978   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1553979   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1553980   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1553981   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1553982   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1553983   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1553984   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1553985   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1553986   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1553987   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1553988   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1553989   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1553990   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1553991   +END;
MPRINT(EM_DIAGRAM):   END;
1553992   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1553993   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1553994   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1553995   +END;
MPRINT(EM_DIAGRAM):   END;
1553996   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1553997   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1553998   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1553999   +END;
MPRINT(EM_DIAGRAM):   END;
1554000   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1554001   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1554002   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1554003   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1554004   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1554005   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1554006   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1554007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554008   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1554009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554010   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1554011   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1554012   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1554013   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1554014   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1554015   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1554016   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1554017   +END;
MPRINT(EM_DIAGRAM):   END;
1554018   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1554019   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1554020   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1554021   +drop
1554022   +H11
1554023   +H12
1554024   +H13
1554025   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1554026   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1554027   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1554028   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554029   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1554030   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554031   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1554032   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1554033   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1554034   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1554035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554036   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1554037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554038   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1554039   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1554040   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1554041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554042   +* Ensmbl27: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 6 of 7;
1554043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554044   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554045   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1554046   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1554047   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1554048   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554049   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1554050   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1554051   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1554052   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1554053   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1554054   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
The SAS System

1554055   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1554056   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1554057   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1554058   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1554059   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1554060   +LENGTH _WARN_ $4
1554061   +      F_DepVar  $ 12
1554062   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1554063   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1554064   +
1554065   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1554066   +
1554067   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1554068   +
1554069   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1554070   +
1554071   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1554072   +
1554073   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1554074   +
1554075   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1554076   +
1554077   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1554078   +
1554079   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1554080   +
1554081   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1554082   +
1554083   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1554084   +
1554085   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1554086   +
1554087   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1554088   +
1554089   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1554090   +
1554091   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1554092   +
1554093   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1554094   +
1554095   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1554096   +
1554097   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1554098   +
1554099   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1554100   +
1554101   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1554102   +
1554103   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1554104   +
1554105   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1554106   +
1554107   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1554108   +
1554109   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1554110   +
1554111   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1554112   +
1554113   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1554114   +
1554115   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1554116   +
1554117   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1554118   +
1554119   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1554120   +
1554121   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1554122   +
1554123   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1554124   +
1554125   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1554126   +
1554127   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1554128   +
1554129   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1554130   +
1554131   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1554132   +
1554133   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1554134   +
1554135   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1554136   +
1554137   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1554138   +
1554139   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1554140   +
1554141   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1554142   +
1554143   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1554144   +
1554145   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1554146   +
1554147   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1554148   +
1554149   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1554150   +
1554151   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1554152   +
1554153   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1554154   +
1554155   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1554156   +
1554157   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1554158   +
1554159   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1554160   +
1554161   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1554162   +
1554163   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1554164   +
1554165   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1554166   +
1554167   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1554168   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1554169   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1554170   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1554171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1554172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554173   +end;
MPRINT(EM_DIAGRAM):   end;
1554174   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554175   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1554176   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1554177   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554178   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1554179   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1554180   +   end;
MPRINT(EM_DIAGRAM):   end;
1554181   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1554182   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1554183   +   end;
MPRINT(EM_DIAGRAM):   end;
1554184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554185   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1554186   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1554187   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554188   +   end;
MPRINT(EM_DIAGRAM):   end;
1554189   +end;
MPRINT(EM_DIAGRAM):   end;
1554190   +
1554191   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1554192   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1554193   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1554194   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1554195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1554196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554197   +end;
MPRINT(EM_DIAGRAM):   end;
1554198   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554199   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1554200   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1554201   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554202   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1554203   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1554204   +   end;
MPRINT(EM_DIAGRAM):   end;
1554205   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1554206   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1554207   +   end;
MPRINT(EM_DIAGRAM):   end;
1554208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554209   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1554210   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1554211   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554212   +   end;
MPRINT(EM_DIAGRAM):   end;
1554213   +end;
MPRINT(EM_DIAGRAM):   end;
1554214   +
1554215   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1554216   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1554217   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1554218   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1554219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1554220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554221   +end;
MPRINT(EM_DIAGRAM):   end;
1554222   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554223   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1554224   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1554225   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554226   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1554227   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1554228   +   end;
MPRINT(EM_DIAGRAM):   end;
1554229   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1554230   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1554231   +   end;
MPRINT(EM_DIAGRAM):   end;
1554232   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554233   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1554234   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1554235   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554236   +   end;
MPRINT(EM_DIAGRAM):   end;
1554237   +end;
MPRINT(EM_DIAGRAM):   end;
1554238   +
1554239   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1554240   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1554241   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1554242   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1554243   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1554244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554245   +end;
MPRINT(EM_DIAGRAM):   end;
1554246   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554247   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1554248   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1554249   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554250   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1554251   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1554252   +   end;
MPRINT(EM_DIAGRAM):   end;
1554253   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1554254   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1554255   +   end;
MPRINT(EM_DIAGRAM):   end;
1554256   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554257   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1554258   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1554259   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554260   +   end;
MPRINT(EM_DIAGRAM):   end;
1554261   +end;
MPRINT(EM_DIAGRAM):   end;
1554262   +
1554263   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1554264   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1554265   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1554266   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1554267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1554268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554269   +end;
MPRINT(EM_DIAGRAM):   end;
1554270   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554271   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1554272   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1554273   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554274   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1554275   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1554276   +   end;
MPRINT(EM_DIAGRAM):   end;
1554277   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1554278   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1554279   +   end;
MPRINT(EM_DIAGRAM):   end;
1554280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554281   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1554282   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1554283   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554284   +   end;
MPRINT(EM_DIAGRAM):   end;
1554285   +end;
MPRINT(EM_DIAGRAM):   end;
1554286   +
1554287   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1554288   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1554289   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1554290   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1554291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1554292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554293   +end;
MPRINT(EM_DIAGRAM):   end;
1554294   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554295   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1554296   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1554297   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554298   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1554299   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1554300   +   end;
MPRINT(EM_DIAGRAM):   end;
1554301   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1554302   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1554303   +   end;
MPRINT(EM_DIAGRAM):   end;
1554304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554305   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1554306   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1554307   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554308   +   end;
MPRINT(EM_DIAGRAM):   end;
1554309   +end;
MPRINT(EM_DIAGRAM):   end;
1554310   +
1554311   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1554312   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1554313   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1554314   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1554315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1554316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554317   +end;
MPRINT(EM_DIAGRAM):   end;
1554318   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554319   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1554320   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1554321   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554322   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1554323   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1554324   +   end;
MPRINT(EM_DIAGRAM):   end;
1554325   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1554326   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1554327   +   end;
MPRINT(EM_DIAGRAM):   end;
1554328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554329   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1554330   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1554331   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554332   +   end;
MPRINT(EM_DIAGRAM):   end;
1554333   +end;
MPRINT(EM_DIAGRAM):   end;
1554334   +
1554335   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1554336   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1554337   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1554338   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1554339   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1554340   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1554341   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1554342   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1554343   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1554344   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1554345   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1554346   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1554347   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1554348   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554349   +end;
MPRINT(EM_DIAGRAM):   end;
1554350   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554351   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1554352   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1554353   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554354   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1554355   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1554356   +   end;
MPRINT(EM_DIAGRAM):   end;
1554357   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1554358   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1554359   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1554360   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1554361   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1554362   +   end;
MPRINT(EM_DIAGRAM):   end;
1554363   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1554364   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1554365   +   end;
MPRINT(EM_DIAGRAM):   end;
1554366   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1554367   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1554368   +   end;
MPRINT(EM_DIAGRAM):   end;
1554369   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1554370   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1554371   +   end;
MPRINT(EM_DIAGRAM):   end;
1554372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554373   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1554374   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1554375   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1554376   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1554377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1554378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554379   +   end;
MPRINT(EM_DIAGRAM):   end;
1554380   +end;
MPRINT(EM_DIAGRAM):   end;
1554381   +
1554382   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1554383   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1554384   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1554385   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1554386   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1554387   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1554388   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1554389   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1554390   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1554391   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1554392   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1554393   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1554394   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1554395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1554396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554397   +end;
MPRINT(EM_DIAGRAM):   end;
1554398   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554399   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1554400   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1554401   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554402   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1554403   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1554404   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1554405   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1554406   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1554407   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1554408   +         end;
MPRINT(EM_DIAGRAM):   end;
1554409   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1554410   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1554411   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1554412   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1554413   +            end;
MPRINT(EM_DIAGRAM):   end;
1554414   +         end;
MPRINT(EM_DIAGRAM):   end;
1554415   +      end;
MPRINT(EM_DIAGRAM):   end;
1554416   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1554417   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1554418   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1554419   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1554420   +         end;
MPRINT(EM_DIAGRAM):   end;
1554421   +      end;
MPRINT(EM_DIAGRAM):   end;
1554422   +   end;
MPRINT(EM_DIAGRAM):   end;
1554423   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554424   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1554425   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1554426   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1554427   +      end;
MPRINT(EM_DIAGRAM):   end;
1554428   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1554429   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1554430   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1554431   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1554432   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1554433   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1554434   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1554435   +         end;
MPRINT(EM_DIAGRAM):   end;
1554436   +      end;
MPRINT(EM_DIAGRAM):   end;
1554437   +   end;
MPRINT(EM_DIAGRAM):   end;
1554438   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1554439   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1554440   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1554441   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1554442   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1554443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1554444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554445   +   end;
MPRINT(EM_DIAGRAM):   end;
1554446   +end;
MPRINT(EM_DIAGRAM):   end;
1554447   +
1554448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554449   +*** Checking missing input Interval
1554450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1554451   +
1554452   +IF NMISS(
1554453   +   AcceptedCmpTotal ,
1554454   +   Age ,
1554455   +   Frq ,
1554456   +   Income ,
1554457   +   Kidhome ,
1554458   +   Mnt ,
1554459   +   MntFishProducts ,
1554460   +   MntFruits ,
1554461   +   MntGoldProds ,
1554462   +   MntMeatProducts ,
1554463   +   MntSweetProducts ,
1554464   +   MntWines ,
1554465   +   MonthsAsCustomer ,
1554466   +   NumCatalogPurchases ,
1554467   +   NumDealsPurchases ,
1554468   +   NumDistPurchases ,
1554469   +   NumStorePurchases ,
1554470   +   NumWebPurchases ,
1554471   +   NumWebVisitsMonth ,
1554472   +   RFMstat ,
1554473   +   RMntFrq ,
1554474   +   Recency ,
1554475   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1554476   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1554477   +
1554478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554479   +END;
MPRINT(EM_DIAGRAM):   END;
1554480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554481   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1554482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554483   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1554484   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1554485   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1554486   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1554487   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1554488   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1554489   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1554490   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1554491   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1554492   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1554493   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1554494   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1554495   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1554496   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1554497   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1554498   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1554499   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1554500   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1554501   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1554502   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1554503   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1554504   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1554505   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1554506   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1554507   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1554508   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1554509   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1554510   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1554511   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1554512   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1554513   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1554514   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1554515   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1554516   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1554517   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1554518   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1554519   +END;
MPRINT(EM_DIAGRAM):   END;
1554520   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1554521   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1554522   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1554523   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1554524   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1554525   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1554526   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1554527   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1554528   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1554529   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1554530   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1554531   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1554532   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1554533   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1554534   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1554535   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1554536   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1554537   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1554538   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1554539   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1554540   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1554541   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1554542   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1554543   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1554544   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1554545   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1554546   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1554547   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1554548   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1554549   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1554550   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1554551   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1554552   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1554553   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1554554   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1554555   +   ELSE S_NumCatalogPurchases
1554556   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1554557   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1554558   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1554559   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1554560   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1554561   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1554562   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1554563   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1554564   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1554565   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1554566   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1554567   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1554568   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1554569   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1554570   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1554571   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1554572   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1554573   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1554574   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1554575   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1554576   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1554577   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1554578   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1554579   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1554580   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1554581   +END;
MPRINT(EM_DIAGRAM):   END;
1554582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554583   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1554584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554586   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1554587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554589   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1554590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554591   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1554592   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1554593   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1554594   +        S_Income  +     -0.0761121347886 * S_Kidhome
1554595   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1554596   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1554597   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1554598   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1554599   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1554600   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1554601   +          +     0.83893684194413 * S_NumDealsPurchases
1554602   +          +     0.23391006875291 * S_NumDistPurchases
1554603   +          +    -0.63370705462074 * S_NumStorePurchases
1554604   +          +     -0.9137408014067 * S_NumWebPurchases
1554605   +          +     0.89109351479441 * S_NumWebVisitsMonth
1554606   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1554607   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1554608   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1554609   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1554610   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1554611   +        S_Income  +    -0.43909782819329 * S_Kidhome
1554612   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1554613   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1554614   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1554615   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1554616   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1554617   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1554618   +          +      0.2218973353638 * S_NumDealsPurchases
1554619   +          +      0.0062360950528 * S_NumDistPurchases
1554620   +          +    -0.57621747951002 * S_NumStorePurchases
1554621   +          +    -0.33564890905657 * S_NumWebPurchases
1554622   +          +     0.82482365540301 * S_NumWebVisitsMonth
1554623   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1554624   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1554625   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1554626   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1554627   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1554628   +        S_Income  +    -0.03572236011846 * S_Kidhome
1554629   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1554630   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1554631   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1554632   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1554633   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1554634   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1554635   +          +      -0.174147250062 * S_NumDealsPurchases
1554636   +          +    -0.22921682388864 * S_NumDistPurchases
1554637   +          +     0.41526854684299 * S_NumStorePurchases
1554638   +          +    -0.27675565493519 * S_NumWebPurchases
1554639   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1554640   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1554641   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1554642   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1554643   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1554644   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1554645   +        S_Income  +    -0.04788369327547 * S_Kidhome
1554646   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1554647   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1554648   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1554649   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1554650   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1554651   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1554652   +          +    -0.46022430102423 * S_NumDealsPurchases
1554653   +          +     0.15831339342044 * S_NumDistPurchases
1554654   +          +     0.22480465173719 * S_NumStorePurchases
1554655   +          +     0.44798923484609 * S_NumWebPurchases
1554656   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1554657   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1554658   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1554659   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1554660   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1554661   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1554662   +        S_Income  +     0.53994304261534 * S_Kidhome
1554663   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1554664   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1554665   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1554666   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1554667   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1554668   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1554669   +          +     0.03650267472167 * S_NumDealsPurchases
1554670   +          +    -0.03322709524939 * S_NumDistPurchases
1554671   +          +     -0.0022226424472 * S_NumStorePurchases
1554672   +          +    -0.10131236740674 * S_NumWebPurchases
1554673   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1554674   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1554675   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1554676   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1554677   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1554678   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1554679   +        S_Income  +    -0.52576099429582 * S_Kidhome
1554680   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1554681   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1554682   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1554683   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1554684   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1554685   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1554686   +          +    -0.50209914729324 * S_NumDealsPurchases
1554687   +          +    -0.46217244513696 * S_NumDistPurchases
1554688   +          +      0.1832648560248 * S_NumStorePurchases
1554689   +          +     0.02866153257072 * S_NumWebPurchases
1554690   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1554691   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1554692   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1554693   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1554694   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1554695   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1554696   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1554697   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1554698   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1554699   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1554700   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1554701   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1554702   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1554703   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1554704   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1554705   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1554706   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1554707   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1554708   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1554709   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1554710   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1554711   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1554712   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1554713   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1554714   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1554715   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1554716   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1554717   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1554718   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1554719   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1554720   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1554721   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1554722   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1554723   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1554724   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1554725   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1554726   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1554727   +          +     0.13815069071511 * Marital_StatusDivorced
1554728   +          +      0.0732913060929 * Marital_StatusMarried
1554729   +          +    -0.22858418468746 * Marital_StatusSingle
1554730   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1554731   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1554732   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1554733   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1554734   +          +     0.32909808396509 * Marital_StatusDivorced
1554735   +          +    -0.50160173579004 * Marital_StatusMarried
1554736   +          +     0.57207102211224 * Marital_StatusSingle
1554737   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1554738   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1554739   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1554740   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1554741   +          +    -0.07154493730107 * Marital_StatusDivorced
1554742   +          +     0.29126100051603 * Marital_StatusMarried
1554743   +          +    -0.06936325857004 * Marital_StatusSingle
1554744   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1554745   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1554746   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1554747   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1554748   +          +    -0.05004640872388 * Marital_StatusDivorced
1554749   +          +     0.22197974032974 * Marital_StatusMarried
1554750   +          +    -0.33931504637453 * Marital_StatusSingle
1554751   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1554752   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1554753   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1554754   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1554755   +          +    -0.07748874669478 * Marital_StatusDivorced
1554756   +          +     1.05442281159109 * Marital_StatusMarried
1554757   +          +    -0.67190984038867 * Marital_StatusSingle
1554758   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1554759   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1554760   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1554761   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1554762   +          +    -0.20478208715114 * Marital_StatusDivorced
1554763   +          +    -0.40186383707642 * Marital_StatusMarried
1554764   +          +     0.43474841662774 * Marital_StatusSingle
1554765   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1554766   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1554767   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1554768   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1554769   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1554770   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1554771   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1554772   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1554773   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1554774   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1554775   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1554776   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1554777   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1554778   +END;
MPRINT(EM_DIAGRAM):   END;
1554779   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1554780   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1554781   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1554782   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1554783   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1554784   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1554785   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1554786   +END;
MPRINT(EM_DIAGRAM):   END;
1554787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554788   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1554789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554790   +
1554791   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1554792   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1554793   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1554794   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1554795   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1554796   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554797   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1554798   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1554799   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1554800   +end;
MPRINT(EM_DIAGRAM):   end;
1554801   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554802   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1554803   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1554804   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1554805   +   end;
MPRINT(EM_DIAGRAM):   end;
1554806   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1554807   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1554808   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1554809   +   end;
MPRINT(EM_DIAGRAM):   end;
1554810   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554811   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1554812   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1554813   +   end;
MPRINT(EM_DIAGRAM):   end;
1554814   +end;
MPRINT(EM_DIAGRAM):   end;
1554815   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1554816   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1554817   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1554818   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1554819   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1554820   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1554821   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1554822   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1554823   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1554824   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1554825   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1554826   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1554827   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1554828   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1554829   +END;
MPRINT(EM_DIAGRAM):   END;
1554830   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1554831   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1554832   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1554833   +END;
MPRINT(EM_DIAGRAM):   END;
1554834   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1554835   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1554836   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1554837   +END;
MPRINT(EM_DIAGRAM):   END;
1554838   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1554839   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1554840   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1554841   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1554842   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1554843   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1554844   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1554845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554846   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1554847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554848   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1554849   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1554850   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1554851   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1554852   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1554853   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1554854   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1554855   +END;
MPRINT(EM_DIAGRAM):   END;
1554856   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1554857   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1554858   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1554859   +drop
1554860   +H11
1554861   +H12
1554862   +H13
1554863   +H14
1554864   +H15
1554865   +H16
1554866   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1554867   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1554868   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1554869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554870   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1554871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554872   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1554873   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1554874   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1554875   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1554876   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554877   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1554878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554879   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1554880   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1554881   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1554882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554883   +* Ensmbl27: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 7 of 7;
1554884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554885   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554886   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1554887   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1554888   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1554889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554890   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1554891   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1554892   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1554893   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1554894   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1554895   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1554896   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1554897   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1554898   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1554899   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1554900   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1554901   +LENGTH _WARN_ $4
1554902   +      F_DepVar  $ 12
1554903   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1554904   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1554905   +
1554906   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1554907   +
1554908   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1554909   +
1554910   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1554911   +
1554912   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1554913   +
1554914   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1554915   +
1554916   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1554917   +
1554918   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1554919   +
1554920   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1554921   +
1554922   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1554923   +
1554924   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1554925   +
1554926   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1554927   +
1554928   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1554929   +
1554930   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1554931   +
1554932   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1554933   +
1554934   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1554935   +
1554936   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1554937   +
1554938   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1554939   +
1554940   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1554941   +
1554942   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1554943   +
1554944   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1554945   +
1554946   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1554947   +
1554948   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1554949   +
1554950   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1554951   +
1554952   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1554953   +
1554954   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1554955   +
1554956   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1554957   +
1554958   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1554959   +
1554960   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1554961   +
1554962   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1554963   +
1554964   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1554965   +
1554966   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1554967   +
1554968   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1554969   +
1554970   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1554971   +
1554972   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1554973   +
1554974   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1554975   +
1554976   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1554977   +
1554978   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1554979   +
1554980   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1554981   +
1554982   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1554983   +
1554984   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1554985   +
1554986   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1554987   +
1554988   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1554989   +
1554990   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1554991   +
1554992   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1554993   +
1554994   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1554995   +
1554996   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1554997   +
1554998   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1554999   +
1555000   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1555001   +
1555002   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1555003   +
1555004   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1555005   +
1555006   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1555007   +
1555008   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1555009   +
1555010   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1555011   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1555012   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1555013   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1555014   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555015   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555016   +end;
MPRINT(EM_DIAGRAM):   end;
1555017   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555018   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1555019   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1555020   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555021   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1555022   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1555023   +   end;
MPRINT(EM_DIAGRAM):   end;
1555024   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1555025   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1555026   +   end;
MPRINT(EM_DIAGRAM):   end;
1555027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555028   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1555029   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1555030   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555031   +   end;
MPRINT(EM_DIAGRAM):   end;
1555032   +end;
MPRINT(EM_DIAGRAM):   end;
1555033   +
1555034   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1555035   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1555036   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1555037   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1555038   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555039   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555040   +end;
MPRINT(EM_DIAGRAM):   end;
1555041   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555042   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1555043   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1555044   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555045   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1555046   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1555047   +   end;
MPRINT(EM_DIAGRAM):   end;
1555048   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1555049   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1555050   +   end;
MPRINT(EM_DIAGRAM):   end;
1555051   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555052   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1555053   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1555054   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555055   +   end;
MPRINT(EM_DIAGRAM):   end;
1555056   +end;
MPRINT(EM_DIAGRAM):   end;
1555057   +
1555058   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1555059   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1555060   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1555061   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1555062   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555063   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555064   +end;
MPRINT(EM_DIAGRAM):   end;
1555065   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555066   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1555067   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1555068   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555069   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1555070   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1555071   +   end;
MPRINT(EM_DIAGRAM):   end;
1555072   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1555073   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1555074   +   end;
MPRINT(EM_DIAGRAM):   end;
1555075   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555076   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1555077   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1555078   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555079   +   end;
MPRINT(EM_DIAGRAM):   end;
1555080   +end;
MPRINT(EM_DIAGRAM):   end;
1555081   +
1555082   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1555083   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1555084   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1555085   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1555086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555088   +end;
MPRINT(EM_DIAGRAM):   end;
1555089   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555090   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1555091   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1555092   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555093   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1555094   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1555095   +   end;
MPRINT(EM_DIAGRAM):   end;
1555096   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1555097   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1555098   +   end;
MPRINT(EM_DIAGRAM):   end;
1555099   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555100   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1555101   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1555102   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555103   +   end;
MPRINT(EM_DIAGRAM):   end;
1555104   +end;
MPRINT(EM_DIAGRAM):   end;
1555105   +
1555106   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1555107   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1555108   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1555109   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1555110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555112   +end;
MPRINT(EM_DIAGRAM):   end;
1555113   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555114   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1555115   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1555116   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555117   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1555118   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1555119   +   end;
MPRINT(EM_DIAGRAM):   end;
1555120   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1555121   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1555122   +   end;
MPRINT(EM_DIAGRAM):   end;
1555123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555124   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1555125   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1555126   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555127   +   end;
MPRINT(EM_DIAGRAM):   end;
1555128   +end;
MPRINT(EM_DIAGRAM):   end;
1555129   +
1555130   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1555131   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1555132   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1555133   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1555134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555136   +end;
MPRINT(EM_DIAGRAM):   end;
1555137   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555138   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1555139   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1555140   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555141   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1555142   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1555143   +   end;
MPRINT(EM_DIAGRAM):   end;
1555144   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1555145   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1555146   +   end;
MPRINT(EM_DIAGRAM):   end;
1555147   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555148   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1555149   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1555150   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555151   +   end;
MPRINT(EM_DIAGRAM):   end;
1555152   +end;
MPRINT(EM_DIAGRAM):   end;
1555153   +
1555154   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1555155   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1555156   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1555157   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1555158   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555159   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555160   +end;
MPRINT(EM_DIAGRAM):   end;
1555161   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555162   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1555163   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1555164   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555165   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1555166   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1555167   +   end;
MPRINT(EM_DIAGRAM):   end;
1555168   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1555169   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1555170   +   end;
MPRINT(EM_DIAGRAM):   end;
1555171   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555172   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1555173   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1555174   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555175   +   end;
MPRINT(EM_DIAGRAM):   end;
1555176   +end;
MPRINT(EM_DIAGRAM):   end;
1555177   +
1555178   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1555179   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1555180   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1555181   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1555182   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1555183   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1555184   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1555185   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1555186   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1555187   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1555188   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1555189   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1555190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555192   +end;
MPRINT(EM_DIAGRAM):   end;
1555193   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555194   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1555195   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1555196   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555197   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1555198   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1555199   +   end;
MPRINT(EM_DIAGRAM):   end;
1555200   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1555201   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1555202   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1555203   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1555204   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1555205   +   end;
MPRINT(EM_DIAGRAM):   end;
1555206   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1555207   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1555208   +   end;
MPRINT(EM_DIAGRAM):   end;
1555209   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1555210   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1555211   +   end;
MPRINT(EM_DIAGRAM):   end;
1555212   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1555213   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1555214   +   end;
MPRINT(EM_DIAGRAM):   end;
1555215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555216   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1555217   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1555218   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1555219   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1555220   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1555221   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555222   +   end;
MPRINT(EM_DIAGRAM):   end;
1555223   +end;
MPRINT(EM_DIAGRAM):   end;
1555224   +
1555225   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1555226   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1555227   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1555228   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1555229   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1555230   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1555231   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1555232   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1555233   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1555234   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1555235   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1555236   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1555237   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1555238   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555240   +end;
MPRINT(EM_DIAGRAM):   end;
1555241   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555242   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1555243   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1555244   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555245   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1555246   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1555247   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1555248   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1555249   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1555250   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1555251   +         end;
MPRINT(EM_DIAGRAM):   end;
1555252   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1555253   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1555254   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1555255   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1555256   +            end;
MPRINT(EM_DIAGRAM):   end;
1555257   +         end;
MPRINT(EM_DIAGRAM):   end;
1555258   +      end;
MPRINT(EM_DIAGRAM):   end;
1555259   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1555260   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1555261   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1555262   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1555263   +         end;
MPRINT(EM_DIAGRAM):   end;
1555264   +      end;
MPRINT(EM_DIAGRAM):   end;
1555265   +   end;
MPRINT(EM_DIAGRAM):   end;
1555266   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555267   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1555268   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1555269   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1555270   +      end;
MPRINT(EM_DIAGRAM):   end;
1555271   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1555272   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1555273   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1555274   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1555275   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1555276   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1555277   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1555278   +         end;
MPRINT(EM_DIAGRAM):   end;
1555279   +      end;
MPRINT(EM_DIAGRAM):   end;
1555280   +   end;
MPRINT(EM_DIAGRAM):   end;
1555281   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1555282   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1555283   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1555284   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1555285   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1555286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1555287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555288   +   end;
MPRINT(EM_DIAGRAM):   end;
1555289   +end;
MPRINT(EM_DIAGRAM):   end;
1555290   +
1555291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555292   +*** Checking missing input Interval
1555293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1555294   +
1555295   +IF NMISS(
1555296   +   AcceptedCmpTotal ,
1555297   +   Age ,
1555298   +   Frq ,
1555299   +   Income ,
1555300   +   Kidhome ,
1555301   +   Mnt ,
1555302   +   MntFishProducts ,
1555303   +   MntFruits ,
1555304   +   MntGoldProds ,
1555305   +   MntMeatProducts ,
1555306   +   MntSweetProducts ,
1555307   +   MntWines ,
1555308   +   MonthsAsCustomer ,
1555309   +   NumCatalogPurchases ,
1555310   +   NumDealsPurchases ,
1555311   +   NumDistPurchases ,
1555312   +   NumStorePurchases ,
1555313   +   NumWebPurchases ,
1555314   +   NumWebVisitsMonth ,
1555315   +   RFMstat ,
1555316   +   RMntFrq ,
1555317   +   Recency ,
1555318   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1555319   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1555320   +
1555321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555322   +END;
MPRINT(EM_DIAGRAM):   END;
1555323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555324   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1555325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555326   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1555327   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1555328   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1555329   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1555330   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1555331   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1555332   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1555333   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1555334   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1555335   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1555336   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1555337   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1555338   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1555339   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1555340   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1555341   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1555342   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1555343   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1555344   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1555345   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1555346   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1555347   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1555348   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1555349   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1555350   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1555351   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1555352   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1555353   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1555354   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1555355   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1555356   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1555357   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1555358   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1555359   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1555360   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1555361   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1555362   +END;
MPRINT(EM_DIAGRAM):   END;
1555363   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1555364   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1555365   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1555366   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1555367   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1555368   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1555369   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1555370   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1555371   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1555372   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1555373   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1555374   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1555375   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1555376   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1555377   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1555378   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1555379   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1555380   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1555381   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1555382   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1555383   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1555384   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1555385   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1555386   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1555387   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1555388   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1555389   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1555390   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1555391   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1555392   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1555393   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1555394   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1555395   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1555396   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1555397   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1555398   +   ELSE S_NumCatalogPurchases
1555399   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1555400   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1555401   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1555402   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1555403   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1555404   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1555405   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1555406   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1555407   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1555408   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1555409   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1555410   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1555411   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1555412   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1555413   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1555414   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1555415   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1555416   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1555417   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1555418   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1555419   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1555420   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1555421   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1555422   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1555423   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1555424   +END;
MPRINT(EM_DIAGRAM):   END;
1555425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555426   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1555427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555429   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1555430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555432   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1555433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555434   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1555435   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1555436   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1555437   +        S_Income  +    -0.45967008908227 * S_Kidhome
1555438   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1555439   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1555440   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1555441   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1555442   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1555443   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1555444   +          +    -0.23353175442713 * S_NumDealsPurchases
1555445   +          +     0.18635522192442 * S_NumDistPurchases
1555446   +          +     0.37209457890956 * S_NumStorePurchases
1555447   +          +     0.25018232304823 * S_NumWebPurchases
1555448   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1555449   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1555450   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1555451   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age 
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome + 
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 * 
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts + 
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 * 
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 * 
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 * 
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 * 
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq + 
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1555452   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1555453   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1555454   +        S_Income  +     0.23329613045589 * S_Kidhome
1555455   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1555456   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1555457   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1555458   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1555459   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1555460   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1555461   +          +    -0.09699498622435 * S_NumDealsPurchases
1555462   +          +     0.40364070798795 * S_NumDistPurchases
1555463   +          +      0.2162579072164 * S_NumStorePurchases
1555464   +          +     0.26248410135079 * S_NumWebPurchases
1555465   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1555466   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1555467   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1555468   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age 
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome + 
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 * 
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts + 
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 * 
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 * 
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 * 
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 * 
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq + 
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1555469   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1555470   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1555471   +        S_Income  +     0.20139862021528 * S_Kidhome
1555472   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1555473   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1555474   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1555475   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1555476   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1555477   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1555478   +          +     0.09066191700879 * S_NumDealsPurchases
1555479   +          +    -0.05769000978222 * S_NumDistPurchases
1555480   +          +    -0.10089591692167 * S_NumStorePurchases
1555481   +          +    -0.00088654116561 * S_NumWebPurchases
1555482   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1555483   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1555484   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1555485   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age 
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome + 
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 * 
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts + 
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 * 
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 * 
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 * 
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 * 
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq + 
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1555486   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1555487   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1555488   +        S_Income  +      0.2502648333687 * S_Kidhome
1555489   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1555490   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1555491   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1555492   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1555493   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1555494   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1555495   +          +     0.83424444661619 * S_NumDealsPurchases
1555496   +          +     0.31333214543205 * S_NumDistPurchases
1555497   +          +    -0.61732647242019 * S_NumStorePurchases
1555498   +          +    -1.01955156895052 * S_NumWebPurchases
1555499   +          +     0.13017609997428 * S_NumWebVisitsMonth
1555500   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1555501   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1555502   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age + 
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome + 
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 * 
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts + 
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 * 
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 * 
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 * 
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 * 
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq + 
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1555503   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1555504   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1555505   +        S_Income  +    -0.70952256145726 * S_Kidhome
1555506   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1555507   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1555508   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1555509   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1555510   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1555511   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1555512   +          +     0.63522682456102 * S_NumDealsPurchases
1555513   +          +      0.0043057429215 * S_NumDistPurchases
1555514   +          +    -0.76667751707574 * S_NumStorePurchases
1555515   +          +    -0.73436881033241 * S_NumWebPurchases
1555516   +          +     1.59331554601341 * S_NumWebVisitsMonth
1555517   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1555518   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1555519   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age 
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome + 
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 * 
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts + 
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 * 
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 * 
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 * 
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 * 
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq + 
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1555520   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1555521   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1555522   +        S_Income  +    -0.23632967504194 * S_Kidhome
1555523   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1555524   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1555525   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1555526   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1555527   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1555528   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1555529   +          +     -0.3032858959477 * S_NumDealsPurchases
1555530   +          +     0.11343979556999 * S_NumDistPurchases
1555531   +          +     0.19545021266061 * S_NumStorePurchases
1555532   +          +      0.1566777684546 * S_NumWebPurchases
1555533   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1555534   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1555535   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1555536   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age 
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome + 
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 * 
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts + 
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 * 
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 * 
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 * 
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 * 
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq + 
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1555537   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1555538   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1555539   +        S_Income  +    -0.47847362741737 * S_Kidhome
1555540   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1555541   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1555542   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1555543   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1555544   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1555545   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1555546   +          +    -0.17510289915098 * S_NumDealsPurchases
1555547   +          +     0.16952490494417 * S_NumDistPurchases
1555548   +          +     0.11152117614204 * S_NumStorePurchases
1555549   +          +     0.22594341376741 * S_NumWebPurchases
1555550   +          +     0.64523546369354 * S_NumWebVisitsMonth
1555551   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1555552   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1555553   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age + 
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome + 
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 * 
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts + 
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 * 
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 * 
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 * 
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 * 
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq + 
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1555554   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1555555   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1555556   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1555557   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1555558   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 * 
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 + 
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 * 
HigherEducationBinary0 ;
1555559   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1555560   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1555561   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1555562   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1555563   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 * 
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 + 
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 * 
HigherEducationBinary0 ;
1555564   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1555565   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1555566   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1555567   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1555568   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 * 
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 + 
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 * 
HigherEducationBinary0 ;
1555569   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1555570   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1555571   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1555572   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1555573   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 * 
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 + 
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 * 
HigherEducationBinary0 ;
1555574   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1555575   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1555576   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1555577   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1555578   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 * 
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 + 
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 * 
HigherEducationBinary0 ;
1555579   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1555580   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1555581   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1555582   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1555583   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 * 
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 + 
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 * 
HigherEducationBinary0 ;
1555584   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1555585   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1555586   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1555587   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1555588   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 * 
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 + 
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 * 
HigherEducationBinary0 ;
1555589   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1555590   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1555591   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1555592   +          +     0.42319965972117 * Marital_StatusDivorced
1555593   +          +    -0.45015157317991 * Marital_StatusMarried
1555594   +          +     0.43076106925345 * Marital_StatusSingle
1555595   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 * 
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster + 
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried + 
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1555596   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1555597   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1555598   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1555599   +          +     0.11384347873072 * Marital_StatusDivorced
1555600   +          +     0.51442453272823 * Marital_StatusMarried
1555601   +          +    -0.38966058028661 * Marital_StatusSingle
1555602   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 * 
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster 
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried + 
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1555603   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1555604   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1555605   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1555606   +          +    -0.05213342781535 * Marital_StatusDivorced
1555607   +          +     0.07520352092928 * Marital_StatusMarried
1555608   +          +     0.20175107471623 * Marital_StatusSingle
1555609   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 * 
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster 
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried + 
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1555610   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1555611   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1555612   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1555613   +          +    -0.40635592200933 * Marital_StatusDivorced
1555614   +          +     0.64772941459031 * Marital_StatusMarried
1555615   +          +    -0.36402842056603 * Marital_StatusSingle
1555616   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 * 
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster 
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried + 
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1555617   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1555618   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1555619   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1555620   +          +     0.87932592764844 * Marital_StatusDivorced
1555621   +          +    -0.85946473083734 * Marital_StatusMarried
1555622   +          +     0.74505733668545 * Marital_StatusSingle
1555623   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 * 
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster 
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried + 
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1555624   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1555625   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1555626   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1555627   +          +    -0.11861748280641 * Marital_StatusDivorced
1555628   +          +    -0.15869097739395 * Marital_StatusMarried
1555629   +          +     0.34415019828259 * Marital_StatusSingle
1555630   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 * 
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster 
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried + 
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1555631   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1555632   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1555633   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1555634   +          +     0.14995740697816 * Marital_StatusDivorced
1555635   +          +    -1.01788822114068 * Marital_StatusMarried
1555636   +          +     0.70532758126153 * Marital_StatusSingle
1555637   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 * 
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster 
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried + 
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1555638   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1555639   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1555640   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1555641   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1555642   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1555643   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1555644   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1555645   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1555646   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1555647   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1555648   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1555649   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1555650   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1555651   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1555652   +END;
MPRINT(EM_DIAGRAM):   END;
1555653   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1555654   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1555655   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1555656   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1555657   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1555658   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1555659   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1555660   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1555661   +END;
MPRINT(EM_DIAGRAM):   END;
1555662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555663   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1555664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555665   +
1555666   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1555667   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1555668   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1555669   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1555670   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1555671   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555672   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1555673   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1555674   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1555675   +end;
MPRINT(EM_DIAGRAM):   end;
1555676   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555677   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1555678   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1555679   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1555680   +   end;
MPRINT(EM_DIAGRAM):   end;
1555681   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1555682   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1555683   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1555684   +   end;
MPRINT(EM_DIAGRAM):   end;
1555685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555686   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1555687   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1555688   +   end;
MPRINT(EM_DIAGRAM):   end;
1555689   +end;
MPRINT(EM_DIAGRAM):   end;
1555690   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1555691   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1555692   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1555693   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1555694   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 + 
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 * 
H16 + 2.13310046968058 * H17 ;
1555695   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1555696   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1555697   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1555698   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1555699   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1555700   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1555701   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1555702   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1555703   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1555704   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1555705   +END;
MPRINT(EM_DIAGRAM):   END;
1555706   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1555707   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1555708   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1555709   +END;
MPRINT(EM_DIAGRAM):   END;
1555710   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1555711   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1555712   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1555713   +END;
MPRINT(EM_DIAGRAM):   END;
1555714   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1555715   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1555716   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1555717   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1555718   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1555719   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1555720   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1555721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555722   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1555723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1555724   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1555725   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1555726   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1555727   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1555728   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1555729   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1555730   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1555731   +END;
MPRINT(EM_DIAGRAM):   END;
1555732   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1555733   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1555734   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1555735   +drop
1555736   +H11
1555737   +H12
1555738   +H13
1555739   +H14
1555740   +H15
1555741   +H16
1555742   +H17
1555743   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1555744   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1555745   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1555746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555747   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1555748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555749   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1555750   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1555751   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1555752   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1555753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555754   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1555755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555756   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1555757   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1555758   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1555759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555760   +* Ensmbl27: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Maximum Posteriors of 7 models;
1555761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555762   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1555763   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1555764   +P_DepVar1 = max(
1555765   +Reg5_P_DepVar1 ,
1555766   +Reg_P_DepVar1 ,
1555767   +Neural4_P_DepVar1 ,
1555768   +Neural2_P_DepVar1 ,
1555769   +Neural3_P_DepVar1 ,
1555770   +Neural9_P_DepVar1 ,
1555771   +Neural10_P_DepVar1
1555772   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Reg5_P_DepVar1 , Reg_P_DepVar1 , Neural4_P_DepVar1 , 
Neural2_P_DepVar1 , Neural3_P_DepVar1 , Neural9_P_DepVar1 , Neural10_P_DepVar1 );
1555773   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1555774   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1555775   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1555776   +end;
MPRINT(EM_DIAGRAM):   end;
1555777   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1555778   +P_DepVar0 = max(
1555779   +Reg5_P_DepVar0 ,
1555780   +Reg_P_DepVar0 ,
1555781   +Neural4_P_DepVar0 ,
1555782   +Neural2_P_DepVar0 ,
1555783   +Neural3_P_DepVar0 ,
1555784   +Neural9_P_DepVar0 ,
1555785   +Neural10_P_DepVar0
1555786   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Reg5_P_DepVar0 , Reg_P_DepVar0 , Neural4_P_DepVar0 , 
Neural2_P_DepVar0 , Neural3_P_DepVar0 , Neural9_P_DepVar0 , Neural10_P_DepVar0 );
1555787   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1555788   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1555789   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1555790   +end;
MPRINT(EM_DIAGRAM):   end;
1555791   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1555792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555793   +* Ensmbl27: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Classification Vars;
1555794   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555795   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1555796   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1555797   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1555798   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1555799   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1555800   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1555801   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1555802   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1555803   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1555804   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1555805   +end;
MPRINT(EM_DIAGRAM):   end;
1555806   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1555807   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1555808   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1555809   +end;
MPRINT(EM_DIAGRAM):   end;
1555810   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1555811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555812   +* Ensmbl27: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Producing Unformatted variable;
1555813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555814   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1555815   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1555816   +else
1555817   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1555818   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555819   +* Ensmbl27: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing _WARN_ Variable;
1555820   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555821   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1555822   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1555823   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1555824   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1555825   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1555826   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1555827   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1555828   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1555829   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1555830   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1555831   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1555832   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1555833   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1555834   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1555835   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1555836   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1555837   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1555838   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1555839   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1555840   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1555841   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1555842   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1555843   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1555844   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1555845   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1555846   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1555847   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1555848   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1555848  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1555849   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1555849  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1555850   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1555850  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1555851   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1555851  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1555852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555853   +* Ensmbl27: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Residual Vars;
1555854   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555855   +if
1555856   +F_DepVar NE '1'
1555857   +AND F_DepVar NE '0'
1555858   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1555859   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1555860   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1555861   +end;
MPRINT(EM_DIAGRAM):   end;
1555862   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555863   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1555864   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1555865   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1555866   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1555867   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1555868   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1555869   +END;
MPRINT(EM_DIAGRAM):   END;
1555870   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1555871    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL27_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1555872    quit;
1555873    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1555874    filename emflow
1555874  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring REG5_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555875    *------------------------------------------------------------*;
1555876    * Ensmbl27: Scoring REG5_VALIDATE data;
1555877    *------------------------------------------------------------*;
1555878    data EMWS8.Ensmbl27_VALIDATE
1555879    / view=EMWS8.Ensmbl27_VALIDATE
1555880    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_VALIDATE / view=EMWS8.Ensmbl27_VALIDATE ;
1555881    set EMWS8.Reg5_VALIDATE
1555882    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg5_VALIDATE ;
1555883    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas.
1555884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555885   +* Ensmbl27: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Combine model for DepVar;
1555886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555887   +* Ensmbl27: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 1 of 7;
1555888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555890   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1555891   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1555892   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1555893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555895   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1555896   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1555897   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1555898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555900   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1555901   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1555902   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1555903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555905   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1555906   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1555907   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1555908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555909   +
1555910   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1555911   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1555911  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1555912   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1555913   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1555914   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1555915   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1555916   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1555917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555918   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1555919   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1555920   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1555921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555923   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1555924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555925   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1555926   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1555927   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1555928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555929   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1555930   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1555931   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1555932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555934   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1555935   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1555936   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1555937   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555939   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1555940   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1555941   +* NODE: Reg5;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
1555942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1555943   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1555944   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1555945   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1555946   +
1555947   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1555948   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1555949   +
1555950   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1555951   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1555952   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1555953   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1555954   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1555955   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1555956   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1555957   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1555958   +
1555959   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1555960   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1555961   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1555962   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1555963   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1555964   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1555965   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1555966   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1555967   +end;
MPRINT(EM_DIAGRAM):   end;
1555968   +else do;
MPRINT(EM_DIAGRAM):   else do;
1555969   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1555970   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1555971   +   end;
MPRINT(EM_DIAGRAM):   end;
1555972   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1555973   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1555974   +   end;
MPRINT(EM_DIAGRAM):   end;
1555975   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1555976   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1555977   +   end;
MPRINT(EM_DIAGRAM):   end;
1555978   +end;
MPRINT(EM_DIAGRAM):   end;
1555979   +
1555980   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1555981   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1555982   +
1555983   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1555984   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1555985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555987   +end;
MPRINT(EM_DIAGRAM):   end;
1555988   +
1555989   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1555990   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1555991   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555993   +end;
MPRINT(EM_DIAGRAM):   end;
1555994   +
1555995   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1555996   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1555997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1555998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1555999   +end;
MPRINT(EM_DIAGRAM):   end;
1556000   +
1556001   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1556002   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1556003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556005   +end;
MPRINT(EM_DIAGRAM):   end;
1556006   +
1556007   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1556008   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1556009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556011   +end;
MPRINT(EM_DIAGRAM):   end;
1556012   +
1556013   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1556014   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1556015   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556016   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556017   +end;
MPRINT(EM_DIAGRAM):   end;
1556018   +
1556019   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1556020   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1556021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556023   +end;
MPRINT(EM_DIAGRAM):   end;
1556024   +
1556025   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1556026   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1556027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556029   +end;
MPRINT(EM_DIAGRAM):   end;
1556030   +
1556031   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1556032   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1556033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556035   +end;
MPRINT(EM_DIAGRAM):   end;
1556036   +
1556037   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1556038   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1556039   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556041   +end;
MPRINT(EM_DIAGRAM):   end;
1556042   +
1556043   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1556044   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1556045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556047   +end;
MPRINT(EM_DIAGRAM):   end;
1556048   +
1556049   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1556050   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1556051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556053   +end;
MPRINT(EM_DIAGRAM):   end;
1556054   +
1556055   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1556056   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1556057   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1556058   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1556059   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1556060   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1556061   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1556062   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1556063   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1556064   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1556065   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1556066   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1556067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556069   +end;
MPRINT(EM_DIAGRAM):   end;
1556070   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556071   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1556072   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1556073   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556074   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1556075   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1556076   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1556077   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1556078   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1556079   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556080   +         end;
MPRINT(EM_DIAGRAM):   end;
1556081   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1556082   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1556083   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1556084   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556085   +            end;
MPRINT(EM_DIAGRAM):   end;
1556086   +         end;
MPRINT(EM_DIAGRAM):   end;
1556087   +      end;
MPRINT(EM_DIAGRAM):   end;
1556088   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1556089   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1556090   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1556091   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556092   +         end;
MPRINT(EM_DIAGRAM):   end;
1556093   +      end;
MPRINT(EM_DIAGRAM):   end;
1556094   +   end;
MPRINT(EM_DIAGRAM):   end;
1556095   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556096   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1556097   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1556098   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556099   +      end;
MPRINT(EM_DIAGRAM):   end;
1556100   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1556101   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1556102   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1556103   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1556104   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1556105   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1556106   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556107   +         end;
MPRINT(EM_DIAGRAM):   end;
1556108   +      end;
MPRINT(EM_DIAGRAM):   end;
1556109   +   end;
MPRINT(EM_DIAGRAM):   end;
1556110   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1556111   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1556112   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1556113   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1556114   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1556115   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556116   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556117   +   end;
MPRINT(EM_DIAGRAM):   end;
1556118   +end;
MPRINT(EM_DIAGRAM):   end;
1556119   +
1556120   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1556121   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1556122   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1556123   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1556124   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1556125   +end;
MPRINT(EM_DIAGRAM):   end;
1556126   +
1556127   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1556128   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1556129   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1556130   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1556131   +
1556132   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1556133   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1556134   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1556135   +
1556136   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1556137   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1556138   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1556139   +
1556140   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1556141   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1556142   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1556143   +
1556144   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1556145   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1556146   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1556147   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1556148   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1556149   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1556150   +
1556151   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1556152   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1556153   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1556154   +
1556155   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1556156   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1556157   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1556158   +
1556159   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1556160   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1556161   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1556162   +
1556163   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1556164   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1556165   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1556166   +
1556167   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1556168   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1556169   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1556170   +
1556171   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1556172   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1556173   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1556174   +
1556175   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1556176   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1556177   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1556178   +
1556179   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1556180   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1556181   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1556182   +
1556183   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1556184   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1556185   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1556186   +
1556187   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1556188   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1556189   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1556190   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1556191   +
1556192   +REG5DR1:
1556193   +
1556194   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Residuals;
1556195   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1556196   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1556197   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1556198   +end;
MPRINT(EM_DIAGRAM):   end;
1556199   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556200   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1556201   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1556202   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1556203   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1556204   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1556205   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1556206   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1556207   +   end;
MPRINT(EM_DIAGRAM):   end;
1556208   +end;
MPRINT(EM_DIAGRAM):   end;
1556209   +
1556210   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1556211   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1556212   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1556213   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1556214   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1556215   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1556216   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1556217   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1556218   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1556219   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1556220   +end;
MPRINT(EM_DIAGRAM):   end;
1556221   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1556222   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1556223   +
1556224   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1556225   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1556226   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1556227   +* Renaming variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg5;
1556228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556229   +* Renaming Posterior variables for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg5;
1556230   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556231   +drop Reg5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar1;
1556232   +Reg5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar1 = P_DepVar1;
1556233   +drop Reg5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg5_P_DepVar0;
1556234   +Reg5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg5_P_DepVar0 = P_DepVar0;
1556235   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556236   +* Renaming _WARN_ variable for Reg5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg5;
1556237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556238   +length Reg5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg5_WARN_ $4;
1556239   +drop Reg5_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg5_WARN_;
1556240   +Reg5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg5_WARN_ = _WARN_;
1556241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556242   +* Ensmbl27: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 2 of 7;
1556243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556245   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1556246   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1556247   +* NODE: Reg;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
1556248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556249   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1556250   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1556251   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1556252   +
1556253   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1556254   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1556255   +
1556256   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1556257   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1556258   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1556259   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1556260   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1556261   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1556262   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1556263   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1556264   +
1556265   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1556266   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1556267   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1556268   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1556269   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1556270   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556271   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1556272   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1556273   +end;
MPRINT(EM_DIAGRAM):   end;
1556274   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556275   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1556276   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1556277   +   end;
MPRINT(EM_DIAGRAM):   end;
1556278   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1556279   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1556280   +   end;
MPRINT(EM_DIAGRAM):   end;
1556281   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556282   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1556283   +   end;
MPRINT(EM_DIAGRAM):   end;
1556284   +end;
MPRINT(EM_DIAGRAM):   end;
1556285   +
1556286   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1556287   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1556288   +
1556289   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1556290   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1556291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556293   +end;
MPRINT(EM_DIAGRAM):   end;
1556294   +
1556295   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1556296   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1556297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556299   +end;
MPRINT(EM_DIAGRAM):   end;
1556300   +
1556301   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1556302   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1556303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556305   +end;
MPRINT(EM_DIAGRAM):   end;
1556306   +
1556307   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1556308   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1556309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556311   +end;
MPRINT(EM_DIAGRAM):   end;
1556312   +
1556313   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1556314   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1556315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556317   +end;
MPRINT(EM_DIAGRAM):   end;
1556318   +
1556319   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1556320   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1556321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556323   +end;
MPRINT(EM_DIAGRAM):   end;
1556324   +
1556325   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1556326   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1556327   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556328   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556329   +end;
MPRINT(EM_DIAGRAM):   end;
1556330   +
1556331   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1556332   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1556333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556335   +end;
MPRINT(EM_DIAGRAM):   end;
1556336   +
1556337   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1556338   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1556339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556341   +end;
MPRINT(EM_DIAGRAM):   end;
1556342   +
1556343   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1556344   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1556345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556347   +end;
MPRINT(EM_DIAGRAM):   end;
1556348   +
1556349   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1556350   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1556351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556353   +end;
MPRINT(EM_DIAGRAM):   end;
1556354   +
1556355   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1556356   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1556357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556359   +end;
MPRINT(EM_DIAGRAM):   end;
1556360   +
1556361   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1556362   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1556363   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556364   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556365   +end;
MPRINT(EM_DIAGRAM):   end;
1556366   +
1556367   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1556368   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1556369   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1556370   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1556371   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1556372   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1556373   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1556374   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1556375   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1556376   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1556377   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1556378   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1556379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556381   +end;
MPRINT(EM_DIAGRAM):   end;
1556382   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556383   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1556384   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1556385   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556386   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1556387   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1556388   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1556389   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1556390   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1556391   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556392   +         end;
MPRINT(EM_DIAGRAM):   end;
1556393   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1556394   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1556395   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1556396   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556397   +            end;
MPRINT(EM_DIAGRAM):   end;
1556398   +         end;
MPRINT(EM_DIAGRAM):   end;
1556399   +      end;
MPRINT(EM_DIAGRAM):   end;
1556400   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1556401   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1556402   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1556403   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556404   +         end;
MPRINT(EM_DIAGRAM):   end;
1556405   +      end;
MPRINT(EM_DIAGRAM):   end;
1556406   +   end;
MPRINT(EM_DIAGRAM):   end;
1556407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556408   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1556409   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1556410   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556411   +      end;
MPRINT(EM_DIAGRAM):   end;
1556412   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1556413   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1556414   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1556415   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1556416   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1556417   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1556418   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556419   +         end;
MPRINT(EM_DIAGRAM):   end;
1556420   +      end;
MPRINT(EM_DIAGRAM):   end;
1556421   +   end;
MPRINT(EM_DIAGRAM):   end;
1556422   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1556423   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1556424   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1556425   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1556426   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1556427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556429   +   end;
MPRINT(EM_DIAGRAM):   end;
1556430   +end;
MPRINT(EM_DIAGRAM):   end;
1556431   +
1556432   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1556433   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1556434   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1556435   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1556436   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1556437   +end;
MPRINT(EM_DIAGRAM):   end;
1556438   +
1556439   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1556440   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1556441   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1556442   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1556443   +
1556444   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1556445   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1556446   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1556447   +
1556448   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1556449   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1556450   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1556451   +
1556452   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1556453   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1556454   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1556455   +
1556456   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1556457   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1556458   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1556459   +
1556460   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1556461   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1556462   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1556463   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1556464   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1556465   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1556466   +
1556467   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1556468   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1556469   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1556470   +
1556471   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1556472   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1556473   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1556474   +
1556475   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1556476   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1556477   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1556478   +
1556479   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1556480   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1556481   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1556482   +
1556483   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1556484   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1556485   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1556486   +
1556487   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1556488   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1556489   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1556490   +
1556491   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1556492   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1556493   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1556494   +
1556495   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1556496   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1556497   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1556498   +
1556499   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1556500   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1556501   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1556502   +
1556503   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1556504   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1556505   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1556506   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1556507   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1556508   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1556509   +end;
MPRINT(EM_DIAGRAM):   end;
1556510   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1556511   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1556512   +
1556513   +REGDR1:
1556514   +
1556515   +*** Residuals;
MPRINT(EM_DIAGRAM):   REGDR1: *** Residuals;
1556516   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1556517   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1556518   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1556519   +end;
MPRINT(EM_DIAGRAM):   end;
1556520   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556521   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1556522   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1556523   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1556524   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1556525   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1556526   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1556527   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1556528   +   end;
MPRINT(EM_DIAGRAM):   end;
1556529   +end;
MPRINT(EM_DIAGRAM):   end;
1556530   +
1556531   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1556532   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1556533   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1556534   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1556535   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1556536   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1556537   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1556538   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1556539   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1556540   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1556541   +end;
MPRINT(EM_DIAGRAM):   end;
1556542   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1556543   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1556544   +
1556545   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1556546   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1556547   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1556548   +* Renaming variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg;
1556549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556550   +* Renaming Posterior variables for Reg;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg;
1556551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556552   +drop Reg_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar1;
1556553   +Reg_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar1 = P_DepVar1;
1556554   +drop Reg_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg_P_DepVar0;
1556555   +Reg_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg_P_DepVar0 = P_DepVar0;
1556556   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556557   +* Renaming _WARN_ variable for Reg;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg;
1556558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556559   +length Reg_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg_WARN_ $4;
1556560   +drop Reg_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg_WARN_;
1556561   +Reg_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg_WARN_ = _WARN_;
1556562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556563   +* Ensmbl27: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 3 of 7;
1556564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556566   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1556567   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1556568   +* NODE: Neural4;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
1556569   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1556570   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1556571   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1556572   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1556573   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1556574   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1556575   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1556576   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1556577   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1556578   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1556579   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1556580   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1556581   +LENGTH _WARN_ $4
1556582   +      F_DepVar  $ 12
1556583   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1556584   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1556585   +
1556586   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1556587   +
1556588   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1556589   +
1556590   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1556591   +
1556592   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1556593   +
1556594   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1556595   +
1556596   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1556597   +
1556598   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1556599   +
1556600   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1556601   +
1556602   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1556603   +
1556604   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1556605   +
1556606   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1556607   +
1556608   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1556609   +
1556610   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1556611   +
1556612   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1556613   +
1556614   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1556615   +
1556616   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1556617   +
1556618   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1556619   +
1556620   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1556621   +
1556622   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1556623   +
1556624   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1556625   +
1556626   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1556627   +
1556628   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1556629   +
1556630   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1556631   +
1556632   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1556633   +
1556634   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1556635   +
1556636   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1556637   +
1556638   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1556639   +
1556640   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1556641   +
1556642   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1556643   +
1556644   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1556645   +
1556646   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1556647   +
1556648   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1556649   +
1556650   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1556651   +
1556652   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1556653   +
1556654   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1556655   +
1556656   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1556657   +
1556658   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1556659   +
1556660   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1556661   +
1556662   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1556663   +
1556664   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1556665   +
1556666   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1556667   +
1556668   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1556669   +
1556670   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1556671   +
1556672   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1556673   +
1556674   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1556675   +
1556676   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1556677   +
1556678   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1556679   +
1556680   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1556681   +
1556682   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1556683   +
1556684   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1556685   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1556686   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1556687   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1556688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556690   +end;
MPRINT(EM_DIAGRAM):   end;
1556691   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556692   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1556693   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1556694   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556695   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1556696   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1556697   +   end;
MPRINT(EM_DIAGRAM):   end;
1556698   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1556699   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1556700   +   end;
MPRINT(EM_DIAGRAM):   end;
1556701   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556702   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1556703   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556704   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556705   +   end;
MPRINT(EM_DIAGRAM):   end;
1556706   +end;
MPRINT(EM_DIAGRAM):   end;
1556707   +
1556708   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1556709   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1556710   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1556711   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1556712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556714   +end;
MPRINT(EM_DIAGRAM):   end;
1556715   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556716   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1556717   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1556718   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556719   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1556720   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1556721   +   end;
MPRINT(EM_DIAGRAM):   end;
1556722   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1556723   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1556724   +   end;
MPRINT(EM_DIAGRAM):   end;
1556725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556726   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1556727   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556728   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556729   +   end;
MPRINT(EM_DIAGRAM):   end;
1556730   +end;
MPRINT(EM_DIAGRAM):   end;
1556731   +
1556732   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1556733   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1556734   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1556735   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1556736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556738   +end;
MPRINT(EM_DIAGRAM):   end;
1556739   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556740   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1556741   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1556742   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556743   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1556744   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1556745   +   end;
MPRINT(EM_DIAGRAM):   end;
1556746   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1556747   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1556748   +   end;
MPRINT(EM_DIAGRAM):   end;
1556749   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556750   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1556751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556753   +   end;
MPRINT(EM_DIAGRAM):   end;
1556754   +end;
MPRINT(EM_DIAGRAM):   end;
1556755   +
1556756   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1556757   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1556758   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1556759   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1556760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556762   +end;
MPRINT(EM_DIAGRAM):   end;
1556763   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556764   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1556765   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1556766   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556767   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1556768   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1556769   +   end;
MPRINT(EM_DIAGRAM):   end;
1556770   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1556771   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1556772   +   end;
MPRINT(EM_DIAGRAM):   end;
1556773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556774   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1556775   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556776   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556777   +   end;
MPRINT(EM_DIAGRAM):   end;
1556778   +end;
MPRINT(EM_DIAGRAM):   end;
1556779   +
1556780   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1556781   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1556782   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1556783   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1556784   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556786   +end;
MPRINT(EM_DIAGRAM):   end;
1556787   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556788   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1556789   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1556790   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556791   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1556792   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1556793   +   end;
MPRINT(EM_DIAGRAM):   end;
1556794   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1556795   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1556796   +   end;
MPRINT(EM_DIAGRAM):   end;
1556797   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556798   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1556799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556801   +   end;
MPRINT(EM_DIAGRAM):   end;
1556802   +end;
MPRINT(EM_DIAGRAM):   end;
1556803   +
1556804   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1556805   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1556806   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1556807   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1556808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556810   +end;
MPRINT(EM_DIAGRAM):   end;
1556811   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556812   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1556813   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1556814   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556815   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1556816   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1556817   +   end;
MPRINT(EM_DIAGRAM):   end;
1556818   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1556819   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1556820   +   end;
MPRINT(EM_DIAGRAM):   end;
1556821   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556822   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1556823   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556824   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556825   +   end;
MPRINT(EM_DIAGRAM):   end;
1556826   +end;
MPRINT(EM_DIAGRAM):   end;
1556827   +
1556828   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1556829   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1556830   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1556831   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1556832   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556833   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556834   +end;
MPRINT(EM_DIAGRAM):   end;
1556835   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556836   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1556837   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1556838   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556839   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1556840   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1556841   +   end;
MPRINT(EM_DIAGRAM):   end;
1556842   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1556843   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1556844   +   end;
MPRINT(EM_DIAGRAM):   end;
1556845   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556846   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1556847   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556848   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556849   +   end;
MPRINT(EM_DIAGRAM):   end;
1556850   +end;
MPRINT(EM_DIAGRAM):   end;
1556851   +
1556852   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1556853   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1556854   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1556855   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1556856   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1556857   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1556858   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1556859   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1556860   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1556861   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1556862   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1556863   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1556864   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556865   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556866   +end;
MPRINT(EM_DIAGRAM):   end;
1556867   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556868   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1556869   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1556870   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556871   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1556872   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1556873   +   end;
MPRINT(EM_DIAGRAM):   end;
1556874   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1556875   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1556876   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1556877   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1556878   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1556879   +   end;
MPRINT(EM_DIAGRAM):   end;
1556880   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1556881   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1556882   +   end;
MPRINT(EM_DIAGRAM):   end;
1556883   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1556884   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1556885   +   end;
MPRINT(EM_DIAGRAM):   end;
1556886   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1556887   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1556888   +   end;
MPRINT(EM_DIAGRAM):   end;
1556889   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556890   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1556891   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1556892   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1556893   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1556894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556896   +   end;
MPRINT(EM_DIAGRAM):   end;
1556897   +end;
MPRINT(EM_DIAGRAM):   end;
1556898   +
1556899   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1556900   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1556901   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1556902   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1556903   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1556904   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1556905   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1556906   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1556907   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1556908   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1556909   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1556910   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1556911   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1556912   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1556913   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556914   +end;
MPRINT(EM_DIAGRAM):   end;
1556915   +else do;
MPRINT(EM_DIAGRAM):   else do;
1556916   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1556917   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1556918   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1556919   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1556920   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1556921   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1556922   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1556923   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1556924   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556925   +         end;
MPRINT(EM_DIAGRAM):   end;
1556926   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1556927   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1556928   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1556929   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556930   +            end;
MPRINT(EM_DIAGRAM):   end;
1556931   +         end;
MPRINT(EM_DIAGRAM):   end;
1556932   +      end;
MPRINT(EM_DIAGRAM):   end;
1556933   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1556934   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1556935   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1556936   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556937   +         end;
MPRINT(EM_DIAGRAM):   end;
1556938   +      end;
MPRINT(EM_DIAGRAM):   end;
1556939   +   end;
MPRINT(EM_DIAGRAM):   end;
1556940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1556941   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1556942   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1556943   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556944   +      end;
MPRINT(EM_DIAGRAM):   end;
1556945   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1556946   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1556947   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1556948   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1556949   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1556950   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1556951   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1556952   +         end;
MPRINT(EM_DIAGRAM):   end;
1556953   +      end;
MPRINT(EM_DIAGRAM):   end;
1556954   +   end;
MPRINT(EM_DIAGRAM):   end;
1556955   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1556956   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1556957   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1556958   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1556959   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1556960   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1556961   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556962   +   end;
MPRINT(EM_DIAGRAM):   end;
1556963   +end;
MPRINT(EM_DIAGRAM):   end;
1556964   +
1556965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1556966   +*** Checking missing input Interval
1556967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1556968   +
1556969   +IF NMISS(
1556970   +   AcceptedCmpTotal ,
1556971   +   Age ,
1556972   +   Frq ,
1556973   +   Income ,
1556974   +   Kidhome ,
1556975   +   Mnt ,
1556976   +   MntFishProducts ,
1556977   +   MntFruits ,
1556978   +   MntGoldProds ,
1556979   +   MntMeatProducts ,
1556980   +   MntSweetProducts ,
1556981   +   MntWines ,
1556982   +   MonthsAsCustomer ,
1556983   +   NumCatalogPurchases ,
1556984   +   NumDealsPurchases ,
1556985   +   NumDistPurchases ,
1556986   +   NumStorePurchases ,
1556987   +   NumWebPurchases ,
1556988   +   NumWebVisitsMonth ,
1556989   +   RFMstat ,
1556990   +   RMntFrq ,
1556991   +   Recency ,
1556992   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1556993   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1556994   +
1556995   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1556996   +END;
MPRINT(EM_DIAGRAM):   END;
1556997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1556998   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1556999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557000   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1557001   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1557002   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1557003   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1557004   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1557005   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1557006   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1557007   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1557008   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1557009   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1557010   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1557011   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1557012   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1557013   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1557014   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1557015   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1557016   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1557017   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1557018   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1557019   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1557020   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1557021   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1557022   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1557023   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1557024   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1557025   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1557026   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1557027   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1557028   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1557029   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1557030   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1557031   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1557032   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1557033   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1557034   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1557035   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1557036   +END;
MPRINT(EM_DIAGRAM):   END;
1557037   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1557038   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1557039   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1557040   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1557041   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1557042   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1557043   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1557044   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1557045   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1557046   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1557047   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1557048   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1557049   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1557050   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1557051   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1557052   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1557053   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1557054   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1557055   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1557056   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1557057   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1557058   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1557059   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1557060   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1557061   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1557062   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1557063   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1557064   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1557065   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1557066   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1557067   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1557068   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1557069   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1557070   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1557071   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1557072   +   ELSE S_NumCatalogPurchases
1557073   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1557074   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1557075   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1557076   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1557077   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1557078   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1557079   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1557080   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1557081   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1557082   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1557083   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1557084   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1557085   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1557086   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1557087   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1557088   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1557089   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1557090   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1557091   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1557092   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1557093   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1557094   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1557095   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1557096   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1557097   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1557098   +END;
MPRINT(EM_DIAGRAM):   END;
1557099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557100   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1557101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557103   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1557104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557106   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1557107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557108   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1557109   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1557110   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1557111   +        S_Income  +    -0.23050240180524 * S_Kidhome
1557112   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1557113   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1557114   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1557115   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1557116   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1557117   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1557118   +          +    -1.32257303635072 * S_NumDealsPurchases
1557119   +          +    -0.54480870554989 * S_NumDistPurchases
1557120   +          +     1.24793709956495 * S_NumStorePurchases
1557121   +          +      1.7974198103915 * S_NumWebPurchases
1557122   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1557123   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1557124   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1557125   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age 
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome + 
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 * 
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts + 
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 * 
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 * 
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 * 
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 * 
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq + 
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1557126   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1557127   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1557128   +        S_Income  +    -0.78793784980656 * S_Kidhome
1557129   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1557130   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1557131   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1557132   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1557133   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1557134   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1557135   +          +     0.70535680060775 * S_NumDealsPurchases
1557136   +          +    -0.15561838359391 * S_NumDistPurchases
1557137   +          +    -0.86545647977011 * S_NumStorePurchases
1557138   +          +    -0.78435825863867 * S_NumWebPurchases
1557139   +          +     1.76113949975149 * S_NumWebVisitsMonth
1557140   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1557141   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1557142   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age 
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome + 
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 * 
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts + 
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 * 
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 * 
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 * 
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 * 
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq + 
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1557143   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1557144   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1557145   +        S_Income  +    -0.59349067735666 * S_Kidhome
1557146   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1557147   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1557148   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1557149   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1557150   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1557151   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1557152   +          +     0.21510592309387 * S_NumDealsPurchases
1557153   +          +    -0.05401897321491 * S_NumDistPurchases
1557154   +          +     0.14945584086188 * S_NumStorePurchases
1557155   +          +    -0.09993898051701 * S_NumWebPurchases
1557156   +          +     1.40189771606069 * S_NumWebVisitsMonth
1557157   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1557158   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1557159   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age + 
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome + 
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 * 
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts + 
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 * 
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 * 
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 * 
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 * 
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq + 
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1557160   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1557161   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1557162   +        S_Income  +    -0.61129984920194 * S_Kidhome
1557163   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1557164   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1557165   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1557166   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1557167   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1557168   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1557169   +          +     0.81353732439473 * S_NumDealsPurchases
1557170   +          +     0.32933472931941 * S_NumDistPurchases
1557171   +          +    -1.28188012143595 * S_NumStorePurchases
1557172   +          +    -0.81914782214243 * S_NumWebPurchases
1557173   +          +     1.20332282902342 * S_NumWebVisitsMonth
1557174   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1557175   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1557176   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age + 
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome + 
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 * 
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts + 
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 * 
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 * 
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 * 
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 * 
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq + 
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1557177   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1557178   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1557179   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1557180   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1557181   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 * 
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 + 
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 * 
HigherEducationBinary0 ;
1557182   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1557183   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1557184   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1557185   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1557186   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 * 
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 + 
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 * 
HigherEducationBinary0 ;
1557187   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1557188   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1557189   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1557190   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1557191   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 * 
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 + 
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 * 
HigherEducationBinary0 ;
1557192   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1557193   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1557194   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1557195   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1557196   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 * 
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 + 
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 * 
HigherEducationBinary0 ;
1557197   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1557198   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1557199   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1557200   +          +     0.38068062371853 * Marital_StatusDivorced
1557201   +          +    -0.09269938603625 * Marital_StatusMarried
1557202   +          +    -0.17904543311137 * Marital_StatusSingle
1557203   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 * 
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster 
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried + 
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1557204   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1557205   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1557206   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1557207   +          +     0.46191454760643 * Marital_StatusDivorced
1557208   +          +    -1.36520525874032 * Marital_StatusMarried
1557209   +          +     1.36669525533789 * Marital_StatusSingle
1557210   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 * 
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster + 
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried + 
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1557211   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1557212   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1557213   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1557214   +          +     0.18693560360309 * Marital_StatusDivorced
1557215   +          +    -0.56475988428608 * Marital_StatusMarried
1557216   +          +     0.79263891340625 * Marital_StatusSingle
1557217   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 * 
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster 
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried + 
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1557218   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1557219   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1557220   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1557221   +          +     1.14025450669394 * Marital_StatusDivorced
1557222   +          +     0.78122963298728 * Marital_StatusMarried
1557223   +          +    -1.37860768059913 * Marital_StatusSingle
1557224   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 * 
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster 
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried + 
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1557225   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1557226   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1557227   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1557228   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1557229   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1557230   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1557231   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1557232   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1557233   +END;
MPRINT(EM_DIAGRAM):   END;
1557234   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1557235   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1557236   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1557237   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1557238   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1557239   +END;
MPRINT(EM_DIAGRAM):   END;
1557240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557241   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1557242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557243   +
1557244   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1557245   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1557246   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1557247   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1557248   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1557249   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557250   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1557251   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1557252   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1557253   +end;
MPRINT(EM_DIAGRAM):   end;
1557254   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557255   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1557256   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1557257   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1557258   +   end;
MPRINT(EM_DIAGRAM):   end;
1557259   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1557260   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1557261   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1557262   +   end;
MPRINT(EM_DIAGRAM):   end;
1557263   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557264   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1557265   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1557266   +   end;
MPRINT(EM_DIAGRAM):   end;
1557267   +end;
MPRINT(EM_DIAGRAM):   end;
1557268   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1557269   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1557270   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 + 
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1557271   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1557272   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1557273   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1557274   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1557275   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1557276   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1557277   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1557278   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1557279   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1557280   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1557281   +END;
MPRINT(EM_DIAGRAM):   END;
1557282   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1557283   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1557284   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1557285   +END;
MPRINT(EM_DIAGRAM):   END;
1557286   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1557287   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1557288   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1557289   +END;
MPRINT(EM_DIAGRAM):   END;
1557290   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1557291   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1557292   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1557293   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1557294   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1557295   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1557296   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1557297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557298   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1557299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557300   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1557301   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1557302   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1557303   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1557304   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1557305   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1557306   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1557307   +END;
MPRINT(EM_DIAGRAM):   END;
1557308   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1557309   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1557310   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1557311   +drop
1557312   +H11
1557313   +H12
1557314   +H13
1557315   +H14
1557316   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1557317   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1557318   +* Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
1557319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1557320   +* Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
1557321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1557322   +drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
1557323   +Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
1557324   +drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
1557325   +Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
1557326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1557327   +* Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
1557328   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1557329   +length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
1557330   +drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
1557331   +Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
1557332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1557333   +* Ensmbl27: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 4 of 7;
1557334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1557335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1557336   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1557337   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1557338   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1557339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1557340   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1557341   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1557342   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1557343   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1557344   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1557345   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1557346   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1557347   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1557348   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1557349   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1557350   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1557351   +LENGTH _WARN_ $4
1557352   +      F_DepVar  $ 12
1557353   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1557354   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1557355   +
1557356   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1557357   +
1557358   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1557359   +
1557360   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1557361   +
1557362   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1557363   +
1557364   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1557365   +
1557366   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1557367   +
1557368   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1557369   +
1557370   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1557371   +
1557372   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1557373   +
1557374   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1557375   +
1557376   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1557377   +
1557378   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1557379   +
1557380   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1557381   +
1557382   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1557383   +
1557384   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1557385   +
1557386   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1557387   +
1557388   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1557389   +
1557390   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1557391   +
1557392   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1557393   +
1557394   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1557395   +
1557396   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1557397   +
1557398   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1557399   +
1557400   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1557401   +
1557402   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1557403   +
1557404   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1557405   +
1557406   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1557407   +
1557408   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1557409   +
1557410   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1557411   +
1557412   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1557413   +
1557414   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1557415   +
1557416   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1557417   +
1557418   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1557419   +
1557420   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1557421   +
1557422   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1557423   +
1557424   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1557425   +
1557426   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1557427   +
1557428   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1557429   +
1557430   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1557431   +
1557432   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1557433   +
1557434   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1557435   +
1557436   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1557437   +
1557438   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1557439   +
1557440   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1557441   +
1557442   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1557443   +
1557444   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1557445   +
1557446   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1557447   +
1557448   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1557449   +
1557450   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1557451   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1557452   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1557453   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1557454   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1557455   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557456   +end;
MPRINT(EM_DIAGRAM):   end;
1557457   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557458   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1557459   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1557460   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557461   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1557462   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1557463   +   end;
MPRINT(EM_DIAGRAM):   end;
1557464   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1557465   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1557466   +   end;
MPRINT(EM_DIAGRAM):   end;
1557467   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557468   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1557469   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1557470   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557471   +   end;
MPRINT(EM_DIAGRAM):   end;
1557472   +end;
MPRINT(EM_DIAGRAM):   end;
1557473   +
1557474   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1557475   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1557476   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1557477   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1557478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1557479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557480   +end;
MPRINT(EM_DIAGRAM):   end;
1557481   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557482   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1557483   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1557484   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557485   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1557486   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1557487   +   end;
MPRINT(EM_DIAGRAM):   end;
1557488   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1557489   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1557490   +   end;
MPRINT(EM_DIAGRAM):   end;
1557491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557492   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1557493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1557494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557495   +   end;
MPRINT(EM_DIAGRAM):   end;
1557496   +end;
MPRINT(EM_DIAGRAM):   end;
1557497   +
1557498   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1557499   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1557500   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1557501   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1557502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1557503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557504   +end;
MPRINT(EM_DIAGRAM):   end;
1557505   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557506   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1557507   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1557508   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557509   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1557510   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1557511   +   end;
MPRINT(EM_DIAGRAM):   end;
1557512   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1557513   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1557514   +   end;
MPRINT(EM_DIAGRAM):   end;
1557515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557516   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1557517   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1557518   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557519   +   end;
MPRINT(EM_DIAGRAM):   end;
1557520   +end;
MPRINT(EM_DIAGRAM):   end;
1557521   +
1557522   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1557523   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1557524   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1557525   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1557526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1557527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557528   +end;
MPRINT(EM_DIAGRAM):   end;
1557529   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557530   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1557531   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1557532   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557533   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1557534   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1557535   +   end;
MPRINT(EM_DIAGRAM):   end;
1557536   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1557537   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1557538   +   end;
MPRINT(EM_DIAGRAM):   end;
1557539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557540   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1557541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1557542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557543   +   end;
MPRINT(EM_DIAGRAM):   end;
1557544   +end;
MPRINT(EM_DIAGRAM):   end;
1557545   +
1557546   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1557547   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1557548   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1557549   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1557550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1557551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557552   +end;
MPRINT(EM_DIAGRAM):   end;
1557553   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1557555   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1557556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557557   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1557558   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1557559   +   end;
MPRINT(EM_DIAGRAM):   end;
1557560   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1557561   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1557562   +   end;
MPRINT(EM_DIAGRAM):   end;
1557563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557564   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1557565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1557566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557567   +   end;
MPRINT(EM_DIAGRAM):   end;
1557568   +end;
MPRINT(EM_DIAGRAM):   end;
1557569   +
1557570   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1557571   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1557572   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1557573   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1557574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1557575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557576   +end;
MPRINT(EM_DIAGRAM):   end;
1557577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1557579   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1557580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1557582   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1557583   +   end;
MPRINT(EM_DIAGRAM):   end;
1557584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1557585   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1557586   +   end;
MPRINT(EM_DIAGRAM):   end;
1557587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557588   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1557589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1557590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557591   +   end;
MPRINT(EM_DIAGRAM):   end;
1557592   +end;
MPRINT(EM_DIAGRAM):   end;
1557593   +
1557594   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1557595   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1557596   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1557597   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1557598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1557599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557600   +end;
MPRINT(EM_DIAGRAM):   end;
1557601   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1557603   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1557604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557605   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1557606   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1557607   +   end;
MPRINT(EM_DIAGRAM):   end;
1557608   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1557609   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1557610   +   end;
MPRINT(EM_DIAGRAM):   end;
1557611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557612   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1557613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1557614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557615   +   end;
MPRINT(EM_DIAGRAM):   end;
1557616   +end;
MPRINT(EM_DIAGRAM):   end;
1557617   +
1557618   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1557619   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1557620   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1557621   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1557622   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1557623   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1557624   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1557625   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1557626   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1557627   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1557628   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1557629   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1557630   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1557631   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557632   +end;
MPRINT(EM_DIAGRAM):   end;
1557633   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557634   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1557635   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1557636   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557637   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1557638   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1557639   +   end;
MPRINT(EM_DIAGRAM):   end;
1557640   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1557641   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1557642   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1557643   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1557644   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1557645   +   end;
MPRINT(EM_DIAGRAM):   end;
1557646   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1557647   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1557648   +   end;
MPRINT(EM_DIAGRAM):   end;
1557649   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1557650   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1557651   +   end;
MPRINT(EM_DIAGRAM):   end;
1557652   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1557653   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1557654   +   end;
MPRINT(EM_DIAGRAM):   end;
1557655   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557656   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1557657   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1557658   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1557659   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1557660   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1557661   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557662   +   end;
MPRINT(EM_DIAGRAM):   end;
1557663   +end;
MPRINT(EM_DIAGRAM):   end;
1557664   +
1557665   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1557666   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1557667   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1557668   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1557669   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1557670   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1557671   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1557672   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1557673   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1557674   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1557675   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1557676   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1557677   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1557678   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1557679   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557680   +end;
MPRINT(EM_DIAGRAM):   end;
1557681   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557682   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1557683   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1557684   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557685   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1557686   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1557687   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1557688   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1557689   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1557690   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1557691   +         end;
MPRINT(EM_DIAGRAM):   end;
1557692   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1557693   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1557694   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1557695   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1557696   +            end;
MPRINT(EM_DIAGRAM):   end;
1557697   +         end;
MPRINT(EM_DIAGRAM):   end;
1557698   +      end;
MPRINT(EM_DIAGRAM):   end;
1557699   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1557700   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1557701   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1557702   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1557703   +         end;
MPRINT(EM_DIAGRAM):   end;
1557704   +      end;
MPRINT(EM_DIAGRAM):   end;
1557705   +   end;
MPRINT(EM_DIAGRAM):   end;
1557706   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557707   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1557708   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1557709   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1557710   +      end;
MPRINT(EM_DIAGRAM):   end;
1557711   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1557712   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1557713   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1557714   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1557715   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1557716   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1557717   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1557718   +         end;
MPRINT(EM_DIAGRAM):   end;
1557719   +      end;
MPRINT(EM_DIAGRAM):   end;
1557720   +   end;
MPRINT(EM_DIAGRAM):   end;
1557721   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1557722   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1557723   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1557724   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1557725   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1557726   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1557727   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557728   +   end;
MPRINT(EM_DIAGRAM):   end;
1557729   +end;
MPRINT(EM_DIAGRAM):   end;
1557730   +
1557731   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557732   +*** Checking missing input Interval
1557733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1557734   +
1557735   +IF NMISS(
1557736   +   AcceptedCmpTotal ,
1557737   +   Age ,
1557738   +   Frq ,
1557739   +   Income ,
1557740   +   Kidhome ,
1557741   +   Mnt ,
1557742   +   MntFishProducts ,
1557743   +   MntFruits ,
1557744   +   MntGoldProds ,
1557745   +   MntMeatProducts ,
1557746   +   MntSweetProducts ,
1557747   +   MntWines ,
1557748   +   MonthsAsCustomer ,
1557749   +   NumCatalogPurchases ,
1557750   +   NumDealsPurchases ,
1557751   +   NumDistPurchases ,
1557752   +   NumStorePurchases ,
1557753   +   NumWebPurchases ,
1557754   +   NumWebVisitsMonth ,
1557755   +   RFMstat ,
1557756   +   RMntFrq ,
1557757   +   Recency ,
1557758   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1557759   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1557760   +
1557761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1557762   +END;
MPRINT(EM_DIAGRAM):   END;
1557763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557764   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1557765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557766   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1557767   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1557768   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1557769   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1557770   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1557771   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1557772   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1557773   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1557774   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1557775   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1557776   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1557777   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1557778   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1557779   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1557780   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1557781   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1557782   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1557783   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1557784   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1557785   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1557786   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1557787   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1557788   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1557789   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1557790   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1557791   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1557792   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1557793   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1557794   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1557795   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1557796   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1557797   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1557798   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1557799   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1557800   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1557801   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1557802   +END;
MPRINT(EM_DIAGRAM):   END;
1557803   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1557804   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1557805   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1557806   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1557807   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1557808   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1557809   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1557810   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1557811   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1557812   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1557813   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1557814   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1557815   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1557816   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1557817   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1557818   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1557819   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1557820   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1557821   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1557822   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1557823   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1557824   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1557825   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1557826   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1557827   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1557828   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1557829   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1557830   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1557831   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1557832   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1557833   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1557834   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1557835   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1557836   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1557837   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1557838   +   ELSE S_NumCatalogPurchases
1557839   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1557840   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1557841   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1557842   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1557843   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1557844   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1557845   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1557846   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1557847   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1557848   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1557849   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1557850   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1557851   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1557852   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1557853   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1557854   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1557855   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1557856   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1557857   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1557858   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1557859   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1557860   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1557861   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1557862   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1557863   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1557864   +END;
MPRINT(EM_DIAGRAM):   END;
1557865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557866   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1557867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557869   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1557870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557871   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557872   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1557873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557874   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1557875   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1557876   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1557877   +        S_Income  +    -1.07652572934003 * S_Kidhome
1557878   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1557879   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1557880   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1557881   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1557882   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1557883   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1557884   +          +     0.34217069579861 * S_NumDealsPurchases
1557885   +          +      0.7126550962469 * S_NumDistPurchases
1557886   +          +     0.05810128676346 * S_NumStorePurchases
1557887   +          +     -0.1974592461824 * S_NumWebPurchases
1557888   +          +     1.33855646568468 * S_NumWebVisitsMonth
1557889   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1557890   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1557891   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1557892   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1557893   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1557894   +        S_Income  +    -0.00280376715329 * S_Kidhome
1557895   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1557896   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1557897   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1557898   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1557899   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1557900   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1557901   +          +     0.45694604326279 * S_NumDealsPurchases
1557902   +          +      0.1555582457419 * S_NumDistPurchases
1557903   +          +     -0.3340268446813 * S_NumStorePurchases
1557904   +          +    -0.39316217683753 * S_NumWebPurchases
1557905   +          +     0.52431656748667 * S_NumWebVisitsMonth
1557906   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1557907   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1557908   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1557909   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1557910   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1557911   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1557912   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1557913   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1557914   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1557915   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1557916   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1557917   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1557918   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1557919   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1557920   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1557921   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1557922   +          +     0.46676686502466 * Marital_StatusDivorced
1557923   +          +    -1.27760562209616 * Marital_StatusMarried
1557924   +          +     1.31419230639567 * Marital_StatusSingle
1557925   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1557926   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1557927   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1557928   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1557929   +          +     0.07434297903639 * Marital_StatusDivorced
1557930   +          +     0.00294493836325 * Marital_StatusMarried
1557931   +          +    -0.00745595849422 * Marital_StatusSingle
1557932   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1557933   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1557934   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1557935   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1557936   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1557937   +END;
MPRINT(EM_DIAGRAM):   END;
1557938   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1557939   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1557940   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1557941   +END;
MPRINT(EM_DIAGRAM):   END;
1557942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557943   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1557944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557945   +
1557946   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1557947   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1557948   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1557949   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1557950   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1557951   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1557952   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1557953   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1557954   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1557955   +end;
MPRINT(EM_DIAGRAM):   end;
1557956   +else do;
MPRINT(EM_DIAGRAM):   else do;
1557957   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1557958   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1557959   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1557960   +   end;
MPRINT(EM_DIAGRAM):   end;
1557961   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1557962   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1557963   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1557964   +   end;
MPRINT(EM_DIAGRAM):   end;
1557965   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1557966   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1557967   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1557968   +   end;
MPRINT(EM_DIAGRAM):   end;
1557969   +end;
MPRINT(EM_DIAGRAM):   end;
1557970   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1557971   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1557972   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1557973   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1557974   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1557975   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1557976   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1557977   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1557978   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1557979   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1557980   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1557981   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1557982   +END;
MPRINT(EM_DIAGRAM):   END;
1557983   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1557984   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1557985   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1557986   +END;
MPRINT(EM_DIAGRAM):   END;
1557987   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1557988   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1557989   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1557990   +END;
MPRINT(EM_DIAGRAM):   END;
1557991   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1557992   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1557993   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1557994   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1557995   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1557996   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1557997   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1557998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1557999   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1558000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558001   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1558002   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1558003   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1558004   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1558005   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1558006   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1558007   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1558008   +END;
MPRINT(EM_DIAGRAM):   END;
1558009   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1558010   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1558011   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1558012   +drop
1558013   +H11
1558014   +H12
1558015   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1558016   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1558017   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1558018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558019   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1558020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558021   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1558022   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1558023   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1558024   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1558025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558026   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1558027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558028   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1558029   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1558030   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1558031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558032   +* Ensmbl27: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 5 of 7;
1558033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558035   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1558036   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1558037   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1558038   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558039   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1558040   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1558041   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1558042   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1558043   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1558044   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1558045   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1558046   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1558047   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1558048   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1558049   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1558050   +LENGTH _WARN_ $4
1558051   +      F_DepVar  $ 12
1558052   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1558053   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1558054   +
1558055   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1558056   +
1558057   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1558058   +
1558059   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1558060   +
1558061   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1558062   +
1558063   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1558064   +
1558065   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1558066   +
1558067   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1558068   +
1558069   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1558070   +
1558071   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1558072   +
1558073   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1558074   +
1558075   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1558076   +
1558077   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1558078   +
1558079   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1558080   +
1558081   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1558082   +
1558083   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1558084   +
1558085   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1558086   +
1558087   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1558088   +
1558089   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1558090   +
1558091   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1558092   +
1558093   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1558094   +
1558095   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1558096   +
1558097   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1558098   +
1558099   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1558100   +
1558101   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1558102   +
1558103   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1558104   +
1558105   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1558106   +
1558107   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1558108   +
1558109   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1558110   +
1558111   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1558112   +
1558113   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1558114   +
1558115   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1558116   +
1558117   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1558118   +
1558119   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1558120   +
1558121   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1558122   +
1558123   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1558124   +
1558125   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1558126   +
1558127   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1558128   +
1558129   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1558130   +
1558131   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1558132   +
1558133   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1558134   +
1558135   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1558136   +
1558137   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1558138   +
1558139   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1558140   +
1558141   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1558142   +
1558143   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1558144   +
1558145   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1558146   +
1558147   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1558148   +
1558149   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1558150   +
1558151   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1558152   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1558153   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1558154   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1558155   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558157   +end;
MPRINT(EM_DIAGRAM):   end;
1558158   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558159   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558160   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1558161   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558162   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1558163   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1558164   +   end;
MPRINT(EM_DIAGRAM):   end;
1558165   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1558166   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1558167   +   end;
MPRINT(EM_DIAGRAM):   end;
1558168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558169   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1558170   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558171   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558172   +   end;
MPRINT(EM_DIAGRAM):   end;
1558173   +end;
MPRINT(EM_DIAGRAM):   end;
1558174   +
1558175   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1558176   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1558177   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1558178   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1558179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558181   +end;
MPRINT(EM_DIAGRAM):   end;
1558182   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558183   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558184   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1558185   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558186   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1558187   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1558188   +   end;
MPRINT(EM_DIAGRAM):   end;
1558189   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1558190   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1558191   +   end;
MPRINT(EM_DIAGRAM):   end;
1558192   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558193   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1558194   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558195   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558196   +   end;
MPRINT(EM_DIAGRAM):   end;
1558197   +end;
MPRINT(EM_DIAGRAM):   end;
1558198   +
1558199   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1558200   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1558201   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1558202   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1558203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558205   +end;
MPRINT(EM_DIAGRAM):   end;
1558206   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558207   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558208   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1558209   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558210   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1558211   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1558212   +   end;
MPRINT(EM_DIAGRAM):   end;
1558213   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1558214   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1558215   +   end;
MPRINT(EM_DIAGRAM):   end;
1558216   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558217   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1558218   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558219   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558220   +   end;
MPRINT(EM_DIAGRAM):   end;
1558221   +end;
MPRINT(EM_DIAGRAM):   end;
1558222   +
1558223   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1558224   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1558225   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1558226   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1558227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558229   +end;
MPRINT(EM_DIAGRAM):   end;
1558230   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558231   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558232   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1558233   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558234   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1558235   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1558236   +   end;
MPRINT(EM_DIAGRAM):   end;
1558237   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1558238   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1558239   +   end;
MPRINT(EM_DIAGRAM):   end;
1558240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558241   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1558242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558244   +   end;
MPRINT(EM_DIAGRAM):   end;
1558245   +end;
MPRINT(EM_DIAGRAM):   end;
1558246   +
1558247   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1558248   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1558249   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1558250   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1558251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558253   +end;
MPRINT(EM_DIAGRAM):   end;
1558254   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558255   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558256   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1558257   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558258   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1558259   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1558260   +   end;
MPRINT(EM_DIAGRAM):   end;
1558261   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1558262   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1558263   +   end;
MPRINT(EM_DIAGRAM):   end;
1558264   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558265   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1558266   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558267   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558268   +   end;
MPRINT(EM_DIAGRAM):   end;
1558269   +end;
MPRINT(EM_DIAGRAM):   end;
1558270   +
1558271   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1558272   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1558273   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1558274   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1558275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558277   +end;
MPRINT(EM_DIAGRAM):   end;
1558278   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558279   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558280   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1558281   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558282   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1558283   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1558284   +   end;
MPRINT(EM_DIAGRAM):   end;
1558285   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1558286   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1558287   +   end;
MPRINT(EM_DIAGRAM):   end;
1558288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558289   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1558290   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558291   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558292   +   end;
MPRINT(EM_DIAGRAM):   end;
1558293   +end;
MPRINT(EM_DIAGRAM):   end;
1558294   +
1558295   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1558296   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1558297   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1558298   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1558299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558301   +end;
MPRINT(EM_DIAGRAM):   end;
1558302   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558303   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558304   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1558305   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558306   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1558307   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1558308   +   end;
MPRINT(EM_DIAGRAM):   end;
1558309   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1558310   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1558311   +   end;
MPRINT(EM_DIAGRAM):   end;
1558312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558313   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1558314   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558315   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558316   +   end;
MPRINT(EM_DIAGRAM):   end;
1558317   +end;
MPRINT(EM_DIAGRAM):   end;
1558318   +
1558319   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1558320   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1558321   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1558322   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1558323   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1558324   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1558325   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1558326   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1558327   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1558328   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1558329   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1558330   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1558331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558333   +end;
MPRINT(EM_DIAGRAM):   end;
1558334   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558335   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1558336   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1558337   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558338   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1558339   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1558340   +   end;
MPRINT(EM_DIAGRAM):   end;
1558341   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1558342   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1558343   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1558344   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1558345   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1558346   +   end;
MPRINT(EM_DIAGRAM):   end;
1558347   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1558348   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1558349   +   end;
MPRINT(EM_DIAGRAM):   end;
1558350   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1558351   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1558352   +   end;
MPRINT(EM_DIAGRAM):   end;
1558353   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1558354   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1558355   +   end;
MPRINT(EM_DIAGRAM):   end;
1558356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558357   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1558358   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1558359   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1558360   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1558361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558363   +   end;
MPRINT(EM_DIAGRAM):   end;
1558364   +end;
MPRINT(EM_DIAGRAM):   end;
1558365   +
1558366   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1558367   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1558368   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1558369   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1558370   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1558371   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1558372   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1558373   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1558374   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1558375   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1558376   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1558377   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1558378   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1558379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558381   +end;
MPRINT(EM_DIAGRAM):   end;
1558382   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558383   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1558384   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1558385   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558386   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1558387   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1558388   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1558389   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1558390   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1558391   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1558392   +         end;
MPRINT(EM_DIAGRAM):   end;
1558393   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1558394   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1558395   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1558396   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1558397   +            end;
MPRINT(EM_DIAGRAM):   end;
1558398   +         end;
MPRINT(EM_DIAGRAM):   end;
1558399   +      end;
MPRINT(EM_DIAGRAM):   end;
1558400   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1558401   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1558402   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1558403   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1558404   +         end;
MPRINT(EM_DIAGRAM):   end;
1558405   +      end;
MPRINT(EM_DIAGRAM):   end;
1558406   +   end;
MPRINT(EM_DIAGRAM):   end;
1558407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558408   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1558409   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1558410   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1558411   +      end;
MPRINT(EM_DIAGRAM):   end;
1558412   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1558413   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1558414   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1558415   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1558416   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1558417   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1558418   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1558419   +         end;
MPRINT(EM_DIAGRAM):   end;
1558420   +      end;
MPRINT(EM_DIAGRAM):   end;
1558421   +   end;
MPRINT(EM_DIAGRAM):   end;
1558422   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1558423   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1558424   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1558425   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1558426   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1558427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558429   +   end;
MPRINT(EM_DIAGRAM):   end;
1558430   +end;
MPRINT(EM_DIAGRAM):   end;
1558431   +
1558432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558433   +*** Checking missing input Interval
1558434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1558435   +
1558436   +IF NMISS(
1558437   +   AcceptedCmpTotal ,
1558438   +   Age ,
1558439   +   Frq ,
1558440   +   Income ,
1558441   +   Kidhome ,
1558442   +   Mnt ,
1558443   +   MntFishProducts ,
1558444   +   MntFruits ,
1558445   +   MntGoldProds ,
1558446   +   MntMeatProducts ,
1558447   +   MntSweetProducts ,
1558448   +   MntWines ,
1558449   +   MonthsAsCustomer ,
1558450   +   NumCatalogPurchases ,
1558451   +   NumDealsPurchases ,
1558452   +   NumDistPurchases ,
1558453   +   NumStorePurchases ,
1558454   +   NumWebPurchases ,
1558455   +   NumWebVisitsMonth ,
1558456   +   RFMstat ,
1558457   +   RMntFrq ,
1558458   +   Recency ,
1558459   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1558460   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1558461   +
1558462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558463   +END;
MPRINT(EM_DIAGRAM):   END;
1558464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558465   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1558466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558467   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1558468   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1558469   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1558470   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1558471   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1558472   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1558473   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1558474   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1558475   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1558476   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1558477   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1558478   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1558479   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1558480   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1558481   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1558482   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1558483   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1558484   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1558485   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1558486   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1558487   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1558488   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1558489   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1558490   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1558491   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1558492   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1558493   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1558494   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1558495   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1558496   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1558497   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1558498   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1558499   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1558500   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1558501   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1558502   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1558503   +END;
MPRINT(EM_DIAGRAM):   END;
1558504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1558505   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1558506   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1558507   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1558508   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1558509   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1558510   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1558511   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1558512   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1558513   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1558514   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1558515   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1558516   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1558517   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1558518   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1558519   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1558520   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1558521   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1558522   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1558523   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1558524   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1558525   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1558526   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1558527   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1558528   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1558529   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1558530   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1558531   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1558532   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1558533   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1558534   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1558535   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1558536   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1558537   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1558538   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1558539   +   ELSE S_NumCatalogPurchases
1558540   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1558541   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1558542   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1558543   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1558544   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1558545   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1558546   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1558547   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1558548   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1558549   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1558550   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1558551   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1558552   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1558553   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1558554   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1558555   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1558556   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1558557   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1558558   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1558559   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1558560   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1558561   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1558562   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1558563   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1558564   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1558565   +END;
MPRINT(EM_DIAGRAM):   END;
1558566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558567   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1558568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558570   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1558571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558573   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1558574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558575   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1558576   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1558577   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1558578   +        S_Income  +     0.48614351216065 * S_Kidhome
1558579   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1558580   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1558581   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1558582   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1558583   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1558584   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1558585   +          +     1.38069708066212 * S_NumDealsPurchases
1558586   +          +     0.18758966496994 * S_NumDistPurchases
1558587   +          +    -0.65306017966122 * S_NumStorePurchases
1558588   +          +    -0.65780154318734 * S_NumWebPurchases
1558589   +          +     1.42347048260615 * S_NumWebVisitsMonth
1558590   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1558591   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1558592   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1558593   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1558594   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1558595   +        S_Income  +     0.50072567449363 * S_Kidhome
1558596   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1558597   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1558598   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1558599   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1558600   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1558601   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1558602   +          +    -0.75291043162386 * S_NumDealsPurchases
1558603   +          +    -0.06780631818187 * S_NumDistPurchases
1558604   +          +     1.03453599373919 * S_NumStorePurchases
1558605   +          +     1.02348906006707 * S_NumWebPurchases
1558606   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1558607   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1558608   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1558609   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1558610   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1558611   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1558612   +        S_Income  +     0.57496607656903 * S_Kidhome
1558613   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1558614   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1558615   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1558616   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1558617   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1558618   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1558619   +          +     0.13431497076806 * S_NumDealsPurchases
1558620   +          +     -0.4516722514278 * S_NumDistPurchases
1558621   +          +     0.08636745161008 * S_NumStorePurchases
1558622   +          +    -0.01091843489919 * S_NumWebPurchases
1558623   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1558624   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1558625   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1558626   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1558627   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1558628   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1558629   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1558630   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1558631   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1558632   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1558633   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1558634   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1558635   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1558636   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1558637   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1558638   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1558639   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1558640   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1558641   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1558642   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1558643   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1558644   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1558645   +          +     0.09616912826117 * Marital_StatusDivorced
1558646   +          +     0.15377557778014 * Marital_StatusMarried
1558647   +          +    -0.20686296055741 * Marital_StatusSingle
1558648   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1558649   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1558650   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1558651   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1558652   +          +    -0.18362421441913 * Marital_StatusDivorced
1558653   +          +     0.14861660317702 * Marital_StatusMarried
1558654   +          +    -0.51051982152027 * Marital_StatusSingle
1558655   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1558656   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1558657   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1558658   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1558659   +          +    -0.65088528624708 * Marital_StatusDivorced
1558660   +          +     1.85383531288095 * Marital_StatusMarried
1558661   +          +    -1.45031245605509 * Marital_StatusSingle
1558662   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1558663   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1558664   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1558665   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1558666   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1558667   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1558668   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1558669   +END;
MPRINT(EM_DIAGRAM):   END;
1558670   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1558671   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1558672   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1558673   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1558674   +END;
MPRINT(EM_DIAGRAM):   END;
1558675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558676   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1558677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558678   +
1558679   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1558680   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1558681   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1558682   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1558683   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1558684   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558685   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1558686   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1558687   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1558688   +end;
MPRINT(EM_DIAGRAM):   end;
1558689   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558690   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1558691   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1558692   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1558693   +   end;
MPRINT(EM_DIAGRAM):   end;
1558694   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1558695   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1558696   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1558697   +   end;
MPRINT(EM_DIAGRAM):   end;
1558698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558699   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1558700   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1558701   +   end;
MPRINT(EM_DIAGRAM):   end;
1558702   +end;
MPRINT(EM_DIAGRAM):   end;
1558703   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1558704   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1558705   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1558706   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1558707   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1558708   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1558709   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1558710   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1558711   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1558712   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1558713   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1558714   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1558715   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1558716   +END;
MPRINT(EM_DIAGRAM):   END;
1558717   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1558718   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1558719   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1558720   +END;
MPRINT(EM_DIAGRAM):   END;
1558721   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1558722   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1558723   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1558724   +END;
MPRINT(EM_DIAGRAM):   END;
1558725   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1558726   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1558727   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1558728   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1558729   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1558730   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1558731   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1558732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558733   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1558734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1558735   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1558736   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1558737   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1558738   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1558739   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1558740   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1558741   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1558742   +END;
MPRINT(EM_DIAGRAM):   END;
1558743   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1558744   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1558745   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1558746   +drop
1558747   +H11
1558748   +H12
1558749   +H13
1558750   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1558751   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1558752   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1558753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558754   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1558755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558756   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1558757   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1558758   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1558759   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1558760   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558761   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1558762   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558763   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1558764   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1558765   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1558766   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558767   +* Ensmbl27: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 6 of 7;
1558768   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558769   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558770   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1558771   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1558772   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1558773   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1558774   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1558775   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1558776   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1558777   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1558778   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1558779   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1558780   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1558781   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1558782   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1558783   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1558784   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1558785   +LENGTH _WARN_ $4
1558786   +      F_DepVar  $ 12
1558787   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1558788   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1558789   +
1558790   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1558791   +
1558792   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1558793   +
1558794   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1558795   +
1558796   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1558797   +
1558798   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1558799   +
1558800   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1558801   +
1558802   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1558803   +
1558804   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1558805   +
1558806   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1558807   +
1558808   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1558809   +
1558810   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1558811   +
1558812   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1558813   +
1558814   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1558815   +
1558816   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1558817   +
1558818   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1558819   +
1558820   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1558821   +
1558822   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1558823   +
1558824   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1558825   +
1558826   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1558827   +
1558828   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1558829   +
1558830   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1558831   +
1558832   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1558833   +
1558834   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1558835   +
1558836   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1558837   +
1558838   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1558839   +
1558840   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1558841   +
1558842   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1558843   +
1558844   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1558845   +
1558846   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1558847   +
1558848   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1558849   +
1558850   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1558851   +
1558852   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1558853   +
1558854   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1558855   +
1558856   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1558857   +
1558858   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1558859   +
1558860   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1558861   +
1558862   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1558863   +
1558864   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1558865   +
1558866   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1558867   +
1558868   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1558869   +
1558870   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1558871   +
1558872   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1558873   +
1558874   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1558875   +
1558876   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1558877   +
1558878   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1558879   +
1558880   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1558881   +
1558882   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1558883   +
1558884   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1558885   +
1558886   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1558887   +
1558888   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1558889   +
1558890   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1558891   +
1558892   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1558893   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1558894   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1558895   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1558896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558898   +end;
MPRINT(EM_DIAGRAM):   end;
1558899   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558900   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558901   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1558902   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558903   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1558904   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1558905   +   end;
MPRINT(EM_DIAGRAM):   end;
1558906   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1558907   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1558908   +   end;
MPRINT(EM_DIAGRAM):   end;
1558909   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558910   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1558911   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558912   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558913   +   end;
MPRINT(EM_DIAGRAM):   end;
1558914   +end;
MPRINT(EM_DIAGRAM):   end;
1558915   +
1558916   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1558917   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1558918   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1558919   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1558920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558922   +end;
MPRINT(EM_DIAGRAM):   end;
1558923   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558925   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1558926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558927   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1558928   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1558929   +   end;
MPRINT(EM_DIAGRAM):   end;
1558930   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1558931   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1558932   +   end;
MPRINT(EM_DIAGRAM):   end;
1558933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558934   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1558935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558937   +   end;
MPRINT(EM_DIAGRAM):   end;
1558938   +end;
MPRINT(EM_DIAGRAM):   end;
1558939   +
1558940   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1558941   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1558942   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1558943   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1558944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558946   +end;
MPRINT(EM_DIAGRAM):   end;
1558947   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558948   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558949   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1558950   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558951   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1558952   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1558953   +   end;
MPRINT(EM_DIAGRAM):   end;
1558954   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1558955   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1558956   +   end;
MPRINT(EM_DIAGRAM):   end;
1558957   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558958   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1558959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558961   +   end;
MPRINT(EM_DIAGRAM):   end;
1558962   +end;
MPRINT(EM_DIAGRAM):   end;
1558963   +
1558964   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1558965   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1558966   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1558967   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1558968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558970   +end;
MPRINT(EM_DIAGRAM):   end;
1558971   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558972   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558973   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1558974   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558975   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1558976   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1558977   +   end;
MPRINT(EM_DIAGRAM):   end;
1558978   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1558979   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1558980   +   end;
MPRINT(EM_DIAGRAM):   end;
1558981   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1558982   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1558983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1558984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558985   +   end;
MPRINT(EM_DIAGRAM):   end;
1558986   +end;
MPRINT(EM_DIAGRAM):   end;
1558987   +
1558988   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1558989   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1558990   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1558991   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1558992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1558993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1558994   +end;
MPRINT(EM_DIAGRAM):   end;
1558995   +else do;
MPRINT(EM_DIAGRAM):   else do;
1558996   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1558997   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1558998   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1558999   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1559000   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1559001   +   end;
MPRINT(EM_DIAGRAM):   end;
1559002   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1559003   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1559004   +   end;
MPRINT(EM_DIAGRAM):   end;
1559005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559006   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1559007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559009   +   end;
MPRINT(EM_DIAGRAM):   end;
1559010   +end;
MPRINT(EM_DIAGRAM):   end;
1559011   +
1559012   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1559013   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1559014   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1559015   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1559016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559018   +end;
MPRINT(EM_DIAGRAM):   end;
1559019   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1559021   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1559022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559023   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1559024   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1559025   +   end;
MPRINT(EM_DIAGRAM):   end;
1559026   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1559027   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1559028   +   end;
MPRINT(EM_DIAGRAM):   end;
1559029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559030   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1559031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559033   +   end;
MPRINT(EM_DIAGRAM):   end;
1559034   +end;
MPRINT(EM_DIAGRAM):   end;
1559035   +
1559036   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1559037   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1559038   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1559039   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1559040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559042   +end;
MPRINT(EM_DIAGRAM):   end;
1559043   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1559045   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1559046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559047   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1559048   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1559049   +   end;
MPRINT(EM_DIAGRAM):   end;
1559050   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1559051   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1559052   +   end;
MPRINT(EM_DIAGRAM):   end;
1559053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559054   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1559055   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559056   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559057   +   end;
MPRINT(EM_DIAGRAM):   end;
1559058   +end;
MPRINT(EM_DIAGRAM):   end;
1559059   +
1559060   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1559061   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1559062   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1559063   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1559064   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1559065   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1559066   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1559067   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1559068   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1559069   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1559070   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1559071   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1559072   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559074   +end;
MPRINT(EM_DIAGRAM):   end;
1559075   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559076   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1559077   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1559078   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559079   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1559080   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1559081   +   end;
MPRINT(EM_DIAGRAM):   end;
1559082   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1559083   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1559084   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1559085   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1559086   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1559087   +   end;
MPRINT(EM_DIAGRAM):   end;
1559088   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1559089   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1559090   +   end;
MPRINT(EM_DIAGRAM):   end;
1559091   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1559092   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1559093   +   end;
MPRINT(EM_DIAGRAM):   end;
1559094   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1559095   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1559096   +   end;
MPRINT(EM_DIAGRAM):   end;
1559097   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559098   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1559099   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1559100   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1559101   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1559102   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559103   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559104   +   end;
MPRINT(EM_DIAGRAM):   end;
1559105   +end;
MPRINT(EM_DIAGRAM):   end;
1559106   +
1559107   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1559108   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1559109   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1559110   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1559111   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1559112   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1559113   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1559114   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1559115   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1559116   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1559117   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1559118   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1559119   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1559120   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559121   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559122   +end;
MPRINT(EM_DIAGRAM):   end;
1559123   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559124   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1559125   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1559126   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559127   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1559128   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1559129   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1559130   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1559131   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1559132   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1559133   +         end;
MPRINT(EM_DIAGRAM):   end;
1559134   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1559135   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1559136   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1559137   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1559138   +            end;
MPRINT(EM_DIAGRAM):   end;
1559139   +         end;
MPRINT(EM_DIAGRAM):   end;
1559140   +      end;
MPRINT(EM_DIAGRAM):   end;
1559141   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1559142   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1559143   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1559144   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1559145   +         end;
MPRINT(EM_DIAGRAM):   end;
1559146   +      end;
MPRINT(EM_DIAGRAM):   end;
1559147   +   end;
MPRINT(EM_DIAGRAM):   end;
1559148   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559149   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1559150   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1559151   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1559152   +      end;
MPRINT(EM_DIAGRAM):   end;
1559153   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1559154   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1559155   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1559156   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1559157   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1559158   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1559159   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1559160   +         end;
MPRINT(EM_DIAGRAM):   end;
1559161   +      end;
MPRINT(EM_DIAGRAM):   end;
1559162   +   end;
MPRINT(EM_DIAGRAM):   end;
1559163   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1559164   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1559165   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1559166   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1559167   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1559168   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559169   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559170   +   end;
MPRINT(EM_DIAGRAM):   end;
1559171   +end;
MPRINT(EM_DIAGRAM):   end;
1559172   +
1559173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559174   +*** Checking missing input Interval
1559175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1559176   +
1559177   +IF NMISS(
1559178   +   AcceptedCmpTotal ,
1559179   +   Age ,
1559180   +   Frq ,
1559181   +   Income ,
1559182   +   Kidhome ,
1559183   +   Mnt ,
1559184   +   MntFishProducts ,
1559185   +   MntFruits ,
1559186   +   MntGoldProds ,
1559187   +   MntMeatProducts ,
1559188   +   MntSweetProducts ,
1559189   +   MntWines ,
1559190   +   MonthsAsCustomer ,
1559191   +   NumCatalogPurchases ,
1559192   +   NumDealsPurchases ,
1559193   +   NumDistPurchases ,
1559194   +   NumStorePurchases ,
1559195   +   NumWebPurchases ,
1559196   +   NumWebVisitsMonth ,
1559197   +   RFMstat ,
1559198   +   RMntFrq ,
1559199   +   Recency ,
1559200   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1559201   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1559202   +
1559203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559204   +END;
MPRINT(EM_DIAGRAM):   END;
1559205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559206   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1559207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559208   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1559209   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1559210   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1559211   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1559212   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1559213   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1559214   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1559215   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1559216   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1559217   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1559218   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1559219   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1559220   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1559221   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1559222   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1559223   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1559224   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1559225   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1559226   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1559227   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1559228   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1559229   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1559230   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1559231   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1559232   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1559233   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1559234   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1559235   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1559236   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1559237   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1559238   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1559239   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1559240   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1559241   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1559242   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1559243   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1559244   +END;
MPRINT(EM_DIAGRAM):   END;
1559245   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1559246   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1559247   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1559248   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1559249   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1559250   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1559251   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1559252   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1559253   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1559254   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1559255   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1559256   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1559257   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1559258   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1559259   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1559260   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1559261   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1559262   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1559263   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1559264   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1559265   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1559266   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1559267   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1559268   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1559269   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1559270   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1559271   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1559272   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1559273   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1559274   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1559275   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1559276   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1559277   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1559278   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1559279   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1559280   +   ELSE S_NumCatalogPurchases
1559281   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1559282   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1559283   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1559284   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1559285   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1559286   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1559287   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1559288   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1559289   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1559290   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1559291   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1559292   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1559293   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1559294   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1559295   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1559296   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1559297   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1559298   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1559299   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1559300   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1559301   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1559302   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1559303   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1559304   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1559305   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1559306   +END;
MPRINT(EM_DIAGRAM):   END;
1559307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559308   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1559309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559310   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559311   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1559312   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559314   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1559315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559316   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1559317   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1559318   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1559319   +        S_Income  +     -0.0761121347886 * S_Kidhome
1559320   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1559321   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1559322   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1559323   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1559324   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1559325   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1559326   +          +     0.83893684194413 * S_NumDealsPurchases
1559327   +          +     0.23391006875291 * S_NumDistPurchases
1559328   +          +    -0.63370705462074 * S_NumStorePurchases
1559329   +          +     -0.9137408014067 * S_NumWebPurchases
1559330   +          +     0.89109351479441 * S_NumWebVisitsMonth
1559331   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1559332   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1559333   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1559334   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1559335   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1559336   +        S_Income  +    -0.43909782819329 * S_Kidhome
1559337   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1559338   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1559339   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1559340   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1559341   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1559342   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1559343   +          +      0.2218973353638 * S_NumDealsPurchases
1559344   +          +      0.0062360950528 * S_NumDistPurchases
1559345   +          +    -0.57621747951002 * S_NumStorePurchases
1559346   +          +    -0.33564890905657 * S_NumWebPurchases
1559347   +          +     0.82482365540301 * S_NumWebVisitsMonth
1559348   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1559349   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1559350   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1559351   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1559352   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1559353   +        S_Income  +    -0.03572236011846 * S_Kidhome
1559354   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1559355   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1559356   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1559357   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1559358   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1559359   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1559360   +          +      -0.174147250062 * S_NumDealsPurchases
1559361   +          +    -0.22921682388864 * S_NumDistPurchases
1559362   +          +     0.41526854684299 * S_NumStorePurchases
1559363   +          +    -0.27675565493519 * S_NumWebPurchases
1559364   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1559365   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1559366   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1559367   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1559368   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1559369   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1559370   +        S_Income  +    -0.04788369327547 * S_Kidhome
1559371   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1559372   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1559373   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1559374   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1559375   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1559376   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1559377   +          +    -0.46022430102423 * S_NumDealsPurchases
1559378   +          +     0.15831339342044 * S_NumDistPurchases
1559379   +          +     0.22480465173719 * S_NumStorePurchases
1559380   +          +     0.44798923484609 * S_NumWebPurchases
1559381   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1559382   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1559383   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1559384   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1559385   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1559386   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1559387   +        S_Income  +     0.53994304261534 * S_Kidhome
1559388   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1559389   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1559390   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1559391   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
The SAS System

1559392   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1559393   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1559394   +          +     0.03650267472167 * S_NumDealsPurchases
1559395   +          +    -0.03322709524939 * S_NumDistPurchases
1559396   +          +     -0.0022226424472 * S_NumStorePurchases
1559397   +          +    -0.10131236740674 * S_NumWebPurchases
1559398   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1559399   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1559400   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1559401   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1559402   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1559403   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1559404   +        S_Income  +    -0.52576099429582 * S_Kidhome
1559405   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1559406   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1559407   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1559408   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1559409   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1559410   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1559411   +          +    -0.50209914729324 * S_NumDealsPurchases
1559412   +          +    -0.46217244513696 * S_NumDistPurchases
1559413   +          +      0.1832648560248 * S_NumStorePurchases
1559414   +          +     0.02866153257072 * S_NumWebPurchases
1559415   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1559416   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1559417   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1559418   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1559419   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1559420   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1559421   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1559422   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1559423   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1559424   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1559425   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1559426   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1559427   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1559428   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1559429   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1559430   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1559431   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1559432   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1559433   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1559434   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1559435   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1559436   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1559437   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1559438   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1559439   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1559440   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1559441   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1559442   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1559443   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1559444   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1559445   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1559446   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1559447   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1559448   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1559449   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1559450   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1559451   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1559452   +          +     0.13815069071511 * Marital_StatusDivorced
1559453   +          +      0.0732913060929 * Marital_StatusMarried
1559454   +          +    -0.22858418468746 * Marital_StatusSingle
1559455   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1559456   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1559457   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1559458   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1559459   +          +     0.32909808396509 * Marital_StatusDivorced
1559460   +          +    -0.50160173579004 * Marital_StatusMarried
1559461   +          +     0.57207102211224 * Marital_StatusSingle
1559462   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1559463   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1559464   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1559465   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1559466   +          +    -0.07154493730107 * Marital_StatusDivorced
1559467   +          +     0.29126100051603 * Marital_StatusMarried
1559468   +          +    -0.06936325857004 * Marital_StatusSingle
1559469   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1559470   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1559471   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1559472   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1559473   +          +    -0.05004640872388 * Marital_StatusDivorced
1559474   +          +     0.22197974032974 * Marital_StatusMarried
1559475   +          +    -0.33931504637453 * Marital_StatusSingle
1559476   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1559477   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1559478   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1559479   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1559480   +          +    -0.07748874669478 * Marital_StatusDivorced
1559481   +          +     1.05442281159109 * Marital_StatusMarried
1559482   +          +    -0.67190984038867 * Marital_StatusSingle
1559483   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1559484   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1559485   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1559486   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1559487   +          +    -0.20478208715114 * Marital_StatusDivorced
1559488   +          +    -0.40186383707642 * Marital_StatusMarried
1559489   +          +     0.43474841662774 * Marital_StatusSingle
1559490   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1559491   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1559492   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1559493   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1559494   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1559495   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1559496   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1559497   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1559498   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1559499   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1559500   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1559501   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1559502   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1559503   +END;
MPRINT(EM_DIAGRAM):   END;
1559504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1559505   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1559506   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1559507   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1559508   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1559509   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1559510   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1559511   +END;
MPRINT(EM_DIAGRAM):   END;
1559512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559513   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1559514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559515   +
1559516   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1559517   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1559518   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1559519   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1559520   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1559521   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559522   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1559523   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1559524   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1559525   +end;
MPRINT(EM_DIAGRAM):   end;
1559526   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559527   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1559528   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1559529   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1559530   +   end;
MPRINT(EM_DIAGRAM):   end;
1559531   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1559532   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1559533   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1559534   +   end;
MPRINT(EM_DIAGRAM):   end;
1559535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559536   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1559537   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1559538   +   end;
MPRINT(EM_DIAGRAM):   end;
1559539   +end;
MPRINT(EM_DIAGRAM):   end;
1559540   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1559541   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1559542   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1559543   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1559544   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1559545   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1559546   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1559547   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1559548   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1559549   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1559550   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1559551   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1559552   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1559553   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1559554   +END;
MPRINT(EM_DIAGRAM):   END;
1559555   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1559556   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1559557   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1559558   +END;
MPRINT(EM_DIAGRAM):   END;
1559559   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1559560   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1559561   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1559562   +END;
MPRINT(EM_DIAGRAM):   END;
1559563   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1559564   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1559565   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1559566   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1559567   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1559568   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1559569   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1559570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559571   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1559572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1559573   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1559574   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1559575   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1559576   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1559577   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1559578   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1559579   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1559580   +END;
MPRINT(EM_DIAGRAM):   END;
1559581   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1559582   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1559583   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1559584   +drop
1559585   +H11
1559586   +H12
1559587   +H13
1559588   +H14
1559589   +H15
1559590   +H16
1559591   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1559592   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1559593   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1559594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1559595   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1559596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1559597   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1559598   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1559599   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1559600   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1559601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1559602   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1559603   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1559604   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1559605   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1559606   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1559607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1559608   +* Ensmbl27: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 7 of 7;
1559609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1559610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1559611   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1559612   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1559613   +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
1559614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1559615   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1559616   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1559617   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1559618   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1559619   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1559620   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1559621   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1559622   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1559623   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1559624   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1559625   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1559626   +LENGTH _WARN_ $4
1559627   +      F_DepVar  $ 12
1559628   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1559629   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1559630   +
1559631   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1559632   +
1559633   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1559634   +
1559635   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1559636   +
1559637   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1559638   +
1559639   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1559640   +
1559641   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1559642   +
1559643   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1559644   +
1559645   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1559646   +
1559647   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1559648   +
1559649   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1559650   +
1559651   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1559652   +
1559653   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1559654   +
1559655   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1559656   +
1559657   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1559658   +
1559659   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1559660   +
1559661   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1559662   +
1559663   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1559664   +
1559665   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1559666   +
1559667   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1559668   +
1559669   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1559670   +
1559671   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1559672   +
1559673   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1559674   +
1559675   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1559676   +
1559677   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1559678   +
1559679   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1559680   +
1559681   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1559682   +
1559683   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1559684   +
1559685   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1559686   +
1559687   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1559688   +
1559689   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1559690   +
1559691   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1559692   +
1559693   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1559694   +
1559695   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1559696   +
1559697   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1559698   +
1559699   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1559700   +
1559701   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1559702   +
1559703   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1559704   +
1559705   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1559706   +
1559707   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1559708   +
1559709   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1559710   +
1559711   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1559712   +
1559713   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1559714   +
1559715   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1559716   +
1559717   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1559718   +
1559719   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1559720   +
1559721   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1559722   +
1559723   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1559724   +
1559725   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1559726   +
1559727   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1559728   +
1559729   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1559730   +
1559731   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1559732   +
1559733   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1559734   +
1559735   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1559736   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1559737   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1559738   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1559739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559741   +end;
MPRINT(EM_DIAGRAM):   end;
1559742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1559744   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1559745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559746   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1559747   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1559748   +   end;
MPRINT(EM_DIAGRAM):   end;
1559749   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1559750   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1559751   +   end;
MPRINT(EM_DIAGRAM):   end;
1559752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559753   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1559754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559756   +   end;
MPRINT(EM_DIAGRAM):   end;
1559757   +end;
MPRINT(EM_DIAGRAM):   end;
1559758   +
1559759   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1559760   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1559761   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1559762   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1559763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559765   +end;
MPRINT(EM_DIAGRAM):   end;
1559766   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559767   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1559768   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1559769   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559770   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1559771   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1559772   +   end;
MPRINT(EM_DIAGRAM):   end;
1559773   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1559774   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1559775   +   end;
MPRINT(EM_DIAGRAM):   end;
1559776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559777   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1559778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559780   +   end;
MPRINT(EM_DIAGRAM):   end;
1559781   +end;
MPRINT(EM_DIAGRAM):   end;
1559782   +
1559783   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1559784   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1559785   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1559786   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1559787   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559788   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559789   +end;
MPRINT(EM_DIAGRAM):   end;
1559790   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559791   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1559792   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1559793   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559794   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1559795   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1559796   +   end;
MPRINT(EM_DIAGRAM):   end;
1559797   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1559798   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1559799   +   end;
MPRINT(EM_DIAGRAM):   end;
1559800   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559801   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1559802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559804   +   end;
MPRINT(EM_DIAGRAM):   end;
1559805   +end;
MPRINT(EM_DIAGRAM):   end;
1559806   +
1559807   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1559808   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1559809   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1559810   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1559811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559813   +end;
MPRINT(EM_DIAGRAM):   end;
1559814   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559815   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1559816   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1559817   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559818   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1559819   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1559820   +   end;
MPRINT(EM_DIAGRAM):   end;
1559821   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1559822   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1559823   +   end;
MPRINT(EM_DIAGRAM):   end;
1559824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559825   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1559826   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559827   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559828   +   end;
MPRINT(EM_DIAGRAM):   end;
1559829   +end;
MPRINT(EM_DIAGRAM):   end;
1559830   +
1559831   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1559832   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1559833   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1559834   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1559835   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559836   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559837   +end;
MPRINT(EM_DIAGRAM):   end;
1559838   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559839   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1559840   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1559841   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559842   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1559843   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1559844   +   end;
MPRINT(EM_DIAGRAM):   end;
1559845   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1559846   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1559847   +   end;
MPRINT(EM_DIAGRAM):   end;
1559848   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559849   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1559850   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559851   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559852   +   end;
MPRINT(EM_DIAGRAM):   end;
1559853   +end;
MPRINT(EM_DIAGRAM):   end;
1559854   +
1559855   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1559856   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1559857   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1559858   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1559859   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559861   +end;
MPRINT(EM_DIAGRAM):   end;
1559862   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559863   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1559864   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1559865   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559866   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1559867   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1559868   +   end;
MPRINT(EM_DIAGRAM):   end;
1559869   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1559870   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1559871   +   end;
MPRINT(EM_DIAGRAM):   end;
1559872   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559873   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1559874   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559875   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559876   +   end;
MPRINT(EM_DIAGRAM):   end;
1559877   +end;
MPRINT(EM_DIAGRAM):   end;
1559878   +
1559879   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1559880   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1559881   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1559882   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1559883   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559885   +end;
MPRINT(EM_DIAGRAM):   end;
1559886   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559887   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1559888   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1559889   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559890   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1559891   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1559892   +   end;
MPRINT(EM_DIAGRAM):   end;
1559893   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1559894   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1559895   +   end;
MPRINT(EM_DIAGRAM):   end;
1559896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559897   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1559898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559900   +   end;
MPRINT(EM_DIAGRAM):   end;
1559901   +end;
MPRINT(EM_DIAGRAM):   end;
1559902   +
1559903   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1559904   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1559905   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1559906   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1559907   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1559908   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1559909   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1559910   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1559911   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1559912   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1559913   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1559914   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1559915   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559916   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559917   +end;
MPRINT(EM_DIAGRAM):   end;
1559918   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559919   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1559920   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1559921   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559922   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1559923   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1559924   +   end;
MPRINT(EM_DIAGRAM):   end;
1559925   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1559926   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1559927   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1559928   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1559929   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1559930   +   end;
MPRINT(EM_DIAGRAM):   end;
1559931   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1559932   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1559933   +   end;
MPRINT(EM_DIAGRAM):   end;
1559934   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1559935   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1559936   +   end;
MPRINT(EM_DIAGRAM):   end;
1559937   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1559938   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1559939   +   end;
MPRINT(EM_DIAGRAM):   end;
1559940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559941   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1559942   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1559943   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1559944   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1559945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1559946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559947   +   end;
MPRINT(EM_DIAGRAM):   end;
1559948   +end;
MPRINT(EM_DIAGRAM):   end;
1559949   +
1559950   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1559951   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1559952   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1559953   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1559954   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1559955   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1559956   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1559957   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1559958   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1559959   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1559960   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1559961   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1559962   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1559963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1559964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1559965   +end;
MPRINT(EM_DIAGRAM):   end;
1559966   +else do;
MPRINT(EM_DIAGRAM):   else do;
1559967   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1559968   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1559969   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1559970   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1559971   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1559972   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1559973   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1559974   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1559975   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1559976   +         end;
MPRINT(EM_DIAGRAM):   end;
1559977   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1559978   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1559979   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1559980   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1559981   +            end;
MPRINT(EM_DIAGRAM):   end;
1559982   +         end;
MPRINT(EM_DIAGRAM):   end;
1559983   +      end;
MPRINT(EM_DIAGRAM):   end;
1559984   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1559985   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1559986   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1559987   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1559988   +         end;
MPRINT(EM_DIAGRAM):   end;
1559989   +      end;
MPRINT(EM_DIAGRAM):   end;
1559990   +   end;
MPRINT(EM_DIAGRAM):   end;
1559991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1559992   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1559993   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1559994   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1559995   +      end;
MPRINT(EM_DIAGRAM):   end;
1559996   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1559997   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1559998   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1559999   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1560000   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1560001   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1560002   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1560003   +         end;
MPRINT(EM_DIAGRAM):   end;
1560004   +      end;
MPRINT(EM_DIAGRAM):   end;
1560005   +   end;
MPRINT(EM_DIAGRAM):   end;
1560006   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1560007   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1560008   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1560009   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1560010   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1560011   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1560012   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560013   +   end;
MPRINT(EM_DIAGRAM):   end;
1560014   +end;
MPRINT(EM_DIAGRAM):   end;
1560015   +
1560016   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560017   +*** Checking missing input Interval
1560018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1560019   +
1560020   +IF NMISS(
1560021   +   AcceptedCmpTotal ,
1560022   +   Age ,
1560023   +   Frq ,
1560024   +   Income ,
1560025   +   Kidhome ,
1560026   +   Mnt ,
1560027   +   MntFishProducts ,
1560028   +   MntFruits ,
1560029   +   MntGoldProds ,
1560030   +   MntMeatProducts ,
1560031   +   MntSweetProducts ,
1560032   +   MntWines ,
1560033   +   MonthsAsCustomer ,
1560034   +   NumCatalogPurchases ,
1560035   +   NumDealsPurchases ,
1560036   +   NumDistPurchases ,
1560037   +   NumStorePurchases ,
1560038   +   NumWebPurchases ,
1560039   +   NumWebVisitsMonth ,
1560040   +   RFMstat ,
1560041   +   RMntFrq ,
1560042   +   Recency ,
1560043   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1560044   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1560045   +
1560046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560047   +END;
MPRINT(EM_DIAGRAM):   END;
1560048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560049   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1560050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560051   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1560052   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1560053   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1560054   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1560055   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1560056   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1560057   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1560058   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1560059   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1560060   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1560061   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1560062   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1560063   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1560064   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1560065   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1560066   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1560067   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1560068   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1560069   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1560070   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1560071   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1560072   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1560073   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1560074   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1560075   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1560076   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1560077   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1560078   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1560079   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1560080   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1560081   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1560082   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1560083   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1560084   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1560085   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1560086   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1560087   +END;
MPRINT(EM_DIAGRAM):   END;
1560088   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1560089   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1560090   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1560091   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1560092   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1560093   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1560094   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1560095   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1560096   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1560097   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1560098   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1560099   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1560100   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1560101   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1560102   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1560103   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1560104   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1560105   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1560106   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1560107   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1560108   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1560109   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1560110   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1560111   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1560112   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1560113   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1560114   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1560115   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1560116   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1560117   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1560118   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1560119   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1560120   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1560121   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1560122   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1560123   +   ELSE S_NumCatalogPurchases
1560124   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1560125   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1560126   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1560127   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1560128   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1560129   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1560130   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1560131   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1560132   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1560133   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1560134   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1560135   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1560136   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1560137   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1560138   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1560139   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1560140   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1560141   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1560142   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1560143   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1560144   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1560145   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1560146   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1560147   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1560148   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1560149   +END;
MPRINT(EM_DIAGRAM):   END;
1560150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560151   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1560152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560154   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1560155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560157   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1560158   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560159   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1560160   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1560161   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1560162   +        S_Income  +    -0.45967008908227 * S_Kidhome
1560163   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1560164   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1560165   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1560166   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1560167   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1560168   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1560169   +          +    -0.23353175442713 * S_NumDealsPurchases
1560170   +          +     0.18635522192442 * S_NumDistPurchases
1560171   +          +     0.37209457890956 * S_NumStorePurchases
1560172   +          +     0.25018232304823 * S_NumWebPurchases
1560173   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1560174   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1560175   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1560176   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age 
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome + 
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 * 
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts + 
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 * 
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 * 
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 * 
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 * 
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq + 
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1560177   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1560178   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1560179   +        S_Income  +     0.23329613045589 * S_Kidhome
1560180   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1560181   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1560182   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1560183   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1560184   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1560185   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1560186   +          +    -0.09699498622435 * S_NumDealsPurchases
1560187   +          +     0.40364070798795 * S_NumDistPurchases
1560188   +          +      0.2162579072164 * S_NumStorePurchases
1560189   +          +     0.26248410135079 * S_NumWebPurchases
1560190   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1560191   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1560192   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1560193   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age 
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome + 
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 * 
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts + 
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 * 
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 * 
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 * 
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 * 
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq + 
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1560194   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1560195   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1560196   +        S_Income  +     0.20139862021528 * S_Kidhome
1560197   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1560198   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1560199   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1560200   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1560201   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1560202   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1560203   +          +     0.09066191700879 * S_NumDealsPurchases
1560204   +          +    -0.05769000978222 * S_NumDistPurchases
1560205   +          +    -0.10089591692167 * S_NumStorePurchases
1560206   +          +    -0.00088654116561 * S_NumWebPurchases
1560207   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1560208   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1560209   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1560210   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age 
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome + 
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 * 
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts + 
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 * 
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 * 
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 * 
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 * 
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq + 
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1560211   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1560212   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1560213   +        S_Income  +      0.2502648333687 * S_Kidhome
1560214   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1560215   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1560216   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1560217   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1560218   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1560219   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1560220   +          +     0.83424444661619 * S_NumDealsPurchases
1560221   +          +     0.31333214543205 * S_NumDistPurchases
1560222   +          +    -0.61732647242019 * S_NumStorePurchases
1560223   +          +    -1.01955156895052 * S_NumWebPurchases
1560224   +          +     0.13017609997428 * S_NumWebVisitsMonth
1560225   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1560226   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1560227   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age + 
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome + 
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 * 
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts + 
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 * 
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 * 
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 * 
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 * 
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq + 
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1560228   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1560229   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1560230   +        S_Income  +    -0.70952256145726 * S_Kidhome
1560231   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1560232   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1560233   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1560234   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1560235   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1560236   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1560237   +          +     0.63522682456102 * S_NumDealsPurchases
1560238   +          +      0.0043057429215 * S_NumDistPurchases
1560239   +          +    -0.76667751707574 * S_NumStorePurchases
1560240   +          +    -0.73436881033241 * S_NumWebPurchases
1560241   +          +     1.59331554601341 * S_NumWebVisitsMonth
1560242   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1560243   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1560244   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age 
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome + 
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 * 
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts + 
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 * 
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 * 
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 * 
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 * 
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq + 
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1560245   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1560246   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1560247   +        S_Income  +    -0.23632967504194 * S_Kidhome
1560248   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1560249   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1560250   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1560251   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1560252   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1560253   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1560254   +          +     -0.3032858959477 * S_NumDealsPurchases
1560255   +          +     0.11343979556999 * S_NumDistPurchases
1560256   +          +     0.19545021266061 * S_NumStorePurchases
1560257   +          +      0.1566777684546 * S_NumWebPurchases
1560258   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1560259   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1560260   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1560261   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age 
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome + 
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 * 
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts + 
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 * 
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 * 
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 * 
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 * 
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq + 
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1560262   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1560263   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1560264   +        S_Income  +    -0.47847362741737 * S_Kidhome
1560265   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1560266   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1560267   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1560268   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1560269   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1560270   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1560271   +          +    -0.17510289915098 * S_NumDealsPurchases
1560272   +          +     0.16952490494417 * S_NumDistPurchases
1560273   +          +     0.11152117614204 * S_NumStorePurchases
1560274   +          +     0.22594341376741 * S_NumWebPurchases
1560275   +          +     0.64523546369354 * S_NumWebVisitsMonth
1560276   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1560277   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1560278   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age + 
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome + 
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 * 
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts + 
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 * 
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 * 
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 * 
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 * 
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq + 
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1560279   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1560280   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1560281   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1560282   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1560283   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 * 
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 + 
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 * 
HigherEducationBinary0 ;
1560284   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1560285   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1560286   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1560287   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1560288   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 * 
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 + 
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 * 
HigherEducationBinary0 ;
1560289   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1560290   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1560291   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1560292   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1560293   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 * 
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 + 
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 * 
HigherEducationBinary0 ;
1560294   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1560295   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1560296   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1560297   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1560298   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 * 
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 + 
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 * 
HigherEducationBinary0 ;
1560299   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1560300   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1560301   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1560302   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1560303   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 * 
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 + 
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 * 
HigherEducationBinary0 ;
1560304   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1560305   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1560306   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1560307   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1560308   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 * 
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 + 
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 * 
HigherEducationBinary0 ;
1560309   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1560310   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1560311   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1560312   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1560313   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 * 
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 + 
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 * 
HigherEducationBinary0 ;
1560314   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1560315   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1560316   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1560317   +          +     0.42319965972117 * Marital_StatusDivorced
1560318   +          +    -0.45015157317991 * Marital_StatusMarried
1560319   +          +     0.43076106925345 * Marital_StatusSingle
1560320   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 * 
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster + 
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried + 
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1560321   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1560322   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1560323   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1560324   +          +     0.11384347873072 * Marital_StatusDivorced
1560325   +          +     0.51442453272823 * Marital_StatusMarried
1560326   +          +    -0.38966058028661 * Marital_StatusSingle
1560327   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 * 
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster 
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried + 
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1560328   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1560329   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1560330   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1560331   +          +    -0.05213342781535 * Marital_StatusDivorced
1560332   +          +     0.07520352092928 * Marital_StatusMarried
1560333   +          +     0.20175107471623 * Marital_StatusSingle
1560334   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 * 
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster 
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried + 
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1560335   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1560336   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1560337   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1560338   +          +    -0.40635592200933 * Marital_StatusDivorced
1560339   +          +     0.64772941459031 * Marital_StatusMarried
1560340   +          +    -0.36402842056603 * Marital_StatusSingle
1560341   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 * 
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster 
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried + 
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1560342   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1560343   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1560344   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1560345   +          +     0.87932592764844 * Marital_StatusDivorced
1560346   +          +    -0.85946473083734 * Marital_StatusMarried
1560347   +          +     0.74505733668545 * Marital_StatusSingle
1560348   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 * 
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster 
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried + 
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1560349   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1560350   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1560351   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1560352   +          +    -0.11861748280641 * Marital_StatusDivorced
1560353   +          +    -0.15869097739395 * Marital_StatusMarried
1560354   +          +     0.34415019828259 * Marital_StatusSingle
1560355   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 * 
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster 
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried + 
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1560356   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1560357   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1560358   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1560359   +          +     0.14995740697816 * Marital_StatusDivorced
1560360   +          +    -1.01788822114068 * Marital_StatusMarried
1560361   +          +     0.70532758126153 * Marital_StatusSingle
1560362   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 * 
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster 
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried + 
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1560363   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1560364   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1560365   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1560366   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1560367   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1560368   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1560369   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1560370   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1560371   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1560372   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1560373   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1560374   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1560375   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1560376   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1560377   +END;
MPRINT(EM_DIAGRAM):   END;
1560378   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1560379   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1560380   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1560381   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1560382   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1560383   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1560384   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1560385   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1560386   +END;
MPRINT(EM_DIAGRAM):   END;
1560387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560388   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1560389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560390   +
1560391   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1560392   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1560393   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1560394   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1560395   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1560396   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1560397   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1560398   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1560399   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1560400   +end;
MPRINT(EM_DIAGRAM):   end;
1560401   +else do;
MPRINT(EM_DIAGRAM):   else do;
1560402   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1560403   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1560404   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1560405   +   end;
MPRINT(EM_DIAGRAM):   end;
1560406   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1560407   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1560408   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1560409   +   end;
MPRINT(EM_DIAGRAM):   end;
1560410   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1560411   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1560412   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1560413   +   end;
MPRINT(EM_DIAGRAM):   end;
1560414   +end;
MPRINT(EM_DIAGRAM):   end;
1560415   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1560416   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1560417   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1560418   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1560419   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 + 
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 * 
H16 + 2.13310046968058 * H17 ;
1560420   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1560421   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1560422   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1560423   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1560424   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1560425   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1560426   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1560427   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1560428   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1560429   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1560430   +END;
MPRINT(EM_DIAGRAM):   END;
1560431   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1560432   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1560433   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1560434   +END;
MPRINT(EM_DIAGRAM):   END;
1560435   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1560436   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1560437   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1560438   +END;
MPRINT(EM_DIAGRAM):   END;
1560439   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1560440   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1560441   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1560442   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1560443   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1560444   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1560445   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1560446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560447   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1560448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1560449   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1560450   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1560451   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1560452   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1560453   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1560454   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1560455   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1560456   +END;
MPRINT(EM_DIAGRAM):   END;
1560457   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1560458   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1560459   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1560460   +drop
1560461   +H11
1560462   +H12
1560463   +H13
1560464   +H14
1560465   +H15
1560466   +H16
1560467   +H17
1560468   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1560469   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1560470   +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
1560471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560472   +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
1560473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560474   +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
1560475   +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
1560476   +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
1560477   +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
1560478   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560479   +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
1560480   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560481   +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
1560482   +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
1560483   +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
1560484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560485   +* Ensmbl27: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Maximum Posteriors of 7 models;
1560486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560487   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1560488   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1560489   +P_DepVar1 = max(
1560490   +Reg5_P_DepVar1 ,
1560491   +Reg_P_DepVar1 ,
1560492   +Neural4_P_DepVar1 ,
1560493   +Neural2_P_DepVar1 ,
1560494   +Neural3_P_DepVar1 ,
1560495   +Neural9_P_DepVar1 ,
1560496   +Neural10_P_DepVar1
1560497   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Reg5_P_DepVar1 , Reg_P_DepVar1 , Neural4_P_DepVar1 , 
Neural2_P_DepVar1 , Neural3_P_DepVar1 , Neural9_P_DepVar1 , Neural10_P_DepVar1 );
1560498   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1560499   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1560500   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1560501   +end;
MPRINT(EM_DIAGRAM):   end;
1560502   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1560503   +P_DepVar0 = max(
1560504   +Reg5_P_DepVar0 ,
1560505   +Reg_P_DepVar0 ,
1560506   +Neural4_P_DepVar0 ,
1560507   +Neural2_P_DepVar0 ,
1560508   +Neural3_P_DepVar0 ,
1560509   +Neural9_P_DepVar0 ,
1560510   +Neural10_P_DepVar0
1560511   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Reg5_P_DepVar0 , Reg_P_DepVar0 , Neural4_P_DepVar0 , 
Neural2_P_DepVar0 , Neural3_P_DepVar0 , Neural9_P_DepVar0 , Neural10_P_DepVar0 );
1560512   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1560513   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1560514   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1560515   +end;
MPRINT(EM_DIAGRAM):   end;
1560516   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1560517   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560518   +* Ensmbl27: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Classification Vars;
1560519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560520   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1560521   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1560522   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1560523   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1560524   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1560525   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1560526   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1560527   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1560528   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1560529   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1560530   +end;
MPRINT(EM_DIAGRAM):   end;
1560531   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1560532   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1560533   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1560534   +end;
MPRINT(EM_DIAGRAM):   end;
1560535   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1560536   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560537   +* Ensmbl27: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Producing Unformatted variable;
1560538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560539   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1560540   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1560541   +else
1560542   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1560543   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560544   +* Ensmbl27: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing _WARN_ Variable;
1560545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560546   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1560547   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1560548   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1560549   +if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1560550   +if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1560551   +if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1560552   +if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1560553   +if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1560554   +if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1560555   +if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1560556   +if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1560557   +if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1560558   +if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1560559   +if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1560560   +if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1560561   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1560562   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1560563   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1560564   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1560565   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1560566   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1560567   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1560568   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1560569   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1560570   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1560571   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1560572   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1560573   +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1560573  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1560574   +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1560574  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1560575   +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1560575  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1560576   +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1560576  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1560577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560578   +* Ensmbl27: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Residual Vars;
1560579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560580   +if
1560581   +F_DepVar NE '1'
1560582   +AND F_DepVar NE '0'
1560583   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1560584   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1560585   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1560586   +end;
MPRINT(EM_DIAGRAM):   end;
1560587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1560588   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1560589   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1560590   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1560591   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1560592   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1560593   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1560594   +END;
MPRINT(EM_DIAGRAM):   END;
1560595   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1560596    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL27_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG5_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1560597    quit;
1560598    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl27_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl27_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl27_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1560658    filename _pref
1560658  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas";
1560659    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1560660    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg5\EMPUBLISHSCORE.sas.
1560661   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1560662   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1560663   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1560664   +
1560665   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1560666   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1560667   +
1560668   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1560669   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1560670   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1560671   +array REG5DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG5DRF [2] $12 _temporary_ ('1' '0' );
1560672   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1560673   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1560674   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1560675   +ARRAY REG5DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG5DRU[2] _TEMPORARY_ (1 0);
1560676   +
1560677   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1560678   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1560679   +
1560680   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1560681   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1560682   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560683   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560684   +end;
MPRINT(EM_DIAGRAM):   end;
1560685   +
1560686   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1560687   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1560688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560690   +end;
MPRINT(EM_DIAGRAM):   end;
1560691   +
1560692   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1560693   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1560694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560696   +end;
MPRINT(EM_DIAGRAM):   end;
1560697   +
1560698   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1560699   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1560700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560702   +end;
MPRINT(EM_DIAGRAM):   end;
1560703   +
1560704   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1560705   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1560706   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560708   +end;
MPRINT(EM_DIAGRAM):   end;
1560709   +
1560710   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1560711   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1560712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560714   +end;
MPRINT(EM_DIAGRAM):   end;
1560715   +
1560716   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1560717   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1560718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560720   +end;
MPRINT(EM_DIAGRAM):   end;
1560721   +
1560722   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1560723   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1560724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560726   +end;
MPRINT(EM_DIAGRAM):   end;
1560727   +
1560728   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1560729   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1560730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560732   +end;
MPRINT(EM_DIAGRAM):   end;
1560733   +
1560734   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1560735   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1560736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560738   +end;
MPRINT(EM_DIAGRAM):   end;
1560739   +
1560740   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1560741   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1560742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560744   +end;
MPRINT(EM_DIAGRAM):   end;
1560745   +
1560746   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1560747   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1560748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560750   +end;
MPRINT(EM_DIAGRAM):   end;
1560751   +
1560752   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1560753   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1560754   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1560755   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1560756   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1560757   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1560758   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1560759   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1560760   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1560761   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1560762   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1560763   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1560764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1560765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560766   +end;
MPRINT(EM_DIAGRAM):   end;
1560767   +else do;
MPRINT(EM_DIAGRAM):   else do;
1560768   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1560769   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1560770   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1560771   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1560772   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1560773   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1560774   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1560775   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1560776   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1560777   +         end;
MPRINT(EM_DIAGRAM):   end;
1560778   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1560779   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1560780   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1560781   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1560782   +            end;
MPRINT(EM_DIAGRAM):   end;
1560783   +         end;
MPRINT(EM_DIAGRAM):   end;
1560784   +      end;
MPRINT(EM_DIAGRAM):   end;
1560785   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1560786   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1560787   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1560788   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1560789   +         end;
MPRINT(EM_DIAGRAM):   end;
1560790   +      end;
MPRINT(EM_DIAGRAM):   end;
1560791   +   end;
MPRINT(EM_DIAGRAM):   end;
1560792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1560793   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1560794   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1560795   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1560796   +      end;
MPRINT(EM_DIAGRAM):   end;
1560797   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1560798   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1560799   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1560800   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1560801   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1560802   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1560803   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1560804   +         end;
MPRINT(EM_DIAGRAM):   end;
1560805   +      end;
MPRINT(EM_DIAGRAM):   end;
1560806   +   end;
MPRINT(EM_DIAGRAM):   end;
1560807   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1560808   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1560809   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1560810   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1560811   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1560812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1560813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1560814   +   end;
MPRINT(EM_DIAGRAM):   end;
1560815   +end;
MPRINT(EM_DIAGRAM):   end;
1560816   +
1560817   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1560818   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1560819   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1560820   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1560821   +   goto REG5DR1;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
1560822   +end;
MPRINT(EM_DIAGRAM):   end;
1560823   +
1560824   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1560825   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1560826   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1560827   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1560828   +
1560829   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1560830   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1560831   +_LP0 = _LP0 + (    1.62720428342499 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.62720428342499 * _TEMP);
1560832   +
1560833   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1560834   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1560835   +_LP0 = _LP0 + (   -0.22971333675933 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22971333675933 * _TEMP);
1560836   +
1560837   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1560838   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1560839   +_LP0 = _LP0 + (    0.00003533282438 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003533282438 * _TEMP);
1560840   +
1560841   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1560842   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1560843   +_LP0 = _LP0 + (    0.08642160195218) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08642160195218) * _TEMP * _9_0;
1560844   +_LP0 = _LP0 + (   -0.51421240544522) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51421240544522) * _TEMP * _9_1;
1560845   +_LP0 = _LP0 + (    0.43839945966755) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43839945966755) * _TEMP * _9_2;
1560846   +_LP0 = _LP0 + (   -0.51854020296844) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.51854020296844) * _TEMP * _9_3;
1560847   +
1560848   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1560849   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1560850   +_LP0 = _LP0 + (   -0.00223385655154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00223385655154 * _TEMP);
1560851   +
1560852   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1560853   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1560854   +_LP0 = _LP0 + (    0.00401106095636 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00401106095636 * _TEMP);
1560855   +
1560856   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1560857   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1560858   +_LP0 = _LP0 + (    0.00703004991808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00703004991808 * _TEMP);
1560859   +
1560860   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1560861   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1560862   +_LP0 = _LP0 + (    0.62141049405048 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62141049405048 * _TEMP);
1560863   +
1560864   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1560865   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1560866   +_LP0 = _LP0 + (    0.39538473396078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39538473396078 * _TEMP);
1560867   +
1560868   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1560869   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1560870   +_LP0 = _LP0 + (    0.54283993308937 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54283993308937 * _TEMP);
1560871   +
1560872   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1560873   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1560874   +_LP0 = _LP0 + (    0.00014928266997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00014928266997 * _TEMP);
1560875   +
1560876   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1560877   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1560878   +_LP0 = _LP0 + (   -0.05097670253272 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05097670253272 * _TEMP);
1560879   +
1560880   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1560881   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1560882   +_LP0 = _LP0 + (   -0.68537073085327 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.68537073085327 * _TEMP);
1560883   +
1560884   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1560885   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1560886   +_P0 = probnorm((   -4.59636694921951) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -4.59636694921951) + _LP0);
1560887   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1560888   +
1560889   +REG5DR1:
1560890   +
1560891   +
1560892   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG5DR1: *** Posterior Probabilities and Predicted Level;
1560893   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1560894   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1560895   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1560896   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1560897   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1560898   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1560899   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1560900   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1560901   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1560902   +end;
MPRINT(EM_DIAGRAM):   end;
1560903   +I_DepVar = REG5DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG5DRF[_IY];
1560904   +U_DepVar = REG5DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG5DRU[_IY];
1560905   +
1560906   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1560907   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1560908   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1560909    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1560910    quit;
1560911    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1560912    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1560913    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1560914    retain ID 2 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg5";
1560915    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1560916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560917    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1560918    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1560919    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 304 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 304 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560920    proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_variableset out=_temp2(keep=NAME CREATOR);
1560921    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1560922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1560923    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1560924    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1560925    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1560926    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560927    proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_train out=_meta(keep=NAME) noprint;
1560928    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1560929    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1560930    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1560931    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560932    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1560933    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1560934    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1560935    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1560936    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1560937    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1560937  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 174 rows and 5 columns.

1560938    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560939    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1560940    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 174 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560941    filename _pref
1560941  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1560942    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1560943    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1560944   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560945   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1560946   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1560947   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1560948   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1560949   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1560950    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1560951    quit;
1560952    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1560953    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1560954    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1560955    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1560956    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1560957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560958    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1560959    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1560960    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1560961    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1560962    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1560963    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560964    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1560965    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1560966    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1560967    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1560968    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1560969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1560970    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1560971    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1560972    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560973    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1560974    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1560975    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1560976    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560977    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1560978    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1560978  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1560979    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560980    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1560981    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1560982    filename _pref
1560982  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1560983    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1560984    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1560985   +
1560986   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1560987   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1560987  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1560988   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1560989   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1560990   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1560991   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1560992   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1560993    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1560994    quit;
1560995    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1560996    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1560997    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1560998    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1560999    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1561000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561001    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1561002    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561003    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561004    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1561005    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561007    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561008    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1561009    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1561010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561011    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1561012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561013    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1561014    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561015    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561016    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561017    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1561018    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561019    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561020    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1561021    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1561021  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1561022    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561023    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1561024    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561025    filename _pref
1561025  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1561026    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1561027    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1561028   +
1561029   +
1561030   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1561031   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1561032   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1561033   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1561034   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1561035   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561036   +
1561037   +
1561038   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1561039   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1561040   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1561041   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1561042   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1561043   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561044   +
1561045   +
1561046   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1561047   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1561048   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1561049   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1561050   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1561051   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561052   +
1561053   +
1561054   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1561055   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1561056   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1561057   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1561058   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1561059   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561060   +
1561061   +
1561062   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1561063   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1561064   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1561065   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1561066   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1561067   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561068   +
1561069   +
1561070   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1561071   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1561072   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1561073   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1561074   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1561075   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561076   +
1561077   +
1561078   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1561079   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1561080   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1561081   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1561082   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1561083   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561084   +
1561085   +
1561086   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1561087   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1561088   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1561089   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1561090   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1561091   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561092   +if
1561093   +_FILTERNORM1 not in ( '.')
1561094   + and
1561095   +_FILTERNORM2 not in ( '.')
1561096   + and
1561097   +_FILTERNORM3 not in ( '.')
1561098   + and
1561099   +_FILTERNORM4 not in ( '.')
1561100   + and
1561101   +_FILTERNORM5 not in ( '.')
1561102   + and
1561103   +_FILTERNORM6 not in ( '.')
1561104   + and
1561105   +_FILTERNORM7 not in ( ' ')
1561106   + and
1561107   +_FILTERNORM8 not in ( ' ')
1561108   +and
1561109   +( Dt_Customer ne .)
1561110   +and ( Income ne . and (Income<=107000))
1561111   +and ( Kidhome ne .)
1561112   +and ( MntFishProducts ne .)
1561113   +and ( MntFruits ne .)
1561114   +and ( MntGoldProds ne .)
1561115   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1561116   +and ( MntSweetProducts ne .)
1561117   +and ( MntWines ne .)
1561118   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1561119   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1561120   +and ( NumStorePurchases ne .)
1561121   +and ( NumWebPurchases ne .)
1561122   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1561123   +and ( Recency ne .)
1561124   +and ( Teenhome ne .)
1561125   +and ( Year_Birth ne .)
1561126   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1561127   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1561128   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1561129   +end;
MPRINT(EM_DIAGRAM):   end;
1561130   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1561131   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1561132    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1561133    quit;
1561134    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1561135    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1561136    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1561137    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1561138    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1561139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.03 seconds
      

1561140    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1561141    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561142    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561143    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1561144    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561145    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561146    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561147    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1561148    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1561149    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561150    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1561151    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1561152    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1561153    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561154    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561155    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561156    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1561157    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561158    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561159    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1561160    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1561160  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1561161    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561162    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1561163    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561164    %macro varDept(fcmpdata=,id=);
1561165    %global nobs&id scoreFlag&id;
1561166    %let scoreFlag&id = 0;
1561167    %if &id=1 or ^&fcmpStart %then %do;
1561168    proc sort data=&fcmpdata out=_temp&id nodupkey;
1561169    by NAME;
1561170    where id=&id and LHS in( %let j=1;
1561171    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1561172    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1561173    "&var" %let j = %eval(&j+1);
1561174    %end;
1561175    );
1561176    run;
1561177    %let dsid = %sysfunc(open(_temp&id));
1561178    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1561179    %let dsid = %sysfunc(close(&dsid));
1561180    %if &&nobs&id %then %do;
1561181    %let scoreFlag&id = 1;
1561182    %let fcmpStart = 1;
1561183    %end;
1561184    %else %let fcmpStart = 0;
1561185    %end;
1561186    %else %do;
1561187    proc sort data=&fcmpdata out=_tempid;
1561188    where id=&id;
1561189    by LHS;
1561190    run;
1561191    %let dsid = %sysfunc(open(_tempid));
1561192    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1561193    %let dsid = %sysfunc(close(&dsid));
1561194    %if ^&&nobs&id %then %do;
1561195    proc datasets lib=work nolist;
1561196    delete _tempid;
1561197    run;
1561198    quit;
1561199    %end;
1561200    %else %do;
1561201    data _tempAll;
1561202    set %let j=%eval(&id-1);
1561203    %do x=1 %to &j;
1561204    %if &&nobs&x %then %do;
1561205    _temp&x %end;
1561206    %end;
1561207    ;
1561208    run;
1561209    proc sql;
1561210    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1561210  ! work._tempid p2 where p.name=p2.lhs;
1561211    quit;
1561212    data _temp&id;
1561213    set _temp&id;
1561214    where LHS ne '' and NAME ne '' and Node ne '';
1561215    run;
1561216    proc datasets lib=work nolist;
1561217    delete _tempAll;
1561218    run;
1561219    %let dsid = %sysfunc(open(_temp&id));
1561220    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1561221    %let dsid = %sysfunc(close(&dsid));
1561222    %if ^&&nobs&id %then %do;
1561223    proc datasets lib=work nolist;
1561224    delete _temp&id;
1561225    run;
1561226    quit;
1561227    %end;
1561228    %else %do;
1561229    %let scoreFlag&id = 1;
1561230    data _temp&id;
1561231    set _temp&id;
1561232    where LHS ne NAME and node ne '';
1561233    run;
1561234    %let dsid = %sysfunc(open(_temp&id));
1561235    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1561236    %let dsid = %sysfunc(close(&dsid));
1561237    %if ^&&nobs&id %then %do;
1561238    proc datasets lib=work nolist;
1561239    delete _temp&id;
1561240    run;
1561241    quit;
1561242    %end;
1561243    %else %do;
1561244    proc sort data=_temp&id nodupkey;
1561245    by LHS NAME;
1561246    run;
1561247    %end;
1561248    %end;
1561249    %end;
1561250    %end;
1561251    %mend varDept;
1561252    %macro optCode(outdata=fcmpdata);
1561253    %global fcmpStart;
1561254    %let fcmpStart = 0;
1561255    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1561256    %let NumNodes=9;
1561257    %do k=1 %to &NumNodes;
1561258    %vardept(fcmpdata=&outdata, id=&k);
1561259    %end;
1561260    %mend optCode;
1561261    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1561262    filename _pref
1561262  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas";
1561263    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1561264    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg\EMPUBLISHSCORE.sas.
1561265   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1561266   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1561267   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1561268   +
1561269   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1561270   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1561271   +
1561272   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1561273   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1561274   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1561275   +array REGDRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REGDRF [2] $12 _temporary_ ('1' '0' );
1561276   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1561277   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1561278   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1561279   +ARRAY REGDRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REGDRU[2] _TEMPORARY_ (1 0);
1561280   +
1561281   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1561282   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1561283   +
1561284   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1561285   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1561286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561288   +end;
MPRINT(EM_DIAGRAM):   end;
1561289   +
1561290   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1561291   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1561292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561294   +end;
MPRINT(EM_DIAGRAM):   end;
1561295   +
1561296   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1561297   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1561298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561300   +end;
MPRINT(EM_DIAGRAM):   end;
1561301   +
1561302   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1561303   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1561304   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561306   +end;
MPRINT(EM_DIAGRAM):   end;
1561307   +
1561308   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1561309   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1561310   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561312   +end;
MPRINT(EM_DIAGRAM):   end;
1561313   +
1561314   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1561315   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1561316   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561318   +end;
MPRINT(EM_DIAGRAM):   end;
1561319   +
1561320   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1561321   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1561322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561324   +end;
MPRINT(EM_DIAGRAM):   end;
1561325   +
1561326   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1561327   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1561328   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561329   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561330   +end;
MPRINT(EM_DIAGRAM):   end;
1561331   +
1561332   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1561333   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1561334   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561336   +end;
MPRINT(EM_DIAGRAM):   end;
1561337   +
1561338   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1561339   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1561340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561342   +end;
MPRINT(EM_DIAGRAM):   end;
1561343   +
1561344   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1561345   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1561346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561348   +end;
MPRINT(EM_DIAGRAM):   end;
1561349   +
1561350   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1561351   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1561352   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561353   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561354   +end;
MPRINT(EM_DIAGRAM):   end;
1561355   +
1561356   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1561357   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1561358   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561359   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561360   +end;
MPRINT(EM_DIAGRAM):   end;
1561361   +
1561362   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1561363   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1561364   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1561365   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1561366   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1561367   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1561368   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1561369   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1561370   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1561371   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1561372   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1561373   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1561374   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561375   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561376   +end;
MPRINT(EM_DIAGRAM):   end;
1561377   +else do;
MPRINT(EM_DIAGRAM):   else do;
1561378   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1561379   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1561380   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1561381   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1561382   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1561383   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1561384   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1561385   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1561386   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1561387   +         end;
MPRINT(EM_DIAGRAM):   end;
1561388   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1561389   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1561390   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1561391   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1561392   +            end;
MPRINT(EM_DIAGRAM):   end;
1561393   +         end;
MPRINT(EM_DIAGRAM):   end;
1561394   +      end;
MPRINT(EM_DIAGRAM):   end;
1561395   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1561396   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1561397   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1561398   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1561399   +         end;
MPRINT(EM_DIAGRAM):   end;
1561400   +      end;
MPRINT(EM_DIAGRAM):   end;
1561401   +   end;
MPRINT(EM_DIAGRAM):   end;
1561402   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1561403   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1561404   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1561405   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1561406   +      end;
MPRINT(EM_DIAGRAM):   end;
1561407   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1561408   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1561409   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1561410   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1561411   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1561412   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1561413   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1561414   +         end;
MPRINT(EM_DIAGRAM):   end;
1561415   +      end;
MPRINT(EM_DIAGRAM):   end;
1561416   +   end;
MPRINT(EM_DIAGRAM):   end;
1561417   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1561418   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1561419   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1561420   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1561421   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1561422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1561423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561424   +   end;
MPRINT(EM_DIAGRAM):   end;
1561425   +end;
MPRINT(EM_DIAGRAM):   end;
1561426   +
1561427   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1561428   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1561429   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1561430   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1561431   +   goto REGDR1;
MPRINT(EM_DIAGRAM):   goto REGDR1;
1561432   +end;
MPRINT(EM_DIAGRAM):   end;
1561433   +
1561434   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1561435   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1561436   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1561437   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1561438   +
1561439   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1561440   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1561441   +_LP0 = _LP0 + (    2.95660035656229 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.95660035656229 * _TEMP);
1561442   +
1561443   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1561444   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1561445   +_LP0 = _LP0 + (   -0.01941875166212 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01941875166212 * _TEMP);
1561446   +
1561447   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1561448   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1561449   +_LP0 = _LP0 + (   -0.41047634158755 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41047634158755 * _TEMP);
1561450   +
1561451   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1561452   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1561453   +_LP0 = _LP0 + (    0.00006532180674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006532180674 * _TEMP);
1561454   +
1561455   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1561456   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1561457   +_LP0 = _LP0 + (    0.17791594529968) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17791594529968) * _TEMP * _9_0;
1561458   +_LP0 = _LP0 + (   -1.00641962019516) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.00641962019516) * _TEMP * _9_1;
1561459   +_LP0 = _LP0 + (    0.74716428311041) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.74716428311041) * _TEMP * _9_2;
1561460   +_LP0 = _LP0 + (    -1.0069846290756) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0069846290756) * _TEMP * _9_3;
1561461   +
1561462   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1561463   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1561464   +_LP0 = _LP0 + (   -0.00385241964842 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00385241964842 * _TEMP);
1561465   +
1561466   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1561467   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1561468   +_LP0 = _LP0 + (    0.00669490355232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00669490355232 * _TEMP);
1561469   +
1561470   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1561471   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1561472   +_LP0 = _LP0 + (     0.0125330231858 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0125330231858 * _TEMP);
1561473   +
1561474   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1561475   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1561476   +_LP0 = _LP0 + (     1.1253806716991 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.1253806716991 * _TEMP);
1561477   +
1561478   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1561479   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1561480   +_LP0 = _LP0 + (    0.71729818686875 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71729818686875 * _TEMP);
1561481   +
1561482   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1561483   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1561484   +_LP0 = _LP0 + (    0.99094794685674 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.99094794685674 * _TEMP);
1561485   +
1561486   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1561487   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1561488   +_LP0 = _LP0 + (    0.00024460251782 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00024460251782 * _TEMP);
1561489   +
1561490   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1561491   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1561492   +_LP0 = _LP0 + (   -0.09585871705652 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09585871705652 * _TEMP);
1561493   +
1561494   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1561495   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1561496   +_LP0 = _LP0 + (   -1.10694522398045 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.10694522398045 * _TEMP);
1561497   +
1561498   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1561499   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1561500   +_TEMP =    -7.58770818124898 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -7.58770818124898 + _LP0;
1561501   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1561502   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1561503   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1561504   +end;
MPRINT(EM_DIAGRAM):   end;
1561505   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1561506   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1561507   +
1561508   +REGDR1:
1561509   +
1561510   +
1561511   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REGDR1: *** Posterior Probabilities and Predicted Level;
1561512   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1561513   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1561514   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1561515   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1561516   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1561517   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1561518   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1561519   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1561520   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1561521   +end;
MPRINT(EM_DIAGRAM):   end;
1561522   +I_DepVar = REGDRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REGDRF[_IY];
1561523   +U_DepVar = REGDRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REGDRU[_IY];
1561524   +
1561525   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1561526   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1561527   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1561528    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1561529    quit;
1561530    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1561531    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1561532    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1561533    retain ID 2 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg";
1561534    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1561535    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561536    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1561537    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561538    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 362 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 362 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561539    proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg_variableset out=_temp2(keep=NAME CREATOR);
1561540    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561541    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561542    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561543    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1561544    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1561545    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561546    proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg_train out=_meta(keep=NAME) noprint;
1561547    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1561548    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1561549    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561550    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561551    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561552    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1561553    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561554    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561555    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1561556    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1561556  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 202 rows and 5 columns.

1561557    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561558    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1561559    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 202 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 202 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561560    filename _pref
1561560  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1561561    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1561562    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1561563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1561564   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1561565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1561566   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1561567   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1561568   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1561569    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1561570    quit;
1561571    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1561572    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1561573    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1561574    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1561575    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1561576    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561577    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1561578    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561579    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561580    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1561581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561582    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561583    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561584    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1561585    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1561586    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561587    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1561588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1561589    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1561590    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561591    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561592    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561593    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1561594    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561595    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561596    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1561597    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1561597  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1561598    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561599    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1561600    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561601    filename _pref
1561601  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1561602    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1561603    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1561604   +
1561605   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1561606   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1561606  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1561607   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1561608   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1561609   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1561610   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1561611   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1561612    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1561613    quit;
1561614    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1561615    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1561616    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1561617    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1561618    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1561619    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561620    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1561621    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561622    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561623    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1561624    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561625    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561626    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561627    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1561628    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1561629    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561630    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1561631    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561632    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1561633    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561634    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561635    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561636    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1561637    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561638    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561639    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1561640    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1561640  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1561641    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561642    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1561643    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561644    filename _pref
1561644  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1561645    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1561646    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1561647   +
1561648   +
1561649   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1561650   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1561651   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1561652   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1561653   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1561654   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561655   +
1561656   +
1561657   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1561658   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1561659   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1561660   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1561661   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1561662   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561663   +
1561664   +
1561665   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1561666   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1561667   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1561668   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1561669   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1561670   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561671   +
1561672   +
1561673   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1561674   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1561675   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1561676   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1561677   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1561678   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561679   +
1561680   +
1561681   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1561682   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1561683   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1561684   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1561685   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1561686   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561687   +
1561688   +
1561689   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1561690   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1561691   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1561692   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1561693   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1561694   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561695   +
1561696   +
1561697   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1561698   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1561699   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1561700   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1561701   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1561702   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561703   +
1561704   +
1561705   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1561706   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1561707   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1561708   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1561709   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1561710   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1561711   +if
1561712   +_FILTERNORM1 not in ( '.')
1561713   + and
1561714   +_FILTERNORM2 not in ( '.')
1561715   + and
1561716   +_FILTERNORM3 not in ( '.')
1561717   + and
1561718   +_FILTERNORM4 not in ( '.')
1561719   + and
1561720   +_FILTERNORM5 not in ( '.')
1561721   + and
1561722   +_FILTERNORM6 not in ( '.')
1561723   + and
1561724   +_FILTERNORM7 not in ( ' ')
1561725   + and
1561726   +_FILTERNORM8 not in ( ' ')
1561727   +and
1561728   +( Dt_Customer ne .)
1561729   +and ( Income ne . and (Income<=107000))
1561730   +and ( Kidhome ne .)
1561731   +and ( MntFishProducts ne .)
1561732   +and ( MntFruits ne .)
1561733   +and ( MntGoldProds ne .)
1561734   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1561735   +and ( MntSweetProducts ne .)
1561736   +and ( MntWines ne .)
1561737   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1561738   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1561739   +and ( NumStorePurchases ne .)
1561740   +and ( NumWebPurchases ne .)
1561741   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1561742   +and ( Recency ne .)
1561743   +and ( Teenhome ne .)
1561744   +and ( Year_Birth ne .)
1561745   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1561746   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1561747   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1561748   +end;
MPRINT(EM_DIAGRAM):   end;
1561749   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1561750   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1561751    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1561752    quit;
1561753    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1561754    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1561755    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1561756    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1561757    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1561758    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561759    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1561760    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561761    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561762    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1561763    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561764    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561765    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561766    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1561767    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1561768    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561769    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1561770    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1561771    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1561772    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561773    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561774    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1561775    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1561776    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1561777    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561778    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1561779    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1561779  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1561780    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1561781    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1561782    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 311 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1561783    %macro varDept(fcmpdata=,id=);
1561784    %global nobs&id scoreFlag&id;
1561785    %let scoreFlag&id = 0;
1561786    %if &id=1 or ^&fcmpStart %then %do;
1561787    proc sort data=&fcmpdata out=_temp&id nodupkey;
1561788    by NAME;
1561789    where id=&id and LHS in( %let j=1;
1561790    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1561791    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1561792    "&var" %let j = %eval(&j+1);
1561793    %end;
1561794    );
1561795    run;
1561796    %let dsid = %sysfunc(open(_temp&id));
1561797    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1561798    %let dsid = %sysfunc(close(&dsid));
1561799    %if &&nobs&id %then %do;
1561800    %let scoreFlag&id = 1;
1561801    %let fcmpStart = 1;
1561802    %end;
1561803    %else %let fcmpStart = 0;
1561804    %end;
1561805    %else %do;
1561806    proc sort data=&fcmpdata out=_tempid;
1561807    where id=&id;
1561808    by LHS;
1561809    run;
1561810    %let dsid = %sysfunc(open(_tempid));
1561811    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1561812    %let dsid = %sysfunc(close(&dsid));
1561813    %if ^&&nobs&id %then %do;
1561814    proc datasets lib=work nolist;
1561815    delete _tempid;
1561816    run;
1561817    quit;
1561818    %end;
1561819    %else %do;
1561820    data _tempAll;
1561821    set %let j=%eval(&id-1);
1561822    %do x=1 %to &j;
1561823    %if &&nobs&x %then %do;
1561824    _temp&x %end;
1561825    %end;
1561826    ;
1561827    run;
1561828    proc sql;
1561829    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1561829  ! work._tempid p2 where p.name=p2.lhs;
1561830    quit;
1561831    data _temp&id;
1561832    set _temp&id;
1561833    where LHS ne '' and NAME ne '' and Node ne '';
1561834    run;
1561835    proc datasets lib=work nolist;
1561836    delete _tempAll;
1561837    run;
1561838    %let dsid = %sysfunc(open(_temp&id));
1561839    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1561840    %let dsid = %sysfunc(close(&dsid));
1561841    %if ^&&nobs&id %then %do;
1561842    proc datasets lib=work nolist;
1561843    delete _temp&id;
1561844    run;
1561845    quit;
1561846    %end;
1561847    %else %do;
1561848    %let scoreFlag&id = 1;
1561849    data _temp&id;
1561850    set _temp&id;
1561851    where LHS ne NAME and node ne '';
1561852    run;
1561853    %let dsid = %sysfunc(open(_temp&id));
1561854    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1561855    %let dsid = %sysfunc(close(&dsid));
1561856    %if ^&&nobs&id %then %do;
1561857    proc datasets lib=work nolist;
1561858    delete _temp&id;
1561859    run;
1561860    quit;
1561861    %end;
1561862    %else %do;
1561863    proc sort data=_temp&id nodupkey;
1561864    by LHS NAME;
1561865    run;
1561866    %end;
1561867    %end;
1561868    %end;
1561869    %end;
1561870    %mend varDept;
1561871    %macro optCode(outdata=fcmpdata);
1561872    %global fcmpStart;
1561873    %let fcmpStart = 0;
1561874    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1561875    %let NumNodes=9;
1561876    %do k=1 %to &NumNodes;
1561877    %vardept(fcmpdata=&outdata, id=&k);
1561878    %end;
1561879    %mend optCode;
1561880    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 56 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 42 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 27 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 27 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 27 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1561881    filename _pref
1561881  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas";
1561882    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1561883    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMPUBLISHSCORE.sas.
1561884   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1561885   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1561886   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1561887   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1561888   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1561889   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1561890   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1561891   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1561892   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1561893   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1561894   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1561895   +LENGTH _WARN_ $4
1561896   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1561897   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1561898   +
1561899   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1561900   +
1561901   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1561902   +
1561903   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1561904   +
1561905   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1561906   +
1561907   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1561908   +
1561909   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1561910   +
1561911   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1561912   +
1561913   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1561914   +
1561915   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1561916   +
1561917   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1561918   +
1561919   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1561920   +
1561921   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1561922   +
1561923   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1561924   +
1561925   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1561926   +
1561927   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1561928   +
1561929   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1561930   +
1561931   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1561932   +
1561933   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1561934   +
1561935   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1561936   +
1561937   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1561938   +
1561939   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1561940   +
1561941   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1561942   +
1561943   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1561944   +
1561945   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1561946   +
1561947   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1561948   +
1561949   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1561950   +
1561951   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1561952   +
1561953   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1561954   +
1561955   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1561956   +
1561957   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1561958   +
1561959   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1561960   +
1561961   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1561962   +
1561963   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1561964   +
1561965   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1561966   +
1561967   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1561968   +
1561969   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1561970   +
1561971   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1561972   +
1561973   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1561974   +
1561975   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1561976   +
1561977   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1561978   +
1561979   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1561980   +
1561981   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1561982   +
1561983   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1561984   +
1561985   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1561986   +
1561987   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1561988   +
1561989   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1561990   +
1561991   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1561992   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1561993   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1561994   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1561995   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1561996   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1561997   +end;
MPRINT(EM_DIAGRAM):   end;
1561998   +else do;
MPRINT(EM_DIAGRAM):   else do;
1561999   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1562000   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1562001   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1562002   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1562003   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1562004   +   end;
MPRINT(EM_DIAGRAM):   end;
1562005   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1562006   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1562007   +   end;
MPRINT(EM_DIAGRAM):   end;
1562008   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1562009   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1562010   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1562011   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562012   +   end;
MPRINT(EM_DIAGRAM):   end;
1562013   +end;
MPRINT(EM_DIAGRAM):   end;
1562014   +
1562015   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1562016   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1562017   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1562018   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1562019   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1562020   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562021   +end;
MPRINT(EM_DIAGRAM):   end;
1562022   +else do;
MPRINT(EM_DIAGRAM):   else do;
1562023   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1562024   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1562025   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1562026   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1562027   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1562028   +   end;
MPRINT(EM_DIAGRAM):   end;
1562029   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1562030   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1562031   +   end;
MPRINT(EM_DIAGRAM):   end;
1562032   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1562033   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1562034   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1562035   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562036   +   end;
MPRINT(EM_DIAGRAM):   end;
1562037   +end;
MPRINT(EM_DIAGRAM):   end;
1562038   +
1562039   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1562040   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1562041   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1562042   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1562043   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1562044   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562045   +end;
MPRINT(EM_DIAGRAM):   end;
1562046   +else do;
MPRINT(EM_DIAGRAM):   else do;
1562047   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1562048   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1562049   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1562050   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1562051   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1562052   +   end;
MPRINT(EM_DIAGRAM):   end;
1562053   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1562054   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1562055   +   end;
MPRINT(EM_DIAGRAM):   end;
1562056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1562057   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1562058   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1562059   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562060   +   end;
MPRINT(EM_DIAGRAM):   end;
1562061   +end;
MPRINT(EM_DIAGRAM):   end;
1562062   +
1562063   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1562064   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1562065   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1562066   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1562067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1562068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562069   +end;
MPRINT(EM_DIAGRAM):   end;
1562070   +else do;
MPRINT(EM_DIAGRAM):   else do;
1562071   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1562072   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1562073   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1562074   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1562075   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1562076   +   end;
MPRINT(EM_DIAGRAM):   end;
1562077   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1562078   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1562079   +   end;
MPRINT(EM_DIAGRAM):   end;
1562080   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1562081   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1562082   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1562083   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562084   +   end;
MPRINT(EM_DIAGRAM):   end;
1562085   +end;
MPRINT(EM_DIAGRAM):   end;
1562086   +
1562087   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1562088   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1562089   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1562090   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1562091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1562092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562093   +end;
MPRINT(EM_DIAGRAM):   end;
1562094   +else do;
MPRINT(EM_DIAGRAM):   else do;
1562095   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1562096   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1562097   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1562098   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1562099   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1562100   +   end;
MPRINT(EM_DIAGRAM):   end;
1562101   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1562102   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1562103   +   end;
MPRINT(EM_DIAGRAM):   end;
1562104   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1562105   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1562106   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1562107   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562108   +   end;
MPRINT(EM_DIAGRAM):   end;
1562109   +end;
MPRINT(EM_DIAGRAM):   end;
1562110   +
1562111   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1562112   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1562113   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1562114   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1562115   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1562116   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562117   +end;
MPRINT(EM_DIAGRAM):   end;
1562118   +else do;
MPRINT(EM_DIAGRAM):   else do;
1562119   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1562120   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1562121   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1562122   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1562123   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1562124   +   end;
MPRINT(EM_DIAGRAM):   end;
1562125   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1562126   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1562127   +   end;
MPRINT(EM_DIAGRAM):   end;
1562128   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1562129   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1562130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1562131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562132   +   end;
MPRINT(EM_DIAGRAM):   end;
1562133   +end;
MPRINT(EM_DIAGRAM):   end;
1562134   +
1562135   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1562136   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1562137   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1562138   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1562139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1562140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562141   +end;
MPRINT(EM_DIAGRAM):   end;
1562142   +else do;
MPRINT(EM_DIAGRAM):   else do;
1562143   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1562144   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1562145   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1562146   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1562147   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1562148   +   end;
MPRINT(EM_DIAGRAM):   end;
1562149   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1562150   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1562151   +   end;
MPRINT(EM_DIAGRAM):   end;
1562152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1562153   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1562154   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1562155   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562156   +   end;
MPRINT(EM_DIAGRAM):   end;
1562157   +end;
MPRINT(EM_DIAGRAM):   end;
1562158   +
1562159   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1562160   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1562161   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1562162   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1562163   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1562164   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1562165   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1562166   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1562167   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1562168   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1562169   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1562170   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1562171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1562172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562173   +end;
MPRINT(EM_DIAGRAM):   end;
1562174   +else do;
MPRINT(EM_DIAGRAM):   else do;
1562175   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1562176   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1562177   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1562178   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1562179   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1562180   +   end;
MPRINT(EM_DIAGRAM):   end;
1562181   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1562182   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1562183   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1562184   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1562185   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1562186   +   end;
MPRINT(EM_DIAGRAM):   end;
1562187   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1562188   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1562189   +   end;
MPRINT(EM_DIAGRAM):   end;
1562190   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1562191   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1562192   +   end;
MPRINT(EM_DIAGRAM):   end;
1562193   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1562194   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1562195   +   end;
MPRINT(EM_DIAGRAM):   end;
1562196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1562197   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1562198   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1562199   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1562200   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1562201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1562202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562203   +   end;
MPRINT(EM_DIAGRAM):   end;
1562204   +end;
MPRINT(EM_DIAGRAM):   end;
1562205   +
1562206   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1562207   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1562208   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1562209   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1562210   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1562211   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1562212   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1562213   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1562214   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1562215   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1562216   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1562217   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1562218   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1562219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1562220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562221   +end;
MPRINT(EM_DIAGRAM):   end;
1562222   +else do;
MPRINT(EM_DIAGRAM):   else do;
1562223   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1562224   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1562225   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1562226   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1562227   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1562228   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1562229   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1562230   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1562231   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1562232   +         end;
MPRINT(EM_DIAGRAM):   end;
1562233   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1562234   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1562235   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1562236   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1562237   +            end;
MPRINT(EM_DIAGRAM):   end;
1562238   +         end;
MPRINT(EM_DIAGRAM):   end;
1562239   +      end;
MPRINT(EM_DIAGRAM):   end;
1562240   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1562241   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1562242   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1562243   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1562244   +         end;
MPRINT(EM_DIAGRAM):   end;
1562245   +      end;
MPRINT(EM_DIAGRAM):   end;
1562246   +   end;
MPRINT(EM_DIAGRAM):   end;
1562247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1562248   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1562249   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1562250   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1562251   +      end;
MPRINT(EM_DIAGRAM):   end;
1562252   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1562253   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1562254   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1562255   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1562256   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1562257   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1562258   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1562259   +         end;
MPRINT(EM_DIAGRAM):   end;
1562260   +      end;
MPRINT(EM_DIAGRAM):   end;
1562261   +   end;
MPRINT(EM_DIAGRAM):   end;
1562262   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1562263   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1562264   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1562265   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1562266   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1562267   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1562268   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562269   +   end;
MPRINT(EM_DIAGRAM):   end;
1562270   +end;
MPRINT(EM_DIAGRAM):   end;
1562271   +
1562272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562273   +*** Checking missing input Interval
1562274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1562275   +
1562276   +IF NMISS(
1562277   +   AcceptedCmpTotal ,
1562278   +   Age ,
1562279   +   Frq ,
1562280   +   Income ,
1562281   +   Kidhome ,
1562282   +   Mnt ,
1562283   +   MntFishProducts ,
1562284   +   MntFruits ,
1562285   +   MntGoldProds ,
1562286   +   MntMeatProducts ,
1562287   +   MntSweetProducts ,
1562288   +   MntWines ,
1562289   +   MonthsAsCustomer ,
1562290   +   NumCatalogPurchases ,
1562291   +   NumDealsPurchases ,
1562292   +   NumDistPurchases ,
1562293   +   NumStorePurchases ,
1562294   +   NumWebPurchases ,
1562295   +   NumWebVisitsMonth ,
1562296   +   RFMstat ,
1562297   +   RMntFrq ,
1562298   +   Recency ,
1562299   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1562300   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1562301   +
1562302   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1562303   +END;
MPRINT(EM_DIAGRAM):   END;
1562304   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562305   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1562306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562307   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1562308   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1562309   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1562310   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1562311   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1562312   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1562313   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1562314   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1562315   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1562316   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1562317   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1562318   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1562319   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1562320   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1562321   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1562322   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1562323   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1562324   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1562325   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1562326   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1562327   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1562328   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1562329   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1562330   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1562331   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1562332   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1562333   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1562334   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1562335   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1562336   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1562337   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1562338   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1562339   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1562340   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1562341   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1562342   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1562343   +END;
MPRINT(EM_DIAGRAM):   END;
1562344   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1562345   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1562346   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1562347   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1562348   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1562349   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1562350   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1562351   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1562352   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1562353   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1562354   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1562355   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1562356   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1562357   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1562358   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1562359   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1562360   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1562361   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1562362   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1562363   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1562364   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1562365   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1562366   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1562367   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1562368   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1562369   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1562370   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1562371   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1562372   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1562373   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1562374   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1562375   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1562376   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1562377   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1562378   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1562379   +   ELSE S_NumCatalogPurchases
1562380   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1562381   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1562382   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1562383   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1562384   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1562385   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1562386   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1562387   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1562388   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1562389   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1562390   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1562391   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1562392   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1562393   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1562394   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1562395   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1562396   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1562397   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1562398   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1562399   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1562400   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1562401   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1562402   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1562403   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1562404   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1562405   +END;
MPRINT(EM_DIAGRAM):   END;
1562406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562407   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1562408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562410   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1562411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562413   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1562414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562415   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1562416   +   H11  =    -0.84299355418982 * S_AcceptedCmpTotal  +     0.01354424462165 *
1562417   +        S_Age  +     0.26356367995208 * S_Frq  +    -0.22651244750456 *
1562418   +        S_Income  +    -0.23050240180524 * S_Kidhome
1562419   +          +    -1.06664092571354 * S_Mnt  +     0.46271649725684 *
1562420   +        S_MntFishProducts  +     0.29675940813656 * S_MntFruits
1562421   +          +     0.11295035964093 * S_MntGoldProds  +    -4.93303695297431 *
1562422   +        S_MntMeatProducts  +    -0.54183850324086 * S_MntSweetProducts
1562423   +          +     1.44837072773075 * S_MntWines  +     0.02861081928648 *
1562424   +        S_MonthsAsCustomer  +    -1.87075238979838 * S_NumCatalogPurchases
1562425   +          +    -1.32257303635072 * S_NumDealsPurchases
1562426   +          +    -0.54480870554989 * S_NumDistPurchases
1562427   +          +     1.24793709956495 * S_NumStorePurchases
1562428   +          +      1.7974198103915 * S_NumWebPurchases
1562429   +          +    -0.94706410495328 * S_NumWebVisitsMonth
1562430   +          +    -0.08194447980826 * S_RFMstat  +     0.59486634525204 *
1562431   +        S_RMntFrq  +     0.75191254776333 * S_Recency
1562432   +          +     0.13719529324408 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.84299355418982 * S_AcceptedCmpTotal + 0.01354424462165 * S_Age 
+ 0.26356367995208 * S_Frq + -0.22651244750456 * S_Income + -0.23050240180524 * S_Kidhome + 
-1.06664092571354 * S_Mnt + 0.46271649725684 * S_MntFishProducts + 0.29675940813656 * 
S_MntFruits + 0.11295035964093 * S_MntGoldProds + -4.93303695297431 * S_MntMeatProducts + 
-0.54183850324086 * S_MntSweetProducts + 1.44837072773075 * S_MntWines + 0.02861081928648 * 
S_MonthsAsCustomer + -1.87075238979838 * S_NumCatalogPurchases + -1.32257303635072 * 
S_NumDealsPurchases + -0.54480870554989 * S_NumDistPurchases + 1.24793709956495 * 
S_NumStorePurchases + 1.7974198103915 * S_NumWebPurchases + -0.94706410495328 * 
S_NumWebVisitsMonth + -0.08194447980826 * S_RFMstat + 0.59486634525204 * S_RMntFrq + 
0.75191254776333 * S_Recency + 0.13719529324408 * S_Teenhome ;
1562433   +   H12  =     0.19794895997964 * S_AcceptedCmpTotal  +    -0.04275283557766 *
1562434   +        S_Age  +    -0.56824925508231 * S_Frq  +     0.77692983182219 *
1562435   +        S_Income  +    -0.78793784980656 * S_Kidhome
1562436   +          +     0.04472047240299 * S_Mnt  +    -0.04688509126909 *
1562437   +        S_MntFishProducts  +    -0.00374619740046 * S_MntFruits
1562438   +          +     0.04963586007888 * S_MntGoldProds  +      1.0706121357066 *
1562439   +        S_MntMeatProducts  +     -0.1297171300067 * S_MntSweetProducts
1562440   +          +    -0.13703855748888 * S_MntWines  +     0.12672829255314 *
1562441   +        S_MonthsAsCustomer  +     0.72932641344764 * S_NumCatalogPurchases
1562442   +          +     0.70535680060775 * S_NumDealsPurchases
1562443   +          +    -0.15561838359391 * S_NumDistPurchases
1562444   +          +    -0.86545647977011 * S_NumStorePurchases
1562445   +          +    -0.78435825863867 * S_NumWebPurchases
1562446   +          +     1.76113949975149 * S_NumWebVisitsMonth
1562447   +          +     0.12430819021552 * S_RFMstat  +    -1.23324881442206 *
1562448   +        S_RMntFrq  +    -1.54576826012241 * S_Recency
1562449   +          +     -0.4369755549417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.19794895997964 * S_AcceptedCmpTotal + -0.04275283557766 * S_Age 
+ -0.56824925508231 * S_Frq + 0.77692983182219 * S_Income + -0.78793784980656 * S_Kidhome + 
0.04472047240299 * S_Mnt + -0.04688509126909 * S_MntFishProducts + -0.00374619740046 * 
S_MntFruits + 0.04963586007888 * S_MntGoldProds + 1.0706121357066 * S_MntMeatProducts + 
-0.1297171300067 * S_MntSweetProducts + -0.13703855748888 * S_MntWines + 0.12672829255314 * 
S_MonthsAsCustomer + 0.72932641344764 * S_NumCatalogPurchases + 0.70535680060775 * 
S_NumDealsPurchases + -0.15561838359391 * S_NumDistPurchases + -0.86545647977011 * 
S_NumStorePurchases + -0.78435825863867 * S_NumWebPurchases + 1.76113949975149 * 
S_NumWebVisitsMonth + 0.12430819021552 * S_RFMstat + -1.23324881442206 * S_RMntFrq + 
-1.54576826012241 * S_Recency + -0.4369755549417 * S_Teenhome ;
1562450   +   H13  =     1.17645971046641 * S_AcceptedCmpTotal  +     0.30922319488674 *
1562451   +        S_Age  +     0.05428662439399 * S_Frq  +     1.21807403747713 *
1562452   +        S_Income  +    -0.59349067735666 * S_Kidhome
1562453   +          +     0.48252305689599 * S_Mnt  +    -0.37595381735402 *
1562454   +        S_MntFishProducts  +    -0.13011704623919 * S_MntFruits
1562455   +          +     0.89281681720037 * S_MntGoldProds  +     2.21463961986297 *
1562456   +        S_MntMeatProducts  +    -0.13844613393182 * S_MntSweetProducts
1562457   +          +    -0.93052774237188 * S_MntWines  +    -0.15329145148081 *
1562458   +        S_MonthsAsCustomer  +    -0.35464993634392 * S_NumCatalogPurchases
1562459   +          +     0.21510592309387 * S_NumDealsPurchases
1562460   +          +    -0.05401897321491 * S_NumDistPurchases
1562461   +          +     0.14945584086188 * S_NumStorePurchases
1562462   +          +    -0.09993898051701 * S_NumWebPurchases
1562463   +          +     1.40189771606069 * S_NumWebVisitsMonth
1562464   +          +    -0.37624880818184 * S_RFMstat  +     1.08211585195417 *
1562465   +        S_RMntFrq  +    -1.39818267754244 * S_Recency
1562466   +          +    -1.40352649738739 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.17645971046641 * S_AcceptedCmpTotal + 0.30922319488674 * S_Age + 
0.05428662439399 * S_Frq + 1.21807403747713 * S_Income + -0.59349067735666 * S_Kidhome + 
0.48252305689599 * S_Mnt + -0.37595381735402 * S_MntFishProducts + -0.13011704623919 * 
S_MntFruits + 0.89281681720037 * S_MntGoldProds + 2.21463961986297 * S_MntMeatProducts + 
-0.13844613393182 * S_MntSweetProducts + -0.93052774237188 * S_MntWines + -0.15329145148081 * 
S_MonthsAsCustomer + -0.35464993634392 * S_NumCatalogPurchases + 0.21510592309387 * 
S_NumDealsPurchases + -0.05401897321491 * S_NumDistPurchases + 0.14945584086188 * 
S_NumStorePurchases + -0.09993898051701 * S_NumWebPurchases + 1.40189771606069 * 
S_NumWebVisitsMonth + -0.37624880818184 * S_RFMstat + 1.08211585195417 * S_RMntFrq + 
-1.39818267754244 * S_Recency + -1.40352649738739 * S_Teenhome ;
1562467   +   H14  =     1.27893467893779 * S_AcceptedCmpTotal  +     0.01880979187764 *
1562468   +        S_Age  +    -0.70756405701277 * S_Frq  +     1.53745885395395 *
1562469   +        S_Income  +    -0.61129984920194 * S_Kidhome
1562470   +          +    -0.41376232228418 * S_Mnt  +      0.0693214270226 *
1562471   +        S_MntFishProducts  +    -0.38136390810525 * S_MntFruits
1562472   +          +    -0.00750645920769 * S_MntGoldProds  +     0.87695145656238 *
1562473   +        S_MntMeatProducts  +    -0.04977219570302 * S_MntSweetProducts
1562474   +          +     -0.6549812298966 * S_MntWines  +    -1.30809571041702 *
1562475   +        S_MonthsAsCustomer  +     1.09130957811982 * S_NumCatalogPurchases
1562476   +          +     0.81353732439473 * S_NumDealsPurchases
1562477   +          +     0.32933472931941 * S_NumDistPurchases
1562478   +          +    -1.28188012143595 * S_NumStorePurchases
1562479   +          +    -0.81914782214243 * S_NumWebPurchases
1562480   +          +     1.20332282902342 * S_NumWebVisitsMonth
1562481   +          +     0.64952098333126 * S_RFMstat  +     -0.9542946440546 *
1562482   +        S_RMntFrq  +    -2.33912996419146 * S_Recency
1562483   +          +    -0.87409399936848 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.27893467893779 * S_AcceptedCmpTotal + 0.01880979187764 * S_Age + 
-0.70756405701277 * S_Frq + 1.53745885395395 * S_Income + -0.61129984920194 * S_Kidhome + 
-0.41376232228418 * S_Mnt + 0.0693214270226 * S_MntFishProducts + -0.38136390810525 * 
S_MntFruits + -0.00750645920769 * S_MntGoldProds + 0.87695145656238 * S_MntMeatProducts + 
-0.04977219570302 * S_MntSweetProducts + -0.6549812298966 * S_MntWines + -1.30809571041702 * 
S_MonthsAsCustomer + 1.09130957811982 * S_NumCatalogPurchases + 0.81353732439473 * 
S_NumDealsPurchases + 0.32933472931941 * S_NumDistPurchases + -1.28188012143595 * 
S_NumStorePurchases + -0.81914782214243 * S_NumWebPurchases + 1.20332282902342 * 
S_NumWebVisitsMonth + 0.64952098333126 * S_RFMstat + -0.9542946440546 * S_RMntFrq + 
-2.33912996419146 * S_Recency + -0.87409399936848 * S_Teenhome ;
1562484   +   H11  = H11  +     0.59375673291979 * AcceptedCmp10
1562485   +          +     0.02203755618618 * AcceptedCmp20  +    -0.21181019584832 *
1562486   +        AcceptedCmp30  +     0.23268323109228 * AcceptedCmp40
1562487   +          +     0.90104209081514 * AcceptedCmp50  +     0.38697558270231 *
1562488   +        Complain0  +     0.35031878791853 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.59375673291979 * AcceptedCmp10 + 0.02203755618618 * 
AcceptedCmp20 + -0.21181019584832 * AcceptedCmp30 + 0.23268323109228 * AcceptedCmp40 + 
0.90104209081514 * AcceptedCmp50 + 0.38697558270231 * Complain0 + 0.35031878791853 * 
HigherEducationBinary0 ;
1562489   +   H12  = H12  +     -0.5730983744808 * AcceptedCmp10
1562490   +          +    -0.34424275081615 * AcceptedCmp20  +    -0.44620106374863 *
1562491   +        AcceptedCmp30  +    -0.49481575237203 * AcceptedCmp40
1562492   +          +    -0.69117141341081 * AcceptedCmp50  +     0.51229650850652 *
1562493   +        Complain0  +    -0.11735442134022 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5730983744808 * AcceptedCmp10 + -0.34424275081615 * 
AcceptedCmp20 + -0.44620106374863 * AcceptedCmp30 + -0.49481575237203 * AcceptedCmp40 + 
-0.69117141341081 * AcceptedCmp50 + 0.51229650850652 * Complain0 + -0.11735442134022 * 
HigherEducationBinary0 ;
1562494   +   H13  = H13  +    -1.12949380623281 * AcceptedCmp10
1562495   +          +    -0.52986298901299 * AcceptedCmp20  +    -0.35665685041759 *
1562496   +        AcceptedCmp30  +    -0.03028806067484 * AcceptedCmp40
1562497   +          +    -0.17063695271842 * AcceptedCmp50  +    -1.10439852571034 *
1562498   +        Complain0  +      0.4574039172898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.12949380623281 * AcceptedCmp10 + -0.52986298901299 * 
AcceptedCmp20 + -0.35665685041759 * AcceptedCmp30 + -0.03028806067484 * AcceptedCmp40 + 
-0.17063695271842 * AcceptedCmp50 + -1.10439852571034 * Complain0 + 0.4574039172898 * 
HigherEducationBinary0 ;
1562499   +   H14  = H14  +     0.90425496220772 * AcceptedCmp10
1562500   +          +     0.02606316440589 * AcceptedCmp20  +     0.05631172953758 *
1562501   +        AcceptedCmp30  +    -0.45861962742584 * AcceptedCmp40
1562502   +          +    -0.52730223640646 * AcceptedCmp50  +      1.1577500782814 *
1562503   +        Complain0  +    -0.02439051385945 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.90425496220772 * AcceptedCmp10 + 0.02606316440589 * 
AcceptedCmp20 + 0.05631172953758 * AcceptedCmp30 + -0.45861962742584 * AcceptedCmp40 + 
-0.52730223640646 * AcceptedCmp50 + 1.1577500782814 * Complain0 + -0.02439051385945 * 
HigherEducationBinary0 ;
1562504   +   H11  = H11  +    -0.36857478578596 * Education2n_Cycle
1562505   +          +     0.19898218105822 * EducationBasic  +     0.02724838036933 *
1562506   +        EducationGraduation  +    -0.18265777565193 * EducationMaster
1562507   +          +     0.38068062371853 * Marital_StatusDivorced
1562508   +          +    -0.09269938603625 * Marital_StatusMarried
1562509   +          +    -0.17904543311137 * Marital_StatusSingle
1562510   +          +    -0.13128093417312 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.36857478578596 * Education2n_Cycle + 0.19898218105822 * 
EducationBasic + 0.02724838036933 * EducationGraduation + -0.18265777565193 * EducationMaster 
+ 0.38068062371853 * Marital_StatusDivorced + -0.09269938603625 * Marital_StatusMarried + 
-0.17904543311137 * Marital_StatusSingle + -0.13128093417312 * Marital_StatusTogether ;
1562511   +   H12  = H12  +     0.57160337074566 * Education2n_Cycle
1562512   +          +    -0.43780721536745 * EducationBasic  +     0.14323913032441 *
1562513   +        EducationGraduation  +      -0.555680629921 * EducationMaster
1562514   +          +     0.46191454760643 * Marital_StatusDivorced
1562515   +          +    -1.36520525874032 * Marital_StatusMarried
1562516   +          +     1.36669525533789 * Marital_StatusSingle
1562517   +          +    -1.54396080382919 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57160337074566 * Education2n_Cycle + -0.43780721536745 * 
EducationBasic + 0.14323913032441 * EducationGraduation + -0.555680629921 * EducationMaster + 
0.46191454760643 * Marital_StatusDivorced + -1.36520525874032 * Marital_StatusMarried + 
1.36669525533789 * Marital_StatusSingle + -1.54396080382919 * Marital_StatusTogether ;
1562518   +   H13  = H13  +    -0.69472324326666 * Education2n_Cycle
1562519   +          +     1.16589091191624 * EducationBasic  +     -0.2092156588512 *
1562520   +        EducationGraduation  +    -0.01875362530677 * EducationMaster
1562521   +          +     0.18693560360309 * Marital_StatusDivorced
1562522   +          +    -0.56475988428608 * Marital_StatusMarried
1562523   +          +     0.79263891340625 * Marital_StatusSingle
1562524   +          +    -0.06098632630716 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.69472324326666 * Education2n_Cycle + 1.16589091191624 * 
EducationBasic + -0.2092156588512 * EducationGraduation + -0.01875362530677 * EducationMaster 
+ 0.18693560360309 * Marital_StatusDivorced + -0.56475988428608 * Marital_StatusMarried + 
0.79263891340625 * Marital_StatusSingle + -0.06098632630716 * Marital_StatusTogether ;
1562525   +   H14  = H14  +     0.06911242671078 * Education2n_Cycle
1562526   +          +    -0.01750231496702 * EducationBasic  +    -0.32110835963458 *
1562527   +        EducationGraduation  +     0.38698693412081 * EducationMaster
1562528   +          +     1.14025450669394 * Marital_StatusDivorced
1562529   +          +     0.78122963298728 * Marital_StatusMarried
1562530   +          +    -1.37860768059913 * Marital_StatusSingle
1562531   +          +     0.04814874553216 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.06911242671078 * Education2n_Cycle + -0.01750231496702 * 
EducationBasic + -0.32110835963458 * EducationGraduation + 0.38698693412081 * EducationMaster 
+ 1.14025450669394 * Marital_StatusDivorced + 0.78122963298728 * Marital_StatusMarried + 
-1.37860768059913 * Marital_StatusSingle + 0.04814874553216 * Marital_StatusTogether ;
1562532   +   H11  =    -1.84343242480594 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.84343242480594 + H11 ;
1562533   +   H12  =     1.29327809357238 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.29327809357238 + H12 ;
1562534   +   H13  =    -0.37221770912681 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.37221770912681 + H13 ;
1562535   +   H14  =    -0.62919123351659 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.62919123351659 + H14 ;
1562536   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1562537   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1562538   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1562539   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1562540   +END;
MPRINT(EM_DIAGRAM):   END;
1562541   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1562542   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1562543   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1562544   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1562545   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1562546   +END;
MPRINT(EM_DIAGRAM):   END;
1562547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562548   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1562549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562550   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1562551   +   P_DepVar1  =    -3.75170032730169 * H11  +     5.71110229580931 * H12
1562552   +          +     2.78452207249475 * H13  +     3.19333794612831 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.75170032730169 * H11 + 5.71110229580931 * H12 + 
2.78452207249475 * H13 + 3.19333794612831 * H14 ;
1562553   +   P_DepVar1  =    -6.67752417555263 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.67752417555263 + P_DepVar1 ;
1562554   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1562555   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1562556   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1562557   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1562558   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1562559   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1562560   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1562561   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1562562   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1562563   +END;
MPRINT(EM_DIAGRAM):   END;
1562564   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1562565   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1562566   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1562567   +END;
MPRINT(EM_DIAGRAM):   END;
1562568   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1562569   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1562570   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1562571   +END;
MPRINT(EM_DIAGRAM):   END;
1562572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562573   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1562574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1562575   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1562576   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1562577   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1562578   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1562579   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1562580   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1562581   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1562582   +END;
MPRINT(EM_DIAGRAM):   END;
1562583   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1562584   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1562585   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1562586   +drop
1562587   +H11
1562588   +H12
1562589   +H13
1562590   +H14
1562591   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1562592   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1562593    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1562594    quit;
1562595    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1562596    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1562597    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1562598    retain ID 2 Node "Neural4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural4";
1562599    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1562600    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562601    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1562602    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562603    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2528 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2528 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562604    proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural4_variableset out=_temp2(keep=NAME CREATOR);
1562605    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562606    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562607    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1562608    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1562609    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1562610    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562611    proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural4_train out=_meta(keep=NAME) noprint;
1562612    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1562613    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1562614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562615    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562616    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1562617    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1562618    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562619    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1562620    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1562621    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1562621  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1463 rows and 5 columns.

1562622    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562623    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1562624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1463 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1562625    filename _pref
1562625  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1562626    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1562627    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1562628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1562629   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1562630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1562631   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1562632   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1562633   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1562634    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1562635    quit;
1562636    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1562637    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1562638    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1562639    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1562640    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1562641    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562642    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1562643    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562644    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562645    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1562646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562647    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562648    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1562649    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1562650    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1562651    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562652    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1562653    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1562654    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1562655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562657    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1562658    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1562659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562660    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562661    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1562662    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1562662  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1562663    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1562664    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1562665    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562666    filename _pref
1562666  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1562667    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1562668    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1562669   +
1562670   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1562671   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1562671  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1562672   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1562673   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1562674   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1562675   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1562676   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1562677    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1562678    quit;
1562679    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1562680    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1562681    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1562682    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1562683    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1562684    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562685    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1562686    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562688    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1562689    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562690    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562691    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1562692    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1562693    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1562694    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562695    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1562696    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562697    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1562698    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562699    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562700    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1562701    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1562702    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562703    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562704    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1562705    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1562705  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1562706    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1562707    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1562708    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1506 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562709    filename _pref
1562709  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1562710    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1562711    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1562712   +
1562713   +
1562714   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1562715   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1562716   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1562717   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1562718   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1562719   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1562720   +
1562721   +
1562722   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1562723   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1562724   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1562725   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1562726   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1562727   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1562728   +
1562729   +
1562730   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1562731   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1562732   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1562733   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1562734   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1562735   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1562736   +
1562737   +
1562738   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1562739   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1562740   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1562741   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1562742   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1562743   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1562744   +
1562745   +
1562746   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1562747   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1562748   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1562749   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1562750   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1562751   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1562752   +
1562753   +
1562754   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1562755   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1562756   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1562757   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1562758   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1562759   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1562760   +
1562761   +
1562762   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1562763   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1562764   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1562765   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1562766   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1562767   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1562768   +
1562769   +
1562770   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1562771   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1562772   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1562773   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1562774   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1562775   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1562776   +if
1562777   +_FILTERNORM1 not in ( '.')
1562778   + and
1562779   +_FILTERNORM2 not in ( '.')
1562780   + and
1562781   +_FILTERNORM3 not in ( '.')
1562782   + and
1562783   +_FILTERNORM4 not in ( '.')
1562784   + and
1562785   +_FILTERNORM5 not in ( '.')
1562786   + and
1562787   +_FILTERNORM6 not in ( '.')
1562788   + and
1562789   +_FILTERNORM7 not in ( ' ')
1562790   + and
1562791   +_FILTERNORM8 not in ( ' ')
1562792   +and
1562793   +( Dt_Customer ne .)
1562794   +and ( Income ne . and (Income<=107000))
1562795   +and ( Kidhome ne .)
1562796   +and ( MntFishProducts ne .)
1562797   +and ( MntFruits ne .)
1562798   +and ( MntGoldProds ne .)
1562799   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1562800   +and ( MntSweetProducts ne .)
1562801   +and ( MntWines ne .)
1562802   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1562803   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1562804   +and ( NumStorePurchases ne .)
1562805   +and ( NumWebPurchases ne .)
1562806   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1562807   +and ( Recency ne .)
1562808   +and ( Teenhome ne .)
1562809   +and ( Year_Birth ne .)
1562810   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1562811   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1562812   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1562813   +end;
MPRINT(EM_DIAGRAM):   end;
1562814   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1562815   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1562816    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1562817    quit;
1562818    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1562819    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1562820    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1562821    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1562822    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1562823    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562824    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1562825    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562826    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1562827    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1562828    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562829    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562830    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1562831    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1562832    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1562833    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562834    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1562835    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1562836    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1562837    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562838    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562839    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1562840    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1562841    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1562842    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1562843    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1562844    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1562844  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1562845    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562846    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1562847    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562848    %macro varDept(fcmpdata=,id=);
1562849    %global nobs&id scoreFlag&id;
1562850    %let scoreFlag&id = 0;
1562851    %if &id=1 or ^&fcmpStart %then %do;
1562852    proc sort data=&fcmpdata out=_temp&id nodupkey;
1562853    by NAME;
1562854    where id=&id and LHS in( %let j=1;
1562855    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1562856    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1562857    "&var" %let j = %eval(&j+1);
1562858    %end;
1562859    );
1562860    run;
1562861    %let dsid = %sysfunc(open(_temp&id));
1562862    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1562863    %let dsid = %sysfunc(close(&dsid));
1562864    %if &&nobs&id %then %do;
1562865    %let scoreFlag&id = 1;
1562866    %let fcmpStart = 1;
1562867    %end;
1562868    %else %let fcmpStart = 0;
1562869    %end;
1562870    %else %do;
1562871    proc sort data=&fcmpdata out=_tempid;
1562872    where id=&id;
1562873    by LHS;
1562874    run;
1562875    %let dsid = %sysfunc(open(_tempid));
1562876    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1562877    %let dsid = %sysfunc(close(&dsid));
1562878    %if ^&&nobs&id %then %do;
1562879    proc datasets lib=work nolist;
1562880    delete _tempid;
1562881    run;
1562882    quit;
1562883    %end;
1562884    %else %do;
1562885    data _tempAll;
1562886    set %let j=%eval(&id-1);
1562887    %do x=1 %to &j;
1562888    %if &&nobs&x %then %do;
1562889    _temp&x %end;
1562890    %end;
1562891    ;
1562892    run;
1562893    proc sql;
1562894    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1562894  ! work._tempid p2 where p.name=p2.lhs;
1562895    quit;
1562896    data _temp&id;
1562897    set _temp&id;
1562898    where LHS ne '' and NAME ne '' and Node ne '';
1562899    run;
1562900    proc datasets lib=work nolist;
1562901    delete _tempAll;
1562902    run;
1562903    %let dsid = %sysfunc(open(_temp&id));
1562904    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1562905    %let dsid = %sysfunc(close(&dsid));
1562906    %if ^&&nobs&id %then %do;
1562907    proc datasets lib=work nolist;
1562908    delete _temp&id;
1562909    run;
1562910    quit;
1562911    %end;
1562912    %else %do;
1562913    %let scoreFlag&id = 1;
1562914    data _temp&id;
1562915    set _temp&id;
1562916    where LHS ne NAME and node ne '';
1562917    run;
1562918    %let dsid = %sysfunc(open(_temp&id));
1562919    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1562920    %let dsid = %sysfunc(close(&dsid));
1562921    %if ^&&nobs&id %then %do;
1562922    proc datasets lib=work nolist;
1562923    delete _temp&id;
1562924    run;
1562925    quit;
1562926    %end;
1562927    %else %do;
1562928    proc sort data=_temp&id nodupkey;
1562929    by LHS NAME;
1562930    run;
1562931    %end;
1562932    %end;
1562933    %end;
1562934    %end;
1562935    %mend varDept;
1562936    %macro optCode(outdata=fcmpdata);
1562937    %global fcmpStart;
1562938    %let fcmpStart = 0;
1562939    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1562940    %let NumNodes=9;
1562941    %do k=1 %to &NumNodes;
1562942    %vardept(fcmpdata=&outdata, id=&k);
1562943    %end;
1562944    %mend optCode;
1562945    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1562946    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1562947    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1562948    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1562949    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562950    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1562951    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1562952    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1562953    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562954    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1562955    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1562955  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1562956    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1562957    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1562958    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1562959    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1562960    filename _pref
1562960  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1562961    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1562962    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1562963   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1562964   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1562965   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1562966   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1562967   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1562968   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1562969   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1562970   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1562971   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1562972   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1562973   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1562974   +LENGTH _WARN_ $4
1562975   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1562976   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1562977   +
1562978   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1562979   +
1562980   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1562981   +
1562982   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1562983   +
1562984   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1562985   +
1562986   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1562987   +
1562988   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1562989   +
1562990   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1562991   +
1562992   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1562993   +
1562994   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1562995   +
1562996   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1562997   +
1562998   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1562999   +
1563000   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1563001   +
1563002   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1563003   +
1563004   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1563005   +
1563006   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1563007   +
1563008   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1563009   +
1563010   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1563011   +
1563012   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1563013   +
1563014   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1563015   +
1563016   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1563017   +
1563018   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1563019   +
1563020   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1563021   +
1563022   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1563023   +
1563024   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1563025   +
1563026   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1563027   +
1563028   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1563029   +
1563030   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1563031   +
1563032   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1563033   +
1563034   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1563035   +
1563036   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1563037   +
1563038   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1563039   +
1563040   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1563041   +
1563042   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1563043   +
1563044   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1563045   +
1563046   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1563047   +
1563048   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1563049   +
1563050   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1563051   +
1563052   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1563053   +
1563054   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1563055   +
1563056   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1563057   +
1563058   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1563059   +
1563060   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1563061   +
1563062   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1563063   +
1563064   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1563065   +
1563066   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1563067   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1563068   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1563069   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1563070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1563071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563072   +end;
MPRINT(EM_DIAGRAM):   end;
1563073   +else do;
MPRINT(EM_DIAGRAM):   else do;
1563074   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1563075   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1563076   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1563077   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1563078   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1563079   +   end;
MPRINT(EM_DIAGRAM):   end;
1563080   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1563081   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1563082   +   end;
MPRINT(EM_DIAGRAM):   end;
1563083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1563084   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1563085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1563086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563087   +   end;
MPRINT(EM_DIAGRAM):   end;
1563088   +end;
MPRINT(EM_DIAGRAM):   end;
1563089   +
1563090   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1563091   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1563092   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1563093   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1563094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1563095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563096   +end;
MPRINT(EM_DIAGRAM):   end;
1563097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1563098   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1563099   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1563100   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1563101   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1563102   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1563103   +   end;
MPRINT(EM_DIAGRAM):   end;
1563104   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1563105   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1563106   +   end;
MPRINT(EM_DIAGRAM):   end;
1563107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1563108   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1563109   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1563110   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563111   +   end;
MPRINT(EM_DIAGRAM):   end;
1563112   +end;
MPRINT(EM_DIAGRAM):   end;
1563113   +
1563114   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1563115   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1563116   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1563117   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1563118   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1563119   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563120   +end;
MPRINT(EM_DIAGRAM):   end;
1563121   +else do;
MPRINT(EM_DIAGRAM):   else do;
1563122   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1563123   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1563124   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1563125   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1563126   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1563127   +   end;
MPRINT(EM_DIAGRAM):   end;
1563128   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1563129   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1563130   +   end;
MPRINT(EM_DIAGRAM):   end;
1563131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1563132   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1563133   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1563134   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563135   +   end;
MPRINT(EM_DIAGRAM):   end;
1563136   +end;
MPRINT(EM_DIAGRAM):   end;
1563137   +
1563138   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1563139   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1563140   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1563141   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1563142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1563143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563144   +end;
MPRINT(EM_DIAGRAM):   end;
1563145   +else do;
MPRINT(EM_DIAGRAM):   else do;
1563146   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1563147   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1563148   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1563149   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1563150   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1563151   +   end;
MPRINT(EM_DIAGRAM):   end;
1563152   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1563153   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1563154   +   end;
MPRINT(EM_DIAGRAM):   end;
1563155   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1563156   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1563157   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1563158   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563159   +   end;
MPRINT(EM_DIAGRAM):   end;
1563160   +end;
MPRINT(EM_DIAGRAM):   end;
1563161   +
1563162   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1563163   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1563164   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1563165   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1563166   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1563167   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563168   +end;
MPRINT(EM_DIAGRAM):   end;
1563169   +else do;
MPRINT(EM_DIAGRAM):   else do;
1563170   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1563171   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1563172   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1563173   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1563174   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1563175   +   end;
MPRINT(EM_DIAGRAM):   end;
1563176   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1563177   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1563178   +   end;
MPRINT(EM_DIAGRAM):   end;
1563179   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1563180   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1563181   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1563182   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563183   +   end;
MPRINT(EM_DIAGRAM):   end;
1563184   +end;
MPRINT(EM_DIAGRAM):   end;
1563185   +
1563186   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1563187   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1563188   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1563189   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1563190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1563191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563192   +end;
MPRINT(EM_DIAGRAM):   end;
1563193   +else do;
MPRINT(EM_DIAGRAM):   else do;
1563194   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1563195   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1563196   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1563197   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1563198   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1563199   +   end;
MPRINT(EM_DIAGRAM):   end;
1563200   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1563201   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1563202   +   end;
MPRINT(EM_DIAGRAM):   end;
1563203   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1563204   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1563205   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1563206   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563207   +   end;
MPRINT(EM_DIAGRAM):   end;
1563208   +end;
MPRINT(EM_DIAGRAM):   end;
1563209   +
1563210   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1563211   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1563212   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1563213   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1563214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1563215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563216   +end;
MPRINT(EM_DIAGRAM):   end;
1563217   +else do;
MPRINT(EM_DIAGRAM):   else do;
1563218   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1563219   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1563220   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1563221   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1563222   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1563223   +   end;
MPRINT(EM_DIAGRAM):   end;
1563224   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1563225   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1563226   +   end;
MPRINT(EM_DIAGRAM):   end;
1563227   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1563228   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1563229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1563230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563231   +   end;
MPRINT(EM_DIAGRAM):   end;
1563232   +end;
MPRINT(EM_DIAGRAM):   end;
1563233   +
1563234   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1563235   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1563236   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1563237   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1563238   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1563239   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1563240   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1563241   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1563242   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1563243   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1563244   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1563245   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1563246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1563247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563248   +end;
MPRINT(EM_DIAGRAM):   end;
1563249   +else do;
MPRINT(EM_DIAGRAM):   else do;
1563250   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1563251   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1563252   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1563253   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1563254   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1563255   +   end;
MPRINT(EM_DIAGRAM):   end;
1563256   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1563257   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1563258   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1563259   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1563260   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1563261   +   end;
MPRINT(EM_DIAGRAM):   end;
1563262   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1563263   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1563264   +   end;
MPRINT(EM_DIAGRAM):   end;
1563265   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1563266   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1563267   +   end;
MPRINT(EM_DIAGRAM):   end;
1563268   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1563269   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1563270   +   end;
MPRINT(EM_DIAGRAM):   end;
1563271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1563272   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1563273   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1563274   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1563275   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1563276   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1563277   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563278   +   end;
MPRINT(EM_DIAGRAM):   end;
1563279   +end;
MPRINT(EM_DIAGRAM):   end;
1563280   +
1563281   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1563282   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1563283   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1563284   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1563285   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1563286   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1563287   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1563288   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1563289   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1563290   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1563291   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1563292   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1563293   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1563294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1563295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563296   +end;
MPRINT(EM_DIAGRAM):   end;
1563297   +else do;
MPRINT(EM_DIAGRAM):   else do;
1563298   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1563299   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1563300   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1563301   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1563302   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1563303   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1563304   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1563305   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1563306   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1563307   +         end;
MPRINT(EM_DIAGRAM):   end;
1563308   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1563309   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1563310   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1563311   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1563312   +            end;
MPRINT(EM_DIAGRAM):   end;
1563313   +         end;
MPRINT(EM_DIAGRAM):   end;
1563314   +      end;
MPRINT(EM_DIAGRAM):   end;
1563315   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1563316   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1563317   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1563318   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1563319   +         end;
MPRINT(EM_DIAGRAM):   end;
1563320   +      end;
MPRINT(EM_DIAGRAM):   end;
1563321   +   end;
MPRINT(EM_DIAGRAM):   end;
1563322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1563323   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1563324   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1563325   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1563326   +      end;
MPRINT(EM_DIAGRAM):   end;
1563327   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1563328   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1563329   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1563330   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1563331   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1563332   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1563333   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1563334   +         end;
MPRINT(EM_DIAGRAM):   end;
1563335   +      end;
MPRINT(EM_DIAGRAM):   end;
1563336   +   end;
MPRINT(EM_DIAGRAM):   end;
1563337   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1563338   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1563339   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1563340   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1563341   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1563342   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1563343   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563344   +   end;
MPRINT(EM_DIAGRAM):   end;
1563345   +end;
MPRINT(EM_DIAGRAM):   end;
1563346   +
1563347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563348   +*** Checking missing input Interval
1563349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1563350   +
1563351   +IF NMISS(
1563352   +   AcceptedCmpTotal ,
1563353   +   Age ,
1563354   +   Frq ,
1563355   +   Income ,
1563356   +   Kidhome ,
1563357   +   Mnt ,
1563358   +   MntFishProducts ,
1563359   +   MntFruits ,
1563360   +   MntGoldProds ,
1563361   +   MntMeatProducts ,
1563362   +   MntSweetProducts ,
1563363   +   MntWines ,
1563364   +   MonthsAsCustomer ,
1563365   +   NumCatalogPurchases ,
1563366   +   NumDealsPurchases ,
1563367   +   NumDistPurchases ,
1563368   +   NumStorePurchases ,
1563369   +   NumWebPurchases ,
1563370   +   NumWebVisitsMonth ,
1563371   +   RFMstat ,
1563372   +   RMntFrq ,
1563373   +   Recency ,
1563374   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1563375   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1563376   +
1563377   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1563378   +END;
MPRINT(EM_DIAGRAM):   END;
1563379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563380   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1563381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563382   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1563383   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1563384   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1563385   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1563386   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1563387   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1563388   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1563389   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1563390   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1563391   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1563392   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1563393   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1563394   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1563395   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1563396   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1563397   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1563398   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1563399   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1563400   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1563401   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1563402   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1563403   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1563404   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1563405   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1563406   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1563407   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1563408   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1563409   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1563410   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1563411   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1563412   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1563413   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1563414   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1563415   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1563416   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1563417   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1563418   +END;
MPRINT(EM_DIAGRAM):   END;
1563419   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1563420   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1563421   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1563422   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1563423   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1563424   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1563425   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1563426   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1563427   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1563428   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1563429   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1563430   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1563431   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1563432   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1563433   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1563434   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1563435   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1563436   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1563437   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1563438   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1563439   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1563440   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1563441   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1563442   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1563443   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1563444   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1563445   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1563446   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1563447   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1563448   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1563449   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1563450   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1563451   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1563452   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1563453   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1563454   +   ELSE S_NumCatalogPurchases
1563455   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1563456   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1563457   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1563458   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1563459   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1563460   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1563461   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1563462   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1563463   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1563464   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1563465   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1563466   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1563467   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1563468   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1563469   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1563470   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1563471   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1563472   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1563473   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1563474   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1563475   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1563476   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1563477   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1563478   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1563479   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1563480   +END;
MPRINT(EM_DIAGRAM):   END;
1563481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563482   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1563483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563485   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1563486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563488   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1563489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563490   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1563491   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1563492   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1563493   +        S_Income  +    -1.07652572934003 * S_Kidhome
1563494   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1563495   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1563496   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1563497   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1563498   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1563499   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1563500   +          +     0.34217069579861 * S_NumDealsPurchases
1563501   +          +      0.7126550962469 * S_NumDistPurchases
1563502   +          +     0.05810128676346 * S_NumStorePurchases
1563503   +          +     -0.1974592461824 * S_NumWebPurchases
1563504   +          +     1.33855646568468 * S_NumWebVisitsMonth
1563505   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1563506   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1563507   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1563508   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1563509   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1563510   +        S_Income  +    -0.00280376715329 * S_Kidhome
1563511   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1563512   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1563513   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1563514   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1563515   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1563516   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1563517   +          +     0.45694604326279 * S_NumDealsPurchases
1563518   +          +      0.1555582457419 * S_NumDistPurchases
1563519   +          +     -0.3340268446813 * S_NumStorePurchases
1563520   +          +    -0.39316217683753 * S_NumWebPurchases
1563521   +          +     0.52431656748667 * S_NumWebVisitsMonth
1563522   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1563523   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1563524   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1563525   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1563526   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1563527   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1563528   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1563529   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1563530   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1563531   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1563532   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1563533   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1563534   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1563535   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1563536   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1563537   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1563538   +          +     0.46676686502466 * Marital_StatusDivorced
1563539   +          +    -1.27760562209616 * Marital_StatusMarried
1563540   +          +     1.31419230639567 * Marital_StatusSingle
1563541   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1563542   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1563543   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1563544   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1563545   +          +     0.07434297903639 * Marital_StatusDivorced
1563546   +          +     0.00294493836325 * Marital_StatusMarried
1563547   +          +    -0.00745595849422 * Marital_StatusSingle
1563548   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1563549   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1563550   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1563551   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1563552   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1563553   +END;
MPRINT(EM_DIAGRAM):   END;
1563554   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1563555   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1563556   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1563557   +END;
MPRINT(EM_DIAGRAM):   END;
1563558   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563559   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1563560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563561   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1563562   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1563563   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1563564   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1563565   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1563566   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1563567   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1563568   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1563569   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1563570   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1563571   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1563572   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1563573   +END;
MPRINT(EM_DIAGRAM):   END;
1563574   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1563575   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1563576   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1563577   +END;
MPRINT(EM_DIAGRAM):   END;
1563578   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1563579   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1563580   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1563581   +END;
MPRINT(EM_DIAGRAM):   END;
1563582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563583   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1563584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1563585   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1563586   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1563587   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1563588   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1563589   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1563590   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1563591   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1563592   +END;
MPRINT(EM_DIAGRAM):   END;
1563593   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1563594   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1563595   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1563596   +drop
1563597   +H11
1563598   +H12
1563599   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1563600   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1563601    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1563602    quit;
1563603    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1563604    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1563605    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1563606    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1563607    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1563608    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563609    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1563610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563611    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563612    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1563613    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563614    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563615    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1563616    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1563617    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1563618    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563619    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1563620    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
The SAS System


1563621    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1563622    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563623    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563624    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1563625    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1563626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563627    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1563628    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1563629    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1563629  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.

1563630    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563631    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1563632    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563633    filename _pref
1563633  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1563634    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1563635    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1563636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1563637   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1563638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1563639   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1563640   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1563641   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1563642    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1563643    quit;
1563644    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1563645    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1563646    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1563647    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1563648    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1563649    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1563650    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1563651    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563653    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1563654    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563656    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1563657    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1563658    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1563659    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563660    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1563661    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1563662    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1563663    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563664    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1563665    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1563666    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1563667    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563668    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563669    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1563670    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1563670  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1563671    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1563672    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1563673    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563674    filename _pref
1563674  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1563675    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1563676    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1563677   +
1563678   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1563679   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1563679  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1563680   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1563681   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1563682   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1563683   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1563684   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1563685    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1563686    quit;
1563687    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1563688    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1563689    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1563690    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1563691    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1563692    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563693    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1563694    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563695    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563696    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1563697    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563698    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1563699    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1563700    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1563701    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1563702    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563703    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1563704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563705    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1563706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563707    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563708    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1563709    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1563710    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563711    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563712    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1563713    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1563713  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1563714    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1563715    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1563716    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563717    filename _pref
1563717  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1563718    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1563719    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1563720   +
1563721   +
1563722   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1563723   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1563724   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1563725   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1563726   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1563727   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1563728   +
1563729   +
1563730   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1563731   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1563732   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1563733   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1563734   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1563735   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1563736   +
1563737   +
1563738   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1563739   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1563740   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1563741   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1563742   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1563743   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1563744   +
1563745   +
1563746   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1563747   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1563748   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1563749   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1563750   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1563751   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1563752   +
1563753   +
1563754   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1563755   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1563756   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1563757   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1563758   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1563759   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1563760   +
1563761   +
1563762   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1563763   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1563764   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1563765   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1563766   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1563767   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1563768   +
1563769   +
1563770   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1563771   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1563772   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1563773   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1563774   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1563775   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1563776   +
1563777   +
1563778   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1563779   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1563780   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1563781   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1563782   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1563783   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1563784   +if
1563785   +_FILTERNORM1 not in ( '.')
1563786   + and
1563787   +_FILTERNORM2 not in ( '.')
1563788   + and
1563789   +_FILTERNORM3 not in ( '.')
1563790   + and
1563791   +_FILTERNORM4 not in ( '.')
1563792   + and
1563793   +_FILTERNORM5 not in ( '.')
1563794   + and
1563795   +_FILTERNORM6 not in ( '.')
1563796   + and
1563797   +_FILTERNORM7 not in ( ' ')
1563798   + and
1563799   +_FILTERNORM8 not in ( ' ')
1563800   +and
1563801   +( Dt_Customer ne .)
1563802   +and ( Income ne . and (Income<=107000))
1563803   +and ( Kidhome ne .)
1563804   +and ( MntFishProducts ne .)
1563805   +and ( MntFruits ne .)
1563806   +and ( MntGoldProds ne .)
1563807   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1563808   +and ( MntSweetProducts ne .)
1563809   +and ( MntWines ne .)
1563810   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1563811   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1563812   +and ( NumStorePurchases ne .)
1563813   +and ( NumWebPurchases ne .)
1563814   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1563815   +and ( Recency ne .)
1563816   +and ( Teenhome ne .)
1563817   +and ( Year_Birth ne .)
1563818   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1563819   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1563820   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1563821   +end;
MPRINT(EM_DIAGRAM):   end;
1563822   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1563823   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1563824    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1563825    quit;
1563826    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1563827    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1563828    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1563829    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1563830    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1563831    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563832    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1563833    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563834    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1563835    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1563836    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563837    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563838    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1563839    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1563840    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1563841    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563842    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1563843    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1563844    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1563845    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563846    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563847    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1563848    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1563849    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1563850    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1563851    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1563852    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1563852  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1563853    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563854    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1563855    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563856    %macro varDept(fcmpdata=,id=);
1563857    %global nobs&id scoreFlag&id;
1563858    %let scoreFlag&id = 0;
1563859    %if &id=1 or ^&fcmpStart %then %do;
1563860    proc sort data=&fcmpdata out=_temp&id nodupkey;
1563861    by NAME;
1563862    where id=&id and LHS in( %let j=1;
1563863    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1563864    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1563865    "&var" %let j = %eval(&j+1);
1563866    %end;
1563867    );
1563868    run;
1563869    %let dsid = %sysfunc(open(_temp&id));
1563870    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1563871    %let dsid = %sysfunc(close(&dsid));
1563872    %if &&nobs&id %then %do;
1563873    %let scoreFlag&id = 1;
1563874    %let fcmpStart = 1;
1563875    %end;
1563876    %else %let fcmpStart = 0;
1563877    %end;
1563878    %else %do;
1563879    proc sort data=&fcmpdata out=_tempid;
1563880    where id=&id;
1563881    by LHS;
1563882    run;
1563883    %let dsid = %sysfunc(open(_tempid));
1563884    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1563885    %let dsid = %sysfunc(close(&dsid));
1563886    %if ^&&nobs&id %then %do;
1563887    proc datasets lib=work nolist;
1563888    delete _tempid;
1563889    run;
1563890    quit;
1563891    %end;
1563892    %else %do;
1563893    data _tempAll;
1563894    set %let j=%eval(&id-1);
1563895    %do x=1 %to &j;
1563896    %if &&nobs&x %then %do;
1563897    _temp&x %end;
1563898    %end;
1563899    ;
1563900    run;
1563901    proc sql;
1563902    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1563902  ! work._tempid p2 where p.name=p2.lhs;
1563903    quit;
1563904    data _temp&id;
1563905    set _temp&id;
1563906    where LHS ne '' and NAME ne '' and Node ne '';
1563907    run;
1563908    proc datasets lib=work nolist;
1563909    delete _tempAll;
1563910    run;
1563911    %let dsid = %sysfunc(open(_temp&id));
1563912    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1563913    %let dsid = %sysfunc(close(&dsid));
1563914    %if ^&&nobs&id %then %do;
1563915    proc datasets lib=work nolist;
1563916    delete _temp&id;
1563917    run;
1563918    quit;
1563919    %end;
1563920    %else %do;
1563921    %let scoreFlag&id = 1;
1563922    data _temp&id;
1563923    set _temp&id;
1563924    where LHS ne NAME and node ne '';
1563925    run;
1563926    %let dsid = %sysfunc(open(_temp&id));
1563927    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1563928    %let dsid = %sysfunc(close(&dsid));
1563929    %if ^&&nobs&id %then %do;
1563930    proc datasets lib=work nolist;
1563931    delete _temp&id;
1563932    run;
1563933    quit;
1563934    %end;
1563935    %else %do;
1563936    proc sort data=_temp&id nodupkey;
1563937    by LHS NAME;
1563938    run;
1563939    %end;
1563940    %end;
1563941    %end;
1563942    %end;
1563943    %mend varDept;
1563944    %macro optCode(outdata=fcmpdata);
1563945    %global fcmpStart;
1563946    %let fcmpStart = 0;
1563947    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1563948    %let NumNodes=9;
1563949    %do k=1 %to &NumNodes;
1563950    %vardept(fcmpdata=&outdata, id=&k);
1563951    %end;
1563952    %mend optCode;
1563953    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1563954    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1563955    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1563956    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1563957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1563958    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1563959    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1563960    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1563961    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563962    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1563963    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1563963  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1563964    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

1563965    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1563966    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1563967    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1563968    filename _pref
1563968  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1563969    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1563970    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1563971   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1563972   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1563973   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1563974   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1563975   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1563976   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1563977   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1563978   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1563979   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1563980   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1563981   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1563982   +LENGTH _WARN_ $4
1563983   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1563984   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1563985   +
1563986   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1563987   +
1563988   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1563989   +
1563990   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1563991   +
1563992   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1563993   +
1563994   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1563995   +
1563996   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1563997   +
1563998   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1563999   +
1564000   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1564001   +
1564002   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1564003   +
1564004   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1564005   +
1564006   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1564007   +
1564008   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1564009   +
1564010   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1564011   +
1564012   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1564013   +
1564014   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1564015   +
1564016   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1564017   +
1564018   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1564019   +
1564020   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1564021   +
1564022   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1564023   +
1564024   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1564025   +
1564026   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1564027   +
1564028   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1564029   +
1564030   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1564031   +
1564032   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1564033   +
1564034   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1564035   +
1564036   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1564037   +
1564038   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1564039   +
1564040   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1564041   +
1564042   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1564043   +
1564044   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1564045   +
1564046   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1564047   +
1564048   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1564049   +
1564050   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1564051   +
1564052   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1564053   +
1564054   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1564055   +
1564056   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1564057   +
1564058   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1564059   +
1564060   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1564061   +
1564062   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1564063   +
1564064   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1564065   +
1564066   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1564067   +
1564068   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1564069   +
1564070   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1564071   +
1564072   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1564073   +
1564074   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1564075   +
1564076   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1564077   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1564078   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1564079   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1564080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1564081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564082   +end;
MPRINT(EM_DIAGRAM):   end;
1564083   +else do;
MPRINT(EM_DIAGRAM):   else do;
1564084   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1564085   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1564086   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1564087   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1564088   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1564089   +   end;
MPRINT(EM_DIAGRAM):   end;
1564090   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1564091   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1564092   +   end;
MPRINT(EM_DIAGRAM):   end;
1564093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1564094   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1564095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1564096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564097   +   end;
MPRINT(EM_DIAGRAM):   end;
1564098   +end;
MPRINT(EM_DIAGRAM):   end;
1564099   +
1564100   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1564101   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1564102   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1564103   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1564104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1564105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564106   +end;
MPRINT(EM_DIAGRAM):   end;
1564107   +else do;
MPRINT(EM_DIAGRAM):   else do;
1564108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1564109   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1564110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1564111   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1564112   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1564113   +   end;
MPRINT(EM_DIAGRAM):   end;
1564114   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1564115   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1564116   +   end;
MPRINT(EM_DIAGRAM):   end;
1564117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1564118   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1564119   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1564120   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564121   +   end;
MPRINT(EM_DIAGRAM):   end;
1564122   +end;
MPRINT(EM_DIAGRAM):   end;
1564123   +
1564124   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1564125   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1564126   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1564127   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1564128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1564129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564130   +end;
MPRINT(EM_DIAGRAM):   end;
1564131   +else do;
MPRINT(EM_DIAGRAM):   else do;
1564132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1564133   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1564134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1564135   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1564136   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1564137   +   end;
MPRINT(EM_DIAGRAM):   end;
1564138   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1564139   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1564140   +   end;
MPRINT(EM_DIAGRAM):   end;
1564141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1564142   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1564143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1564144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564145   +   end;
MPRINT(EM_DIAGRAM):   end;
1564146   +end;
MPRINT(EM_DIAGRAM):   end;
1564147   +
1564148   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1564149   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1564150   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1564151   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1564152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1564153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564154   +end;
MPRINT(EM_DIAGRAM):   end;
1564155   +else do;
MPRINT(EM_DIAGRAM):   else do;
1564156   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1564157   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1564158   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1564159   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1564160   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1564161   +   end;
MPRINT(EM_DIAGRAM):   end;
1564162   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1564163   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1564164   +   end;
MPRINT(EM_DIAGRAM):   end;
1564165   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1564166   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1564167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1564168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564169   +   end;
MPRINT(EM_DIAGRAM):   end;
1564170   +end;
MPRINT(EM_DIAGRAM):   end;
1564171   +
1564172   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1564173   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1564174   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1564175   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1564176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1564177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564178   +end;
MPRINT(EM_DIAGRAM):   end;
1564179   +else do;
MPRINT(EM_DIAGRAM):   else do;
1564180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1564181   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1564182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1564183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1564184   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1564185   +   end;
MPRINT(EM_DIAGRAM):   end;
1564186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1564187   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1564188   +   end;
MPRINT(EM_DIAGRAM):   end;
1564189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1564190   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1564191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1564192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564193   +   end;
MPRINT(EM_DIAGRAM):   end;
1564194   +end;
MPRINT(EM_DIAGRAM):   end;
1564195   +
1564196   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1564197   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1564198   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1564199   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1564200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1564201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564202   +end;
MPRINT(EM_DIAGRAM):   end;
1564203   +else do;
MPRINT(EM_DIAGRAM):   else do;
1564204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1564205   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1564206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1564207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1564208   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1564209   +   end;
MPRINT(EM_DIAGRAM):   end;
1564210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1564211   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1564212   +   end;
MPRINT(EM_DIAGRAM):   end;
1564213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1564214   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1564215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1564216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564217   +   end;
MPRINT(EM_DIAGRAM):   end;
1564218   +end;
MPRINT(EM_DIAGRAM):   end;
1564219   +
1564220   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1564221   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1564222   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1564223   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1564224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1564225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564226   +end;
MPRINT(EM_DIAGRAM):   end;
1564227   +else do;
MPRINT(EM_DIAGRAM):   else do;
1564228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1564229   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1564230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1564231   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1564232   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1564233   +   end;
MPRINT(EM_DIAGRAM):   end;
1564234   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1564235   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1564236   +   end;
MPRINT(EM_DIAGRAM):   end;
1564237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1564238   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1564239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1564240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564241   +   end;
MPRINT(EM_DIAGRAM):   end;
1564242   +end;
MPRINT(EM_DIAGRAM):   end;
1564243   +
1564244   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1564245   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1564246   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1564247   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1564248   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1564249   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1564250   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1564251   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1564252   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1564253   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1564254   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1564255   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1564256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1564257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564258   +end;
MPRINT(EM_DIAGRAM):   end;
1564259   +else do;
MPRINT(EM_DIAGRAM):   else do;
1564260   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1564261   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1564262   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1564263   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1564264   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1564265   +   end;
MPRINT(EM_DIAGRAM):   end;
1564266   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1564267   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1564268   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1564269   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1564270   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1564271   +   end;
MPRINT(EM_DIAGRAM):   end;
1564272   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1564273   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1564274   +   end;
MPRINT(EM_DIAGRAM):   end;
1564275   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1564276   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1564277   +   end;
MPRINT(EM_DIAGRAM):   end;
1564278   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1564279   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1564280   +   end;
MPRINT(EM_DIAGRAM):   end;
1564281   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1564282   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1564283   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1564284   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1564285   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1564286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1564287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564288   +   end;
MPRINT(EM_DIAGRAM):   end;
1564289   +end;
MPRINT(EM_DIAGRAM):   end;
1564290   +
1564291   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1564292   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1564293   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1564294   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1564295   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1564296   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1564297   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1564298   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1564299   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1564300   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1564301   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1564302   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1564303   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1564304   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1564305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564306   +end;
MPRINT(EM_DIAGRAM):   end;
1564307   +else do;
MPRINT(EM_DIAGRAM):   else do;
1564308   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1564309   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1564310   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1564311   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1564312   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1564313   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1564314   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1564315   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1564316   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1564317   +         end;
MPRINT(EM_DIAGRAM):   end;
1564318   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1564319   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1564320   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1564321   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1564322   +            end;
MPRINT(EM_DIAGRAM):   end;
1564323   +         end;
MPRINT(EM_DIAGRAM):   end;
1564324   +      end;
MPRINT(EM_DIAGRAM):   end;
1564325   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1564326   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1564327   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1564328   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1564329   +         end;
MPRINT(EM_DIAGRAM):   end;
1564330   +      end;
MPRINT(EM_DIAGRAM):   end;
1564331   +   end;
MPRINT(EM_DIAGRAM):   end;
1564332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1564333   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1564334   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1564335   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1564336   +      end;
MPRINT(EM_DIAGRAM):   end;
1564337   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1564338   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1564339   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1564340   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1564341   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1564342   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1564343   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1564344   +         end;
MPRINT(EM_DIAGRAM):   end;
1564345   +      end;
MPRINT(EM_DIAGRAM):   end;
1564346   +   end;
MPRINT(EM_DIAGRAM):   end;
1564347   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1564348   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1564349   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1564350   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1564351   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1564352   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1564353   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564354   +   end;
MPRINT(EM_DIAGRAM):   end;
1564355   +end;
MPRINT(EM_DIAGRAM):   end;
1564356   +
1564357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564358   +*** Checking missing input Interval
1564359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1564360   +
1564361   +IF NMISS(
1564362   +   AcceptedCmpTotal ,
1564363   +   Age ,
1564364   +   Frq ,
1564365   +   Income ,
1564366   +   Kidhome ,
1564367   +   Mnt ,
1564368   +   MntFishProducts ,
1564369   +   MntFruits ,
1564370   +   MntGoldProds ,
1564371   +   MntMeatProducts ,
1564372   +   MntSweetProducts ,
1564373   +   MntWines ,
1564374   +   MonthsAsCustomer ,
1564375   +   NumCatalogPurchases ,
1564376   +   NumDealsPurchases ,
1564377   +   NumDistPurchases ,
1564378   +   NumStorePurchases ,
1564379   +   NumWebPurchases ,
1564380   +   NumWebVisitsMonth ,
1564381   +   RFMstat ,
1564382   +   RMntFrq ,
1564383   +   Recency ,
1564384   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1564385   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1564386   +
1564387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1564388   +END;
MPRINT(EM_DIAGRAM):   END;
1564389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564390   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1564391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564392   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1564393   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1564394   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1564395   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1564396   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1564397   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1564398   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1564399   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1564400   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1564401   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1564402   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1564403   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1564404   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1564405   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1564406   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1564407   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1564408   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1564409   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1564410   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1564411   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1564412   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1564413   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1564414   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1564415   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1564416   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1564417   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1564418   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1564419   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1564420   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1564421   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1564422   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1564423   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1564424   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1564425   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1564426   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1564427   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1564428   +END;
MPRINT(EM_DIAGRAM):   END;
1564429   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1564430   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1564431   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1564432   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1564433   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1564434   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1564435   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1564436   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1564437   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1564438   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1564439   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1564440   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1564441   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1564442   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1564443   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1564444   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1564445   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1564446   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1564447   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1564448   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1564449   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1564450   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1564451   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1564452   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1564453   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1564454   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1564455   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1564456   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1564457   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1564458   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1564459   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1564460   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1564461   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1564462   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1564463   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1564464   +   ELSE S_NumCatalogPurchases
1564465   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1564466   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1564467   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1564468   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1564469   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1564470   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1564471   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1564472   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1564473   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1564474   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1564475   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1564476   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1564477   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1564478   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1564479   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1564480   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1564481   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1564482   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1564483   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1564484   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1564485   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1564486   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1564487   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1564488   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1564489   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1564490   +END;
MPRINT(EM_DIAGRAM):   END;
1564491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564492   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1564493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564495   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1564496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564498   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1564499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564500   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1564501   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1564502   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1564503   +        S_Income  +     0.48614351216065 * S_Kidhome
1564504   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1564505   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1564506   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1564507   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1564508   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1564509   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1564510   +          +     1.38069708066212 * S_NumDealsPurchases
1564511   +          +     0.18758966496994 * S_NumDistPurchases
1564512   +          +    -0.65306017966122 * S_NumStorePurchases
1564513   +          +    -0.65780154318734 * S_NumWebPurchases
1564514   +          +     1.42347048260615 * S_NumWebVisitsMonth
1564515   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1564516   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1564517   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1564518   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1564519   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1564520   +        S_Income  +     0.50072567449363 * S_Kidhome
1564521   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1564522   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1564523   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1564524   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1564525   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1564526   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1564527   +          +    -0.75291043162386 * S_NumDealsPurchases
1564528   +          +    -0.06780631818187 * S_NumDistPurchases
1564529   +          +     1.03453599373919 * S_NumStorePurchases
1564530   +          +     1.02348906006707 * S_NumWebPurchases
1564531   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1564532   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1564533   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1564534   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1564535   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1564536   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1564537   +        S_Income  +     0.57496607656903 * S_Kidhome
1564538   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1564539   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1564540   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1564541   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1564542   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1564543   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1564544   +          +     0.13431497076806 * S_NumDealsPurchases
1564545   +          +     -0.4516722514278 * S_NumDistPurchases
1564546   +          +     0.08636745161008 * S_NumStorePurchases
1564547   +          +    -0.01091843489919 * S_NumWebPurchases
1564548   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1564549   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1564550   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1564551   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1564552   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1564553   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1564554   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1564555   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1564556   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1564557   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1564558   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1564559   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1564560   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1564561   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1564562   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1564563   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1564564   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1564565   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1564566   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1564567   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1564568   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1564569   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1564570   +          +     0.09616912826117 * Marital_StatusDivorced
1564571   +          +     0.15377557778014 * Marital_StatusMarried
1564572   +          +    -0.20686296055741 * Marital_StatusSingle
1564573   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1564574   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1564575   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1564576   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1564577   +          +    -0.18362421441913 * Marital_StatusDivorced
1564578   +          +     0.14861660317702 * Marital_StatusMarried
1564579   +          +    -0.51051982152027 * Marital_StatusSingle
1564580   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1564581   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1564582   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1564583   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1564584   +          +    -0.65088528624708 * Marital_StatusDivorced
1564585   +          +     1.85383531288095 * Marital_StatusMarried
1564586   +          +    -1.45031245605509 * Marital_StatusSingle
1564587   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1564588   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1564589   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1564590   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1564591   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1564592   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1564593   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1564594   +END;
MPRINT(EM_DIAGRAM):   END;
1564595   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1564596   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1564597   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1564598   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1564599   +END;
MPRINT(EM_DIAGRAM):   END;
1564600   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564601   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1564602   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564603   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1564604   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1564605   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1564606   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1564607   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1564608   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1564609   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1564610   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1564611   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1564612   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1564613   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1564614   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1564615   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1564616   +END;
MPRINT(EM_DIAGRAM):   END;
1564617   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1564618   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1564619   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1564620   +END;
MPRINT(EM_DIAGRAM):   END;
1564621   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1564622   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1564623   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1564624   +END;
MPRINT(EM_DIAGRAM):   END;
1564625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564626   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1564627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1564628   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1564629   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1564630   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1564631   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1564632   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1564633   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1564634   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1564635   +END;
MPRINT(EM_DIAGRAM):   END;
1564636   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1564637   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1564638   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1564639   +drop
1564640   +H11
1564641   +H12
1564642   +H13
1564643   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1564644   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1564645    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1564646    quit;
1564647    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1564648    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1564649    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1564650    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1564651    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1564652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1564653    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1564654    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564656    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1564657    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564658    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1564659    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1564660    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1564661    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1564662    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564663    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1564664    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1564665    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1564666    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564668    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1564669    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1564670    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564671    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1564672    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1564673    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1564673  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

1564674    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564675    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1564676    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564677    filename _pref
1564677  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1564678    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1564679    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1564680   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1564681   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1564682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1564683   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1564684   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1564685   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1564686    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1564687    quit;
1564688    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1564689    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1564690    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1564691    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1564692    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1564693    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564694    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1564695    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564696    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564697    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1564698    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564699    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564700    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1564701    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1564702    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1564703    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1564704    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1564705    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1564706    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1564707    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564708    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1564709    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1564710    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1564711    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564712    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564713    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1564714    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1564714  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1564715    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564716    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1564717    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1564718    filename _pref
1564718  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1564719    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1564720    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1564721   +
1564722   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1564723   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1564723  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1564724   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1564725   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1564726   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1564727   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1564728   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1564729    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1564730    quit;
1564731    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1564732    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1564733    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1564734    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1564735    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1564736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1564737    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1564738    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564740    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1564741    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564742    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564743    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1564744    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1564745    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1564746    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564747    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1564748    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564749    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1564750    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564751    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1564752    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1564753    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1564754    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564755    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564756    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1564757    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1564757  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1564758    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564759    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1564760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1564761    filename _pref
1564761  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1564762    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1564763    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1564764   +
1564765   +
1564766   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1564767   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1564768   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1564769   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1564770   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1564771   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1564772   +
1564773   +
1564774   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1564775   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1564776   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1564777   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1564778   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1564779   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1564780   +
1564781   +
1564782   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1564783   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1564784   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1564785   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1564786   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1564787   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1564788   +
1564789   +
1564790   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1564791   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1564792   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1564793   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1564794   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1564795   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1564796   +
1564797   +
1564798   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1564799   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1564800   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1564801   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1564802   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1564803   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1564804   +
1564805   +
1564806   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1564807   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1564808   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1564809   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1564810   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1564811   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1564812   +
1564813   +
1564814   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1564815   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1564816   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1564817   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1564818   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1564819   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1564820   +
1564821   +
1564822   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1564823   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1564824   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1564825   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1564826   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1564827   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1564828   +if
1564829   +_FILTERNORM1 not in ( '.')
1564830   + and
1564831   +_FILTERNORM2 not in ( '.')
1564832   + and
1564833   +_FILTERNORM3 not in ( '.')
1564834   + and
1564835   +_FILTERNORM4 not in ( '.')
1564836   + and
1564837   +_FILTERNORM5 not in ( '.')
1564838   + and
1564839   +_FILTERNORM6 not in ( '.')
1564840   + and
1564841   +_FILTERNORM7 not in ( ' ')
1564842   + and
1564843   +_FILTERNORM8 not in ( ' ')
1564844   +and
1564845   +( Dt_Customer ne .)
1564846   +and ( Income ne . and (Income<=107000))
1564847   +and ( Kidhome ne .)
1564848   +and ( MntFishProducts ne .)
1564849   +and ( MntFruits ne .)
1564850   +and ( MntGoldProds ne .)
1564851   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1564852   +and ( MntSweetProducts ne .)
1564853   +and ( MntWines ne .)
1564854   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1564855   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1564856   +and ( NumStorePurchases ne .)
1564857   +and ( NumWebPurchases ne .)
1564858   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1564859   +and ( Recency ne .)
1564860   +and ( Teenhome ne .)
1564861   +and ( Year_Birth ne .)
1564862   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1564863   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1564864   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1564865   +end;
MPRINT(EM_DIAGRAM):   end;
1564866   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1564867   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1564868    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1564869    quit;
1564870    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1564871    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1564872    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1564873    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1564874    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1564875    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564876    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1564877    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564878    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564879    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1564880    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564881    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1564882    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1564883    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1564884    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1564885    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564886    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1564887    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1564888    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1564889    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564891    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1564892    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1564893    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1564894    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564895    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1564896    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1564896  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1564897    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564898    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1564899    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1564900    %macro varDept(fcmpdata=,id=);
1564901    %global nobs&id scoreFlag&id;
1564902    %let scoreFlag&id = 0;
1564903    %if &id=1 or ^&fcmpStart %then %do;
1564904    proc sort data=&fcmpdata out=_temp&id nodupkey;
1564905    by NAME;
1564906    where id=&id and LHS in( %let j=1;
1564907    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1564908    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1564909    "&var" %let j = %eval(&j+1);
1564910    %end;
1564911    );
1564912    run;
1564913    %let dsid = %sysfunc(open(_temp&id));
1564914    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1564915    %let dsid = %sysfunc(close(&dsid));
1564916    %if &&nobs&id %then %do;
1564917    %let scoreFlag&id = 1;
1564918    %let fcmpStart = 1;
1564919    %end;
1564920    %else %let fcmpStart = 0;
1564921    %end;
1564922    %else %do;
1564923    proc sort data=&fcmpdata out=_tempid;
1564924    where id=&id;
1564925    by LHS;
1564926    run;
1564927    %let dsid = %sysfunc(open(_tempid));
1564928    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1564929    %let dsid = %sysfunc(close(&dsid));
1564930    %if ^&&nobs&id %then %do;
1564931    proc datasets lib=work nolist;
1564932    delete _tempid;
1564933    run;
1564934    quit;
1564935    %end;
1564936    %else %do;
1564937    data _tempAll;
1564938    set %let j=%eval(&id-1);
1564939    %do x=1 %to &j;
1564940    %if &&nobs&x %then %do;
1564941    _temp&x %end;
1564942    %end;
1564943    ;
1564944    run;
1564945    proc sql;
1564946    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1564946  ! work._tempid p2 where p.name=p2.lhs;
1564947    quit;
1564948    data _temp&id;
1564949    set _temp&id;
1564950    where LHS ne '' and NAME ne '' and Node ne '';
1564951    run;
1564952    proc datasets lib=work nolist;
1564953    delete _tempAll;
1564954    run;
1564955    %let dsid = %sysfunc(open(_temp&id));
1564956    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1564957    %let dsid = %sysfunc(close(&dsid));
1564958    %if ^&&nobs&id %then %do;
1564959    proc datasets lib=work nolist;
1564960    delete _temp&id;
1564961    run;
1564962    quit;
1564963    %end;
1564964    %else %do;
1564965    %let scoreFlag&id = 1;
1564966    data _temp&id;
1564967    set _temp&id;
1564968    where LHS ne NAME and node ne '';
1564969    run;
1564970    %let dsid = %sysfunc(open(_temp&id));
1564971    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1564972    %let dsid = %sysfunc(close(&dsid));
1564973    %if ^&&nobs&id %then %do;
1564974    proc datasets lib=work nolist;
1564975    delete _temp&id;
1564976    run;
1564977    quit;
1564978    %end;
1564979    %else %do;
1564980    proc sort data=_temp&id nodupkey;
1564981    by LHS NAME;
1564982    run;
1564983    %end;
1564984    %end;
1564985    %end;
1564986    %end;
1564987    %mend varDept;
1564988    %macro optCode(outdata=fcmpdata);
1564989    %global fcmpStart;
1564990    %let fcmpStart = 0;
1564991    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1564992    %let NumNodes=9;
1564993    %do k=1 %to &NumNodes;
1564994    %vardept(fcmpdata=&outdata, id=&k);
1564995    %end;
1564996    %mend optCode;
1564997    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1564998    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1564999    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1565000    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1565001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565002    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1565003    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1565004    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1565005    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565006    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1565007    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1565007  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1565008    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565009    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1565010    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1565011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565012    filename _pref
1565012  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1565013    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1565014    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1565015   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1565016   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1565017   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1565018   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1565019   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1565020   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1565021   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1565022   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1565023   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1565024   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1565025   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1565026   +LENGTH _WARN_ $4
1565027   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1565028   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1565029   +
1565030   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1565031   +
1565032   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1565033   +
1565034   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1565035   +
1565036   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1565037   +
1565038   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1565039   +
1565040   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1565041   +
1565042   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1565043   +
1565044   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1565045   +
1565046   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1565047   +
1565048   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1565049   +
1565050   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1565051   +
1565052   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1565053   +
1565054   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1565055   +
1565056   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1565057   +
1565058   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1565059   +
1565060   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1565061   +
1565062   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1565063   +
1565064   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1565065   +
1565066   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1565067   +
1565068   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1565069   +
1565070   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1565071   +
1565072   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1565073   +
1565074   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1565075   +
1565076   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1565077   +
1565078   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1565079   +
1565080   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1565081   +
1565082   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1565083   +
1565084   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1565085   +
1565086   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1565087   +
1565088   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1565089   +
1565090   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1565091   +
1565092   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1565093   +
1565094   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1565095   +
1565096   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1565097   +
1565098   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1565099   +
1565100   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1565101   +
1565102   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1565103   +
1565104   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1565105   +
1565106   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1565107   +
1565108   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1565109   +
1565110   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1565111   +
1565112   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1565113   +
1565114   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1565115   +
1565116   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1565117   +
1565118   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1565119   +
1565120   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1565121   +
1565122   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1565123   +
1565124   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1565125   +
1565126   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1565127   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1565128   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1565129   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1565130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1565131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565132   +end;
MPRINT(EM_DIAGRAM):   end;
1565133   +else do;
MPRINT(EM_DIAGRAM):   else do;
1565134   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1565135   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1565136   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1565137   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1565138   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1565139   +   end;
MPRINT(EM_DIAGRAM):   end;
1565140   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1565141   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1565142   +   end;
MPRINT(EM_DIAGRAM):   end;
1565143   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1565144   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1565145   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1565146   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565147   +   end;
MPRINT(EM_DIAGRAM):   end;
1565148   +end;
MPRINT(EM_DIAGRAM):   end;
1565149   +
1565150   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1565151   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1565152   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1565153   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1565154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1565155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565156   +end;
MPRINT(EM_DIAGRAM):   end;
1565157   +else do;
MPRINT(EM_DIAGRAM):   else do;
1565158   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1565159   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1565160   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1565161   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1565162   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1565163   +   end;
MPRINT(EM_DIAGRAM):   end;
1565164   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1565165   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1565166   +   end;
MPRINT(EM_DIAGRAM):   end;
1565167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1565168   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1565169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1565170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565171   +   end;
MPRINT(EM_DIAGRAM):   end;
1565172   +end;
MPRINT(EM_DIAGRAM):   end;
1565173   +
1565174   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1565175   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1565176   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1565177   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1565178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1565179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565180   +end;
MPRINT(EM_DIAGRAM):   end;
1565181   +else do;
MPRINT(EM_DIAGRAM):   else do;
1565182   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1565183   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1565184   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1565185   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1565186   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1565187   +   end;
MPRINT(EM_DIAGRAM):   end;
1565188   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1565189   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1565190   +   end;
MPRINT(EM_DIAGRAM):   end;
1565191   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1565192   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1565193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1565194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565195   +   end;
MPRINT(EM_DIAGRAM):   end;
1565196   +end;
MPRINT(EM_DIAGRAM):   end;
1565197   +
1565198   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1565199   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1565200   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1565201   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1565202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1565203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565204   +end;
MPRINT(EM_DIAGRAM):   end;
1565205   +else do;
MPRINT(EM_DIAGRAM):   else do;
1565206   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1565207   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1565208   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1565209   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1565210   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1565211   +   end;
MPRINT(EM_DIAGRAM):   end;
1565212   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1565213   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1565214   +   end;
MPRINT(EM_DIAGRAM):   end;
1565215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1565216   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1565217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1565218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565219   +   end;
MPRINT(EM_DIAGRAM):   end;
1565220   +end;
MPRINT(EM_DIAGRAM):   end;
1565221   +
1565222   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1565223   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1565224   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1565225   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1565226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1565227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565228   +end;
MPRINT(EM_DIAGRAM):   end;
1565229   +else do;
MPRINT(EM_DIAGRAM):   else do;
1565230   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1565231   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1565232   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1565233   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1565234   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1565235   +   end;
MPRINT(EM_DIAGRAM):   end;
1565236   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1565237   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1565238   +   end;
MPRINT(EM_DIAGRAM):   end;
1565239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1565240   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1565241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1565242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565243   +   end;
MPRINT(EM_DIAGRAM):   end;
1565244   +end;
MPRINT(EM_DIAGRAM):   end;
1565245   +
1565246   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1565247   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1565248   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1565249   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1565250   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1565251   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565252   +end;
MPRINT(EM_DIAGRAM):   end;
1565253   +else do;
MPRINT(EM_DIAGRAM):   else do;
1565254   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1565255   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1565256   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1565257   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1565258   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1565259   +   end;
MPRINT(EM_DIAGRAM):   end;
1565260   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1565261   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1565262   +   end;
MPRINT(EM_DIAGRAM):   end;
1565263   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1565264   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1565265   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1565266   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565267   +   end;
MPRINT(EM_DIAGRAM):   end;
1565268   +end;
MPRINT(EM_DIAGRAM):   end;
1565269   +
1565270   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1565271   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1565272   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1565273   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1565274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1565275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565276   +end;
MPRINT(EM_DIAGRAM):   end;
1565277   +else do;
MPRINT(EM_DIAGRAM):   else do;
1565278   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1565279   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1565280   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1565281   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1565282   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1565283   +   end;
MPRINT(EM_DIAGRAM):   end;
1565284   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1565285   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1565286   +   end;
MPRINT(EM_DIAGRAM):   end;
1565287   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1565288   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1565289   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1565290   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565291   +   end;
MPRINT(EM_DIAGRAM):   end;
1565292   +end;
MPRINT(EM_DIAGRAM):   end;
1565293   +
1565294   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1565295   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1565296   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1565297   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1565298   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1565299   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1565300   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1565301   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1565302   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1565303   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1565304   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1565305   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1565306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1565307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565308   +end;
MPRINT(EM_DIAGRAM):   end;
1565309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1565310   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1565311   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1565312   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1565313   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1565314   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1565315   +   end;
MPRINT(EM_DIAGRAM):   end;
1565316   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1565317   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1565318   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1565319   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1565320   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1565321   +   end;
MPRINT(EM_DIAGRAM):   end;
1565322   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1565323   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1565324   +   end;
MPRINT(EM_DIAGRAM):   end;
1565325   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1565326   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1565327   +   end;
MPRINT(EM_DIAGRAM):   end;
1565328   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1565329   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1565330   +   end;
MPRINT(EM_DIAGRAM):   end;
1565331   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1565332   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1565333   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1565334   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1565335   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1565336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1565337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565338   +   end;
MPRINT(EM_DIAGRAM):   end;
1565339   +end;
MPRINT(EM_DIAGRAM):   end;
1565340   +
1565341   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1565342   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1565343   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1565344   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1565345   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1565346   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1565347   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1565348   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1565349   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1565350   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1565351   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1565352   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1565353   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1565354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1565355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565356   +end;
MPRINT(EM_DIAGRAM):   end;
1565357   +else do;
MPRINT(EM_DIAGRAM):   else do;
1565358   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1565359   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1565360   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1565361   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1565362   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1565363   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1565364   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1565365   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1565366   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1565367   +         end;
MPRINT(EM_DIAGRAM):   end;
1565368   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1565369   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1565370   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1565371   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1565372   +            end;
MPRINT(EM_DIAGRAM):   end;
1565373   +         end;
MPRINT(EM_DIAGRAM):   end;
1565374   +      end;
MPRINT(EM_DIAGRAM):   end;
1565375   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1565376   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1565377   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1565378   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1565379   +         end;
MPRINT(EM_DIAGRAM):   end;
1565380   +      end;
MPRINT(EM_DIAGRAM):   end;
1565381   +   end;
MPRINT(EM_DIAGRAM):   end;
1565382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1565383   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1565384   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1565385   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1565386   +      end;
MPRINT(EM_DIAGRAM):   end;
1565387   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1565388   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1565389   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1565390   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1565391   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1565392   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1565393   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1565394   +         end;
MPRINT(EM_DIAGRAM):   end;
1565395   +      end;
MPRINT(EM_DIAGRAM):   end;
1565396   +   end;
MPRINT(EM_DIAGRAM):   end;
1565397   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1565398   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1565399   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1565400   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1565401   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1565402   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1565403   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565404   +   end;
MPRINT(EM_DIAGRAM):   end;
1565405   +end;
MPRINT(EM_DIAGRAM):   end;
1565406   +
1565407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565408   +*** Checking missing input Interval
1565409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1565410   +
1565411   +IF NMISS(
1565412   +   AcceptedCmpTotal ,
1565413   +   Age ,
1565414   +   Frq ,
1565415   +   Income ,
1565416   +   Kidhome ,
1565417   +   Mnt ,
1565418   +   MntFishProducts ,
1565419   +   MntFruits ,
1565420   +   MntGoldProds ,
1565421   +   MntMeatProducts ,
1565422   +   MntSweetProducts ,
1565423   +   MntWines ,
1565424   +   MonthsAsCustomer ,
1565425   +   NumCatalogPurchases ,
1565426   +   NumDealsPurchases ,
1565427   +   NumDistPurchases ,
1565428   +   NumStorePurchases ,
1565429   +   NumWebPurchases ,
1565430   +   NumWebVisitsMonth ,
1565431   +   RFMstat ,
1565432   +   RMntFrq ,
1565433   +   Recency ,
1565434   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1565435   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1565436   +
1565437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1565438   +END;
MPRINT(EM_DIAGRAM):   END;
1565439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565440   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1565441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565442   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1565443   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1565444   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1565445   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1565446   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1565447   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1565448   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1565449   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1565450   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1565451   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1565452   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1565453   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1565454   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1565455   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1565456   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1565457   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1565458   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1565459   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1565460   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1565461   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1565462   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1565463   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1565464   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1565465   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1565466   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1565467   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1565468   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1565469   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1565470   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1565471   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1565472   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1565473   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1565474   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1565475   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1565476   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1565477   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1565478   +END;
MPRINT(EM_DIAGRAM):   END;
1565479   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1565480   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1565481   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1565482   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1565483   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1565484   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1565485   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1565486   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1565487   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1565488   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1565489   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1565490   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1565491   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1565492   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1565493   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1565494   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1565495   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1565496   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1565497   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1565498   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1565499   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1565500   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1565501   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1565502   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1565503   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1565504   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1565505   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1565506   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1565507   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1565508   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1565509   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1565510   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1565511   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1565512   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1565513   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1565514   +   ELSE S_NumCatalogPurchases
1565515   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1565516   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1565517   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1565518   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1565519   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1565520   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1565521   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1565522   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1565523   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1565524   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1565525   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1565526   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1565527   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1565528   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1565529   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1565530   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1565531   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1565532   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1565533   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1565534   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1565535   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1565536   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1565537   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1565538   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1565539   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1565540   +END;
MPRINT(EM_DIAGRAM):   END;
1565541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565542   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1565543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565545   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1565546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565548   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1565549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565550   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1565551   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1565552   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1565553   +        S_Income  +     -0.0761121347886 * S_Kidhome
1565554   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1565555   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1565556   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1565557   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1565558   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1565559   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1565560   +          +     0.83893684194413 * S_NumDealsPurchases
1565561   +          +     0.23391006875291 * S_NumDistPurchases
1565562   +          +    -0.63370705462074 * S_NumStorePurchases
1565563   +          +     -0.9137408014067 * S_NumWebPurchases
1565564   +          +     0.89109351479441 * S_NumWebVisitsMonth
1565565   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1565566   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1565567   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1565568   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1565569   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1565570   +        S_Income  +    -0.43909782819329 * S_Kidhome
1565571   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1565572   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1565573   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1565574   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1565575   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1565576   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1565577   +          +      0.2218973353638 * S_NumDealsPurchases
1565578   +          +      0.0062360950528 * S_NumDistPurchases
1565579   +          +    -0.57621747951002 * S_NumStorePurchases
1565580   +          +    -0.33564890905657 * S_NumWebPurchases
1565581   +          +     0.82482365540301 * S_NumWebVisitsMonth
1565582   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1565583   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1565584   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1565585   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1565586   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1565587   +        S_Income  +    -0.03572236011846 * S_Kidhome
1565588   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1565589   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1565590   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1565591   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1565592   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1565593   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1565594   +          +      -0.174147250062 * S_NumDealsPurchases
1565595   +          +    -0.22921682388864 * S_NumDistPurchases
1565596   +          +     0.41526854684299 * S_NumStorePurchases
1565597   +          +    -0.27675565493519 * S_NumWebPurchases
1565598   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1565599   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1565600   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1565601   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1565602   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1565603   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1565604   +        S_Income  +    -0.04788369327547 * S_Kidhome
1565605   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1565606   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1565607   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1565608   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1565609   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1565610   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1565611   +          +    -0.46022430102423 * S_NumDealsPurchases
1565612   +          +     0.15831339342044 * S_NumDistPurchases
1565613   +          +     0.22480465173719 * S_NumStorePurchases
1565614   +          +     0.44798923484609 * S_NumWebPurchases
1565615   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1565616   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1565617   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1565618   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1565619   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1565620   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1565621   +        S_Income  +     0.53994304261534 * S_Kidhome
1565622   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1565623   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1565624   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1565625   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1565626   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1565627   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1565628   +          +     0.03650267472167 * S_NumDealsPurchases
1565629   +          +    -0.03322709524939 * S_NumDistPurchases
1565630   +          +     -0.0022226424472 * S_NumStorePurchases
1565631   +          +    -0.10131236740674 * S_NumWebPurchases
1565632   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1565633   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1565634   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1565635   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1565636   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1565637   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1565638   +        S_Income  +    -0.52576099429582 * S_Kidhome
1565639   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1565640   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1565641   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1565642   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1565643   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1565644   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1565645   +          +    -0.50209914729324 * S_NumDealsPurchases
1565646   +          +    -0.46217244513696 * S_NumDistPurchases
1565647   +          +      0.1832648560248 * S_NumStorePurchases
1565648   +          +     0.02866153257072 * S_NumWebPurchases
1565649   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1565650   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1565651   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1565652   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1565653   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1565654   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1565655   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1565656   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1565657   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1565658   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1565659   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1565660   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1565661   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1565662   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1565663   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1565664   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1565665   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1565666   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1565667   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1565668   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1565669   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1565670   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1565671   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1565672   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1565673   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1565674   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1565675   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1565676   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1565677   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1565678   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1565679   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1565680   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1565681   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1565682   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1565683   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1565684   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1565685   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1565686   +          +     0.13815069071511 * Marital_StatusDivorced
1565687   +          +      0.0732913060929 * Marital_StatusMarried
1565688   +          +    -0.22858418468746 * Marital_StatusSingle
1565689   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1565690   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1565691   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1565692   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1565693   +          +     0.32909808396509 * Marital_StatusDivorced
1565694   +          +    -0.50160173579004 * Marital_StatusMarried
1565695   +          +     0.57207102211224 * Marital_StatusSingle
1565696   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1565697   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1565698   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1565699   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1565700   +          +    -0.07154493730107 * Marital_StatusDivorced
1565701   +          +     0.29126100051603 * Marital_StatusMarried
1565702   +          +    -0.06936325857004 * Marital_StatusSingle
1565703   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1565704   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1565705   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1565706   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1565707   +          +    -0.05004640872388 * Marital_StatusDivorced
1565708   +          +     0.22197974032974 * Marital_StatusMarried
1565709   +          +    -0.33931504637453 * Marital_StatusSingle
1565710   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1565711   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1565712   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1565713   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1565714   +          +    -0.07748874669478 * Marital_StatusDivorced
1565715   +          +     1.05442281159109 * Marital_StatusMarried
1565716   +          +    -0.67190984038867 * Marital_StatusSingle
1565717   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1565718   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1565719   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1565720   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1565721   +          +    -0.20478208715114 * Marital_StatusDivorced
1565722   +          +    -0.40186383707642 * Marital_StatusMarried
1565723   +          +     0.43474841662774 * Marital_StatusSingle
1565724   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1565725   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1565726   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1565727   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1565728   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1565729   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1565730   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1565731   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1565732   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1565733   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1565734   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1565735   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1565736   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1565737   +END;
MPRINT(EM_DIAGRAM):   END;
1565738   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1565739   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1565740   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1565741   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1565742   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1565743   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1565744   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1565745   +END;
MPRINT(EM_DIAGRAM):   END;
1565746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565747   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1565748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565749   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1565750   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1565751   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1565752   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1565753   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1565754   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1565755   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1565756   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1565757   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1565758   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1565759   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1565760   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1565761   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1565762   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1565763   +END;
MPRINT(EM_DIAGRAM):   END;
1565764   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1565765   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1565766   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1565767   +END;
MPRINT(EM_DIAGRAM):   END;
1565768   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1565769   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1565770   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1565771   +END;
MPRINT(EM_DIAGRAM):   END;
1565772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565773   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1565774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1565775   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1565776   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1565777   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1565778   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1565779   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1565780   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1565781   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1565782   +END;
MPRINT(EM_DIAGRAM):   END;
1565783   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1565784   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1565785   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1565786   +drop
1565787   +H11
1565788   +H12
1565789   +H13
1565790   +H14
1565791   +H15
1565792   +H16
1565793   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1565794   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1565795    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1565796    quit;
1565797    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1565798    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1565799    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1565800    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1565801    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1565802    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565803    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1565804    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565805    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1565806    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1565807    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565808    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565809    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1565810    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1565811    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1565812    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1565813    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1565814    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1565815    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1565816    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565817    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1565818    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1565819    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1565820    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565821    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565822    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1565823    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1565823  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

1565824    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1565825    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1565826    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565827    filename _pref
1565827  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1565828    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1565829    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1565830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1565831   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1565832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1565833   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1565834   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1565835   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1565836    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1565837    quit;
1565838    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1565839    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1565840    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1565841    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1565842    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1565843    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565844    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1565845    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565846    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1565847    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1565848    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565849    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565850    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1565851    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1565852    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1565853    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565854    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1565855    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

1565856    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1565857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565859    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1565860    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1565861    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565862    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1565863    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1565864    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1565864  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1565865    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565866    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1565867    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565868    filename _pref
1565868  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1565869    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1565870    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1565871   +
1565872   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1565873   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1565873  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1565874   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1565875   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1565876   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1565877   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1565878   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1565879    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1565880    quit;
1565881    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1565882    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1565883    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1565884    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1565885    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1565886    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565887    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1565888    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565889    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565890    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1565891    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565892    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565893    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1565894    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1565895    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1565896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1565897    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1565898    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565899    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1565900    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565901    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565902    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1565903    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1565904    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1565905    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1565906    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1565907    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1565907  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1565908    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565909    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1565910    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1565911    filename _pref
1565911  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1565912    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1565913    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1565914   +
1565915   +
1565916   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1565917   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1565918   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1565919   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1565920   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1565921   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1565922   +
1565923   +
1565924   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1565925   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1565926   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1565927   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1565928   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1565929   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1565930   +
1565931   +
1565932   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1565933   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1565934   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1565935   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1565936   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1565937   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1565938   +
1565939   +
1565940   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1565941   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1565942   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1565943   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1565944   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1565945   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1565946   +
1565947   +
1565948   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1565949   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1565950   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1565951   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1565952   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1565953   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1565954   +
1565955   +
1565956   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1565957   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1565958   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1565959   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1565960   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1565961   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1565962   +
1565963   +
1565964   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1565965   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1565966   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1565967   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1565968   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1565969   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1565970   +
1565971   +
1565972   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1565973   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1565974   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1565975   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1565976   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1565977   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1565978   +if
1565979   +_FILTERNORM1 not in ( '.')
1565980   + and
1565981   +_FILTERNORM2 not in ( '.')
1565982   + and
1565983   +_FILTERNORM3 not in ( '.')
1565984   + and
1565985   +_FILTERNORM4 not in ( '.')
1565986   + and
1565987   +_FILTERNORM5 not in ( '.')
1565988   + and
1565989   +_FILTERNORM6 not in ( '.')
1565990   + and
1565991   +_FILTERNORM7 not in ( ' ')
1565992   + and
1565993   +_FILTERNORM8 not in ( ' ')
1565994   +and
1565995   +( Dt_Customer ne .)
1565996   +and ( Income ne . and (Income<=107000))
1565997   +and ( Kidhome ne .)
1565998   +and ( MntFishProducts ne .)
1565999   +and ( MntFruits ne .)
1566000   +and ( MntGoldProds ne .)
1566001   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1566002   +and ( MntSweetProducts ne .)
1566003   +and ( MntWines ne .)
1566004   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1566005   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1566006   +and ( NumStorePurchases ne .)
1566007   +and ( NumWebPurchases ne .)
1566008   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1566009   +and ( Recency ne .)
1566010   +and ( Teenhome ne .)
1566011   +and ( Year_Birth ne .)
1566012   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1566013   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1566014   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1566015   +end;
MPRINT(EM_DIAGRAM):   end;
1566016   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1566017   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1566018    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1566019    quit;
1566020    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1566021    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1566022    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1566023    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1566024    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1566025    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1566026    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1566027    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1566028    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566029    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1566030    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1566031    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566032    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1566033    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1566034    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1566035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566036    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1566037    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1566038    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1566039    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1566040    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566041    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1566042    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1566043    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1566044    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566045    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1566046    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1566046  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1566047    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566048    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1566049    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566050    %macro varDept(fcmpdata=,id=);
1566051    %global nobs&id scoreFlag&id;
1566052    %let scoreFlag&id = 0;
1566053    %if &id=1 or ^&fcmpStart %then %do;
1566054    proc sort data=&fcmpdata out=_temp&id nodupkey;
1566055    by NAME;
1566056    where id=&id and LHS in( %let j=1;
1566057    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1566058    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1566059    "&var" %let j = %eval(&j+1);
1566060    %end;
1566061    );
1566062    run;
1566063    %let dsid = %sysfunc(open(_temp&id));
1566064    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1566065    %let dsid = %sysfunc(close(&dsid));
1566066    %if &&nobs&id %then %do;
1566067    %let scoreFlag&id = 1;
1566068    %let fcmpStart = 1;
1566069    %end;
1566070    %else %let fcmpStart = 0;
1566071    %end;
1566072    %else %do;
1566073    proc sort data=&fcmpdata out=_tempid;
1566074    where id=&id;
1566075    by LHS;
1566076    run;
1566077    %let dsid = %sysfunc(open(_tempid));
1566078    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1566079    %let dsid = %sysfunc(close(&dsid));
1566080    %if ^&&nobs&id %then %do;
1566081    proc datasets lib=work nolist;
1566082    delete _tempid;
1566083    run;
1566084    quit;
1566085    %end;
1566086    %else %do;
1566087    data _tempAll;
1566088    set %let j=%eval(&id-1);
1566089    %do x=1 %to &j;
1566090    %if &&nobs&x %then %do;
1566091    _temp&x %end;
1566092    %end;
1566093    ;
1566094    run;
1566095    proc sql;
1566096    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1566096  ! work._tempid p2 where p.name=p2.lhs;
1566097    quit;
1566098    data _temp&id;
1566099    set _temp&id;
1566100    where LHS ne '' and NAME ne '' and Node ne '';
1566101    run;
1566102    proc datasets lib=work nolist;
1566103    delete _tempAll;
1566104    run;
1566105    %let dsid = %sysfunc(open(_temp&id));
1566106    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1566107    %let dsid = %sysfunc(close(&dsid));
1566108    %if ^&&nobs&id %then %do;
1566109    proc datasets lib=work nolist;
1566110    delete _temp&id;
1566111    run;
1566112    quit;
1566113    %end;
1566114    %else %do;
1566115    %let scoreFlag&id = 1;
1566116    data _temp&id;
1566117    set _temp&id;
1566118    where LHS ne NAME and node ne '';
1566119    run;
1566120    %let dsid = %sysfunc(open(_temp&id));
1566121    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1566122    %let dsid = %sysfunc(close(&dsid));
1566123    %if ^&&nobs&id %then %do;
1566124    proc datasets lib=work nolist;
1566125    delete _temp&id;
1566126    run;
1566127    quit;
1566128    %end;
1566129    %else %do;
1566130    proc sort data=_temp&id nodupkey;
1566131    by LHS NAME;
1566132    run;
1566133    %end;
1566134    %end;
1566135    %end;
1566136    %end;
1566137    %mend varDept;
1566138    %macro optCode(outdata=fcmpdata);
1566139    %global fcmpStart;
1566140    %let fcmpStart = 0;
1566141    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1566142    %let NumNodes=9;
1566143    %do k=1 %to &NumNodes;
1566144    %vardept(fcmpdata=&outdata, id=&k);
1566145    %end;
1566146    %mend optCode;
1566147    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1566148    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1566149    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1566150    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1566151    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1566152    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1566153    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1566154    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1566155    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566156    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1566157    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1566157  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1566158    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1566159    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1566160    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1566161    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566162    filename _pref
1566162  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
1566163    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1566164    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
1566165   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1566166   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1566167   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1566168   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1566169   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1566170   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1566171   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1566172   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1566173   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1566174   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1566175   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1566176   +LENGTH _WARN_ $4
1566177   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1566178   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1566179   +
1566180   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1566181   +
1566182   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1566183   +
1566184   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1566185   +
1566186   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1566187   +
1566188   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1566189   +
1566190   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1566191   +
1566192   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1566193   +
1566194   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1566195   +
1566196   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1566197   +
1566198   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1566199   +
1566200   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1566201   +
1566202   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1566203   +
1566204   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1566205   +
1566206   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1566207   +
1566208   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1566209   +
1566210   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1566211   +
1566212   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1566213   +
1566214   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1566215   +
1566216   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1566217   +
1566218   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1566219   +
1566220   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1566221   +
1566222   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1566223   +
1566224   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1566225   +
1566226   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1566227   +
1566228   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1566229   +
1566230   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1566231   +
1566232   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1566233   +
1566234   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1566235   +
1566236   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1566237   +
1566238   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1566239   +
1566240   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1566241   +
1566242   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1566243   +
1566244   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1566245   +
1566246   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1566247   +
1566248   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1566249   +
1566250   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1566251   +
1566252   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1566253   +
1566254   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1566255   +
1566256   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1566257   +
1566258   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1566259   +
1566260   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1566261   +
1566262   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1566263   +
1566264   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1566265   +
1566266   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1566267   +
1566268   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1566269   +
1566270   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1566271   +
1566272   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1566273   +
1566274   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1566275   +
1566276   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1566277   +
1566278   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1566279   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1566280   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1566281   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1566282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566284   +end;
MPRINT(EM_DIAGRAM):   end;
1566285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1566287   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1566288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566289   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1566290   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1566291   +   end;
MPRINT(EM_DIAGRAM):   end;
1566292   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1566293   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1566294   +   end;
MPRINT(EM_DIAGRAM):   end;
1566295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566296   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1566297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1566298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566299   +   end;
MPRINT(EM_DIAGRAM):   end;
1566300   +end;
MPRINT(EM_DIAGRAM):   end;
1566301   +
1566302   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1566303   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1566304   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1566305   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1566306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566308   +end;
MPRINT(EM_DIAGRAM):   end;
1566309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1566311   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1566312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566313   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1566314   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1566315   +   end;
MPRINT(EM_DIAGRAM):   end;
1566316   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1566317   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1566318   +   end;
MPRINT(EM_DIAGRAM):   end;
1566319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566320   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1566321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1566322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566323   +   end;
MPRINT(EM_DIAGRAM):   end;
1566324   +end;
MPRINT(EM_DIAGRAM):   end;
1566325   +
1566326   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1566327   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1566328   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1566329   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1566330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566332   +end;
MPRINT(EM_DIAGRAM):   end;
1566333   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566334   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1566335   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1566336   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566337   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1566338   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1566339   +   end;
MPRINT(EM_DIAGRAM):   end;
1566340   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1566341   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1566342   +   end;
MPRINT(EM_DIAGRAM):   end;
1566343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566344   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1566345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1566346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566347   +   end;
MPRINT(EM_DIAGRAM):   end;
1566348   +end;
MPRINT(EM_DIAGRAM):   end;
1566349   +
1566350   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1566351   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1566352   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1566353   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1566354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566356   +end;
MPRINT(EM_DIAGRAM):   end;
1566357   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1566359   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1566360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566361   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1566362   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1566363   +   end;
MPRINT(EM_DIAGRAM):   end;
1566364   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1566365   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1566366   +   end;
MPRINT(EM_DIAGRAM):   end;
1566367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566368   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1566369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1566370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566371   +   end;
MPRINT(EM_DIAGRAM):   end;
1566372   +end;
MPRINT(EM_DIAGRAM):   end;
1566373   +
1566374   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1566375   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1566376   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1566377   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1566378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566380   +end;
MPRINT(EM_DIAGRAM):   end;
1566381   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1566383   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1566384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566385   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1566386   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1566387   +   end;
MPRINT(EM_DIAGRAM):   end;
1566388   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1566389   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1566390   +   end;
MPRINT(EM_DIAGRAM):   end;
1566391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566392   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1566393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1566394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566395   +   end;
MPRINT(EM_DIAGRAM):   end;
1566396   +end;
MPRINT(EM_DIAGRAM):   end;
1566397   +
1566398   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1566399   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1566400   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1566401   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1566402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566404   +end;
MPRINT(EM_DIAGRAM):   end;
1566405   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1566407   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1566408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566409   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1566410   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1566411   +   end;
MPRINT(EM_DIAGRAM):   end;
1566412   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1566413   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1566414   +   end;
MPRINT(EM_DIAGRAM):   end;
1566415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566416   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1566417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1566418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566419   +   end;
MPRINT(EM_DIAGRAM):   end;
1566420   +end;
MPRINT(EM_DIAGRAM):   end;
1566421   +
1566422   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1566423   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1566424   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1566425   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1566426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566428   +end;
MPRINT(EM_DIAGRAM):   end;
1566429   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1566431   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1566432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566433   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1566434   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1566435   +   end;
MPRINT(EM_DIAGRAM):   end;
1566436   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1566437   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1566438   +   end;
MPRINT(EM_DIAGRAM):   end;
1566439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566440   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1566441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1566442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566443   +   end;
MPRINT(EM_DIAGRAM):   end;
1566444   +end;
MPRINT(EM_DIAGRAM):   end;
1566445   +
1566446   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1566447   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1566448   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1566449   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1566450   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1566451   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1566452   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1566453   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1566454   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1566455   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1566456   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1566457   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1566458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566460   +end;
MPRINT(EM_DIAGRAM):   end;
1566461   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566462   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1566463   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1566464   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566465   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1566466   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1566467   +   end;
MPRINT(EM_DIAGRAM):   end;
1566468   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1566469   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1566470   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1566471   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1566472   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1566473   +   end;
MPRINT(EM_DIAGRAM):   end;
1566474   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1566475   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1566476   +   end;
MPRINT(EM_DIAGRAM):   end;
1566477   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1566478   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1566479   +   end;
MPRINT(EM_DIAGRAM):   end;
1566480   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1566481   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1566482   +   end;
MPRINT(EM_DIAGRAM):   end;
1566483   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566484   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1566485   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1566486   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1566487   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1566488   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1566489   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566490   +   end;
MPRINT(EM_DIAGRAM):   end;
1566491   +end;
MPRINT(EM_DIAGRAM):   end;
1566492   +
1566493   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1566494   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1566495   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1566496   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1566497   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1566498   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1566499   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1566500   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1566501   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1566502   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1566503   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1566504   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1566505   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1566506   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1566507   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566508   +end;
MPRINT(EM_DIAGRAM):   end;
1566509   +else do;
MPRINT(EM_DIAGRAM):   else do;
1566510   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1566511   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1566512   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1566513   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1566514   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1566515   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1566516   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1566517   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1566518   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1566519   +         end;
MPRINT(EM_DIAGRAM):   end;
1566520   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1566521   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1566522   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1566523   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1566524   +            end;
MPRINT(EM_DIAGRAM):   end;
1566525   +         end;
MPRINT(EM_DIAGRAM):   end;
1566526   +      end;
MPRINT(EM_DIAGRAM):   end;
1566527   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1566528   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1566529   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1566530   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1566531   +         end;
MPRINT(EM_DIAGRAM):   end;
1566532   +      end;
MPRINT(EM_DIAGRAM):   end;
1566533   +   end;
MPRINT(EM_DIAGRAM):   end;
1566534   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1566535   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1566536   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1566537   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1566538   +      end;
MPRINT(EM_DIAGRAM):   end;
1566539   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1566540   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1566541   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1566542   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1566543   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1566544   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1566545   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1566546   +         end;
MPRINT(EM_DIAGRAM):   end;
1566547   +      end;
MPRINT(EM_DIAGRAM):   end;
1566548   +   end;
MPRINT(EM_DIAGRAM):   end;
1566549   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1566550   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1566551   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1566552   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1566553   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1566554   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1566555   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566556   +   end;
MPRINT(EM_DIAGRAM):   end;
1566557   +end;
MPRINT(EM_DIAGRAM):   end;
1566558   +
1566559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566560   +*** Checking missing input Interval
1566561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1566562   +
1566563   +IF NMISS(
1566564   +   AcceptedCmpTotal ,
1566565   +   Age ,
1566566   +   Frq ,
1566567   +   Income ,
1566568   +   Kidhome ,
1566569   +   Mnt ,
1566570   +   MntFishProducts ,
1566571   +   MntFruits ,
1566572   +   MntGoldProds ,
1566573   +   MntMeatProducts ,
1566574   +   MntSweetProducts ,
1566575   +   MntWines ,
1566576   +   MonthsAsCustomer ,
1566577   +   NumCatalogPurchases ,
1566578   +   NumDealsPurchases ,
1566579   +   NumDistPurchases ,
1566580   +   NumStorePurchases ,
1566581   +   NumWebPurchases ,
1566582   +   NumWebVisitsMonth ,
1566583   +   RFMstat ,
1566584   +   RMntFrq ,
1566585   +   Recency ,
1566586   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1566587   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1566588   +
1566589   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1566590   +END;
MPRINT(EM_DIAGRAM):   END;
1566591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566592   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1566593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566594   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1566595   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1566596   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1566597   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1566598   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1566599   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1566600   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1566601   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1566602   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1566603   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1566604   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1566605   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1566606   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1566607   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1566608   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1566609   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1566610   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1566611   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1566612   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1566613   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1566614   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1566615   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1566616   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1566617   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1566618   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1566619   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1566620   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1566621   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1566622   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1566623   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1566624   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1566625   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1566626   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1566627   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1566628   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1566629   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1566630   +END;
MPRINT(EM_DIAGRAM):   END;
1566631   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1566632   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1566633   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1566634   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1566635   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1566636   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1566637   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1566638   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1566639   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1566640   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1566641   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1566642   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1566643   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1566644   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1566645   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1566646   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1566647   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1566648   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1566649   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1566650   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1566651   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1566652   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1566653   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1566654   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1566655   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1566656   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1566657   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1566658   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1566659   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1566660   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1566661   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1566662   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1566663   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1566664   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1566665   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1566666   +   ELSE S_NumCatalogPurchases
1566667   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1566668   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1566669   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1566670   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1566671   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1566672   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1566673   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1566674   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1566675   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1566676   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1566677   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1566678   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1566679   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1566680   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1566681   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1566682   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1566683   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1566684   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1566685   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1566686   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1566687   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1566688   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1566689   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1566690   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1566691   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1566692   +END;
MPRINT(EM_DIAGRAM):   END;
1566693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566694   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1566695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566697   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1566698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566700   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1566701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566702   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1566703   +   H11  =     -0.5578105652985 * S_AcceptedCmpTotal  +    -0.23241971580203 *
1566704   +        S_Age  +     0.28102175129839 * S_Frq  +    -0.14177438746231 *
1566705   +        S_Income  +    -0.45967008908227 * S_Kidhome
1566706   +          +     0.02794787691339 * S_Mnt  +     0.39828117417224 *
1566707   +        S_MntFishProducts  +    -0.05411429665612 * S_MntFruits
1566708   +          +     -0.2217613503816 * S_MntGoldProds  +    -1.14707919351018 *
1566709   +        S_MntMeatProducts  +     0.02010309795345 * S_MntSweetProducts
1566710   +          +     0.39487005596698 * S_MntWines  +     0.08057978219112 *
1566711   +        S_MonthsAsCustomer  +    -0.52508994350253 * S_NumCatalogPurchases
1566712   +          +    -0.23353175442713 * S_NumDealsPurchases
1566713   +          +     0.18635522192442 * S_NumDistPurchases
1566714   +          +     0.37209457890956 * S_NumStorePurchases
1566715   +          +     0.25018232304823 * S_NumWebPurchases
1566716   +          +    -0.12167684141831 * S_NumWebVisitsMonth
1566717   +          +    -0.26994136429184 * S_RFMstat  +    -0.15457821756538 *
1566718   +        S_RMntFrq  +      0.3771094487511 * S_Recency
1566719   +          +      0.3944445531753 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.5578105652985 * S_AcceptedCmpTotal + -0.23241971580203 * S_Age 
+ 0.28102175129839 * S_Frq + -0.14177438746231 * S_Income + -0.45967008908227 * S_Kidhome + 
0.02794787691339 * S_Mnt + 0.39828117417224 * S_MntFishProducts + -0.05411429665612 * 
S_MntFruits + -0.2217613503816 * S_MntGoldProds + -1.14707919351018 * S_MntMeatProducts + 
0.02010309795345 * S_MntSweetProducts + 0.39487005596698 * S_MntWines + 0.08057978219112 * 
S_MonthsAsCustomer + -0.52508994350253 * S_NumCatalogPurchases + -0.23353175442713 * 
S_NumDealsPurchases + 0.18635522192442 * S_NumDistPurchases + 0.37209457890956 * 
S_NumStorePurchases + 0.25018232304823 * S_NumWebPurchases + -0.12167684141831 * 
S_NumWebVisitsMonth + -0.26994136429184 * S_RFMstat + -0.15457821756538 * S_RMntFrq + 
0.3771094487511 * S_Recency + 0.3944445531753 * S_Teenhome ;
1566720   +   H12  =    -0.33593118949604 * S_AcceptedCmpTotal  +     0.13223006727754 *
1566721   +        S_Age  +     0.22535213074211 * S_Frq  +    -0.12962185963332 *
1566722   +        S_Income  +     0.23329613045589 * S_Kidhome
1566723   +          +     0.49569557196329 * S_Mnt  +     0.06134353482875 *
1566724   +        S_MntFishProducts  +     0.04198696278324 * S_MntFruits
1566725   +          +    -0.23606182835876 * S_MntGoldProds  +    -0.86703877719801 *
1566726   +        S_MntMeatProducts  +     0.13899494079616 * S_MntSweetProducts
1566727   +          +     0.64295088795338 * S_MntWines  +     0.23885718884975 *
1566728   +        S_MonthsAsCustomer  +    -0.13805721887365 * S_NumCatalogPurchases
1566729   +          +    -0.09699498622435 * S_NumDealsPurchases
1566730   +          +     0.40364070798795 * S_NumDistPurchases
1566731   +          +      0.2162579072164 * S_NumStorePurchases
1566732   +          +     0.26248410135079 * S_NumWebPurchases
1566733   +          +    -0.59275827872509 * S_NumWebVisitsMonth
1566734   +          +    -0.14095167046806 * S_RFMstat  +     0.33659399551436 *
1566735   +        S_RMntFrq  +     0.34734104517337 * S_Recency
1566736   +          +     0.20490660913172 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33593118949604 * S_AcceptedCmpTotal + 0.13223006727754 * S_Age 
+ 0.22535213074211 * S_Frq + -0.12962185963332 * S_Income + 0.23329613045589 * S_Kidhome + 
0.49569557196329 * S_Mnt + 0.06134353482875 * S_MntFishProducts + 0.04198696278324 * 
S_MntFruits + -0.23606182835876 * S_MntGoldProds + -0.86703877719801 * S_MntMeatProducts + 
0.13899494079616 * S_MntSweetProducts + 0.64295088795338 * S_MntWines + 0.23885718884975 * 
S_MonthsAsCustomer + -0.13805721887365 * S_NumCatalogPurchases + -0.09699498622435 * 
S_NumDealsPurchases + 0.40364070798795 * S_NumDistPurchases + 0.2162579072164 * 
S_NumStorePurchases + 0.26248410135079 * S_NumWebPurchases + -0.59275827872509 * 
S_NumWebVisitsMonth + -0.14095167046806 * S_RFMstat + 0.33659399551436 * S_RMntFrq + 
0.34734104517337 * S_Recency + 0.20490660913172 * S_Teenhome ;
1566737   +   H13  =    -0.62678716035049 * S_AcceptedCmpTotal  +    -0.10291990746359 *
1566738   +        S_Age  +     0.05177116030679 * S_Frq  +    -0.22841348118599 *
1566739   +        S_Income  +     0.20139862021528 * S_Kidhome
1566740   +          +    -0.14983527202624 * S_Mnt  +    -0.48769617499769 *
1566741   +        S_MntFishProducts  +    -0.14107770157183 * S_MntFruits
1566742   +          +     0.10521088971296 * S_MntGoldProds  +     0.32521316479212 *
1566743   +        S_MntMeatProducts  +    -0.31623965627102 * S_MntSweetProducts
1566744   +          +     0.04140559575505 * S_MntWines  +     0.04461152334998 *
1566745   +        S_MonthsAsCustomer  +     0.02235616550218 * S_NumCatalogPurchases
1566746   +          +     0.09066191700879 * S_NumDealsPurchases
1566747   +          +    -0.05769000978222 * S_NumDistPurchases
1566748   +          +    -0.10089591692167 * S_NumStorePurchases
1566749   +          +    -0.00088654116561 * S_NumWebPurchases
1566750   +          +    -0.03166195000043 * S_NumWebVisitsMonth
1566751   +          +    -0.19039498348905 * S_RFMstat  +    -0.07321662360003 *
1566752   +        S_RMntFrq  +    -0.10121013357627 * S_Recency
1566753   +          +     0.07832397278234 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62678716035049 * S_AcceptedCmpTotal + -0.10291990746359 * S_Age 
+ 0.05177116030679 * S_Frq + -0.22841348118599 * S_Income + 0.20139862021528 * S_Kidhome + 
-0.14983527202624 * S_Mnt + -0.48769617499769 * S_MntFishProducts + -0.14107770157183 * 
S_MntFruits + 0.10521088971296 * S_MntGoldProds + 0.32521316479212 * S_MntMeatProducts + 
-0.31623965627102 * S_MntSweetProducts + 0.04140559575505 * S_MntWines + 0.04461152334998 * 
S_MonthsAsCustomer + 0.02235616550218 * S_NumCatalogPurchases + 0.09066191700879 * 
S_NumDealsPurchases + -0.05769000978222 * S_NumDistPurchases + -0.10089591692167 * 
S_NumStorePurchases + -0.00088654116561 * S_NumWebPurchases + -0.03166195000043 * 
S_NumWebVisitsMonth + -0.19039498348905 * S_RFMstat + -0.07321662360003 * S_RMntFrq + 
-0.10121013357627 * S_Recency + 0.07832397278234 * S_Teenhome ;
1566754   +   H14  =     0.58751331473911 * S_AcceptedCmpTotal  +     0.04644967312033 *
1566755   +        S_Age  +      0.2396819202713 * S_Frq  +     0.09956520306725 *
1566756   +        S_Income  +      0.2502648333687 * S_Kidhome
1566757   +          +     0.28121314160041 * S_Mnt  +    -0.20485047973809 *
1566758   +        S_MntFishProducts  +    -0.01460488281711 * S_MntFruits
1566759   +          +    -0.03288844720922 * S_MntGoldProds  +     1.97837236467115 *
1566760   +        S_MntMeatProducts  +     0.28301480917504 * S_MntSweetProducts
1566761   +          +     -0.6936431037386 * S_MntWines  +    -0.00532955644826 *
1566762   +        S_MonthsAsCustomer  +     1.76299586599682 * S_NumCatalogPurchases
1566763   +          +     0.83424444661619 * S_NumDealsPurchases
1566764   +          +     0.31333214543205 * S_NumDistPurchases
1566765   +          +    -0.61732647242019 * S_NumStorePurchases
1566766   +          +    -1.01955156895052 * S_NumWebPurchases
1566767   +          +     0.13017609997428 * S_NumWebVisitsMonth
1566768   +          +     0.35931716325651 * S_RFMstat  +    -0.00463731332856 *
1566769   +        S_RMntFrq  +    -0.38584375735163 * S_Recency
1566770   +          +    -0.00542085930429 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58751331473911 * S_AcceptedCmpTotal + 0.04644967312033 * S_Age + 
0.2396819202713 * S_Frq + 0.09956520306725 * S_Income + 0.2502648333687 * S_Kidhome + 
0.28121314160041 * S_Mnt + -0.20485047973809 * S_MntFishProducts + -0.01460488281711 * 
S_MntFruits + -0.03288844720922 * S_MntGoldProds + 1.97837236467115 * S_MntMeatProducts + 
0.28301480917504 * S_MntSweetProducts + -0.6936431037386 * S_MntWines + -0.00532955644826 * 
S_MonthsAsCustomer + 1.76299586599682 * S_NumCatalogPurchases + 0.83424444661619 * 
S_NumDealsPurchases + 0.31333214543205 * S_NumDistPurchases + -0.61732647242019 * 
S_NumStorePurchases + -1.01955156895052 * S_NumWebPurchases + 0.13017609997428 * 
S_NumWebVisitsMonth + 0.35931716325651 * S_RFMstat + -0.00463731332856 * S_RMntFrq + 
-0.38584375735163 * S_Recency + -0.00542085930429 * S_Teenhome ;
1566771   +   H15  =     0.53146760457913 * S_AcceptedCmpTotal  +    -0.03810411031475 *
1566772   +        S_Age  +    -0.18043958502932 * S_Frq  +     0.69595178597879 *
1566773   +        S_Income  +    -0.70952256145726 * S_Kidhome
1566774   +          +     0.07336443095717 * S_Mnt  +     0.07813855224934 *
1566775   +        S_MntFishProducts  +    -0.09796868776705 * S_MntFruits
1566776   +          +     -0.1026096257543 * S_MntGoldProds  +     0.90002400845078 *
1566777   +        S_MntMeatProducts  +    -0.05163420076554 * S_MntSweetProducts
1566778   +          +    -0.41703750500589 * S_MntWines  +     0.01638041414141 *
1566779   +        S_MonthsAsCustomer  +      0.6832201856142 * S_NumCatalogPurchases
1566780   +          +     0.63522682456102 * S_NumDealsPurchases
1566781   +          +      0.0043057429215 * S_NumDistPurchases
1566782   +          +    -0.76667751707574 * S_NumStorePurchases
1566783   +          +    -0.73436881033241 * S_NumWebPurchases
1566784   +          +     1.59331554601341 * S_NumWebVisitsMonth
1566785   +          +     0.05617601605625 * S_RFMstat  +    -0.49130520428583 *
1566786   +        S_RMntFrq  +    -1.32582830247063 * S_Recency
1566787   +          +     -0.3056726615596 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53146760457913 * S_AcceptedCmpTotal + -0.03810411031475 * S_Age 
+ -0.18043958502932 * S_Frq + 0.69595178597879 * S_Income + -0.70952256145726 * S_Kidhome + 
0.07336443095717 * S_Mnt + 0.07813855224934 * S_MntFishProducts + -0.09796868776705 * 
S_MntFruits + -0.1026096257543 * S_MntGoldProds + 0.90002400845078 * S_MntMeatProducts + 
-0.05163420076554 * S_MntSweetProducts + -0.41703750500589 * S_MntWines + 0.01638041414141 * 
S_MonthsAsCustomer + 0.6832201856142 * S_NumCatalogPurchases + 0.63522682456102 * 
S_NumDealsPurchases + 0.0043057429215 * S_NumDistPurchases + -0.76667751707574 * 
S_NumStorePurchases + -0.73436881033241 * S_NumWebPurchases + 1.59331554601341 * 
S_NumWebVisitsMonth + 0.05617601605625 * S_RFMstat + -0.49130520428583 * S_RMntFrq + 
-1.32582830247063 * S_Recency + -0.3056726615596 * S_Teenhome ;
1566788   +   H16  =    -0.14553823909316 * S_AcceptedCmpTotal  +     0.33407048981453 *
1566789   +        S_Age  +     0.23734269837078 * S_Frq  +     0.25406469036176 *
1566790   +        S_Income  +    -0.23632967504194 * S_Kidhome
1566791   +          +      0.0179055062616 * S_Mnt  +    -0.02279077829807 *
1566792   +        S_MntFishProducts  +     0.01454079994702 * S_MntFruits
1566793   +          +     0.11034379787627 * S_MntGoldProds  +    -0.08132325963546 *
1566794   +        S_MntMeatProducts  +    -0.15375043677096 * S_MntSweetProducts
1566795   +          +    -0.28898229890805 * S_MntWines  +     0.18829471441599 *
1566796   +        S_MonthsAsCustomer  +     0.22198357500123 * S_NumCatalogPurchases
1566797   +          +     -0.3032858959477 * S_NumDealsPurchases
1566798   +          +     0.11343979556999 * S_NumDistPurchases
1566799   +          +     0.19545021266061 * S_NumStorePurchases
1566800   +          +      0.1566777684546 * S_NumWebPurchases
1566801   +          +    -0.19390757759484 * S_NumWebVisitsMonth
1566802   +          +    -0.21685141921823 * S_RFMstat  +    -0.08968120165679 *
1566803   +        S_RMntFrq  +     0.01331408958685 * S_Recency
1566804   +          +    -0.29851875139164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14553823909316 * S_AcceptedCmpTotal + 0.33407048981453 * S_Age 
+ 0.23734269837078 * S_Frq + 0.25406469036176 * S_Income + -0.23632967504194 * S_Kidhome + 
0.0179055062616 * S_Mnt + -0.02279077829807 * S_MntFishProducts + 0.01454079994702 * 
S_MntFruits + 0.11034379787627 * S_MntGoldProds + -0.08132325963546 * S_MntMeatProducts + 
-0.15375043677096 * S_MntSweetProducts + -0.28898229890805 * S_MntWines + 0.18829471441599 * 
S_MonthsAsCustomer + 0.22198357500123 * S_NumCatalogPurchases + -0.3032858959477 * 
S_NumDealsPurchases + 0.11343979556999 * S_NumDistPurchases + 0.19545021266061 * 
S_NumStorePurchases + 0.1566777684546 * S_NumWebPurchases + -0.19390757759484 * 
S_NumWebVisitsMonth + -0.21685141921823 * S_RFMstat + -0.08968120165679 * S_RMntFrq + 
0.01331408958685 * S_Recency + -0.29851875139164 * S_Teenhome ;
1566805   +   H17  =     0.17466919198464 * S_AcceptedCmpTotal  +     -0.1121028079984 *
1566806   +        S_Age  +     0.02716231756399 * S_Frq  +     0.41157809710764 *
1566807   +        S_Income  +    -0.47847362741737 * S_Kidhome
1566808   +          +     0.12197279598903 * S_Mnt  +    -0.28291208980103 *
1566809   +        S_MntFishProducts  +    -0.06478996635951 * S_MntFruits
1566810   +          +     0.10519382804535 * S_MntGoldProds  +    -0.02084816137226 *
1566811   +        S_MntMeatProducts  +     0.00302745742685 * S_MntSweetProducts
1566812   +          +     0.05093107260089 * S_MntWines  +    -0.11279856455812 *
1566813   +        S_MonthsAsCustomer  +     0.33888951696726 * S_NumCatalogPurchases
1566814   +          +    -0.17510289915098 * S_NumDealsPurchases
1566815   +          +     0.16952490494417 * S_NumDistPurchases
1566816   +          +     0.11152117614204 * S_NumStorePurchases
1566817   +          +     0.22594341376741 * S_NumWebPurchases
1566818   +          +     0.64523546369354 * S_NumWebVisitsMonth
1566819   +          +     0.10568501117555 * S_RFMstat  +     0.12784241795943 *
1566820   +        S_RMntFrq  +    -1.11651429004489 * S_Recency
1566821   +          +    -0.48880952880502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.17466919198464 * S_AcceptedCmpTotal + -0.1121028079984 * S_Age + 
0.02716231756399 * S_Frq + 0.41157809710764 * S_Income + -0.47847362741737 * S_Kidhome + 
0.12197279598903 * S_Mnt + -0.28291208980103 * S_MntFishProducts + -0.06478996635951 * 
S_MntFruits + 0.10519382804535 * S_MntGoldProds + -0.02084816137226 * S_MntMeatProducts + 
0.00302745742685 * S_MntSweetProducts + 0.05093107260089 * S_MntWines + -0.11279856455812 * 
S_MonthsAsCustomer + 0.33888951696726 * S_NumCatalogPurchases + -0.17510289915098 * 
S_NumDealsPurchases + 0.16952490494417 * S_NumDistPurchases + 0.11152117614204 * 
S_NumStorePurchases + 0.22594341376741 * S_NumWebPurchases + 0.64523546369354 * 
S_NumWebVisitsMonth + 0.10568501117555 * S_RFMstat + 0.12784241795943 * S_RMntFrq + 
-1.11651429004489 * S_Recency + -0.48880952880502 * S_Teenhome ;
1566822   +   H11  = H11  +     0.13977383212072 * AcceptedCmp10
1566823   +          +     0.05060031718137 * AcceptedCmp20  +     -0.1285183348614 *
1566824   +        AcceptedCmp30  +    -0.10484468193603 * AcceptedCmp40
1566825   +          +     0.05917719975803 * AcceptedCmp50  +    -0.26316725467429 *
1566826   +        Complain0  +    -0.01895470174434 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13977383212072 * AcceptedCmp10 + 0.05060031718137 * 
AcceptedCmp20 + -0.1285183348614 * AcceptedCmp30 + -0.10484468193603 * AcceptedCmp40 + 
0.05917719975803 * AcceptedCmp50 + -0.26316725467429 * Complain0 + -0.01895470174434 * 
HigherEducationBinary0 ;
1566827   +   H12  = H12  +     0.02037307448825 * AcceptedCmp10
1566828   +          +     0.17835601132169 * AcceptedCmp20  +     0.38550714429243 *
1566829   +        AcceptedCmp30  +    -0.33756721331432 * AcceptedCmp40
1566830   +          +     0.37598437397044 * AcceptedCmp50  +    -0.03377310181099 *
1566831   +        Complain0  +    -0.39065832156758 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02037307448825 * AcceptedCmp10 + 0.17835601132169 * 
AcceptedCmp20 + 0.38550714429243 * AcceptedCmp30 + -0.33756721331432 * AcceptedCmp40 + 
0.37598437397044 * AcceptedCmp50 + -0.03377310181099 * Complain0 + -0.39065832156758 * 
HigherEducationBinary0 ;
1566832   +   H13  = H13  +    -0.22454004936394 * AcceptedCmp10
1566833   +          +     0.05941661323841 * AcceptedCmp20  +    -0.03592458555508 *
1566834   +        AcceptedCmp30  +    -0.25474371327449 * AcceptedCmp40
1566835   +          +     -0.0455897206132 * AcceptedCmp50  +     0.04740536844263 *
1566836   +        Complain0  +    -0.02878944582567 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22454004936394 * AcceptedCmp10 + 0.05941661323841 * 
AcceptedCmp20 + -0.03592458555508 * AcceptedCmp30 + -0.25474371327449 * AcceptedCmp40 + 
-0.0455897206132 * AcceptedCmp50 + 0.04740536844263 * Complain0 + -0.02878944582567 * 
HigherEducationBinary0 ;
1566837   +   H14  = H14  +     -0.3260094757606 * AcceptedCmp10
1566838   +          +    -0.11375214865976 * AcceptedCmp20  +     0.17394162217532 *
1566839   +        AcceptedCmp30  +     0.25649528618828 * AcceptedCmp40
1566840   +          +    -0.09775926020035 * AcceptedCmp50  +     0.07605735003987 *
1566841   +        Complain0  +    -0.03961404091649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.3260094757606 * AcceptedCmp10 + -0.11375214865976 * 
AcceptedCmp20 + 0.17394162217532 * AcceptedCmp30 + 0.25649528618828 * AcceptedCmp40 + 
-0.09775926020035 * AcceptedCmp50 + 0.07605735003987 * Complain0 + -0.03961404091649 * 
HigherEducationBinary0 ;
1566842   +   H15  = H15  +    -0.25690837852364 * AcceptedCmp10
1566843   +          +    -0.17111872756246 * AcceptedCmp20  +    -0.15594117886178 *
1566844   +        AcceptedCmp30  +    -0.35871566761504 * AcceptedCmp40
1566845   +          +    -0.33301494609865 * AcceptedCmp50  +     0.02032122936961 *
1566846   +        Complain0  +    -0.28127713754103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.25690837852364 * AcceptedCmp10 + -0.17111872756246 * 
AcceptedCmp20 + -0.15594117886178 * AcceptedCmp30 + -0.35871566761504 * AcceptedCmp40 + 
-0.33301494609865 * AcceptedCmp50 + 0.02032122936961 * Complain0 + -0.28127713754103 * 
HigherEducationBinary0 ;
1566847   +   H16  = H16  +     0.01304767072646 * AcceptedCmp10
1566848   +          +     0.04542970824889 * AcceptedCmp20  +    -0.04086132015641 *
1566849   +        AcceptedCmp30  +    -0.01583924109084 * AcceptedCmp40
1566850   +          +    -0.06928082094172 * AcceptedCmp50  +    -0.06496287745005 *
1566851   +        Complain0  +     0.23477563976328 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304767072646 * AcceptedCmp10 + 0.04542970824889 * 
AcceptedCmp20 + -0.04086132015641 * AcceptedCmp30 + -0.01583924109084 * AcceptedCmp40 + 
-0.06928082094172 * AcceptedCmp50 + -0.06496287745005 * Complain0 + 0.23477563976328 * 
HigherEducationBinary0 ;
1566852   +   H17  = H17  +     0.01615921378096 * AcceptedCmp10
1566853   +          +    -0.15677614259446 * AcceptedCmp20  +    -0.26690848255992 *
1566854   +        AcceptedCmp30  +    -0.26633430402858 * AcceptedCmp40
1566855   +          +     -0.1321548166386 * AcceptedCmp50  +    -0.12983847017281 *
1566856   +        Complain0  +     0.32518892495397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01615921378096 * AcceptedCmp10 + -0.15677614259446 * 
AcceptedCmp20 + -0.26690848255992 * AcceptedCmp30 + -0.26633430402858 * AcceptedCmp40 + 
-0.1321548166386 * AcceptedCmp50 + -0.12983847017281 * Complain0 + 0.32518892495397 * 
HigherEducationBinary0 ;
1566857   +   H11  = H11  +     0.05829614347592 * Education2n_Cycle
1566858   +          +     0.28826698233517 * EducationBasic  +     0.30092045123127 *
1566859   +        EducationGraduation  +     0.01956517058574 * EducationMaster
1566860   +          +     0.42319965972117 * Marital_StatusDivorced
1566861   +          +    -0.45015157317991 * Marital_StatusMarried
1566862   +          +     0.43076106925345 * Marital_StatusSingle
1566863   +          +    -0.34625245410408 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05829614347592 * Education2n_Cycle + 0.28826698233517 * 
EducationBasic + 0.30092045123127 * EducationGraduation + 0.01956517058574 * EducationMaster + 
0.42319965972117 * Marital_StatusDivorced + -0.45015157317991 * Marital_StatusMarried + 
0.43076106925345 * Marital_StatusSingle + -0.34625245410408 * Marital_StatusTogether ;
1566864   +   H12  = H12  +    -0.15246834223268 * Education2n_Cycle
1566865   +          +     0.02248997563033 * EducationBasic  +    -0.05434884503392 *
1566866   +        EducationGraduation  +     0.28747604127576 * EducationMaster
1566867   +          +     0.11384347873072 * Marital_StatusDivorced
1566868   +          +     0.51442453272823 * Marital_StatusMarried
1566869   +          +    -0.38966058028661 * Marital_StatusSingle
1566870   +          +     0.59654659814606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.15246834223268 * Education2n_Cycle + 0.02248997563033 * 
EducationBasic + -0.05434884503392 * EducationGraduation + 0.28747604127576 * EducationMaster 
+ 0.11384347873072 * Marital_StatusDivorced + 0.51442453272823 * Marital_StatusMarried + 
-0.38966058028661 * Marital_StatusSingle + 0.59654659814606 * Marital_StatusTogether ;
1566871   +   H13  = H13  +     0.07291520243057 * Education2n_Cycle
1566872   +          +     0.22798022739243 * EducationBasic  +    -0.09714428862174 *
1566873   +        EducationGraduation  +     0.19910048440114 * EducationMaster
1566874   +          +    -0.05213342781535 * Marital_StatusDivorced
1566875   +          +     0.07520352092928 * Marital_StatusMarried
1566876   +          +     0.20175107471623 * Marital_StatusSingle
1566877   +          +     0.21785232690504 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07291520243057 * Education2n_Cycle + 0.22798022739243 * 
EducationBasic + -0.09714428862174 * EducationGraduation + 0.19910048440114 * EducationMaster 
+ -0.05213342781535 * Marital_StatusDivorced + 0.07520352092928 * Marital_StatusMarried + 
0.20175107471623 * Marital_StatusSingle + 0.21785232690504 * Marital_StatusTogether ;
1566878   +   H14  = H14  +    -0.16241733679628 * Education2n_Cycle
1566879   +          +     0.10611998985678 * EducationBasic  +    -0.03570492688548 *
1566880   +        EducationGraduation  +     0.29010545079762 * EducationMaster
1566881   +          +    -0.40635592200933 * Marital_StatusDivorced
1566882   +          +     0.64772941459031 * Marital_StatusMarried
1566883   +          +    -0.36402842056603 * Marital_StatusSingle
1566884   +          +     0.66760594472194 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16241733679628 * Education2n_Cycle + 0.10611998985678 * 
EducationBasic + -0.03570492688548 * EducationGraduation + 0.29010545079762 * EducationMaster 
+ -0.40635592200933 * Marital_StatusDivorced + 0.64772941459031 * Marital_StatusMarried + 
-0.36402842056603 * Marital_StatusSingle + 0.66760594472194 * Marital_StatusTogether ;
1566885   +   H15  = H15  +      0.1484080088272 * Education2n_Cycle
1566886   +          +    -0.26484833011693 * EducationBasic  +     0.32372570227867 *
1566887   +        EducationGraduation  +    -0.19830450172452 * EducationMaster
1566888   +          +     0.87932592764844 * Marital_StatusDivorced
1566889   +          +    -0.85946473083734 * Marital_StatusMarried
1566890   +          +     0.74505733668545 * Marital_StatusSingle
1566891   +          +    -0.94561469309103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.1484080088272 * Education2n_Cycle + -0.26484833011693 * 
EducationBasic + 0.32372570227867 * EducationGraduation + -0.19830450172452 * EducationMaster 
+ 0.87932592764844 * Marital_StatusDivorced + -0.85946473083734 * Marital_StatusMarried + 
0.74505733668545 * Marital_StatusSingle + -0.94561469309103 * Marital_StatusTogether ;
1566892   +   H16  = H16  +     0.06060112302425 * Education2n_Cycle
1566893   +          +    -0.33181717926405 * EducationBasic  +    -0.11727908170163 *
1566894   +        EducationGraduation  +    -0.12441264886812 * EducationMaster
1566895   +          +    -0.11861748280641 * Marital_StatusDivorced
1566896   +          +    -0.15869097739395 * Marital_StatusMarried
1566897   +          +     0.34415019828259 * Marital_StatusSingle
1566898   +          +    -0.10748203749958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06060112302425 * Education2n_Cycle + -0.33181717926405 * 
EducationBasic + -0.11727908170163 * EducationGraduation + -0.12441264886812 * EducationMaster 
+ -0.11861748280641 * Marital_StatusDivorced + -0.15869097739395 * Marital_StatusMarried + 
0.34415019828259 * Marital_StatusSingle + -0.10748203749958 * Marital_StatusTogether ;
1566899   +   H17  = H17  +      0.0204719144571 * Education2n_Cycle
1566900   +          +    -0.21500190587821 * EducationBasic  +    -0.12457774765815 *
1566901   +        EducationGraduation  +    -0.08824349470153 * EducationMaster
1566902   +          +     0.14995740697816 * Marital_StatusDivorced
1566903   +          +    -1.01788822114068 * Marital_StatusMarried
1566904   +          +     0.70532758126153 * Marital_StatusSingle
1566905   +          +    -0.63335960879305 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0204719144571 * Education2n_Cycle + -0.21500190587821 * 
EducationBasic + -0.12457774765815 * EducationGraduation + -0.08824349470153 * EducationMaster 
+ 0.14995740697816 * Marital_StatusDivorced + -1.01788822114068 * Marital_StatusMarried + 
0.70532758126153 * Marital_StatusSingle + -0.63335960879305 * Marital_StatusTogether ;
1566906   +   H11  =     0.02607332365548 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02607332365548 + H11 ;
1566907   +   H12  =    -0.56666577494928 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.56666577494928 + H12 ;
1566908   +   H13  =    -1.03772915602166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03772915602166 + H13 ;
1566909   +   H14  =     0.84490585692811 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84490585692811 + H14 ;
1566910   +   H15  =     -0.4221012604846 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4221012604846 + H15 ;
1566911   +   H16  =     -1.7732139312938 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.7732139312938 + H16 ;
1566912   +   H17  =    -1.59831075827511 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.59831075827511 + H17 ;
1566913   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1566914   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1566915   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1566916   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1566917   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1566918   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1566919   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1566920   +END;
MPRINT(EM_DIAGRAM):   END;
1566921   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1566922   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1566923   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1566924   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1566925   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1566926   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1566927   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1566928   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1566929   +END;
MPRINT(EM_DIAGRAM):   END;
1566930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566931   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1566932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566933   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1566934   +   P_DepVar1  =      -1.605577695663 * H11  +    -1.61358647892122 * H12
1566935   +          +     0.34401900767527 * H13  +     3.24181562332148 * H14
1566936   +          +     3.59380365492102 * H15  +     0.56941587287347 * H16
1566937   +          +     2.13310046968058 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.605577695663 * H11 + -1.61358647892122 * H12 + 
0.34401900767527 * H13 + 3.24181562332148 * H14 + 3.59380365492102 * H15 + 0.56941587287347 * 
H16 + 2.13310046968058 * H17 ;
1566938   +   P_DepVar1  =    -2.17258746401986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17258746401986 + P_DepVar1 ;
1566939   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1566940   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1566941   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1566942   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1566943   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1566944   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1566945   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1566946   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1566947   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1566948   +END;
MPRINT(EM_DIAGRAM):   END;
1566949   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1566950   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1566951   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1566952   +END;
MPRINT(EM_DIAGRAM):   END;
1566953   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1566954   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1566955   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1566956   +END;
MPRINT(EM_DIAGRAM):   END;
1566957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566958   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1566959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1566960   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1566961   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1566962   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1566963   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1566964   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1566965   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1566966   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1566967   +END;
MPRINT(EM_DIAGRAM):   END;
1566968   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1566969   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1566970   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1566971   +drop
1566972   +H11
1566973   +H12
1566974   +H13
1566975   +H14
1566976   +H15
1566977   +H16
1566978   +H17
1566979   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1566980   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1566981    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1566982    quit;
1566983    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1566984    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1566985    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1566986    retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
1566987    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1566988    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566989    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1566990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1566991    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1566992    proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
1566993    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1566994    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1566995    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1566996    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1566997    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1566998    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1566999    proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
1567000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1567001    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1567002    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567003    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1567004    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1567005    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1567006    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567007    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567008    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1567009    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1567009  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

1567010    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567011    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1567012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567013    filename _pref
1567013  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1567014    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1567015    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1567016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567017   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1567018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1567019   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1567020   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1567021   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1567022    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1567023    quit;
1567024    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1567025    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1567026    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1567027    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1567028    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1567029    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567030    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1567031    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567033    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1567034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567036    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1567037    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1567038    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1567039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567040    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1567041    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1567042    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1567043    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567044    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567045    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1567046    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1567047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567048    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1567049    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1567050    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1567050  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1567051    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567052    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1567053    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567054    filename _pref
1567054  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1567055    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1567056    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1567057   +
1567058   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1567059   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1567059  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1567060   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1567061   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1567062   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1567063   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1567064   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1567065    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1567066    quit;
1567067    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1567068    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1567069    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1567070    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1567071    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1567072    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567073    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1567074    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567075    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567076    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1567077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567078    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567079    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1567080    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1567081    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1567082    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1567083    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1567084    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567085    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1567086    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567087    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567088    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1567089    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1567090    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567091    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1567092    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1567093    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1567093  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1567094    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567095    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1567096    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567097    filename _pref
1567097  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1567098    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1567099    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1567100   +
1567101   +
1567102   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1567103   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1567104   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1567105   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1567106   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1567107   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1567108   +
1567109   +
1567110   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1567111   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1567112   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1567113   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1567114   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1567115   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1567116   +
1567117   +
1567118   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1567119   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1567120   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1567121   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1567122   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1567123   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1567124   +
1567125   +
1567126   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1567127   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1567128   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1567129   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1567130   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1567131   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1567132   +
1567133   +
1567134   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1567135   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1567136   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1567137   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1567138   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1567139   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1567140   +
1567141   +
1567142   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1567143   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1567144   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1567145   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1567146   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1567147   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1567148   +
1567149   +
1567150   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1567151   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1567152   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1567153   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1567154   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1567155   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1567156   +
1567157   +
1567158   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1567159   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1567160   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1567161   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1567162   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1567163   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1567164   +if
1567165   +_FILTERNORM1 not in ( '.')
1567166   + and
1567167   +_FILTERNORM2 not in ( '.')
1567168   + and
1567169   +_FILTERNORM3 not in ( '.')
1567170   + and
1567171   +_FILTERNORM4 not in ( '.')
1567172   + and
1567173   +_FILTERNORM5 not in ( '.')
1567174   + and
1567175   +_FILTERNORM6 not in ( '.')
1567176   + and
1567177   +_FILTERNORM7 not in ( ' ')
1567178   + and
1567179   +_FILTERNORM8 not in ( ' ')
1567180   +and
1567181   +( Dt_Customer ne .)
1567182   +and ( Income ne . and (Income<=107000))
1567183   +and ( Kidhome ne .)
1567184   +and ( MntFishProducts ne .)
1567185   +and ( MntFruits ne .)
1567186   +and ( MntGoldProds ne .)
1567187   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1567188   +and ( MntSweetProducts ne .)
1567189   +and ( MntWines ne .)
1567190   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1567191   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1567192   +and ( NumStorePurchases ne .)
1567193   +and ( NumWebPurchases ne .)
1567194   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1567195   +and ( Recency ne .)
1567196   +and ( Teenhome ne .)
1567197   +and ( Year_Birth ne .)
1567198   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1567199   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1567200   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1567201   +end;
MPRINT(EM_DIAGRAM):   end;
1567202   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1567203   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1567204    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1567205    quit;
1567206    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1567207    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1567208    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1567209    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1567210    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1567211    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567212    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1567213    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567215    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1567216    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567217    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567218    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1567219    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1567220    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1567221    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567222    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1567223    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1567224    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1567225    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567226    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567227    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1567228    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1567229    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1567230    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567231    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1567232    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1567232  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1567233    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1567234    proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
1567235    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567236    %macro varDept(fcmpdata=,id=);
1567237    %global nobs&id scoreFlag&id;
1567238    %let scoreFlag&id = 0;
1567239    %if &id=1 or ^&fcmpStart %then %do;
1567240    proc sort data=&fcmpdata out=_temp&id nodupkey;
1567241    by NAME;
1567242    where id=&id and LHS in( %let j=1;
1567243    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1567244    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1567245    "&var" %let j = %eval(&j+1);
1567246    %end;
1567247    );
1567248    run;
1567249    %let dsid = %sysfunc(open(_temp&id));
1567250    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1567251    %let dsid = %sysfunc(close(&dsid));
1567252    %if &&nobs&id %then %do;
1567253    %let scoreFlag&id = 1;
1567254    %let fcmpStart = 1;
1567255    %end;
1567256    %else %let fcmpStart = 0;
1567257    %end;
1567258    %else %do;
1567259    proc sort data=&fcmpdata out=_tempid;
1567260    where id=&id;
1567261    by LHS;
1567262    run;
1567263    %let dsid = %sysfunc(open(_tempid));
1567264    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1567265    %let dsid = %sysfunc(close(&dsid));
1567266    %if ^&&nobs&id %then %do;
1567267    proc datasets lib=work nolist;
1567268    delete _tempid;
1567269    run;
1567270    quit;
1567271    %end;
1567272    %else %do;
1567273    data _tempAll;
1567274    set %let j=%eval(&id-1);
1567275    %do x=1 %to &j;
1567276    %if &&nobs&x %then %do;
1567277    _temp&x %end;
1567278    %end;
1567279    ;
1567280    run;
1567281    proc sql;
1567282    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1567282  ! work._tempid p2 where p.name=p2.lhs;
1567283    quit;
1567284    data _temp&id;
1567285    set _temp&id;
1567286    where LHS ne '' and NAME ne '' and Node ne '';
1567287    run;
1567288    proc datasets lib=work nolist;
1567289    delete _tempAll;
1567290    run;
1567291    %let dsid = %sysfunc(open(_temp&id));
1567292    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1567293    %let dsid = %sysfunc(close(&dsid));
1567294    %if ^&&nobs&id %then %do;
1567295    proc datasets lib=work nolist;
1567296    delete _temp&id;
1567297    run;
1567298    quit;
1567299    %end;
1567300    %else %do;
1567301    %let scoreFlag&id = 1;
1567302    data _temp&id;
1567303    set _temp&id;
1567304    where LHS ne NAME and node ne '';
1567305    run;
1567306    %let dsid = %sysfunc(open(_temp&id));
1567307    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1567308    %let dsid = %sysfunc(close(&dsid));
1567309    %if ^&&nobs&id %then %do;
1567310    proc datasets lib=work nolist;
1567311    delete _temp&id;
1567312    run;
1567313    quit;
1567314    %end;
1567315    %else %do;
1567316    proc sort data=_temp&id nodupkey;
1567317    by LHS NAME;
1567318    run;
1567319    %end;
1567320    %end;
1567321    %end;
1567322    %end;
1567323    %mend varDept;
1567324    %macro optCode(outdata=fcmpdata);
1567325    %global fcmpStart;
1567326    %let fcmpStart = 0;
1567327    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1567328    %let NumNodes=9;
1567329    %do k=1 %to &NumNodes;
1567330    %vardept(fcmpdata=&outdata, id=&k);
1567331    %end;
1567332    %mend optCode;
1567333    %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1567334    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1567335    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1567336    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1567337    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567338    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1567339    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1567340    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1567341    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567342    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1567343    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1567343  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1567344    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1567345    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1567346    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1567347    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567348    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1567349    * Ensmbl27: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing metadata for TRAIN data;
1567350    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL27_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl27_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl27_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl27_TRAIN out=WORK.M0KAZ2SP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0KAZ2SP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0KAZ2SP(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0KAZ2SP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0KAZ2SP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2GT4BKA NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2GT4BKA;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2GT4BKA;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0B32AYZ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2GT4BKA;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2GT4BKA;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2GT4BKA;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2GT4BKA;
MPRINT(EMADVISECOLUMNS):   set WORK.M2GT4BKA;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
The SAS System

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg5_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg5_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl27";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl27";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1567670    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1567671    set EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMINFO;
1567672    where DATA='Ensmbl27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1567673    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_EMINFO.
      WHERE (DATA='Ensmbl27') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567674    data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMINFO;
1567675    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1567676    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1567677    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1567681    run;
1567682    data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMINFO;
1567683    set EMWS8.Ensmbl27_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMINFO WORK.MODELTEMP_INFO;
1567684    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1567685    proc sort data = EMWS8.Ensmbl27_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl27_EMINFO NOTHREADS;
1567686    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1567687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567688    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg5_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1567689    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1567690    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.REG5_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567691    proc sort data = EMWS8.Ensmbl27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1567692    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1567693    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1567694    data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMINFO;
1567695    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1567696    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1567697    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1567698    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1567699    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1567700    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1567701    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL27_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL27_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
