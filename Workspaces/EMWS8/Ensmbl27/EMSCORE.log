MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.35 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.35 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O26CNRE7 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O26CNRE7 new;
MPRINT(EM_DIAGRAM):   run;
425911     filename emflow
425911   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring AUTONEURAL7_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425912     *------------------------------------------------------------*;
425913     * Ensmbl27: Scoring AUTONEURAL7_TRAIN data;
425914     *------------------------------------------------------------*;
425915     data EMWS8.Ensmbl27_TRAIN
425916     / view=EMWS8.Ensmbl27_TRAIN
425917     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_TRAIN / view=EMWS8.Ensmbl27_TRAIN ;
425918     set EMWS8.AutoNeural7_TRAIN
425919     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_TRAIN ;
425920     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas.
425921    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425922    +* Ensmbl27: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Combine model for DepVar;
425923    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425924    +* Ensmbl27: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 1 of 7;
425925    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425926    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425927    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
425928    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
425929    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
425930    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425931    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425932    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
425933    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
425934    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
425935    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425936    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425937    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
425938    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
425939    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
425940    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425941    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425942    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
425943    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
425944    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
425945    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425946    +
425947    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
425948    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
425948   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
425949    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
425950    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
425951    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
425952    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
425953    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
425954    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425955    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
425956    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
425957    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
425958    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425959    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425960    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
425961    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425962    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
425963    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
425964    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
425965    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425966    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
425967    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
425968    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
425969    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425970    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425971    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
425972    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
425973    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
425974    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425975    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425976    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
425977    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
425978    +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
425979    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
425980    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
425981    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
425982    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
425983    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
425984    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
425985    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
425986    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
425987    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
425988    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
425989    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
425990    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
425991    +LENGTH _WARN_ $4
425992    +      F_DepVar  $ 12
425993    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
425994    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
425995    +
425996    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
425997    +
425998    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
425999    +
426000    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
426001    +
426002    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
426003    +
426004    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
426005    +
426006    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
426007    +
426008    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
426009    +
426010    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
426011    +
426012    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
426013    +
426014    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
426015    +
426016    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
426017    +
426018    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
426019    +
426020    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
426021    +
426022    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
426023    +
426024    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
426025    +
426026    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
426027    +
426028    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
426029    +
426030    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
426031    +
426032    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
426033    +
426034    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
426035    +
426036    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
426037    +
426038    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
426039    +
426040    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
426041    +
426042    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
426043    +
426044    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
426045    +
426046    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
426047    +
426048    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
426049    +
426050    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
426051    +
426052    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
426053    +
426054    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
426055    +
426056    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
426057    +
426058    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
426059    +
426060    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
426061    +
426062    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
426063    +
426064    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
426065    +
426066    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
426067    +
426068    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
426069    +
426070    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
426071    +
426072    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
426073    +
426074    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
426075    +
426076    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
426077    +
426078    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
426079    +
426080    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
426081    +
426082    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
426083    +
426084    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
426085    +
426086    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
426087    +
426088    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
426089    +
426090    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
426091    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
426092    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
426093    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
426094    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426095    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426096    +end;
MPRINT(EM_DIAGRAM):   end;
426097    +else do;
MPRINT(EM_DIAGRAM):   else do;
426098    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426099    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
426100    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426101    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426102    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
426103    +   end;
MPRINT(EM_DIAGRAM):   end;
426104    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426105    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
426106    +   end;
MPRINT(EM_DIAGRAM):   end;
426107    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426108    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
426109    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426110    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426111    +   end;
MPRINT(EM_DIAGRAM):   end;
426112    +end;
MPRINT(EM_DIAGRAM):   end;
426113    +
426114    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
426115    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
426116    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
426117    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
426118    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426119    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426120    +end;
MPRINT(EM_DIAGRAM):   end;
426121    +else do;
MPRINT(EM_DIAGRAM):   else do;
426122    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426123    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
426124    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426125    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426126    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
426127    +   end;
MPRINT(EM_DIAGRAM):   end;
426128    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426129    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
426130    +   end;
MPRINT(EM_DIAGRAM):   end;
426131    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426132    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
426133    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426134    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426135    +   end;
MPRINT(EM_DIAGRAM):   end;
426136    +end;
MPRINT(EM_DIAGRAM):   end;
426137    +
426138    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
426139    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
426140    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
426141    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
426142    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426143    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426144    +end;
MPRINT(EM_DIAGRAM):   end;
426145    +else do;
MPRINT(EM_DIAGRAM):   else do;
426146    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426147    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
426148    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426149    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426150    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
426151    +   end;
MPRINT(EM_DIAGRAM):   end;
426152    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426153    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
426154    +   end;
MPRINT(EM_DIAGRAM):   end;
426155    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426156    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
426157    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426158    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426159    +   end;
MPRINT(EM_DIAGRAM):   end;
426160    +end;
MPRINT(EM_DIAGRAM):   end;
426161    +
426162    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
426163    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
426164    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
426165    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
426166    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426167    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426168    +end;
MPRINT(EM_DIAGRAM):   end;
426169    +else do;
MPRINT(EM_DIAGRAM):   else do;
426170    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426171    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
426172    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426173    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426174    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
426175    +   end;
MPRINT(EM_DIAGRAM):   end;
426176    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426177    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
426178    +   end;
MPRINT(EM_DIAGRAM):   end;
426179    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426180    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
426181    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426182    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426183    +   end;
MPRINT(EM_DIAGRAM):   end;
426184    +end;
MPRINT(EM_DIAGRAM):   end;
426185    +
426186    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
426187    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
426188    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
426189    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
426190    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426191    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426192    +end;
MPRINT(EM_DIAGRAM):   end;
426193    +else do;
MPRINT(EM_DIAGRAM):   else do;
426194    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426195    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
426196    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426197    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426198    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
426199    +   end;
MPRINT(EM_DIAGRAM):   end;
426200    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426201    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
426202    +   end;
MPRINT(EM_DIAGRAM):   end;
426203    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426204    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
426205    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426206    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426207    +   end;
MPRINT(EM_DIAGRAM):   end;
426208    +end;
MPRINT(EM_DIAGRAM):   end;
426209    +
426210    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
426211    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
426212    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
426213    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
426214    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426215    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426216    +end;
MPRINT(EM_DIAGRAM):   end;
426217    +else do;
MPRINT(EM_DIAGRAM):   else do;
426218    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426219    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
426220    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426221    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426222    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
426223    +   end;
MPRINT(EM_DIAGRAM):   end;
426224    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426225    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
426226    +   end;
MPRINT(EM_DIAGRAM):   end;
426227    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426228    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
426229    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426230    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426231    +   end;
MPRINT(EM_DIAGRAM):   end;
426232    +end;
MPRINT(EM_DIAGRAM):   end;
426233    +
426234    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
426235    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
426236    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
426237    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
426238    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426239    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426240    +end;
MPRINT(EM_DIAGRAM):   end;
426241    +else do;
MPRINT(EM_DIAGRAM):   else do;
426242    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426243    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
426244    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426245    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
426246    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
426247    +   end;
MPRINT(EM_DIAGRAM):   end;
426248    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
426249    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
426250    +   end;
MPRINT(EM_DIAGRAM):   end;
426251    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426252    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
426253    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426254    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426255    +   end;
MPRINT(EM_DIAGRAM):   end;
426256    +end;
MPRINT(EM_DIAGRAM):   end;
426257    +
426258    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
426259    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
426260    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
426261    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
426262    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
426263    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
426264    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
426265    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
426266    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
426267    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
426268    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
426269    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
426270    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426271    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426272    +end;
MPRINT(EM_DIAGRAM):   end;
426273    +else do;
MPRINT(EM_DIAGRAM):   else do;
426274    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
426275    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
426276    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426277    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
426278    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
426279    +   end;
MPRINT(EM_DIAGRAM):   end;
426280    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
426281    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
426282    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
426283    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
426284    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
426285    +   end;
MPRINT(EM_DIAGRAM):   end;
426286    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
426287    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
426288    +   end;
MPRINT(EM_DIAGRAM):   end;
426289    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
426290    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
426291    +   end;
MPRINT(EM_DIAGRAM):   end;
426292    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
426293    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
426294    +   end;
MPRINT(EM_DIAGRAM):   end;
426295    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426296    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
426297    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
426298    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
426299    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
426300    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426301    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426302    +   end;
MPRINT(EM_DIAGRAM):   end;
426303    +end;
MPRINT(EM_DIAGRAM):   end;
426304    +
426305    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
426306    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
426307    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
426308    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
426309    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
426310    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
426311    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
426312    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
426313    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
426314    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
426315    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
426316    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
426317    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
426318    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426319    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426320    +end;
MPRINT(EM_DIAGRAM):   end;
426321    +else do;
MPRINT(EM_DIAGRAM):   else do;
426322    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
426323    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
426324    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426325    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
426326    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
426327    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
426328    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
426329    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
426330    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
426331    +         end;
MPRINT(EM_DIAGRAM):   end;
426332    +         else do;
MPRINT(EM_DIAGRAM):   else do;
426333    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
426334    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
426335    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
426336    +            end;
MPRINT(EM_DIAGRAM):   end;
426337    +         end;
MPRINT(EM_DIAGRAM):   end;
426338    +      end;
MPRINT(EM_DIAGRAM):   end;
426339    +      else do;
MPRINT(EM_DIAGRAM):   else do;
426340    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
426341    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
426342    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
426343    +         end;
MPRINT(EM_DIAGRAM):   end;
426344    +      end;
MPRINT(EM_DIAGRAM):   end;
426345    +   end;
MPRINT(EM_DIAGRAM):   end;
426346    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426347    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
426348    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
426349    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
426350    +      end;
MPRINT(EM_DIAGRAM):   end;
426351    +      else do;
MPRINT(EM_DIAGRAM):   else do;
426352    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
426353    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
426354    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
426355    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
426356    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
426357    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
426358    +         end;
MPRINT(EM_DIAGRAM):   end;
426359    +      end;
MPRINT(EM_DIAGRAM):   end;
426360    +   end;
MPRINT(EM_DIAGRAM):   end;
426361    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
426362    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
426363    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
426364    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
426365    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
426366    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426367    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426368    +   end;
MPRINT(EM_DIAGRAM):   end;
426369    +end;
MPRINT(EM_DIAGRAM):   end;
426370    +
426371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426372    +*** Checking missing input Interval
426373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
426374    +
426375    +IF NMISS(
426376    +   AcceptedCmpTotal ,
426377    +   Age ,
426378    +   Frq ,
426379    +   Income ,
426380    +   Kidhome ,
426381    +   Mnt ,
426382    +   MntFishProducts ,
426383    +   MntFruits ,
426384    +   MntGoldProds ,
426385    +   MntMeatProducts ,
426386    +   MntSweetProducts ,
426387    +   MntWines ,
426388    +   MonthsAsCustomer ,
426389    +   NumCatalogPurchases ,
426390    +   NumDealsPurchases ,
426391    +   NumDistPurchases ,
426392    +   NumStorePurchases ,
426393    +   NumWebPurchases ,
426394    +   NumWebVisitsMonth ,
426395    +   RFMstat ,
426396    +   RMntFrq ,
426397    +   Recency ,
426398    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
426399    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
426400    +
426401    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426402    +END;
MPRINT(EM_DIAGRAM):   END;
426403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426404    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
426405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426406    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
426407    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
426408    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
426409    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
426410    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
426411    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
426412    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
426413    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
426414    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
426415    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
426416    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
426417    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
426418    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
426419    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
426420    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
426421    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
426422    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
426423    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
426424    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
426425    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
426426    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
426427    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
426428    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
426429    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
426430    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
426431    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
426432    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
426433    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
426434    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
426435    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
426436    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
426437    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
426438    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
426439    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
426440    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
426441    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
426442    +END;
MPRINT(EM_DIAGRAM):   END;
426443    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
426444    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
426445    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
426446    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
426447    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
426448    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
426449    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
426450    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
426451    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
426452    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
426453    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
426454    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
426455    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
426456    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
426457    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
426458    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
426459    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
426460    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
426461    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
426462    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
426463    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
426464    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
426465    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
426466    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
426467    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
426468    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
426469    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
426470    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
426471    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
426472    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
426473    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
426474    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
426475    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
426476    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
426477    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
426478    +   ELSE S_NumCatalogPurchases
426479    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
426480    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
426481    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
426482    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
426483    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
426484    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
426485    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
426486    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
426487    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
426488    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
426489    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
426490    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
426491    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
426492    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
426493    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
426494    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
426495    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
426496    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
426497    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
426498    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
426499    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
426500    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
426501    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
426502    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
426503    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
426504    +END;
MPRINT(EM_DIAGRAM):   END;
426505    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426506    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
426507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426508    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426509    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
426510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426512    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
426513    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426514    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
426515    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
426516    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
426517    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
426518    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
426519    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
426520    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
426521    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
426522    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
426523    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
426524    +          +     0.09708841024031 * S_NumDealsPurchases
426525    +          +    -0.29075561032014 * S_NumDistPurchases
426526    +          +    -0.14495394259873 * S_NumStorePurchases
426527    +          +     0.11890705145732 * S_NumWebPurchases
426528    +          +    -0.16954189911344 * S_NumWebVisitsMonth
426529    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
426530    +        S_RMntFrq  +     0.17150719398884 * S_Recency
426531    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
426532    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
426533    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
426534    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
426535    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
426536    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
426537    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
426538    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
426539    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
426540    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
426541    +          +     0.16274478997892 * S_NumDealsPurchases
426542    +          +     0.03966958784582 * S_NumDistPurchases
426543    +          +    -0.04714110726598 * S_NumStorePurchases
426544    +          +    -0.02124229528082 * S_NumWebPurchases
426545    +          +     0.29753299776832 * S_NumWebVisitsMonth
426546    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
426547    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
426548    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
426549    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
426550    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
426551    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
426552    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
426553    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
426554    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
426555    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
426556    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
426557    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
426558    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
426559    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
426560    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
426561    +        EducationGraduation  +     0.00619669837452 * EducationMaster
426562    +          +    -0.05037639679806 * Marital_StatusDivorced
426563    +          +     0.28781968727878 * Marital_StatusMarried
426564    +          +    -0.20382417074384 * Marital_StatusSingle
426565    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
426566    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
426567    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
426568    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
426569    +          +     0.06970969219123 * Marital_StatusDivorced
426570    +          +    -0.15787475744986 * Marital_StatusMarried
426571    +          +     0.14345344072192 * Marital_StatusSingle
426572    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
426573    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
426574    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
426575    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
426576    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
426577    +END;
MPRINT(EM_DIAGRAM):   END;
426578    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
426579    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
426580    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
426581    +END;
MPRINT(EM_DIAGRAM):   END;
426582    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426583    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
426584    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426585    +
426586    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
426587    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
426588    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
426589    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
426590    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
426591    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426592    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
426593    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
426594    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
426595    +end;
MPRINT(EM_DIAGRAM):   end;
426596    +else do;
MPRINT(EM_DIAGRAM):   else do;
426597    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
426598    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
426599    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
426600    +   end;
MPRINT(EM_DIAGRAM):   end;
426601    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
426602    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
426603    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
426604    +   end;
MPRINT(EM_DIAGRAM):   end;
426605    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426606    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
426607    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
426608    +   end;
MPRINT(EM_DIAGRAM):   end;
426609    +end;
MPRINT(EM_DIAGRAM):   end;
426610    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
426611    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
426612    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
426613    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
426614    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
426615    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
426616    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
426617    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
426618    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
426619    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
426620    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
426621    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
426622    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
426623    +END;
MPRINT(EM_DIAGRAM):   END;
426624    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
426625    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
426626    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
426627    +END;
MPRINT(EM_DIAGRAM):   END;
426628    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
426629    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
426630    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
426631    +END;
MPRINT(EM_DIAGRAM):   END;
426632    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
426633    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
426634    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
426635    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
426636    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
426637    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
426638    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
426639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426640    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
426641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
426642    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
426643    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
426644    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
426645    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
426646    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
426647    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
426648    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
426649    +END;
MPRINT(EM_DIAGRAM):   END;
426650    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
426651    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
426652    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
426653    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
426654    +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
426655    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
426656    +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
426657    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
426658    +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
426659    +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
426660    +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
426661    +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
426662    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
426663    +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
426664    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
426665    +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
426666    +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
426667    +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
426668    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
426669    +* Ensmbl27: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 2 of 7;
426670    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
426671    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
426672    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
426673    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
426674    +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
426675    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
426676    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
426677    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
426678    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
426679    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
426680    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
426681    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
426682    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
426683    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
426684    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
426685    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
426686    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
426687    +LENGTH _WARN_ $4
426688    +      F_DepVar  $ 12
426689    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
426690    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
426691    +
426692    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
426693    +
426694    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
426695    +
426696    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
426697    +
426698    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
426699    +
426700    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
426701    +
426702    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
426703    +
426704    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
426705    +
426706    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
426707    +
426708    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
426709    +
426710    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
426711    +
426712    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
426713    +
426714    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
426715    +
426716    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
426717    +
426718    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
426719    +
426720    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
426721    +
426722    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
426723    +
426724    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
426725    +
426726    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
426727    +
426728    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
426729    +
426730    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
426731    +
426732    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
426733    +
426734    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
426735    +
426736    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
426737    +
426738    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
426739    +
426740    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
426741    +
426742    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
426743    +
426744    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
426745    +
426746    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
426747    +
426748    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
426749    +
426750    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
426751    +
426752    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
426753    +
426754    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
426755    +
426756    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
426757    +
426758    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
426759    +
426760    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
426761    +
426762    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
426763    +
426764    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
426765    +
426766    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
426767    +
426768    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
426769    +
426770    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
426771    +
426772    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
426773    +
426774    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
426775    +
426776    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
426777    +
426778    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
426779    +
426780    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
426781    +
426782    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
426783    +
426784    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
426785    +
426786    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
426787    +
426788    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
426789    +
426790    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
426791    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
426792    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
426793    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
426794    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426795    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426796    +end;
MPRINT(EM_DIAGRAM):   end;
426797    +else do;
MPRINT(EM_DIAGRAM):   else do;
426798    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426799    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
426800    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426801    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426802    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
426803    +   end;
MPRINT(EM_DIAGRAM):   end;
426804    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426805    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
426806    +   end;
MPRINT(EM_DIAGRAM):   end;
426807    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426808    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
426809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426811    +   end;
MPRINT(EM_DIAGRAM):   end;
426812    +end;
MPRINT(EM_DIAGRAM):   end;
426813    +
426814    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
426815    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
426816    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
426817    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
426818    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426819    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426820    +end;
MPRINT(EM_DIAGRAM):   end;
426821    +else do;
MPRINT(EM_DIAGRAM):   else do;
426822    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426823    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
426824    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426825    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426826    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
426827    +   end;
MPRINT(EM_DIAGRAM):   end;
426828    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426829    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
426830    +   end;
MPRINT(EM_DIAGRAM):   end;
426831    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426832    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
426833    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426834    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426835    +   end;
MPRINT(EM_DIAGRAM):   end;
426836    +end;
MPRINT(EM_DIAGRAM):   end;
426837    +
426838    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
426839    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
426840    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
426841    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
426842    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426843    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426844    +end;
MPRINT(EM_DIAGRAM):   end;
426845    +else do;
MPRINT(EM_DIAGRAM):   else do;
426846    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426847    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
426848    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426849    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426850    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
426851    +   end;
MPRINT(EM_DIAGRAM):   end;
426852    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426853    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
426854    +   end;
MPRINT(EM_DIAGRAM):   end;
426855    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426856    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
426857    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426858    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426859    +   end;
MPRINT(EM_DIAGRAM):   end;
426860    +end;
MPRINT(EM_DIAGRAM):   end;
426861    +
426862    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
426863    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
426864    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
426865    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
426866    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426867    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426868    +end;
MPRINT(EM_DIAGRAM):   end;
426869    +else do;
MPRINT(EM_DIAGRAM):   else do;
426870    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426871    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
426872    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426873    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426874    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
426875    +   end;
MPRINT(EM_DIAGRAM):   end;
426876    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426877    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
426878    +   end;
MPRINT(EM_DIAGRAM):   end;
426879    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426880    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
426881    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426882    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426883    +   end;
MPRINT(EM_DIAGRAM):   end;
426884    +end;
MPRINT(EM_DIAGRAM):   end;
426885    +
426886    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
426887    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
426888    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
426889    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
426890    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426891    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426892    +end;
MPRINT(EM_DIAGRAM):   end;
426893    +else do;
MPRINT(EM_DIAGRAM):   else do;
426894    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426895    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
426896    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426897    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426898    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
426899    +   end;
MPRINT(EM_DIAGRAM):   end;
426900    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426901    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
426902    +   end;
MPRINT(EM_DIAGRAM):   end;
426903    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426904    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
426905    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426906    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426907    +   end;
MPRINT(EM_DIAGRAM):   end;
426908    +end;
MPRINT(EM_DIAGRAM):   end;
426909    +
426910    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
426911    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
426912    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
426913    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
426914    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426915    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426916    +end;
MPRINT(EM_DIAGRAM):   end;
426917    +else do;
MPRINT(EM_DIAGRAM):   else do;
426918    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426919    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
426920    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426921    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
426922    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
426923    +   end;
MPRINT(EM_DIAGRAM):   end;
426924    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
426925    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
426926    +   end;
MPRINT(EM_DIAGRAM):   end;
426927    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426928    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
426929    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426930    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426931    +   end;
MPRINT(EM_DIAGRAM):   end;
426932    +end;
MPRINT(EM_DIAGRAM):   end;
426933    +
426934    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
426935    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
426936    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
426937    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
426938    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426939    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426940    +end;
MPRINT(EM_DIAGRAM):   end;
426941    +else do;
MPRINT(EM_DIAGRAM):   else do;
426942    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
426943    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
426944    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426945    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
426946    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
426947    +   end;
MPRINT(EM_DIAGRAM):   end;
426948    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
426949    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
426950    +   end;
MPRINT(EM_DIAGRAM):   end;
426951    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426952    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
426953    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
426954    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426955    +   end;
MPRINT(EM_DIAGRAM):   end;
426956    +end;
MPRINT(EM_DIAGRAM):   end;
426957    +
426958    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
426959    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
426960    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
426961    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
426962    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
426963    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
426964    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
426965    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
426966    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
426967    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
426968    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
426969    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
426970    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
426971    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
426972    +end;
MPRINT(EM_DIAGRAM):   end;
426973    +else do;
MPRINT(EM_DIAGRAM):   else do;
426974    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
426975    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
426976    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
426977    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
426978    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
426979    +   end;
MPRINT(EM_DIAGRAM):   end;
426980    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
426981    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
426982    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
426983    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
426984    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
426985    +   end;
MPRINT(EM_DIAGRAM):   end;
426986    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
426987    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
426988    +   end;
MPRINT(EM_DIAGRAM):   end;
426989    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
426990    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
426991    +   end;
MPRINT(EM_DIAGRAM):   end;
426992    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
426993    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
426994    +   end;
MPRINT(EM_DIAGRAM):   end;
426995    +   else do;
MPRINT(EM_DIAGRAM):   else do;
426996    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
426997    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
426998    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
426999    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
427000    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427001    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427002    +   end;
MPRINT(EM_DIAGRAM):   end;
427003    +end;
MPRINT(EM_DIAGRAM):   end;
427004    +
427005    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
427006    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
427007    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
427008    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
427009    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
427010    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
427011    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
427012    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
427013    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
427014    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
427015    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
427016    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
427017    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
427018    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427019    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427020    +end;
MPRINT(EM_DIAGRAM):   end;
427021    +else do;
MPRINT(EM_DIAGRAM):   else do;
427022    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
427023    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
427024    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427025    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
427026    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
427027    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
427028    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
427029    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
427030    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427031    +         end;
MPRINT(EM_DIAGRAM):   end;
427032    +         else do;
MPRINT(EM_DIAGRAM):   else do;
427033    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
427034    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
427035    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427036    +            end;
MPRINT(EM_DIAGRAM):   end;
427037    +         end;
MPRINT(EM_DIAGRAM):   end;
427038    +      end;
MPRINT(EM_DIAGRAM):   end;
427039    +      else do;
MPRINT(EM_DIAGRAM):   else do;
427040    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
427041    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
427042    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427043    +         end;
MPRINT(EM_DIAGRAM):   end;
427044    +      end;
MPRINT(EM_DIAGRAM):   end;
427045    +   end;
MPRINT(EM_DIAGRAM):   end;
427046    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427047    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
427048    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
427049    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427050    +      end;
MPRINT(EM_DIAGRAM):   end;
427051    +      else do;
MPRINT(EM_DIAGRAM):   else do;
427052    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
427053    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
427054    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
427055    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
427056    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
427057    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427058    +         end;
MPRINT(EM_DIAGRAM):   end;
427059    +      end;
MPRINT(EM_DIAGRAM):   end;
427060    +   end;
MPRINT(EM_DIAGRAM):   end;
427061    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
427062    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
427063    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
427064    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
427065    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
427066    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427067    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427068    +   end;
MPRINT(EM_DIAGRAM):   end;
427069    +end;
MPRINT(EM_DIAGRAM):   end;
427070    +
427071    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427072    +*** Checking missing input Interval
427073    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
427074    +
427075    +IF NMISS(
427076    +   AcceptedCmpTotal ,
427077    +   Age ,
427078    +   Frq ,
427079    +   Income ,
427080    +   Kidhome ,
427081    +   Mnt ,
427082    +   MntFishProducts ,
427083    +   MntFruits ,
427084    +   MntGoldProds ,
427085    +   MntMeatProducts ,
427086    +   MntSweetProducts ,
427087    +   MntWines ,
427088    +   MonthsAsCustomer ,
427089    +   NumCatalogPurchases ,
427090    +   NumDealsPurchases ,
427091    +   NumDistPurchases ,
427092    +   NumStorePurchases ,
427093    +   NumWebPurchases ,
427094    +   NumWebVisitsMonth ,
427095    +   RFMstat ,
427096    +   RMntFrq ,
427097    +   Recency ,
427098    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
427099    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
427100    +
427101    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427102    +END;
MPRINT(EM_DIAGRAM):   END;
427103    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427104    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
427105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427106    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
427107    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
427108    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
427109    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
427110    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
427111    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
427112    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
427113    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
427114    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
427115    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
427116    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
427117    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
427118    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
427119    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
427120    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
427121    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
427122    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
427123    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
427124    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
427125    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
427126    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
427127    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
427128    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
427129    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
427130    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
427131    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
427132    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
427133    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
427134    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
427135    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
427136    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
427137    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
427138    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
427139    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
427140    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
427141    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
427142    +END;
MPRINT(EM_DIAGRAM):   END;
427143    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
427144    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
427145    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
427146    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
427147    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
427148    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
427149    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
427150    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
427151    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
427152    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
427153    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
427154    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
427155    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
427156    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
427157    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
427158    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
427159    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
427160    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
427161    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
427162    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
427163    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
427164    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
427165    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
427166    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
427167    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
427168    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
427169    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
427170    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
427171    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
427172    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
427173    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
427174    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
427175    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
427176    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
427177    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
427178    +   ELSE S_NumCatalogPurchases
427179    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
427180    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
427181    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
427182    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
427183    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
427184    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
427185    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
427186    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
427187    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
427188    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
427189    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
427190    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
427191    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
427192    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
427193    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
427194    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
427195    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
427196    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
427197    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
427198    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
427199    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
427200    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
427201    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
427202    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
427203    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
427204    +END;
MPRINT(EM_DIAGRAM):   END;
427205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427206    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
427207    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427209    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
427210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427212    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
427213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427214    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
427215    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
427216    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
427217    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
427218    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
427219    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
427220    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
427221    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
427222    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
427223    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
427224    +          +    -1.14704878034134 * S_NumDealsPurchases
427225    +          +    -0.17763404274659 * S_NumDistPurchases
427226    +          +     0.08894400267969 * S_NumStorePurchases
427227    +          +     0.59283747891957 * S_NumWebPurchases
427228    +          +     0.85268274682505 * S_NumWebVisitsMonth
427229    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
427230    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
427231    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
427232    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
427233    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
427234    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
427235    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
427236    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
427237    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
427238    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
427239    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
427240    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
427241    +          +    -0.80841566068716 * S_NumDealsPurchases
427242    +          +    -0.17995640033768 * S_NumDistPurchases
427243    +          +     0.00713417460936 * S_NumStorePurchases
427244    +          +     0.57881024323076 * S_NumWebPurchases
427245    +          +    -1.35134224257365 * S_NumWebVisitsMonth
427246    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
427247    +        S_RMntFrq  +     1.16978656262499 * S_Recency
427248    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
427249    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
427250    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
427251    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
427252    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
427253    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
427254    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
427255    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
427256    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
427257    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
427258    +          +     0.57891364118717 * S_NumDealsPurchases
427259    +          +    -0.31024556838688 * S_NumDistPurchases
427260    +          +    -1.48708542986704 * S_NumStorePurchases
427261    +          +    -0.93009875249206 * S_NumWebPurchases
427262    +          +     2.01900039122935 * S_NumWebVisitsMonth
427263    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
427264    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
427265    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
427266    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
427267    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
427268    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
427269    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
427270    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
427271    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
427272    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
427273    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
427274    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
427275    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
427276    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
427277    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
427278    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
427279    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
427280    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
427281    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
427282    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
427283    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
427284    +          +     0.55883606830033 * Marital_StatusDivorced
427285    +          +    -0.54530037567066 * Marital_StatusMarried
427286    +          +    -0.52994736075753 * Marital_StatusSingle
427287    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
427288    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
427289    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
427290    +        EducationGraduation  +     0.31201349236277 * EducationMaster
427291    +          +    -1.07368484057033 * Marital_StatusDivorced
427292    +          +     2.73313504711262 * Marital_StatusMarried
427293    +          +    -2.18530462876058 * Marital_StatusSingle
427294    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
427295    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
427296    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
427297    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
427298    +          +     0.49993144243043 * Marital_StatusDivorced
427299    +          +    -0.38953339116829 * Marital_StatusMarried
427300    +          +    -0.10836287319942 * Marital_StatusSingle
427301    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
427302    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
427303    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
427304    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
427305    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
427306    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
427307    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
427308    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
427309    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
427310    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
427311    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
427312    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
427313    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
427314    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
427315    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
427316    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
427317    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
427318    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
427319    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
427320    +END;
MPRINT(EM_DIAGRAM):   END;
427321    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
427322    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
427323    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
427324    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
427325    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
427326    +END;
MPRINT(EM_DIAGRAM):   END;
427327    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427328    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
427329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427330    +
427331    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
427332    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
427333    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
427334    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
427335    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
427336    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427337    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
427338    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
427339    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
427340    +end;
MPRINT(EM_DIAGRAM):   end;
427341    +else do;
MPRINT(EM_DIAGRAM):   else do;
427342    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
427343    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
427344    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
427345    +   end;
MPRINT(EM_DIAGRAM):   end;
427346    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
427347    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
427348    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
427349    +   end;
MPRINT(EM_DIAGRAM):   end;
427350    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427351    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
427352    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
427353    +   end;
MPRINT(EM_DIAGRAM):   end;
427354    +end;
MPRINT(EM_DIAGRAM):   end;
427355    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
427356    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
427357    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
427358    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
427359    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
427360    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
427361    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
427362    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
427363    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
427364    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
427365    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
427366    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
427367    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
427368    +END;
MPRINT(EM_DIAGRAM):   END;
427369    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
427370    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
427371    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
427372    +END;
MPRINT(EM_DIAGRAM):   END;
427373    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
427374    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
427375    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
427376    +END;
MPRINT(EM_DIAGRAM):   END;
427377    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
427378    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
427379    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
427380    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
427381    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
427382    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
427383    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
427384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427385    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
427386    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427387    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
427388    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
427389    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
427390    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
427391    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
427392    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
427393    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
427394    +END;
MPRINT(EM_DIAGRAM):   END;
427395    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
427396    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
427397    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
427398    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
427399    +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
427400    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
427401    +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
427402    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
427403    +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
427404    +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
427405    +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
427406    +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
427407    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
427408    +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
427409    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
427410    +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
427411    +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
427412    +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
427413    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
427414    +* Ensmbl27: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 3 of 7;
427415    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
427416    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
427417    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
427418    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
427419    +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
427420    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
427421    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
427422    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
427423    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
427424    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
427425    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
427426    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
427427    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
427428    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
427429    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
427430    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
427431    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
427432    +LENGTH _WARN_ $4
427433    +      F_DepVar  $ 12
427434    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
427435    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
427436    +
427437    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
427438    +
427439    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
427440    +
427441    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
427442    +
427443    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
427444    +
427445    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
427446    +
427447    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
427448    +
427449    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
427450    +
427451    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
427452    +
427453    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
427454    +
427455    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
427456    +
427457    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
427458    +
427459    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
427460    +
427461    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
427462    +
427463    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
427464    +
427465    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
427466    +
427467    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
427468    +
427469    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
427470    +
427471    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
427472    +
427473    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
427474    +
427475    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
427476    +
427477    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
427478    +
427479    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
427480    +
427481    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
427482    +
427483    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
427484    +
427485    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
427486    +
427487    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
427488    +
427489    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
427490    +
427491    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
427492    +
427493    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
427494    +
427495    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
427496    +
427497    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
427498    +
427499    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
427500    +
427501    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
427502    +
427503    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
427504    +
427505    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
427506    +
427507    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
427508    +
427509    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
427510    +
427511    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
427512    +
427513    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
427514    +
427515    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
427516    +
427517    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
427518    +
427519    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
427520    +
427521    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
427522    +
427523    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
427524    +
427525    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
427526    +
427527    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
427528    +
427529    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
427530    +
427531    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
427532    +
427533    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
427534    +
427535    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
427536    +
427537    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
427538    +
427539    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
427540    +
427541    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
427542    +
427543    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
427544    +
427545    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
427546    +
427547    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
427548    +
427549    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
427550    +
427551    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
427552    +
427553    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
427554    +
427555    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
427556    +
427557    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
427558    +
427559    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
427560    +
427561    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
427562    +
427563    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
427564    +
427565    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
427566    +
427567    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
427568    +
427569    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
427570    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
427571    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
427572    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
427573    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427574    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427575    +end;
MPRINT(EM_DIAGRAM):   end;
427576    +else do;
MPRINT(EM_DIAGRAM):   else do;
427577    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427578    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
427579    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427580    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427581    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
427582    +   end;
MPRINT(EM_DIAGRAM):   end;
427583    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427584    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
427585    +   end;
MPRINT(EM_DIAGRAM):   end;
427586    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427587    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
427588    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427589    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427590    +   end;
MPRINT(EM_DIAGRAM):   end;
427591    +end;
MPRINT(EM_DIAGRAM):   end;
427592    +
427593    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
427594    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
427595    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
427596    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
427597    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427598    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427599    +end;
MPRINT(EM_DIAGRAM):   end;
427600    +else do;
MPRINT(EM_DIAGRAM):   else do;
427601    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427602    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
427603    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427604    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427605    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
427606    +   end;
MPRINT(EM_DIAGRAM):   end;
427607    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427608    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
427609    +   end;
MPRINT(EM_DIAGRAM):   end;
427610    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427611    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
427612    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427613    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427614    +   end;
MPRINT(EM_DIAGRAM):   end;
427615    +end;
MPRINT(EM_DIAGRAM):   end;
427616    +
427617    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
427618    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
427619    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
427620    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
427621    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427622    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427623    +end;
MPRINT(EM_DIAGRAM):   end;
427624    +else do;
MPRINT(EM_DIAGRAM):   else do;
427625    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427626    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
427627    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427628    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427629    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
427630    +   end;
MPRINT(EM_DIAGRAM):   end;
427631    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427632    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
427633    +   end;
MPRINT(EM_DIAGRAM):   end;
427634    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427635    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
427636    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427637    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427638    +   end;
MPRINT(EM_DIAGRAM):   end;
427639    +end;
MPRINT(EM_DIAGRAM):   end;
427640    +
427641    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
427642    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
427643    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
427644    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
427645    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427646    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427647    +end;
MPRINT(EM_DIAGRAM):   end;
427648    +else do;
MPRINT(EM_DIAGRAM):   else do;
427649    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427650    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
427651    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427652    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427653    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
427654    +   end;
MPRINT(EM_DIAGRAM):   end;
427655    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427656    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
427657    +   end;
MPRINT(EM_DIAGRAM):   end;
427658    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427659    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
427660    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427661    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427662    +   end;
MPRINT(EM_DIAGRAM):   end;
427663    +end;
MPRINT(EM_DIAGRAM):   end;
427664    +
427665    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
427666    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
427667    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
427668    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
427669    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427670    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427671    +end;
MPRINT(EM_DIAGRAM):   end;
427672    +else do;
MPRINT(EM_DIAGRAM):   else do;
427673    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427674    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
427675    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427676    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427677    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
427678    +   end;
MPRINT(EM_DIAGRAM):   end;
427679    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427680    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
427681    +   end;
MPRINT(EM_DIAGRAM):   end;
427682    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427683    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
427684    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427685    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427686    +   end;
MPRINT(EM_DIAGRAM):   end;
427687    +end;
MPRINT(EM_DIAGRAM):   end;
427688    +
427689    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
427690    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
427691    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
427692    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
427693    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427694    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427695    +end;
MPRINT(EM_DIAGRAM):   end;
427696    +else do;
MPRINT(EM_DIAGRAM):   else do;
427697    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427698    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
427699    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427700    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
427701    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
427702    +   end;
MPRINT(EM_DIAGRAM):   end;
427703    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
427704    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
427705    +   end;
MPRINT(EM_DIAGRAM):   end;
427706    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427707    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
427708    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427709    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427710    +   end;
MPRINT(EM_DIAGRAM):   end;
427711    +end;
MPRINT(EM_DIAGRAM):   end;
427712    +
427713    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
427714    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
427715    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
427716    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
427717    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427718    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427719    +end;
MPRINT(EM_DIAGRAM):   end;
427720    +else do;
MPRINT(EM_DIAGRAM):   else do;
427721    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
427722    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
427723    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427724    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
427725    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
427726    +   end;
MPRINT(EM_DIAGRAM):   end;
427727    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
427728    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
427729    +   end;
MPRINT(EM_DIAGRAM):   end;
427730    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427731    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
427732    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427733    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427734    +   end;
MPRINT(EM_DIAGRAM):   end;
427735    +end;
MPRINT(EM_DIAGRAM):   end;
427736    +
427737    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
427738    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
427739    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
427740    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
427741    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
427742    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
427743    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
427744    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
427745    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
427746    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
427747    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
427748    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
427749    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427750    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427751    +end;
MPRINT(EM_DIAGRAM):   end;
427752    +else do;
MPRINT(EM_DIAGRAM):   else do;
427753    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
427754    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
427755    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427756    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
427757    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
427758    +   end;
MPRINT(EM_DIAGRAM):   end;
427759    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
427760    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
427761    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
427762    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
427763    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
427764    +   end;
MPRINT(EM_DIAGRAM):   end;
427765    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
427766    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
427767    +   end;
MPRINT(EM_DIAGRAM):   end;
427768    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
427769    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
427770    +   end;
MPRINT(EM_DIAGRAM):   end;
427771    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
427772    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
427773    +   end;
MPRINT(EM_DIAGRAM):   end;
427774    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427775    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
427776    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
427777    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
427778    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
427779    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427780    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427781    +   end;
MPRINT(EM_DIAGRAM):   end;
427782    +end;
MPRINT(EM_DIAGRAM):   end;
427783    +
427784    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
427785    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
427786    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
427787    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
427788    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
427789    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
427790    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
427791    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
427792    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
427793    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
427794    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
427795    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
427796    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
427797    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
427798    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427799    +end;
MPRINT(EM_DIAGRAM):   end;
427800    +else do;
MPRINT(EM_DIAGRAM):   else do;
427801    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
427802    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
427803    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
427804    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
427805    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
427806    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
427807    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
427808    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
427809    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427810    +         end;
MPRINT(EM_DIAGRAM):   end;
427811    +         else do;
MPRINT(EM_DIAGRAM):   else do;
427812    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
427813    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
427814    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427815    +            end;
MPRINT(EM_DIAGRAM):   end;
427816    +         end;
MPRINT(EM_DIAGRAM):   end;
427817    +      end;
MPRINT(EM_DIAGRAM):   end;
427818    +      else do;
MPRINT(EM_DIAGRAM):   else do;
427819    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
427820    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
427821    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427822    +         end;
MPRINT(EM_DIAGRAM):   end;
427823    +      end;
MPRINT(EM_DIAGRAM):   end;
427824    +   end;
MPRINT(EM_DIAGRAM):   end;
427825    +   else do;
MPRINT(EM_DIAGRAM):   else do;
427826    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
427827    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
427828    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427829    +      end;
MPRINT(EM_DIAGRAM):   end;
427830    +      else do;
MPRINT(EM_DIAGRAM):   else do;
427831    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
427832    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
427833    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
427834    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
427835    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
427836    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
427837    +         end;
MPRINT(EM_DIAGRAM):   end;
427838    +      end;
MPRINT(EM_DIAGRAM):   end;
427839    +   end;
MPRINT(EM_DIAGRAM):   end;
427840    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
427841    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
427842    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
427843    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
427844    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
427845    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
427846    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427847    +   end;
MPRINT(EM_DIAGRAM):   end;
427848    +end;
MPRINT(EM_DIAGRAM):   end;
427849    +
427850    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427851    +*** Checking missing input Interval
427852    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
427853    +
427854    +IF NMISS(
427855    +   AcceptedCmpTotal ,
427856    +   Age ,
427857    +   Frq ,
427858    +   Income ,
427859    +   Kidhome ,
427860    +   Mnt ,
427861    +   MntFishProducts ,
427862    +   MntFruits ,
427863    +   MntGoldProds ,
427864    +   MntMeatProducts ,
427865    +   MntSweetProducts ,
427866    +   MntWines ,
427867    +   MonthsAsCustomer ,
427868    +   NumCatalogPurchases ,
427869    +   NumDealsPurchases ,
427870    +   NumDistPurchases ,
427871    +   NumStorePurchases ,
427872    +   NumWebPurchases ,
427873    +   NumWebVisitsMonth ,
427874    +   RFMstat ,
427875    +   RMntFrq ,
427876    +   Recency ,
427877    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
427878    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
427879    +
427880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
427881    +END;
MPRINT(EM_DIAGRAM):   END;
427882    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427883    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
427884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427885    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
427886    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
427887    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
427888    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
427889    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
427890    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
427891    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
427892    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
427893    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
427894    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
427895    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
427896    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
427897    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
427898    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
427899    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
427900    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
427901    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
427902    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
427903    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
427904    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
427905    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
427906    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
427907    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
427908    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
427909    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
427910    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
427911    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
427912    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
427913    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
427914    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
427915    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
427916    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
427917    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
427918    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
427919    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
427920    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
427921    +END;
MPRINT(EM_DIAGRAM):   END;
427922    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
427923    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
427924    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
427925    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
427926    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
427927    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
427928    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
427929    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
427930    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
427931    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
427932    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
427933    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
427934    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
427935    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
427936    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
427937    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
427938    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
427939    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
427940    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
427941    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
427942    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
427943    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
427944    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
427945    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
427946    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
427947    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
427948    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
427949    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
427950    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
427951    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
427952    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
427953    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
427954    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
427955    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
427956    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
427957    +   ELSE S_NumCatalogPurchases
427958    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
427959    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
427960    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
427961    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
427962    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
427963    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
427964    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
427965    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
427966    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
427967    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
427968    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
427969    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
427970    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
427971    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
427972    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
427973    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
427974    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
427975    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
427976    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
427977    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
427978    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
427979    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
427980    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
427981    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
427982    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
427983    +END;
MPRINT(EM_DIAGRAM):   END;
427984    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427985    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
427986    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427988    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
427989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427990    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427991    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
427992    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
427993    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
427994    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
427995    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
427996    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
427997    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
427998    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
427999    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
428000    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
428001    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
428002    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
428003    +          +     1.17276395296242 * S_NumDealsPurchases
428004    +          +     0.26632768295477 * S_NumDistPurchases
428005    +          +    -1.26575615903579 * S_NumStorePurchases
428006    +          +    -0.95316107557927 * S_NumWebPurchases
428007    +          +     1.01828574356487 * S_NumWebVisitsMonth
428008    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
428009    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
428010    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
428011    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
428012    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
428013    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
428014    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
428015    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
428016    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
428017    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
428018    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
428019    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
428020    +          +     1.14485571201233 * S_NumDealsPurchases
428021    +          +     0.21414266588987 * S_NumDistPurchases
428022    +          +    -0.10530090074297 * S_NumStorePurchases
428023    +          +    -0.41712321238458 * S_NumWebPurchases
428024    +          +    -0.99760766791108 * S_NumWebVisitsMonth
428025    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
428026    +        S_RMntFrq  +     1.10040128548883 * S_Recency
428027    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
428028    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
428029    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
428030    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
428031    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
428032    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
428033    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
428034    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
428035    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
428036    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
428037    +          +      0.7196418967437 * S_NumDealsPurchases
428038    +          +     0.69035286374177 * S_NumDistPurchases
428039    +          +     0.38027656631135 * S_NumStorePurchases
428040    +          +    -0.18878358997924 * S_NumWebPurchases
428041    +          +     1.61962062004798 * S_NumWebVisitsMonth
428042    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
428043    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
428044    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
428045    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
428046    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
428047    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
428048    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
428049    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
428050    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
428051    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
428052    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
428053    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
428054    +          +    -0.00642902007204 * S_NumDealsPurchases
428055    +          +     0.29785069480367 * S_NumDistPurchases
428056    +          +    -0.42243322063147 * S_NumStorePurchases
428057    +          +     0.54880896338383 * S_NumWebPurchases
428058    +          +    -0.12525846016886 * S_NumWebVisitsMonth
428059    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
428060    +        S_RMntFrq  +     0.10252211581449 * S_Recency
428061    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
428062    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
428063    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
428064    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
428065    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
428066    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
428067    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
428068    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
428069    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
428070    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
428071    +          +    -0.48404738328225 * S_NumDealsPurchases
428072    +          +    -0.02464180457879 * S_NumDistPurchases
428073    +          +     1.17201831082067 * S_NumStorePurchases
428074    +          +     0.57453655167516 * S_NumWebPurchases
428075    +          +    -1.94417019790248 * S_NumWebVisitsMonth
428076    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
428077    +        S_RMntFrq  +      1.6169916658132 * S_Recency
428078    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
428079    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
428080    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
428081    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
428082    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
428083    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
428084    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
428085    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
428086    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
428087    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
428088    +          +    -1.49850531967483 * S_NumDealsPurchases
428089    +          +    -0.82105466264223 * S_NumDistPurchases
428090    +          +     0.29984603642824 * S_NumStorePurchases
428091    +          +     0.06557123721611 * S_NumWebPurchases
428092    +          +     1.04754749365002 * S_NumWebVisitsMonth
428093    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
428094    +        S_RMntFrq  +     0.12396789666359 * S_Recency
428095    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
428096    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
428097    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
428098    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
428099    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
428100    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
428101    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
428102    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
428103    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
428104    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
428105    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
428106    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
428107    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
428108    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
428109    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
428110    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
428111    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
428112    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
428113    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
428114    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
428115    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
428116    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
428117    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
428118    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
428119    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
428120    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
428121    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
428122    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
428123    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
428124    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
428125    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
428126    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
428127    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
428128    +        EducationGraduation  +     0.07595631354847 * EducationMaster
428129    +          +     0.24583509957712 * Marital_StatusDivorced
428130    +          +    -0.22681931588361 * Marital_StatusMarried
428131    +          +    -0.12924106229536 * Marital_StatusSingle
428132    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
428133    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
428134    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
428135    +        EducationGraduation  +     0.23015089246655 * EducationMaster
428136    +          +    -0.12585334311068 * Marital_StatusDivorced
428137    +          +    -0.20835502467207 * Marital_StatusMarried
428138    +          +    -0.13839534449368 * Marital_StatusSingle
428139    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
428140    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
428141    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
428142    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
428143    +          +     0.35106363238113 * Marital_StatusDivorced
428144    +          +     -1.3414808583918 * Marital_StatusMarried
428145    +          +     1.40835320798486 * Marital_StatusSingle
428146    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
428147    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
428148    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
428149    +        EducationGraduation  +      0.1746658332011 * EducationMaster
428150    +          +     0.48174546958393 * Marital_StatusDivorced
428151    +          +    -0.41416978858191 * Marital_StatusMarried
428152    +          +    -0.23376801546265 * Marital_StatusSingle
428153    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
428154    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
428155    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
428156    +        EducationGraduation  +     0.68875064631577 * EducationMaster
428157    +          +    -0.67557643774246 * Marital_StatusDivorced
428158    +          +     1.63844045917367 * Marital_StatusMarried
428159    +          +    -0.70320960247699 * Marital_StatusSingle
428160    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
428161    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
428162    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
428163    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
428164    +          +    -0.11371453086883 * Marital_StatusDivorced
428165    +          +    -0.34226997176291 * Marital_StatusMarried
428166    +          +    -1.01568676685754 * Marital_StatusSingle
428167    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
428168    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
428169    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
428170    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
428171    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
428172    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
428173    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
428174    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
428175    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
428176    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
428177    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
428178    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
428179    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
428180    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
428181    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
428182    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
428183    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
428184    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
428185    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
428186    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
428187    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
428188    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
428189    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
428190    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
428191    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
428192    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
428193    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
428194    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
428195    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
428196    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
428197    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
428198    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
428199    +END;
MPRINT(EM_DIAGRAM):   END;
428200    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428201    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
428202    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
428203    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
428204    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
428205    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
428206    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
428207    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
428208    +END;
MPRINT(EM_DIAGRAM):   END;
428209    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428210    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
428211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428212    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
428213    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
428214    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
428215    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
428216    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
428217    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
428218    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
428219    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
428220    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
428221    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
428222    +          +    -0.87259051567474 * S_NumDealsPurchases
428223    +          +    -0.36454149529139 * S_NumDistPurchases
428224    +          +     0.12447759925061 * S_NumStorePurchases
428225    +          +    -1.08133487947367 * S_NumWebPurchases
428226    +          +    -0.49882157745454 * S_NumWebVisitsMonth
428227    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
428228    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
428229    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
428230    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
428231    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
428232    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
428233    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
428234    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
428235    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
428236    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
428237    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
428238    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
428239    +          +     2.23121497416403 * S_NumDealsPurchases
428240    +          +    -0.48674842191071 * S_NumDistPurchases
428241    +          +     1.77510728607544 * S_NumStorePurchases
428242    +          +     0.14647433155436 * S_NumWebPurchases
428243    +          +    -0.95892686924419 * S_NumWebVisitsMonth
428244    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
428245    +        S_RMntFrq  +     2.46497777428475 * S_Recency
428246    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
428247    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
428248    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
428249    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
428250    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
428251    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
428252    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
428253    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
428254    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
428255    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
428256    +          +     0.14338855349611 * S_NumDealsPurchases
428257    +          +    -2.21071010829235 * S_NumDistPurchases
428258    +          +    -0.21795889348002 * S_NumStorePurchases
428259    +          +     1.98825087883535 * S_NumWebPurchases
428260    +          +     1.02482442531149 * S_NumWebVisitsMonth
428261    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
428262    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
428263    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
428264    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
428265    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
428266    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
428267    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
428268    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
428269    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
428270    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
428271    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
428272    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
428273    +          +     0.30041205661012 * S_NumDealsPurchases
428274    +          +    -0.63499849986918 * S_NumDistPurchases
428275    +          +    -0.34155713433714 * S_NumStorePurchases
428276    +          +    -1.14183354933936 * S_NumWebPurchases
428277    +          +    -0.42681980262973 * S_NumWebVisitsMonth
428278    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
428279    +        S_RMntFrq  +     1.25852246467612 * S_Recency
428280    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
428281    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
428282    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
428283    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
428284    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
428285    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
428286    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
428287    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
428288    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
428289    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
428290    +          +    -0.21237915559831 * S_NumDealsPurchases
428291    +          +     0.48256923764182 * S_NumDistPurchases
428292    +          +    -0.45553093140641 * S_NumStorePurchases
428293    +          +      0.5593655963659 * S_NumWebPurchases
428294    +          +     0.27943768691188 * S_NumWebVisitsMonth
428295    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
428296    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
428297    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
428298    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
428299    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
428300    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
428301    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
428302    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
428303    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
428304    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
428305    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
428306    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
428307    +          +     2.38967021388062 * S_NumDealsPurchases
428308    +          +    -0.97722398866481 * S_NumDistPurchases
428309    +          +     1.57612333191312 * S_NumStorePurchases
428310    +          +    -0.75968679115983 * S_NumWebPurchases
428311    +          +    -0.64207187757251 * S_NumWebVisitsMonth
428312    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
428313    +        S_RMntFrq  +     1.71313869798331 * S_Recency
428314    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
428315    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
428316    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
428317    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
428318    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
428319    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
428320    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
428321    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
428322    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
428323    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
428324    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
428325    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
428326    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
428327    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
428328    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
428329    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
428330    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
428331    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
428332    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
428333    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
428334    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
428335    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
428336    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
428337    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
428338    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
428339    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
428340    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
428341    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
428342    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
428343    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
428344    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
428345    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
428346    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
428347    +        EducationGraduation  +      0.1073450284316 * EducationMaster
428348    +          +     0.96470902298142 * Marital_StatusDivorced
428349    +          +     0.94805959268314 * Marital_StatusMarried
428350    +          +     -0.6523948769616 * Marital_StatusSingle
428351    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
428352    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
428353    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
428354    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
428355    +          +      0.3918249505531 * Marital_StatusDivorced
428356    +          +    -0.00968091979586 * Marital_StatusMarried
428357    +          +     0.84615379885071 * Marital_StatusSingle
428358    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
428359    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
428360    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
428361    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
428362    +          +     1.14335160313191 * Marital_StatusDivorced
428363    +          +     0.50580517192175 * Marital_StatusMarried
428364    +          +     0.17264295020921 * Marital_StatusSingle
428365    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
428366    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
428367    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
428368    +        EducationGraduation  +     1.95818378342783 * EducationMaster
428369    +          +    -0.11238504444225 * Marital_StatusDivorced
428370    +          +    -0.81348274043749 * Marital_StatusMarried
428371    +          +     0.46075415610001 * Marital_StatusSingle
428372    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
428373    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
428374    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
428375    +        EducationGraduation  +     0.08396135672504 * EducationMaster
428376    +          +    -0.46342068701431 * Marital_StatusDivorced
428377    +          +    -0.41667845270204 * Marital_StatusMarried
428378    +          +    -0.47166707496281 * Marital_StatusSingle
428379    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
428380    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
428381    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
428382    +        EducationGraduation  +     0.36656103863186 * EducationMaster
428383    +          +    -0.45376613787812 * Marital_StatusDivorced
428384    +          +     0.01337046049801 * Marital_StatusMarried
428385    +          +    -0.92811489484121 * Marital_StatusSingle
428386    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
428387    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
428388    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
428389    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
428390    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
428391    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
428392    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
428393    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
428394    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
428395    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
428396    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
428397    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
428398    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
428399    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
428400    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
428401    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
428402    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
428403    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
428404    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
428405    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
428406    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
428407    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
428408    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
428409    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
428410    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
428411    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
428412    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
428413    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
428414    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
428415    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
428416    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
428417    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
428418    +END;
MPRINT(EM_DIAGRAM):   END;
428419    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428420    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
428421    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
428422    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
428423    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
428424    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
428425    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
428426    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
428427    +END;
MPRINT(EM_DIAGRAM):   END;
428428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428429    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
428430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428431    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
428432    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
428433    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
428434    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
428435    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
428436    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
428437    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
428438    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
428439    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
428440    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
428441    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
428442    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
428443    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
428444    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
428445    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
428446    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
428447    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
428448    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
428449    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
428450    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
428451    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
428452    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
428453    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
428454    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
428455    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
428456    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
428457    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
428458    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
428459    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
428460    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
428461    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
428462    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
428463    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
428464    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
428465    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
428466    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
428467    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
428468    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
428469    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
428470    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
428471    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
428472    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
428473    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
428474    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
428475    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
428476    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
428477    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
428478    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
428479    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
428480    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
428481    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
428482    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
428483    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
428484    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
428485    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
428486    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
428487    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
428488    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
428489    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
428490    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
428491    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
428492    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
428493    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
428494    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
428495    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
428496    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
428497    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
428498    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
428499    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
428500    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
428501    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
428502    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
428503    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
428504    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
428505    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
428506    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
428507    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
428508    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
428509    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
428510    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
428511    +END;
MPRINT(EM_DIAGRAM):   END;
428512    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428513    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
428514    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
428515    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
428516    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
428517    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
428518    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
428519    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
428520    +END;
MPRINT(EM_DIAGRAM):   END;
428521    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428522    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
428523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428524    +
428525    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
428526    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
428527    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
428528    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
428529    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
428530    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428531    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
428532    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
428533    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
428534    +end;
MPRINT(EM_DIAGRAM):   end;
428535    +else do;
MPRINT(EM_DIAGRAM):   else do;
428536    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
428537    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
428538    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
428539    +   end;
MPRINT(EM_DIAGRAM):   end;
428540    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
428541    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
428542    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
428543    +   end;
MPRINT(EM_DIAGRAM):   end;
428544    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428545    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
428546    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
428547    +   end;
MPRINT(EM_DIAGRAM):   end;
428548    +end;
MPRINT(EM_DIAGRAM):   end;
428549    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
428550    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
428551    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
428552    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
428553    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
428554    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
428555    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
428556    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
428557    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
428558    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
428559    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
428560    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
428561    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
428562    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
428563    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
428564    +END;
MPRINT(EM_DIAGRAM):   END;
428565    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428566    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
428567    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
428568    +END;
MPRINT(EM_DIAGRAM):   END;
428569    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
428570    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
428571    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
428572    +END;
MPRINT(EM_DIAGRAM):   END;
428573    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
428574    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
428575    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
428576    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
428577    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
428578    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
428579    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
428580    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428581    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
428582    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428583    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
428584    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
428585    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
428586    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
428587    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
428588    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
428589    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
428590    +END;
MPRINT(EM_DIAGRAM):   END;
428591    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
428592    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
428593    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
428594    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
428595    +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
428596    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428597    +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
428598    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428599    +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
428600    +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
428601    +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
428602    +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
428603    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428604    +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
428605    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428606    +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
428607    +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
428608    +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
428609    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428610    +* Ensmbl27: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 4 of 7;
428611    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428612    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428613    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
428614    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
428615    +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
428616    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428617    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
428618    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
428619    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
428620    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
428621    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
428622    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
428623    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
428624    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
428625    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
428626    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
428627    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
428628    +LENGTH _WARN_ $4
428629    +      F_DepVar  $ 12
428630    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
428631    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
428632    +
428633    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
428634    +
428635    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
428636    +
428637    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
428638    +
428639    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
428640    +
428641    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
428642    +
428643    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
428644    +
428645    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
428646    +
428647    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
428648    +
428649    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
428650    +
428651    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
428652    +
428653    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
428654    +
428655    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
428656    +
428657    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
428658    +
428659    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
428660    +
428661    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
428662    +
428663    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
428664    +
428665    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
428666    +
428667    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
428668    +
428669    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
428670    +
428671    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
428672    +
428673    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
428674    +
428675    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
428676    +
428677    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
428678    +
428679    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
428680    +
428681    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
428682    +
428683    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
428684    +
428685    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
428686    +
428687    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
428688    +
428689    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
428690    +
428691    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
428692    +
428693    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
428694    +
428695    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
428696    +
428697    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
428698    +
428699    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
428700    +
428701    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
428702    +
428703    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
428704    +
428705    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
428706    +
428707    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
428708    +
428709    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
428710    +
428711    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
428712    +
428713    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
428714    +
428715    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
428716    +
428717    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
428718    +
428719    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
428720    +
428721    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
428722    +
428723    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
428724    +
428725    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
428726    +
428727    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
428728    +
428729    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
428730    +
428731    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
428732    +
428733    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
428734    +
428735    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
428736    +
428737    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
428738    +
428739    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
428740    +
428741    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
428742    +
428743    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
428744    +
428745    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
428746    +
428747    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
428748    +
428749    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
428750    +
428751    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
428752    +
428753    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
428754    +
428755    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
428756    +
428757    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
428758    +
428759    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
428760    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
428761    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
428762    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
428763    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428764    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428765    +end;
MPRINT(EM_DIAGRAM):   end;
428766    +else do;
MPRINT(EM_DIAGRAM):   else do;
428767    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428768    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
428769    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428770    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428771    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
428772    +   end;
MPRINT(EM_DIAGRAM):   end;
428773    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428774    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
428775    +   end;
MPRINT(EM_DIAGRAM):   end;
428776    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428777    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
428778    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428779    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428780    +   end;
MPRINT(EM_DIAGRAM):   end;
428781    +end;
MPRINT(EM_DIAGRAM):   end;
428782    +
428783    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
428784    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
428785    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
428786    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
428787    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428788    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428789    +end;
MPRINT(EM_DIAGRAM):   end;
428790    +else do;
MPRINT(EM_DIAGRAM):   else do;
428791    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428792    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
428793    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428794    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428795    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
428796    +   end;
MPRINT(EM_DIAGRAM):   end;
428797    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428798    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
428799    +   end;
MPRINT(EM_DIAGRAM):   end;
428800    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428801    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
428802    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428803    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428804    +   end;
MPRINT(EM_DIAGRAM):   end;
428805    +end;
MPRINT(EM_DIAGRAM):   end;
428806    +
428807    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
428808    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
428809    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
428810    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
428811    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428812    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428813    +end;
MPRINT(EM_DIAGRAM):   end;
428814    +else do;
MPRINT(EM_DIAGRAM):   else do;
428815    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428816    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
428817    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428818    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428819    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
428820    +   end;
MPRINT(EM_DIAGRAM):   end;
428821    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428822    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
428823    +   end;
MPRINT(EM_DIAGRAM):   end;
428824    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428825    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
428826    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428827    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428828    +   end;
MPRINT(EM_DIAGRAM):   end;
428829    +end;
MPRINT(EM_DIAGRAM):   end;
428830    +
428831    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
428832    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
428833    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
428834    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
428835    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428836    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428837    +end;
MPRINT(EM_DIAGRAM):   end;
428838    +else do;
MPRINT(EM_DIAGRAM):   else do;
428839    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428840    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
428841    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428842    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428843    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
428844    +   end;
MPRINT(EM_DIAGRAM):   end;
428845    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428846    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
428847    +   end;
MPRINT(EM_DIAGRAM):   end;
428848    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428849    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
428850    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428851    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428852    +   end;
MPRINT(EM_DIAGRAM):   end;
428853    +end;
MPRINT(EM_DIAGRAM):   end;
428854    +
428855    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
428856    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
428857    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
428858    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
428859    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428860    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428861    +end;
MPRINT(EM_DIAGRAM):   end;
428862    +else do;
MPRINT(EM_DIAGRAM):   else do;
428863    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428864    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
428865    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428866    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428867    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
428868    +   end;
MPRINT(EM_DIAGRAM):   end;
428869    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428870    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
428871    +   end;
MPRINT(EM_DIAGRAM):   end;
428872    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428873    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
428874    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428875    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428876    +   end;
MPRINT(EM_DIAGRAM):   end;
428877    +end;
MPRINT(EM_DIAGRAM):   end;
428878    +
428879    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
428880    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
428881    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
428882    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
428883    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428884    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428885    +end;
MPRINT(EM_DIAGRAM):   end;
428886    +else do;
MPRINT(EM_DIAGRAM):   else do;
428887    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428888    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
428889    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428890    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
428891    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
428892    +   end;
MPRINT(EM_DIAGRAM):   end;
428893    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
428894    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
428895    +   end;
MPRINT(EM_DIAGRAM):   end;
428896    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428897    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
428898    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428899    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428900    +   end;
MPRINT(EM_DIAGRAM):   end;
428901    +end;
MPRINT(EM_DIAGRAM):   end;
428902    +
428903    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
428904    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
428905    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
428906    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
428907    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428908    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428909    +end;
MPRINT(EM_DIAGRAM):   end;
428910    +else do;
MPRINT(EM_DIAGRAM):   else do;
428911    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
428912    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
428913    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428914    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
428915    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
428916    +   end;
MPRINT(EM_DIAGRAM):   end;
428917    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
428918    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
428919    +   end;
MPRINT(EM_DIAGRAM):   end;
428920    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428921    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
428922    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428923    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428924    +   end;
MPRINT(EM_DIAGRAM):   end;
428925    +end;
MPRINT(EM_DIAGRAM):   end;
428926    +
428927    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
428928    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
428929    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
428930    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
428931    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
428932    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
428933    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
428934    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
428935    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
428936    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
428937    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
428938    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
428939    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428940    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428941    +end;
MPRINT(EM_DIAGRAM):   end;
428942    +else do;
MPRINT(EM_DIAGRAM):   else do;
428943    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
428944    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
428945    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428946    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
428947    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
428948    +   end;
MPRINT(EM_DIAGRAM):   end;
428949    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
428950    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
428951    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
428952    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
428953    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
428954    +   end;
MPRINT(EM_DIAGRAM):   end;
428955    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
428956    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
428957    +   end;
MPRINT(EM_DIAGRAM):   end;
428958    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
428959    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
428960    +   end;
MPRINT(EM_DIAGRAM):   end;
428961    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
428962    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
428963    +   end;
MPRINT(EM_DIAGRAM):   end;
428964    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428965    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
428966    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
428967    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
428968    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
428969    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428970    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428971    +   end;
MPRINT(EM_DIAGRAM):   end;
428972    +end;
MPRINT(EM_DIAGRAM):   end;
428973    +
428974    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
428975    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
428976    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
428977    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
428978    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
428979    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
428980    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
428981    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
428982    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
428983    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
428984    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
428985    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
428986    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
428987    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428988    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428989    +end;
MPRINT(EM_DIAGRAM):   end;
428990    +else do;
MPRINT(EM_DIAGRAM):   else do;
428991    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
428992    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
428993    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428994    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
428995    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
428996    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
428997    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
428998    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
428999    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
429000    +         end;
MPRINT(EM_DIAGRAM):   end;
429001    +         else do;
MPRINT(EM_DIAGRAM):   else do;
429002    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
429003    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
429004    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
429005    +            end;
MPRINT(EM_DIAGRAM):   end;
429006    +         end;
MPRINT(EM_DIAGRAM):   end;
429007    +      end;
MPRINT(EM_DIAGRAM):   end;
429008    +      else do;
MPRINT(EM_DIAGRAM):   else do;
429009    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
429010    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
429011    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
429012    +         end;
MPRINT(EM_DIAGRAM):   end;
429013    +      end;
MPRINT(EM_DIAGRAM):   end;
429014    +   end;
MPRINT(EM_DIAGRAM):   end;
429015    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429016    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
429017    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
429018    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
429019    +      end;
MPRINT(EM_DIAGRAM):   end;
429020    +      else do;
MPRINT(EM_DIAGRAM):   else do;
429021    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
429022    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
429023    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
429024    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
429025    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
429026    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
429027    +         end;
MPRINT(EM_DIAGRAM):   end;
429028    +      end;
MPRINT(EM_DIAGRAM):   end;
429029    +   end;
MPRINT(EM_DIAGRAM):   end;
429030    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
429031    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
429032    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
429033    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
429034    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
429035    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
429036    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429037    +   end;
MPRINT(EM_DIAGRAM):   end;
429038    +end;
MPRINT(EM_DIAGRAM):   end;
429039    +
429040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429041    +*** Checking missing input Interval
429042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
429043    +
429044    +IF NMISS(
429045    +   AcceptedCmpTotal ,
429046    +   Age ,
429047    +   Frq ,
429048    +   Income ,
429049    +   Kidhome ,
429050    +   Mnt ,
429051    +   MntFishProducts ,
429052    +   MntFruits ,
429053    +   MntGoldProds ,
429054    +   MntMeatProducts ,
429055    +   MntSweetProducts ,
429056    +   MntWines ,
429057    +   MonthsAsCustomer ,
429058    +   NumCatalogPurchases ,
429059    +   NumDealsPurchases ,
429060    +   NumDistPurchases ,
429061    +   NumStorePurchases ,
429062    +   NumWebPurchases ,
429063    +   NumWebVisitsMonth ,
429064    +   RFMstat ,
429065    +   RMntFrq ,
429066    +   Recency ,
429067    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
429068    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
429069    +
429070    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429071    +END;
MPRINT(EM_DIAGRAM):   END;
429072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429073    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
429074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429075    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429076    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
429077    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
429078    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
429079    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
429080    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
429081    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
429082    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
429083    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
429084    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
429085    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
429086    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
429087    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
429088    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
429089    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
429090    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
429091    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
429092    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
429093    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
429094    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
429095    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
429096    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
429097    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
429098    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
429099    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
429100    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
429101    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
429102    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
429103    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
429104    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
429105    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
429106    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
429107    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
429108    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
429109    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
429110    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
429111    +END;
MPRINT(EM_DIAGRAM):   END;
429112    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429113    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
429114    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
429115    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
429116    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
429117    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
429118    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
429119    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
429120    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
429121    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
429122    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
429123    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
429124    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
429125    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
429126    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
429127    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
429128    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
429129    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
429130    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
429131    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
429132    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
429133    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
429134    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
429135    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
429136    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
429137    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
429138    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
429139    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
429140    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
429141    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
429142    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
429143    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
429144    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
429145    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
429146    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
429147    +   ELSE S_NumCatalogPurchases
429148    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
429149    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
429150    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
429151    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
429152    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
429153    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
429154    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
429155    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
429156    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
429157    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
429158    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
429159    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
429160    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
429161    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
429162    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
429163    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
429164    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
429165    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
429166    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
429167    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
429168    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
429169    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
429170    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
429171    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
429172    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
429173    +END;
MPRINT(EM_DIAGRAM):   END;
429174    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429175    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
429176    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429178    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
429179    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429181    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
429182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429183    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429184    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
429185    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
429186    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
429187    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
429188    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
429189    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
429190    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
429191    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
429192    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
429193    +          +     0.89422627895323 * S_NumDealsPurchases
429194    +          +    -0.13304125929765 * S_NumDistPurchases
429195    +          +    -1.04568442570811 * S_NumStorePurchases
429196    +          +    -0.28677765126751 * S_NumWebPurchases
429197    +          +      1.2327638737509 * S_NumWebVisitsMonth
429198    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
429199    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
429200    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
429201    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
429202    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
429203    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
429204    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
429205    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
429206    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
429207    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
429208    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
429209    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
429210    +          +     0.04224590196535 * S_NumDealsPurchases
429211    +          +     0.76554742700113 * S_NumDistPurchases
429212    +          +    -0.49155496870812 * S_NumStorePurchases
429213    +          +     0.59606812744403 * S_NumWebPurchases
429214    +          +     1.86809286276405 * S_NumWebVisitsMonth
429215    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
429216    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
429217    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
429218    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
429219    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
429220    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
429221    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
429222    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
429223    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
429224    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
429225    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
429226    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
429227    +          +    -0.04866536993486 * S_NumDealsPurchases
429228    +          +    -0.53535979020214 * S_NumDistPurchases
429229    +          +     2.20634071253676 * S_NumStorePurchases
429230    +          +      0.6164564989007 * S_NumWebPurchases
429231    +          +    -0.43396314395263 * S_NumWebVisitsMonth
429232    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
429233    +        S_RMntFrq  +     2.37293441098349 * S_Recency
429234    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
429235    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
429236    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
429237    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
429238    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
429239    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
429240    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
429241    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
429242    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
429243    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
429244    +          +     1.37461255707863 * S_NumDealsPurchases
429245    +          +    -0.17684775000818 * S_NumDistPurchases
429246    +          +    -0.62755623855535 * S_NumStorePurchases
429247    +          +    -1.46551649022657 * S_NumWebPurchases
429248    +          +     3.35784247878638 * S_NumWebVisitsMonth
429249    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
429250    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
429251    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
429252    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
429253    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
429254    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
429255    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
429256    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
429257    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
429258    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
429259    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
429260    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
429261    +          +    -0.76256677907121 * S_NumDealsPurchases
429262    +          +    -0.31591571751692 * S_NumDistPurchases
429263    +          +      0.0506832614089 * S_NumStorePurchases
429264    +          +      1.4636796923764 * S_NumWebPurchases
429265    +          +     0.37743519705036 * S_NumWebVisitsMonth
429266    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
429267    +        S_RMntFrq  +     0.16854775832723 * S_Recency
429268    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
429269    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
429270    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
429271    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
429272    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
429273    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
429274    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
429275    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
429276    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
429277    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
429278    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
429279    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
429280    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
429281    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
429282    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
429283    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
429284    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
429285    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
429286    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
429287    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
429288    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
429289    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
429290    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
429291    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
429292    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
429293    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
429294    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
429295    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
429296    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
429297    +          +     0.68641668264565 * Marital_StatusDivorced
429298    +          +    -0.81586871439732 * Marital_StatusMarried
429299    +          +     0.63758920518451 * Marital_StatusSingle
429300    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
429301    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
429302    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
429303    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
429304    +          +     0.05137560133238 * Marital_StatusDivorced
429305    +          +    -2.24401993266209 * Marital_StatusMarried
429306    +          +     1.57359386216115 * Marital_StatusSingle
429307    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
429308    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
429309    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
429310    +        EducationGraduation  +     0.61492669859334 * EducationMaster
429311    +          +     -1.0649987815942 * Marital_StatusDivorced
429312    +          +     0.76065111692388 * Marital_StatusMarried
429313    +          +    -0.21694149754801 * Marital_StatusSingle
429314    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
429315    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
429316    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
429317    +        EducationGraduation  +     0.04208620358211 * EducationMaster
429318    +          +     2.02155453548328 * Marital_StatusDivorced
429319    +          +    -2.60190649735306 * Marital_StatusMarried
429320    +          +     1.09149388354927 * Marital_StatusSingle
429321    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
429322    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
429323    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
429324    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
429325    +          +     0.66315970650309 * Marital_StatusDivorced
429326    +          +    -1.20476729758152 * Marital_StatusMarried
429327    +          +     0.56175027826397 * Marital_StatusSingle
429328    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
429329    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
429330    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
429331    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
429332    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
429333    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
429334    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
429335    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
429336    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429337    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
429338    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
429339    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
429340    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
429341    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
429342    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
429343    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
429344    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
429345    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
429346    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
429347    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
429348    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
429349    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
429350    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
429351    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
429352    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
429353    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
429354    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
429355    +END;
MPRINT(EM_DIAGRAM):   END;
429356    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429357    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
429358    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
429359    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
429360    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
429361    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
429362    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
429363    +END;
MPRINT(EM_DIAGRAM):   END;
429364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429365    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
429366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429367    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429368    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
429369    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
429370    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
429371    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
429372    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
429373    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
429374    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
429375    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
429376    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
429377    +          +     1.50005927423985 * S_NumDealsPurchases
429378    +          +      0.5590536933569 * S_NumDistPurchases
429379    +          +    -0.61757824339318 * S_NumStorePurchases
429380    +          +     0.37259686538158 * S_NumWebPurchases
429381    +          +     2.59725437895564 * S_NumWebVisitsMonth
429382    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
429383    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
429384    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
429385    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
429386    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
429387    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
429388    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
429389    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
429390    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
429391    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
429392    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
429393    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
429394    +          +    -0.09282222088797 * S_NumDealsPurchases
429395    +          +     0.10726247938321 * S_NumDistPurchases
429396    +          +     -1.1235971458527 * S_NumStorePurchases
429397    +          +    -0.78304387839877 * S_NumWebPurchases
429398    +          +    -0.44139243179956 * S_NumWebVisitsMonth
429399    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
429400    +        S_RMntFrq  +     2.19072220135069 * S_Recency
429401    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
429402    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
429403    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
429404    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
429405    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
429406    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
429407    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
429408    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
429409    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
429410    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
429411    +          +     0.35349185459988 * S_NumDealsPurchases
429412    +          +     0.06853677714859 * S_NumDistPurchases
429413    +          +    -1.47546012999338 * S_NumStorePurchases
429414    +          +     0.20926435398916 * S_NumWebPurchases
429415    +          +    -1.00535683639093 * S_NumWebVisitsMonth
429416    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
429417    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
429418    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
429419    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
429420    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
429421    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
429422    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
429423    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
429424    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
429425    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
429426    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
429427    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
429428    +          +      0.3873586120272 * S_NumDealsPurchases
429429    +          +     0.25911651157596 * S_NumDistPurchases
429430    +          +     1.58922489084287 * S_NumStorePurchases
429431    +          +     0.49041797743368 * S_NumWebPurchases
429432    +          +     -1.5425586871929 * S_NumWebVisitsMonth
429433    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
429434    +        S_RMntFrq  +     1.03099569333498 * S_Recency
429435    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
429436    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
429437    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
429438    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
429439    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
429440    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
429441    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
429442    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
429443    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
429444    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
429445    +          +    -0.60830880287865 * S_NumDealsPurchases
429446    +          +      0.0745331267194 * S_NumDistPurchases
429447    +          +    -1.39472448256952 * S_NumStorePurchases
429448    +          +     1.95372179969087 * S_NumWebPurchases
429449    +          +    -0.63307356390404 * S_NumWebVisitsMonth
429450    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
429451    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
429452    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
429453    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
429454    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
429455    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
429456    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
429457    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
429458    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
429459    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
429460    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
429461    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
429462    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
429463    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
429464    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
429465    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
429466    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
429467    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
429468    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
429469    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
429470    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
429471    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
429472    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
429473    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
429474    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
429475    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
429476    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
429477    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
429478    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
429479    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
429480    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
429481    +          +    -1.33377871643323 * Marital_StatusDivorced
429482    +          +    -0.87184228840898 * Marital_StatusMarried
429483    +          +     1.41223186340257 * Marital_StatusSingle
429484    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
429485    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
429486    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
429487    +        EducationGraduation  +     0.38341272155343 * EducationMaster
429488    +          +    -0.21479890935233 * Marital_StatusDivorced
429489    +          +     -0.0025459519579 * Marital_StatusMarried
429490    +          +     1.33900491702264 * Marital_StatusSingle
429491    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
429492    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
429493    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
429494    +        EducationGraduation  +     0.60739269725685 * EducationMaster
429495    +          +    -0.38307267471999 * Marital_StatusDivorced
429496    +          +     0.97088969451415 * Marital_StatusMarried
429497    +          +    -0.28578224473381 * Marital_StatusSingle
429498    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
429499    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
429500    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
429501    +        EducationGraduation  +     0.14160673378252 * EducationMaster
429502    +          +    -1.42229401093569 * Marital_StatusDivorced
429503    +          +      0.7234508382397 * Marital_StatusMarried
429504    +          +    -0.29062202974628 * Marital_StatusSingle
429505    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
429506    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
429507    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
429508    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
429509    +          +    -0.99067637207205 * Marital_StatusDivorced
429510    +          +    -0.50245902142079 * Marital_StatusMarried
429511    +          +     0.54214494533793 * Marital_StatusSingle
429512    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
429513    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
429514    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
429515    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
429516    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
429517    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
429518    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
429519    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
429520    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429521    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
429522    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
429523    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
429524    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
429525    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
429526    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
429527    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
429528    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
429529    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
429530    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
429531    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
429532    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
429533    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
429534    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
429535    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
429536    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
429537    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
429538    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
429539    +END;
MPRINT(EM_DIAGRAM):   END;
429540    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429541    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
429542    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
429543    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
429544    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
429545    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
429546    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
429547    +END;
MPRINT(EM_DIAGRAM):   END;
429548    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429549    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
429550    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429551    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429552    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
429553    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
429554    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
429555    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
429556    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
429557    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
429558    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
429559    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
429560    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
429561    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
429562    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
429563    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
429564    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
429565    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
429566    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
429567    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
429568    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
429569    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
429570    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
429571    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
429572    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
429573    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
429574    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
429575    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
429576    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
429577    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
429578    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
429579    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
429580    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
429581    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
429582    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
429583    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
429584    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
429585    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
429586    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
429587    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
429588    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
429589    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
429590    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
429591    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
429592    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
429593    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
429594    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
429595    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
429596    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
429597    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
429598    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
429599    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
429600    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
429601    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
429602    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
429603    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
429604    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
429605    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
429606    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
429607    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
429608    +END;
MPRINT(EM_DIAGRAM):   END;
429609    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429610    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
429611    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
429612    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
429613    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
429614    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
429615    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
429616    +END;
MPRINT(EM_DIAGRAM):   END;
429617    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429618    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
429619    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429620    +
429621    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
429622    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
429623    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
429624    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
429625    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
429626    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429627    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
429628    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
429629    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
429630    +end;
MPRINT(EM_DIAGRAM):   end;
429631    +else do;
MPRINT(EM_DIAGRAM):   else do;
429632    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
429633    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
429634    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
429635    +   end;
MPRINT(EM_DIAGRAM):   end;
429636    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
429637    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
429638    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
429639    +   end;
MPRINT(EM_DIAGRAM):   end;
429640    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429641    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
429642    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
429643    +   end;
MPRINT(EM_DIAGRAM):   end;
429644    +end;
MPRINT(EM_DIAGRAM):   end;
429645    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429646    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
429647    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
429648    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
429649    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
429650    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
429651    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
429652    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429653    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
429654    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
429655    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
429656    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
429657    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
429658    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
429659    +END;
MPRINT(EM_DIAGRAM):   END;
429660    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429661    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
429662    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
429663    +END;
MPRINT(EM_DIAGRAM):   END;
429664    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
429665    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
429666    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
429667    +END;
MPRINT(EM_DIAGRAM):   END;
429668    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
429669    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
429670    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
429671    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
429672    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
429673    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
429674    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
429675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429676    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
429677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429678    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
429679    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
429680    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
429681    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
429682    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
429683    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
429684    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
429685    +END;
MPRINT(EM_DIAGRAM):   END;
429686    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
429687    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
429688    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
429689    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
429690    +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
429691    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
429692    +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
429693    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
429694    +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
429695    +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
429696    +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
429697    +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
429698    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
429699    +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
429700    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
429701    +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
429702    +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
429703    +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
429704    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
429705    +* Ensmbl27: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 5 of 7;
429706    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
429707    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
429708    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
429709    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
429710    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
429711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
429712    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
429713    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
429714    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
429715    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
429716    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
429717    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
429718    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
429719    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
429720    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
429721    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
429722    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
429723    +LENGTH _WARN_ $4
429724    +      F_DepVar  $ 12
429725    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
429726    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
429727    +
429728    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
429729    +
429730    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
429731    +
429732    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
429733    +
429734    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
429735    +
429736    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
429737    +
429738    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
429739    +
429740    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
429741    +
429742    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
429743    +
429744    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
429745    +
429746    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
429747    +
429748    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
429749    +
429750    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
429751    +
429752    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
429753    +
429754    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
429755    +
429756    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
429757    +
429758    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
429759    +
429760    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
429761    +
429762    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
429763    +
429764    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
429765    +
429766    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
429767    +
429768    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
429769    +
429770    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
429771    +
429772    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
429773    +
429774    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
429775    +
429776    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
429777    +
429778    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
429779    +
429780    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
429781    +
429782    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
429783    +
429784    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
429785    +
429786    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
429787    +
429788    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
429789    +
429790    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
429791    +
429792    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
429793    +
429794    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
429795    +
429796    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
429797    +
429798    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
429799    +
429800    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
429801    +
429802    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
429803    +
429804    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
429805    +
429806    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
429807    +
429808    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
429809    +
429810    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
429811    +
429812    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
429813    +
429814    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
429815    +
429816    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
429817    +
429818    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
429819    +
429820    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
429821    +
429822    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
429823    +
429824    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
429825    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
429826    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
429827    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
429828    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
429829    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429830    +end;
MPRINT(EM_DIAGRAM):   end;
429831    +else do;
MPRINT(EM_DIAGRAM):   else do;
429832    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
429833    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
429834    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429835    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
429836    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
429837    +   end;
MPRINT(EM_DIAGRAM):   end;
429838    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
429839    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
429840    +   end;
MPRINT(EM_DIAGRAM):   end;
429841    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429842    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
429843    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
429844    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429845    +   end;
MPRINT(EM_DIAGRAM):   end;
429846    +end;
MPRINT(EM_DIAGRAM):   end;
429847    +
429848    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
429849    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
429850    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
429851    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
429852    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
429853    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429854    +end;
MPRINT(EM_DIAGRAM):   end;
429855    +else do;
MPRINT(EM_DIAGRAM):   else do;
429856    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
429857    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
429858    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429859    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
429860    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
429861    +   end;
MPRINT(EM_DIAGRAM):   end;
429862    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
429863    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
429864    +   end;
MPRINT(EM_DIAGRAM):   end;
429865    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429866    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
429867    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
429868    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429869    +   end;
MPRINT(EM_DIAGRAM):   end;
429870    +end;
MPRINT(EM_DIAGRAM):   end;
429871    +
429872    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
429873    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
429874    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
429875    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
429876    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
429877    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429878    +end;
MPRINT(EM_DIAGRAM):   end;
429879    +else do;
MPRINT(EM_DIAGRAM):   else do;
429880    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
429881    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
429882    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429883    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
429884    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
429885    +   end;
MPRINT(EM_DIAGRAM):   end;
429886    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
429887    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
429888    +   end;
MPRINT(EM_DIAGRAM):   end;
429889    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429890    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
429891    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
429892    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429893    +   end;
MPRINT(EM_DIAGRAM):   end;
429894    +end;
MPRINT(EM_DIAGRAM):   end;
429895    +
429896    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
429897    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
429898    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
429899    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
429900    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
429901    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429902    +end;
MPRINT(EM_DIAGRAM):   end;
429903    +else do;
MPRINT(EM_DIAGRAM):   else do;
429904    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
429905    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
429906    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429907    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
429908    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
429909    +   end;
MPRINT(EM_DIAGRAM):   end;
429910    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
429911    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
429912    +   end;
MPRINT(EM_DIAGRAM):   end;
429913    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429914    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
429915    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
429916    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429917    +   end;
MPRINT(EM_DIAGRAM):   end;
429918    +end;
MPRINT(EM_DIAGRAM):   end;
429919    +
429920    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
429921    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
429922    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
429923    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
429924    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
429925    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429926    +end;
MPRINT(EM_DIAGRAM):   end;
429927    +else do;
MPRINT(EM_DIAGRAM):   else do;
429928    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
429929    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
429930    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429931    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
429932    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
429933    +   end;
MPRINT(EM_DIAGRAM):   end;
429934    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
429935    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
429936    +   end;
MPRINT(EM_DIAGRAM):   end;
429937    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429938    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
429939    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
429940    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429941    +   end;
MPRINT(EM_DIAGRAM):   end;
429942    +end;
MPRINT(EM_DIAGRAM):   end;
429943    +
429944    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
429945    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
429946    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
429947    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
429948    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
429949    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429950    +end;
MPRINT(EM_DIAGRAM):   end;
429951    +else do;
MPRINT(EM_DIAGRAM):   else do;
429952    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
429953    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
429954    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429955    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
429956    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
429957    +   end;
MPRINT(EM_DIAGRAM):   end;
429958    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
429959    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
429960    +   end;
MPRINT(EM_DIAGRAM):   end;
429961    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429962    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
429963    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
429964    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429965    +   end;
MPRINT(EM_DIAGRAM):   end;
429966    +end;
MPRINT(EM_DIAGRAM):   end;
429967    +
429968    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
429969    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
429970    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
429971    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
429972    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
429973    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429974    +end;
MPRINT(EM_DIAGRAM):   end;
429975    +else do;
MPRINT(EM_DIAGRAM):   else do;
429976    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
429977    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
429978    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429979    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
429980    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
429981    +   end;
MPRINT(EM_DIAGRAM):   end;
429982    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
429983    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
429984    +   end;
MPRINT(EM_DIAGRAM):   end;
429985    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429986    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
429987    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
429988    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429989    +   end;
MPRINT(EM_DIAGRAM):   end;
429990    +end;
MPRINT(EM_DIAGRAM):   end;
429991    +
429992    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
429993    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
429994    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
429995    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
429996    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
429997    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
429998    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
429999    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
430000    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
430001    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
430002    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
430003    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
430004    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430005    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430006    +end;
MPRINT(EM_DIAGRAM):   end;
430007    +else do;
MPRINT(EM_DIAGRAM):   else do;
430008    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
430009    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
430010    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430011    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
430012    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
430013    +   end;
MPRINT(EM_DIAGRAM):   end;
430014    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
430015    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
430016    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
430017    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
430018    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
430019    +   end;
MPRINT(EM_DIAGRAM):   end;
430020    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
430021    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
430022    +   end;
MPRINT(EM_DIAGRAM):   end;
430023    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
430024    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
430025    +   end;
MPRINT(EM_DIAGRAM):   end;
430026    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
430027    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
430028    +   end;
MPRINT(EM_DIAGRAM):   end;
430029    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430030    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
430031    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
430032    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
430033    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
430034    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430035    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430036    +   end;
MPRINT(EM_DIAGRAM):   end;
430037    +end;
MPRINT(EM_DIAGRAM):   end;
430038    +
430039    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
430040    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
430041    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
430042    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
430043    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
430044    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
430045    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
430046    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
430047    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
430048    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
430049    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
430050    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
430051    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
430052    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430053    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430054    +end;
MPRINT(EM_DIAGRAM):   end;
430055    +else do;
MPRINT(EM_DIAGRAM):   else do;
430056    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
430057    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
430058    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430059    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
430060    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
430061    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
430062    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
430063    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
430064    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
430065    +         end;
MPRINT(EM_DIAGRAM):   end;
430066    +         else do;
MPRINT(EM_DIAGRAM):   else do;
430067    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
430068    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
430069    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
430070    +            end;
MPRINT(EM_DIAGRAM):   end;
430071    +         end;
MPRINT(EM_DIAGRAM):   end;
430072    +      end;
MPRINT(EM_DIAGRAM):   end;
430073    +      else do;
MPRINT(EM_DIAGRAM):   else do;
430074    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
430075    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
430076    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
430077    +         end;
MPRINT(EM_DIAGRAM):   end;
430078    +      end;
MPRINT(EM_DIAGRAM):   end;
430079    +   end;
MPRINT(EM_DIAGRAM):   end;
430080    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430081    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
430082    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
430083    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
430084    +      end;
MPRINT(EM_DIAGRAM):   end;
430085    +      else do;
MPRINT(EM_DIAGRAM):   else do;
430086    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
430087    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
430088    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
430089    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
430090    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
430091    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
430092    +         end;
MPRINT(EM_DIAGRAM):   end;
430093    +      end;
MPRINT(EM_DIAGRAM):   end;
430094    +   end;
MPRINT(EM_DIAGRAM):   end;
430095    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
430096    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
430097    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
430098    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
430099    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
430100    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430101    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430102    +   end;
MPRINT(EM_DIAGRAM):   end;
430103    +end;
MPRINT(EM_DIAGRAM):   end;
430104    +
430105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430106    +*** Checking missing input Interval
430107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
430108    +
430109    +IF NMISS(
430110    +   AcceptedCmpTotal ,
430111    +   Age ,
430112    +   Frq ,
430113    +   Income ,
430114    +   Kidhome ,
430115    +   Mnt ,
430116    +   MntFishProducts ,
430117    +   MntFruits ,
430118    +   MntGoldProds ,
430119    +   MntMeatProducts ,
430120    +   MntSweetProducts ,
430121    +   MntWines ,
430122    +   MonthsAsCustomer ,
430123    +   NumCatalogPurchases ,
430124    +   NumDealsPurchases ,
430125    +   NumDistPurchases ,
430126    +   NumStorePurchases ,
430127    +   NumWebPurchases ,
430128    +   NumWebVisitsMonth ,
430129    +   RFMstat ,
430130    +   RMntFrq ,
430131    +   Recency ,
430132    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
430133    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
430134    +
430135    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430136    +END;
MPRINT(EM_DIAGRAM):   END;
430137    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430138    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
430139    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430140    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
430141    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
430142    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
430143    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
430144    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
430145    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
430146    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
430147    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
430148    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
430149    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
430150    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
430151    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
430152    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
430153    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
430154    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
430155    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
430156    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
430157    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
430158    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
430159    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
430160    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
430161    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
430162    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
430163    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
430164    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
430165    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
430166    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
430167    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
430168    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
430169    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
430170    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
430171    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
430172    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
430173    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
430174    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
430175    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
430176    +END;
MPRINT(EM_DIAGRAM):   END;
430177    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
430178    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
430179    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
430180    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
430181    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
430182    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
430183    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
430184    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
430185    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
430186    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
430187    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
430188    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
430189    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
430190    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
430191    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
430192    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
430193    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
430194    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
430195    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
430196    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
430197    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
430198    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
430199    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
430200    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
430201    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
430202    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
430203    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
430204    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
430205    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
430206    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
430207    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
430208    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
430209    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
430210    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
430211    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
430212    +   ELSE S_NumCatalogPurchases
430213    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
430214    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
430215    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
430216    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
430217    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
430218    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
430219    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
430220    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
430221    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
430222    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
430223    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
430224    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
430225    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
430226    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
430227    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
430228    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
430229    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
430230    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
430231    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
430232    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
430233    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
430234    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
430235    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
430236    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
430237    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
430238    +END;
MPRINT(EM_DIAGRAM):   END;
430239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430240    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
430241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430243    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
430244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430246    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
430247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430248    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
430249    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
430250    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
430251    +        S_Income  +      0.4880522012865 * S_Kidhome
430252    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
430253    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
430254    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
430255    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
430256    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
430257    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
430258    +          +     1.28630491068585 * S_NumDealsPurchases
430259    +          +     0.12175737778271 * S_NumDistPurchases
430260    +          +    -0.62012456448967 * S_NumStorePurchases
430261    +          +     -0.6092351519122 * S_NumWebPurchases
430262    +          +     1.46336740414795 * S_NumWebVisitsMonth
430263    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
430264    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
430265    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
430266    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
430267    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
430268    +        S_Income  +     0.63026291057347 * S_Kidhome
430269    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
430270    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
430271    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
430272    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
430273    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
430274    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
430275    +          +    -0.66569109065716 * S_NumDealsPurchases
430276    +          +    -0.04991685336251 * S_NumDistPurchases
430277    +          +     0.97830186941279 * S_NumStorePurchases
430278    +          +     1.01041490205359 * S_NumWebPurchases
430279    +          +    -1.32418956036577 * S_NumWebVisitsMonth
430280    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
430281    +        S_RMntFrq  +     1.45035992156192 * S_Recency
430282    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
430283    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
430284    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
430285    +        S_Income  +     0.56998894495459 * S_Kidhome
430286    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
430287    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
430288    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
430289    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
430290    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
430291    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
430292    +          +     0.07739967453744 * S_NumDealsPurchases
430293    +          +    -0.43729543807168 * S_NumDistPurchases
430294    +          +      0.0856627398024 * S_NumStorePurchases
430295    +          +     -0.0045478100059 * S_NumWebPurchases
430296    +          +    -0.64123054514198 * S_NumWebVisitsMonth
430297    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
430298    +        S_RMntFrq  +     1.48732817876807 * S_Recency
430299    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
430300    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
430301    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
430302    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
430303    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
430304    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
430305    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
430306    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
430307    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
430308    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
430309    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
430310    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
430311    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
430312    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
430313    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
430314    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
430315    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
430316    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
430317    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
430318    +          +     0.16155355707944 * Marital_StatusDivorced
430319    +          +     0.04915644167404 * Marital_StatusMarried
430320    +          +    -0.16886350906837 * Marital_StatusSingle
430321    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
430322    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
430323    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
430324    +        EducationGraduation  +     0.03310756432448 * EducationMaster
430325    +          +    -0.15094637092036 * Marital_StatusDivorced
430326    +          +     0.07664831456886 * Marital_StatusMarried
430327    +          +    -0.47693612610813 * Marital_StatusSingle
430328    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
430329    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
430330    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
430331    +        EducationGraduation  +     0.20173383445657 * EducationMaster
430332    +          +    -0.58672623647391 * Marital_StatusDivorced
430333    +          +      1.8684271616322 * Marital_StatusMarried
430334    +          +    -1.30134837394569 * Marital_StatusSingle
430335    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
430336    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
430337    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
430338    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
430339    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
430340    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
430341    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
430342    +END;
MPRINT(EM_DIAGRAM):   END;
430343    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
430344    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
430345    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
430346    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
430347    +END;
MPRINT(EM_DIAGRAM):   END;
430348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430349    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
430350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430351    +
430352    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
430353    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
430354    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
430355    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
430356    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
430357    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430358    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
430359    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
430360    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
430361    +end;
MPRINT(EM_DIAGRAM):   end;
430362    +else do;
MPRINT(EM_DIAGRAM):   else do;
430363    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
430364    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
430365    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
430366    +   end;
MPRINT(EM_DIAGRAM):   end;
430367    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
430368    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
430369    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
430370    +   end;
MPRINT(EM_DIAGRAM):   end;
430371    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430372    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
430373    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
430374    +   end;
MPRINT(EM_DIAGRAM):   end;
430375    +end;
MPRINT(EM_DIAGRAM):   end;
430376    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
430377    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
430378    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
430379    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
430380    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
430381    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
430382    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
430383    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
430384    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
430385    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
430386    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
430387    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
430388    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
430389    +END;
MPRINT(EM_DIAGRAM):   END;
430390    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
430391    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
430392    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
430393    +END;
MPRINT(EM_DIAGRAM):   END;
430394    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
430395    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
430396    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
430397    +END;
MPRINT(EM_DIAGRAM):   END;
430398    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
430399    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
430400    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
430401    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
430402    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
430403    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
430404    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
430405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430406    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
430407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430408    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
430409    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
430410    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
430411    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
430412    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
430413    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
430414    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
430415    +END;
MPRINT(EM_DIAGRAM):   END;
430416    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
430417    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
430418    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
430419    +drop
430420    +H11
430421    +H12
430422    +H13
430423    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
430424    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
430425    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
430426    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
430427    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
430428    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
430429    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
430430    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
430431    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
430432    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
430433    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
430434    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
430435    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
430436    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
430437    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
430438    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
430439    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
430440    +* Ensmbl27: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 6 of 7;
430441    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
430442    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
430443    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
430444    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
430445    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
430446    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
430447    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
430448    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
430449    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
430450    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
430451    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
430452    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
430453    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
430454    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
430455    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
430456    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
430457    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
430458    +LENGTH _WARN_ $4
430459    +      F_DepVar  $ 12
430460    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
430461    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
430462    +
430463    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
430464    +
430465    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
430466    +
430467    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
430468    +
430469    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
430470    +
430471    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
430472    +
430473    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
430474    +
430475    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
430476    +
430477    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
430478    +
430479    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
430480    +
430481    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
430482    +
430483    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
430484    +
430485    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
430486    +
430487    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
The SAS System

430488    +
430489    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
430490    +
430491    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
430492    +
430493    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
430494    +
430495    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
430496    +
430497    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
430498    +
430499    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
430500    +
430501    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
430502    +
430503    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
430504    +
430505    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
430506    +
430507    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
430508    +
430509    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
430510    +
430511    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
430512    +
430513    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
430514    +
430515    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
430516    +
430517    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
430518    +
430519    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
430520    +
430521    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
430522    +
430523    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
430524    +
430525    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
430526    +
430527    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
430528    +
430529    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
430530    +
430531    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
430532    +
430533    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
430534    +
430535    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
430536    +
430537    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
430538    +
430539    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
430540    +
430541    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
430542    +
430543    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
430544    +
430545    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
430546    +
430547    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
430548    +
430549    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
430550    +
430551    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
430552    +
430553    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
430554    +
430555    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
430556    +
430557    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
430558    +
430559    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
430560    +
430561    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
430562    +
430563    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
430564    +
430565    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
430566    +
430567    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
430568    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
430569    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
430570    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
430571    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430572    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430573    +end;
MPRINT(EM_DIAGRAM):   end;
430574    +else do;
MPRINT(EM_DIAGRAM):   else do;
430575    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
430576    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
430577    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430578    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
430579    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
430580    +   end;
MPRINT(EM_DIAGRAM):   end;
430581    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
430582    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
430583    +   end;
MPRINT(EM_DIAGRAM):   end;
430584    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430585    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
430586    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430587    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430588    +   end;
MPRINT(EM_DIAGRAM):   end;
430589    +end;
MPRINT(EM_DIAGRAM):   end;
430590    +
430591    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
430592    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
430593    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
430594    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
430595    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430596    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430597    +end;
MPRINT(EM_DIAGRAM):   end;
430598    +else do;
MPRINT(EM_DIAGRAM):   else do;
430599    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
430600    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
430601    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430602    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
430603    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
430604    +   end;
MPRINT(EM_DIAGRAM):   end;
430605    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
430606    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
430607    +   end;
MPRINT(EM_DIAGRAM):   end;
430608    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430609    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
430610    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430611    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430612    +   end;
MPRINT(EM_DIAGRAM):   end;
430613    +end;
MPRINT(EM_DIAGRAM):   end;
430614    +
430615    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
430616    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
430617    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
430618    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
430619    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430620    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430621    +end;
MPRINT(EM_DIAGRAM):   end;
430622    +else do;
MPRINT(EM_DIAGRAM):   else do;
430623    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
430624    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
430625    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430626    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
430627    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
430628    +   end;
MPRINT(EM_DIAGRAM):   end;
430629    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
430630    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
430631    +   end;
MPRINT(EM_DIAGRAM):   end;
430632    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430633    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
430634    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430635    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430636    +   end;
MPRINT(EM_DIAGRAM):   end;
430637    +end;
MPRINT(EM_DIAGRAM):   end;
430638    +
430639    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
430640    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
430641    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
430642    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
430643    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430644    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430645    +end;
MPRINT(EM_DIAGRAM):   end;
430646    +else do;
MPRINT(EM_DIAGRAM):   else do;
430647    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
430648    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
430649    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430650    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
430651    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
430652    +   end;
MPRINT(EM_DIAGRAM):   end;
430653    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
430654    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
430655    +   end;
MPRINT(EM_DIAGRAM):   end;
430656    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430657    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
430658    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430659    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430660    +   end;
MPRINT(EM_DIAGRAM):   end;
430661    +end;
MPRINT(EM_DIAGRAM):   end;
430662    +
430663    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
430664    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
430665    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
430666    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
430667    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430668    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430669    +end;
MPRINT(EM_DIAGRAM):   end;
430670    +else do;
MPRINT(EM_DIAGRAM):   else do;
430671    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
430672    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
430673    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430674    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
430675    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
430676    +   end;
MPRINT(EM_DIAGRAM):   end;
430677    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
430678    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
430679    +   end;
MPRINT(EM_DIAGRAM):   end;
430680    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430681    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
430682    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430683    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430684    +   end;
MPRINT(EM_DIAGRAM):   end;
430685    +end;
MPRINT(EM_DIAGRAM):   end;
430686    +
430687    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
430688    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
430689    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
430690    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
430691    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430692    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430693    +end;
MPRINT(EM_DIAGRAM):   end;
430694    +else do;
MPRINT(EM_DIAGRAM):   else do;
430695    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
430696    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
430697    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430698    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
430699    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
430700    +   end;
MPRINT(EM_DIAGRAM):   end;
430701    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
430702    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
430703    +   end;
MPRINT(EM_DIAGRAM):   end;
430704    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430705    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
430706    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430707    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430708    +   end;
MPRINT(EM_DIAGRAM):   end;
430709    +end;
MPRINT(EM_DIAGRAM):   end;
430710    +
430711    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
430712    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
430713    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
430714    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
430715    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430716    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430717    +end;
MPRINT(EM_DIAGRAM):   end;
430718    +else do;
MPRINT(EM_DIAGRAM):   else do;
430719    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
430720    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
430721    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430722    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
430723    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
430724    +   end;
MPRINT(EM_DIAGRAM):   end;
430725    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
430726    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
430727    +   end;
MPRINT(EM_DIAGRAM):   end;
430728    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430729    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
430730    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430731    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430732    +   end;
MPRINT(EM_DIAGRAM):   end;
430733    +end;
MPRINT(EM_DIAGRAM):   end;
430734    +
430735    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
430736    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
430737    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
430738    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
430739    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
430740    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
430741    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
430742    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
430743    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
430744    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
430745    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
430746    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
430747    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430748    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430749    +end;
MPRINT(EM_DIAGRAM):   end;
430750    +else do;
MPRINT(EM_DIAGRAM):   else do;
430751    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
430752    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
430753    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430754    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
430755    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
430756    +   end;
MPRINT(EM_DIAGRAM):   end;
430757    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
430758    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
430759    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
430760    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
430761    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
430762    +   end;
MPRINT(EM_DIAGRAM):   end;
430763    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
430764    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
430765    +   end;
MPRINT(EM_DIAGRAM):   end;
430766    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
430767    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
430768    +   end;
MPRINT(EM_DIAGRAM):   end;
430769    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
430770    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
430771    +   end;
MPRINT(EM_DIAGRAM):   end;
430772    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430773    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
430774    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
430775    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
430776    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
430777    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430778    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430779    +   end;
MPRINT(EM_DIAGRAM):   end;
430780    +end;
MPRINT(EM_DIAGRAM):   end;
430781    +
430782    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
430783    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
430784    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
430785    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
430786    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
430787    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
430788    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
430789    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
430790    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
430791    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
430792    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
430793    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
430794    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
430795    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
430796    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430797    +end;
MPRINT(EM_DIAGRAM):   end;
430798    +else do;
MPRINT(EM_DIAGRAM):   else do;
430799    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
430800    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
430801    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
430802    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
430803    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
430804    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
430805    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
430806    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
430807    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
430808    +         end;
MPRINT(EM_DIAGRAM):   end;
430809    +         else do;
MPRINT(EM_DIAGRAM):   else do;
430810    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
430811    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
430812    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
430813    +            end;
MPRINT(EM_DIAGRAM):   end;
430814    +         end;
MPRINT(EM_DIAGRAM):   end;
430815    +      end;
MPRINT(EM_DIAGRAM):   end;
430816    +      else do;
MPRINT(EM_DIAGRAM):   else do;
430817    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
430818    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
430819    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
430820    +         end;
MPRINT(EM_DIAGRAM):   end;
430821    +      end;
MPRINT(EM_DIAGRAM):   end;
430822    +   end;
MPRINT(EM_DIAGRAM):   end;
430823    +   else do;
MPRINT(EM_DIAGRAM):   else do;
430824    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
430825    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
430826    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
430827    +      end;
MPRINT(EM_DIAGRAM):   end;
430828    +      else do;
MPRINT(EM_DIAGRAM):   else do;
430829    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
430830    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
430831    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
430832    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
430833    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
430834    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
430835    +         end;
MPRINT(EM_DIAGRAM):   end;
430836    +      end;
MPRINT(EM_DIAGRAM):   end;
430837    +   end;
MPRINT(EM_DIAGRAM):   end;
430838    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
430839    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
430840    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
430841    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
430842    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
430843    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
430844    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430845    +   end;
MPRINT(EM_DIAGRAM):   end;
430846    +end;
MPRINT(EM_DIAGRAM):   end;
430847    +
430848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430849    +*** Checking missing input Interval
430850    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
430851    +
430852    +IF NMISS(
430853    +   AcceptedCmpTotal ,
430854    +   Age ,
430855    +   Frq ,
430856    +   Income ,
430857    +   Kidhome ,
430858    +   Mnt ,
430859    +   MntFishProducts ,
430860    +   MntFruits ,
430861    +   MntGoldProds ,
430862    +   MntMeatProducts ,
430863    +   MntSweetProducts ,
430864    +   MntWines ,
430865    +   MonthsAsCustomer ,
430866    +   NumCatalogPurchases ,
430867    +   NumDealsPurchases ,
430868    +   NumDistPurchases ,
430869    +   NumStorePurchases ,
430870    +   NumWebPurchases ,
430871    +   NumWebVisitsMonth ,
430872    +   RFMstat ,
430873    +   RMntFrq ,
430874    +   Recency ,
430875    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
430876    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
430877    +
430878    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
430879    +END;
MPRINT(EM_DIAGRAM):   END;
430880    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430881    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
430882    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430883    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
430884    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
430885    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
430886    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
430887    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
430888    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
430889    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
430890    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
430891    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
430892    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
430893    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
430894    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
430895    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
430896    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
430897    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
430898    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
430899    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
430900    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
430901    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
430902    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
430903    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
430904    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
430905    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
430906    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
430907    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
430908    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
430909    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
430910    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
430911    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
430912    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
430913    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
430914    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
430915    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
430916    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
430917    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
430918    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
430919    +END;
MPRINT(EM_DIAGRAM):   END;
430920    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
430921    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
430922    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
430923    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
430924    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
430925    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
430926    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
430927    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
430928    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
430929    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
430930    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
430931    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
430932    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
430933    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
430934    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
430935    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
430936    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
430937    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
430938    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
430939    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
430940    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
430941    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
430942    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
430943    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
430944    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
430945    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
430946    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
430947    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
430948    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
430949    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
430950    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
430951    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
430952    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
430953    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
430954    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
430955    +   ELSE S_NumCatalogPurchases
430956    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
430957    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
430958    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
430959    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
430960    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
430961    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
430962    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
430963    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
430964    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
430965    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
430966    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
430967    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
430968    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
430969    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
430970    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
430971    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
430972    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
430973    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
430974    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
430975    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
430976    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
430977    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
430978    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
430979    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
430980    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
430981    +END;
MPRINT(EM_DIAGRAM):   END;
430982    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430983    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
430984    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430985    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430986    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
430987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430988    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430989    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
430990    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
430991    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
430992    +   H11  =    -0.56509996505673 * S_AcceptedCmpTotal  +    -0.23063823697229 *
430993    +        S_Age  +     0.27537956875262 * S_Frq  +    -0.13998299759696 *
430994    +        S_Income  +    -0.48272554811946 * S_Kidhome
430995    +          +     0.02078968845252 * S_Mnt  +     0.39778286292195 *
430996    +        S_MntFishProducts  +    -0.05943228184406 * S_MntFruits
430997    +          +    -0.22076005674037 * S_MntGoldProds  +    -1.15470073662687 *
430998    +        S_MntMeatProducts  +     0.01689175327079 * S_MntSweetProducts
430999    +          +     0.38794071873445 * S_MntWines  +      0.0790144986614 *
431000    +        S_MonthsAsCustomer  +     -0.5385547715034 * S_NumCatalogPurchases
431001    +          +    -0.21965892172232 * S_NumDealsPurchases
431002    +          +     0.18147972034868 * S_NumDistPurchases
431003    +          +     0.36657814181657 * S_NumStorePurchases
431004    +          +      0.2558783559717 * S_NumWebPurchases
431005    +          +    -0.12008925196796 * S_NumWebVisitsMonth
431006    +          +     -0.2801394750033 * S_RFMstat  +    -0.15606351466959 *
431007    +        S_RMntFrq  +     0.37914209292496 * S_Recency
431008    +          +     0.40705261237123 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.56509996505673 * S_AcceptedCmpTotal + -0.23063823697229 * S_Age 
+ 0.27537956875262 * S_Frq + -0.13998299759696 * S_Income + -0.48272554811946 * S_Kidhome + 
0.02078968845252 * S_Mnt + 0.39778286292195 * S_MntFishProducts + -0.05943228184406 * 
S_MntFruits + -0.22076005674037 * S_MntGoldProds + -1.15470073662687 * S_MntMeatProducts + 
0.01689175327079 * S_MntSweetProducts + 0.38794071873445 * S_MntWines + 0.0790144986614 * 
S_MonthsAsCustomer + -0.5385547715034 * S_NumCatalogPurchases + -0.21965892172232 * 
S_NumDealsPurchases + 0.18147972034868 * S_NumDistPurchases + 0.36657814181657 * 
S_NumStorePurchases + 0.2558783559717 * S_NumWebPurchases + -0.12008925196796 * 
S_NumWebVisitsMonth + -0.2801394750033 * S_RFMstat + -0.15606351466959 * S_RMntFrq + 
0.37914209292496 * S_Recency + 0.40705261237123 * S_Teenhome ;
431009    +   H12  =    -0.33633432608107 * S_AcceptedCmpTotal  +     0.16353547895993 *
431010    +        S_Age  +     0.24085016715236 * S_Frq  +    -0.12216338707901 *
431011    +        S_Income  +     0.24387947620062 * S_Kidhome
431012    +          +     0.49145996867369 * S_Mnt  +      0.0578610487644 *
431013    +        S_MntFishProducts  +     0.02621200334488 * S_MntFruits
431014    +          +    -0.22909633857209 * S_MntGoldProds  +    -0.86136295830946 *
431015    +        S_MntMeatProducts  +     0.11908088548047 * S_MntSweetProducts
431016    +          +     0.63547632412982 * S_MntWines  +      0.2259508551947 *
431017    +        S_MonthsAsCustomer  +    -0.13471041074588 * S_NumCatalogPurchases
431018    +          +    -0.05257082874614 * S_NumDealsPurchases
431019    +          +     0.41456571712035 * S_NumDistPurchases
431020    +          +     0.23489798619427 * S_NumStorePurchases
431021    +          +     0.27816946712153 * S_NumWebPurchases
431022    +          +    -0.60321927125997 * S_NumWebVisitsMonth
431023    +          +    -0.13771604724576 * S_RFMstat  +     0.32661912615265 *
431024    +        S_RMntFrq  +     0.37992942536792 * S_Recency
431025    +          +     0.23123529364349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33633432608107 * S_AcceptedCmpTotal + 0.16353547895993 * S_Age 
+ 0.24085016715236 * S_Frq + -0.12216338707901 * S_Income + 0.24387947620062 * S_Kidhome + 
0.49145996867369 * S_Mnt + 0.0578610487644 * S_MntFishProducts + 0.02621200334488 * 
S_MntFruits + -0.22909633857209 * S_MntGoldProds + -0.86136295830946 * S_MntMeatProducts + 
0.11908088548047 * S_MntSweetProducts + 0.63547632412982 * S_MntWines + 0.2259508551947 * 
S_MonthsAsCustomer + -0.13471041074588 * S_NumCatalogPurchases + -0.05257082874614 * 
S_NumDealsPurchases + 0.41456571712035 * S_NumDistPurchases + 0.23489798619427 * 
S_NumStorePurchases + 0.27816946712153 * S_NumWebPurchases + -0.60321927125997 * 
S_NumWebVisitsMonth + -0.13771604724576 * S_RFMstat + 0.32661912615265 * S_RMntFrq + 
0.37992942536792 * S_Recency + 0.23123529364349 * S_Teenhome ;
431026    +   H13  =    -0.62677142457909 * S_AcceptedCmpTotal  +    -0.10225199885389 *
431027    +        S_Age  +     0.05375482280846 * S_Frq  +     -0.2276300280575 *
431028    +        S_Income  +     0.20262487803684 * S_Kidhome
431029    +          +    -0.14876269646837 * S_Mnt  +     -0.4868127566475 *
431030    +        S_MntFishProducts  +    -0.14012815992673 * S_MntFruits
431031    +          +     0.10460152409631 * S_MntGoldProds  +     0.32637815775717 *
431032    +        S_MntMeatProducts  +    -0.31544850569482 * S_MntSweetProducts
431033    +          +     0.04232116862038 * S_MntWines  +     0.04384330908855 *
431034    +        S_MonthsAsCustomer  +       0.024361263039 * S_NumCatalogPurchases
431035    +          +      0.0913099268589 * S_NumDealsPurchases
431036    +          +    -0.05574305289625 * S_NumDistPurchases
431037    +          +    -0.09928560475828 * S_NumStorePurchases
431038    +          +     0.00041482984053 * S_NumWebPurchases
431039    +          +    -0.03314322750163 * S_NumWebVisitsMonth
431040    +          +    -0.18963089491876 * S_RFMstat  +    -0.07289922796134 *
431041    +        S_RMntFrq  +     -0.0998656801694 * S_Recency
431042    +          +     0.07805710264311 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62677142457909 * S_AcceptedCmpTotal + -0.10225199885389 * S_Age 
+ 0.05375482280846 * S_Frq + -0.2276300280575 * S_Income + 0.20262487803684 * S_Kidhome + 
-0.14876269646837 * S_Mnt + -0.4868127566475 * S_MntFishProducts + -0.14012815992673 * 
S_MntFruits + 0.10460152409631 * S_MntGoldProds + 0.32637815775717 * S_MntMeatProducts + 
-0.31544850569482 * S_MntSweetProducts + 0.04232116862038 * S_MntWines + 0.04384330908855 * 
S_MonthsAsCustomer + 0.024361263039 * S_NumCatalogPurchases + 0.0913099268589 * 
S_NumDealsPurchases + -0.05574305289625 * S_NumDistPurchases + -0.09928560475828 * 
S_NumStorePurchases + 0.00041482984053 * S_NumWebPurchases + -0.03314322750163 * 
S_NumWebVisitsMonth + -0.18963089491876 * S_RFMstat + -0.07289922796134 * S_RMntFrq + 
-0.0998656801694 * S_Recency + 0.07805710264311 * S_Teenhome ;
431043    +   H14  =     0.58578346547732 * S_AcceptedCmpTotal  +     0.04716075363777 *
431044    +        S_Age  +     0.23789426503274 * S_Frq  +     0.09306785885014 *
431045    +        S_Income  +     0.26225843602768 * S_Kidhome
431046    +          +     0.28381069432619 * S_Mnt  +    -0.20750545498741 *
431047    +        S_MntFishProducts  +     -0.0153624448098 * S_MntFruits
431048    +          +    -0.02656939541352 * S_MntGoldProds  +     1.97911440218059 *
431049    +        S_MntMeatProducts  +     0.28353571629196 * S_MntSweetProducts
431050    +          +    -0.69002907264222 * S_MntWines  +    -0.01673377005001 *
431051    +        S_MonthsAsCustomer  +     1.76601520216011 * S_NumCatalogPurchases
431052    +          +     0.83559002761395 * S_NumDealsPurchases
431053    +          +     0.30813434559451 * S_NumDistPurchases
431054    +          +    -0.61391039002598 * S_NumStorePurchases
431055    +          +    -1.03190502679863 * S_NumWebPurchases
431056    +          +     0.13374464245621 * S_NumWebVisitsMonth
431057    +          +     0.34844972128972 * S_RFMstat  +     0.00077632967209 *
431058    +        S_RMntFrq  +    -0.37521605306084 * S_Recency
431059    +          +    -0.00142295377819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58578346547732 * S_AcceptedCmpTotal + 0.04716075363777 * S_Age + 
0.23789426503274 * S_Frq + 0.09306785885014 * S_Income + 0.26225843602768 * S_Kidhome + 
0.28381069432619 * S_Mnt + -0.20750545498741 * S_MntFishProducts + -0.0153624448098 * 
S_MntFruits + -0.02656939541352 * S_MntGoldProds + 1.97911440218059 * S_MntMeatProducts + 
0.28353571629196 * S_MntSweetProducts + -0.69002907264222 * S_MntWines + -0.01673377005001 * 
S_MonthsAsCustomer + 1.76601520216011 * S_NumCatalogPurchases + 0.83559002761395 * 
S_NumDealsPurchases + 0.30813434559451 * S_NumDistPurchases + -0.61391039002598 * 
S_NumStorePurchases + -1.03190502679863 * S_NumWebPurchases + 0.13374464245621 * 
S_NumWebVisitsMonth + 0.34844972128972 * S_RFMstat + 0.00077632967209 * S_RMntFrq + 
-0.37521605306084 * S_Recency + -0.00142295377819 * S_Teenhome ;
431060    +   H15  =      0.5305297970665 * S_AcceptedCmpTotal  +    -0.02853929527052 *
431061    +        S_Age  +    -0.17491582531678 * S_Frq  +     0.67721722139265 *
431062    +        S_Income  +      -0.692179901076 * S_Kidhome
431063    +          +      0.0753885945685 * S_Mnt  +     0.07509531201013 *
431064    +        S_MntFishProducts  +    -0.09558593671631 * S_MntFruits
431065    +          +     -0.1010519397785 * S_MntGoldProds  +     0.90842125479786 *
431066    +        S_MntMeatProducts  +    -0.05268487318554 * S_MntSweetProducts
431067    +          +    -0.41869343587904 * S_MntWines  +     0.00774546781662 *
431068    +        S_MonthsAsCustomer  +     0.69118571360022 * S_NumCatalogPurchases
431069    +          +     0.65604427948051 * S_NumDealsPurchases
431070    +          +     0.01430165674945 * S_NumDistPurchases
431071    +          +    -0.76865963932685 * S_NumStorePurchases
431072    +          +    -0.72521754496401 * S_NumWebPurchases
431073    +          +     1.59453686210397 * S_NumWebVisitsMonth
431074    +          +     0.07015818288598 * S_RFMstat  +    -0.48678185627279 *
431075    +        S_RMntFrq  +    -1.32992957279361 * S_Recency
431076    +          +    -0.30389277845474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.5305297970665 * S_AcceptedCmpTotal + -0.02853929527052 * S_Age + 
-0.17491582531678 * S_Frq + 0.67721722139265 * S_Income + -0.692179901076 * S_Kidhome + 
0.0753885945685 * S_Mnt + 0.07509531201013 * S_MntFishProducts + -0.09558593671631 * 
S_MntFruits + -0.1010519397785 * S_MntGoldProds + 0.90842125479786 * S_MntMeatProducts + 
-0.05268487318554 * S_MntSweetProducts + -0.41869343587904 * S_MntWines + 0.00774546781662 * 
S_MonthsAsCustomer + 0.69118571360022 * S_NumCatalogPurchases + 0.65604427948051 * 
S_NumDealsPurchases + 0.01430165674945 * S_NumDistPurchases + -0.76865963932685 * 
S_NumStorePurchases + -0.72521754496401 * S_NumWebPurchases + 1.59453686210397 * 
S_NumWebVisitsMonth + 0.07015818288598 * S_RFMstat + -0.48678185627279 * S_RMntFrq + 
-1.32992957279361 * S_Recency + -0.30389277845474 * S_Teenhome ;
431077    +   H16  =    -0.14461357872357 * S_AcceptedCmpTotal  +     0.33306933698178 *
431078    +        S_Age  +     0.23947139684336 * S_Frq  +     0.25400354895308 *
431079    +        S_Income  +    -0.23602869688727 * S_Kidhome
431080    +          +     0.01762051414513 * S_Mnt  +    -0.02278009971118 *
431081    +        S_MntFishProducts  +      0.0138100640729 * S_MntFruits
431082    +          +     0.10885605658644 * S_MntGoldProds  +    -0.08129497127342 *
431083    +        S_MntMeatProducts  +    -0.15226579430345 * S_MntSweetProducts
431084    +          +    -0.28936878643978 * S_MntWines  +     0.18699471527536 *
431085    +        S_MonthsAsCustomer  +     0.22218904316421 * S_NumCatalogPurchases
431086    +          +    -0.30337362777997 * S_NumDealsPurchases
431087    +          +     0.11551482249746 * S_NumDistPurchases
431088    +          +     0.19719845223838 * S_NumStorePurchases
431089    +          +     0.16011319337206 * S_NumWebPurchases
431090    +          +    -0.19222801416081 * S_NumWebVisitsMonth
431091    +          +    -0.21560223408993 * S_RFMstat  +    -0.09112530580192 *
431092    +        S_RMntFrq  +     0.01056840325776 * S_Recency
431093    +          +      -0.297834752682 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14461357872357 * S_AcceptedCmpTotal + 0.33306933698178 * S_Age 
+ 0.23947139684336 * S_Frq + 0.25400354895308 * S_Income + -0.23602869688727 * S_Kidhome + 
0.01762051414513 * S_Mnt + -0.02278009971118 * S_MntFishProducts + 0.0138100640729 * 
S_MntFruits + 0.10885605658644 * S_MntGoldProds + -0.08129497127342 * S_MntMeatProducts + 
-0.15226579430345 * S_MntSweetProducts + -0.28936878643978 * S_MntWines + 0.18699471527536 * 
S_MonthsAsCustomer + 0.22218904316421 * S_NumCatalogPurchases + -0.30337362777997 * 
S_NumDealsPurchases + 0.11551482249746 * S_NumDistPurchases + 0.19719845223838 * 
S_NumStorePurchases + 0.16011319337206 * S_NumWebPurchases + -0.19222801416081 * 
S_NumWebVisitsMonth + -0.21560223408993 * S_RFMstat + -0.09112530580192 * S_RMntFrq + 
0.01056840325776 * S_Recency + -0.297834752682 * S_Teenhome ;
431094    +   H17  =     0.15982134979751 * S_AcceptedCmpTotal  +    -0.10107478816004 *
431095    +        S_Age  +     0.02027525505315 * S_Frq  +     0.41229842787905 *
431096    +        S_Income  +    -0.47270881977809 * S_Kidhome
431097    +          +     0.12024996830569 * S_Mnt  +    -0.28295608579685 *
431098    +        S_MntFishProducts  +    -0.07163379649201 * S_MntFruits
431099    +          +     0.09552477346527 * S_MntGoldProds  +    -0.01286236006652 *
431100    +        S_MntMeatProducts  +     0.00943538063039 * S_MntSweetProducts
431101    +          +     0.04434518979611 * S_MntWines  +     -0.1176196348599 *
431102    +        S_MonthsAsCustomer  +      0.3393965598874 * S_NumCatalogPurchases
431103    +          +    -0.16806813676368 * S_NumDealsPurchases
431104    +          +      0.1680540538046 * S_NumDistPurchases
431105    +          +     0.09845423109173 * S_NumStorePurchases
431106    +          +     0.22281606853536 * S_NumWebPurchases
431107    +          +       0.650769024744 * S_NumWebVisitsMonth
431108    +          +     0.09481237306076 * S_RFMstat  +     0.13733671608882 *
431109    +        S_RMntFrq  +    -1.11177537596499 * S_Recency
431110    +          +     -0.4787522037445 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.15982134979751 * S_AcceptedCmpTotal + -0.10107478816004 * S_Age 
+ 0.02027525505315 * S_Frq + 0.41229842787905 * S_Income + -0.47270881977809 * S_Kidhome + 
0.12024996830569 * S_Mnt + -0.28295608579685 * S_MntFishProducts + -0.07163379649201 * 
S_MntFruits + 0.09552477346527 * S_MntGoldProds + -0.01286236006652 * S_MntMeatProducts + 
0.00943538063039 * S_MntSweetProducts + 0.04434518979611 * S_MntWines + -0.1176196348599 * 
S_MonthsAsCustomer + 0.3393965598874 * S_NumCatalogPurchases + -0.16806813676368 * 
S_NumDealsPurchases + 0.1680540538046 * S_NumDistPurchases + 0.09845423109173 * 
S_NumStorePurchases + 0.22281606853536 * S_NumWebPurchases + 0.650769024744 * 
S_NumWebVisitsMonth + 0.09481237306076 * S_RFMstat + 0.13733671608882 * S_RMntFrq + 
-1.11177537596499 * S_Recency + -0.4787522037445 * S_Teenhome ;
431111    +   H11  = H11  +     0.13366172993941 * AcceptedCmp10
431112    +          +     0.05223132673306 * AcceptedCmp20  +    -0.12431756055238 *
431113    +        AcceptedCmp30  +    -0.11023452429442 * AcceptedCmp40
431114    +          +     0.07032238409995 * AcceptedCmp50  +    -0.26682806608348 *
431115    +        Complain0  +    -0.02499813030323 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13366172993941 * AcceptedCmp10 + 0.05223132673306 * 
AcceptedCmp20 + -0.12431756055238 * AcceptedCmp30 + -0.11023452429442 * AcceptedCmp40 + 
0.07032238409995 * AcceptedCmp50 + -0.26682806608348 * Complain0 + -0.02499813030323 * 
HigherEducationBinary0 ;
431116    +   H12  = H12  +     0.00554245438596 * AcceptedCmp10
431117    +          +     0.15839567066461 * AcceptedCmp20  +     0.37076825865406 *
431118    +        AcceptedCmp30  +    -0.35554633579904 * AcceptedCmp40
431119    +          +     0.37072771407119 * AcceptedCmp50  +    -0.05194089161987 *
431120    +        Complain0  +    -0.37225966683728 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00554245438596 * AcceptedCmp10 + 0.15839567066461 * 
AcceptedCmp20 + 0.37076825865406 * AcceptedCmp30 + -0.35554633579904 * AcceptedCmp40 + 
0.37072771407119 * AcceptedCmp50 + -0.05194089161987 * Complain0 + -0.37225966683728 * 
HigherEducationBinary0 ;
431121    +   H13  = H13  +    -0.22559016468364 * AcceptedCmp10
431122    +          +     0.05833377673707 * AcceptedCmp20  +    -0.03636700985548 *
431123    +        AcceptedCmp30  +    -0.25569759811115 * AcceptedCmp40
431124    +          +    -0.04684336742413 * AcceptedCmp50  +     0.04628503093017 *
431125    +        Complain0  +     -0.0274690420199 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22559016468364 * AcceptedCmp10 + 0.05833377673707 * 
AcceptedCmp20 + -0.03636700985548 * AcceptedCmp30 + -0.25569759811115 * AcceptedCmp40 + 
-0.04684336742413 * AcceptedCmp50 + 0.04628503093017 * Complain0 + -0.0274690420199 * 
HigherEducationBinary0 ;
431126    +   H14  = H14  +    -0.32760772054296 * AcceptedCmp10
431127    +          +      -0.115974524782 * AcceptedCmp20  +     0.17243389922886 *
431128    +        AcceptedCmp30  +      0.2619520865817 * AcceptedCmp40
431129    +          +    -0.10340137441821 * AcceptedCmp50  +     0.07381382988108 *
431130    +        Complain0  +    -0.02819765040354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32760772054296 * AcceptedCmp10 + -0.115974524782 * 
AcceptedCmp20 + 0.17243389922886 * AcceptedCmp30 + 0.2619520865817 * AcceptedCmp40 + 
-0.10340137441821 * AcceptedCmp50 + 0.07381382988108 * Complain0 + -0.02819765040354 * 
HigherEducationBinary0 ;
431131    +   H15  = H15  +    -0.26084605443779 * AcceptedCmp10
431132    +          +    -0.16387661015452 * AcceptedCmp20  +    -0.16566201323403 *
431133    +        AcceptedCmp30  +    -0.35263428487299 * AcceptedCmp40
431134    +          +    -0.32839719627655 * AcceptedCmp50  +     0.02360464331322 *
431135    +        Complain0  +    -0.27283273238131 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.26084605443779 * AcceptedCmp10 + -0.16387661015452 * 
AcceptedCmp20 + -0.16566201323403 * AcceptedCmp30 + -0.35263428487299 * AcceptedCmp40 + 
-0.32839719627655 * AcceptedCmp50 + 0.02360464331322 * Complain0 + -0.27283273238131 * 
HigherEducationBinary0 ;
431136    +   H16  = H16  +     0.01304183242542 * AcceptedCmp10
431137    +          +     0.04566997893346 * AcceptedCmp20  +    -0.04050514571317 *
431138    +        AcceptedCmp30  +    -0.01620566973366 * AcceptedCmp40
431139    +          +    -0.07167046817245 * AcceptedCmp50  +    -0.06511918231577 *
431140    +        Complain0  +     0.23270681066978 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304183242542 * AcceptedCmp10 + 0.04566997893346 * 
AcceptedCmp20 + -0.04050514571317 * AcceptedCmp30 + -0.01620566973366 * AcceptedCmp40 + 
-0.07167046817245 * AcceptedCmp50 + -0.06511918231577 * Complain0 + 0.23270681066978 * 
HigherEducationBinary0 ;
431141    +   H17  = H17  +     0.01260470527699 * AcceptedCmp10
431142    +          +    -0.16882003264299 * AcceptedCmp20  +    -0.27439169721218 *
431143    +        AcceptedCmp30  +    -0.26741927505062 * AcceptedCmp40
431144    +          +    -0.13327257255598 * AcceptedCmp50  +     -0.1392453082395 *
431145    +        Complain0  +     0.31998419104809 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01260470527699 * AcceptedCmp10 + -0.16882003264299 * 
AcceptedCmp20 + -0.27439169721218 * AcceptedCmp30 + -0.26741927505062 * AcceptedCmp40 + 
-0.13327257255598 * AcceptedCmp50 + -0.1392453082395 * Complain0 + 0.31998419104809 * 
HigherEducationBinary0 ;
431146    +   H11  = H11  +     0.06102738975935 * Education2n_Cycle
431147    +          +     0.28943057977991 * EducationBasic  +     0.30966749770345 *
431148    +        EducationGraduation  +     0.02445863067232 * EducationMaster
431149    +          +     0.42984001630756 * Marital_StatusDivorced
431150    +          +     -0.4660144877239 * Marital_StatusMarried
431151    +          +     0.44888148801285 * Marital_StatusSingle
431152    +          +    -0.35337765969826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06102738975935 * Education2n_Cycle + 0.28943057977991 * 
EducationBasic + 0.30966749770345 * EducationGraduation + 0.02445863067232 * EducationMaster + 
0.42984001630756 * Marital_StatusDivorced + -0.4660144877239 * Marital_StatusMarried + 
0.44888148801285 * Marital_StatusSingle + -0.35337765969826 * Marital_StatusTogether ;
431153    +   H12  = H12  +    -0.14873776047169 * Education2n_Cycle
431154    +          +     0.02114476645887 * EducationBasic  +    -0.06983582232977 *
431155    +        EducationGraduation  +     0.28773168978233 * EducationMaster
431156    +          +     0.10758942571981 * Marital_StatusDivorced
431157    +          +     0.51795960036213 * Marital_StatusMarried
431158    +          +    -0.40242992087783 * Marital_StatusSingle
431159    +          +     0.59638712724774 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.14873776047169 * Education2n_Cycle + 0.02114476645887 * 
EducationBasic + -0.06983582232977 * EducationGraduation + 0.28773168978233 * EducationMaster 
+ 0.10758942571981 * Marital_StatusDivorced + 0.51795960036213 * Marital_StatusMarried + 
-0.40242992087783 * Marital_StatusSingle + 0.59638712724774 * Marital_StatusTogether ;
431160    +   H13  = H13  +     0.07261326268026 * Education2n_Cycle
431161    +          +     0.22828601903683 * EducationBasic  +    -0.09808260614396 *
431162    +        EducationGraduation  +      0.1986661885803 * EducationMaster
431163    +          +    -0.05264595890678 * Marital_StatusDivorced
431164    +          +     0.07468414180829 * Marital_StatusMarried
431165    +          +     0.20145352309024 * Marital_StatusSingle
431166    +          +     0.21800692249317 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07261326268026 * Education2n_Cycle + 0.22828601903683 * 
EducationBasic + -0.09808260614396 * EducationGraduation + 0.1986661885803 * EducationMaster + 
-0.05264595890678 * Marital_StatusDivorced + 0.07468414180829 * Marital_StatusMarried + 
0.20145352309024 * Marital_StatusSingle + 0.21800692249317 * Marital_StatusTogether ;
431167    +   H14  = H14  +    -0.16591436756181 * Education2n_Cycle
431168    +          +     0.10944605668626 * EducationBasic  +    -0.04736510771915 *
431169    +        EducationGraduation  +     0.28768591072195 * EducationMaster
431170    +          +    -0.41440932029593 * Marital_StatusDivorced
431171    +          +     0.65630698363184 * Marital_StatusMarried
431172    +          +    -0.37277384861759 * Marital_StatusSingle
431173    +          +     0.66742239790358 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16591436756181 * Education2n_Cycle + 0.10944605668626 * 
EducationBasic + -0.04736510771915 * EducationGraduation + 0.28768591072195 * EducationMaster 
+ -0.41440932029593 * Marital_StatusDivorced + 0.65630698363184 * Marital_StatusMarried + 
-0.37277384861759 * Marital_StatusSingle + 0.66742239790358 * Marital_StatusTogether ;
431174    +   H15  = H15  +     0.14874986561786 * Education2n_Cycle
431175    +          +    -0.26075650045962 * EducationBasic  +     0.31386399943318 *
431176    +        EducationGraduation  +    -0.19252087246622 * EducationMaster
431177    +          +     0.86284304352233 * Marital_StatusDivorced
431178    +          +    -0.85716490342524 * Marital_StatusMarried
431179    +          +     0.74516572826411 * Marital_StatusSingle
431180    +          +    -0.94596838391348 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14874986561786 * Education2n_Cycle + -0.26075650045962 * 
EducationBasic + 0.31386399943318 * EducationGraduation + -0.19252087246622 * EducationMaster 
+ 0.86284304352233 * Marital_StatusDivorced + -0.85716490342524 * Marital_StatusMarried + 
0.74516572826411 * Marital_StatusSingle + -0.94596838391348 * Marital_StatusTogether ;
431181    +   H16  = H16  +     0.05955306560033 * Education2n_Cycle
431182    +          +    -0.33179362702455 * EducationBasic  +    -0.11577784652643 *
431183    +        EducationGraduation  +    -0.12481149416801 * EducationMaster
431184    +          +    -0.11928801837478 * Marital_StatusDivorced
431185    +          +    -0.15909233409421 * Marital_StatusMarried
431186    +          +     0.34325131781601 * Marital_StatusSingle
431187    +          +    -0.10826134118683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05955306560033 * Education2n_Cycle + -0.33179362702455 * 
EducationBasic + -0.11577784652643 * EducationGraduation + -0.12481149416801 * EducationMaster 
+ -0.11928801837478 * Marital_StatusDivorced + -0.15909233409421 * Marital_StatusMarried + 
0.34325131781601 * Marital_StatusSingle + -0.10826134118683 * Marital_StatusTogether ;
431188    +   H17  = H17  +      0.0153077476724 * Education2n_Cycle
431189    +          +    -0.21261765604905 * EducationBasic  +    -0.12217248919773 *
431190    +        EducationGraduation  +    -0.08573366282988 * EducationMaster
431191    +          +     0.15109481730803 * Marital_StatusDivorced
431192    +          +    -1.01578758379559 * Marital_StatusMarried
431193    +          +     0.70421923836193 * Marital_StatusSingle
431194    +          +    -0.63730370729331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0153077476724 * Education2n_Cycle + -0.21261765604905 * 
EducationBasic + -0.12217248919773 * EducationGraduation + -0.08573366282988 * EducationMaster 
+ 0.15109481730803 * Marital_StatusDivorced + -1.01578758379559 * Marital_StatusMarried + 
0.70421923836193 * Marital_StatusSingle + -0.63730370729331 * Marital_StatusTogether ;
431195    +   H11  =     0.02509750258391 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02509750258391 + H11 ;
431196    +   H12  =    -0.58342149790654 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58342149790654 + H12 ;
431197    +   H13  =    -1.03881761031374 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03881761031374 + H13 ;
431198    +   H14  =     0.84311700438452 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84311700438452 + H14 ;
431199    +   H15  =    -0.42140887324666 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42140887324666 + H15 ;
431200    +   H16  =    -1.77342637643401 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77342637643401 + H16 ;
431201    +   H17  =    -1.60862695180721 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.60862695180721 + H17 ;
431202    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
431203    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
431204    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
431205    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
431206    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
431207    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
431208    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
431209    +END;
MPRINT(EM_DIAGRAM):   END;
431210    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
431211    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
431212    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
431213    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
431214    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
431215    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
431216    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
431217    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
431218    +END;
MPRINT(EM_DIAGRAM):   END;
431219    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431220    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
431221    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431222    +
431223    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
431224    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
431225    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
431226    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
431227    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
431228    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
431229    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
431230    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
431231    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
431232    +end;
MPRINT(EM_DIAGRAM):   end;
431233    +else do;
MPRINT(EM_DIAGRAM):   else do;
431234    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
431235    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
431236    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
431237    +   end;
MPRINT(EM_DIAGRAM):   end;
431238    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
431239    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
431240    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
431241    +   end;
MPRINT(EM_DIAGRAM):   end;
431242    +   else do;
MPRINT(EM_DIAGRAM):   else do;
431243    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
431244    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
431245    +   end;
MPRINT(EM_DIAGRAM):   end;
431246    +end;
MPRINT(EM_DIAGRAM):   end;
431247    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
431248    +   P_DepVar1  =    -1.59177479560764 * H11  +    -1.61754897134463 * H12
431249    +          +     0.34365500815599 * H13  +     3.22562781339883 * H14
431250    +          +     3.60138310710336 * H15  +     0.57380881905142 * H16
431251    +          +     2.14937033273881 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.59177479560764 * H11 + -1.61754897134463 * H12 + 
0.34365500815599 * H13 + 3.22562781339883 * H14 + 3.60138310710336 * H15 + 0.57380881905142 * 
H16 + 2.14937033273881 * H17 ;
431252    +   P_DepVar1  =      -2.174490498324 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.174490498324 + P_DepVar1 ;
431253    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
431254    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
431255    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
431256    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
431257    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
431258    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
431259    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
431260    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
431261    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
431262    +END;
MPRINT(EM_DIAGRAM):   END;
431263    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
431264    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
431265    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
431266    +END;
MPRINT(EM_DIAGRAM):   END;
431267    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
431268    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
431269    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
431270    +END;
MPRINT(EM_DIAGRAM):   END;
431271    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
431272    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
431273    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
431274    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
431275    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
431276    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
431277    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
431278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431279    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
431280    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431281    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
431282    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
431283    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
431284    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
431285    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
431286    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
431287    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
431288    +END;
MPRINT(EM_DIAGRAM):   END;
431289    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
431290    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
431291    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
431292    +drop
431293    +H11
431294    +H12
431295    +H13
431296    +H14
431297    +H15
431298    +H16
431299    +H17
431300    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
431301    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
431302    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
431303    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
431304    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
431305    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
431306    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
431307    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
431308    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
431309    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
431310    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
431311    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
431312    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
431313    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
431314    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
431315    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
431316    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
431317    +* Ensmbl27: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 7 of 7;
431318    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
431319    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
431320    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
431321    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
431322    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
431323    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
431324    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
431325    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
431326    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
431327    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
431328    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
431329    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
431330    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
431331    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
431332    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
431333    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
431334    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
431335    +LENGTH _WARN_ $4
431336    +      F_DepVar  $ 12
431337    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
431338    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
431339    +
431340    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
431341    +
431342    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
431343    +
431344    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
431345    +
431346    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
431347    +
431348    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
431349    +
431350    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
431351    +
431352    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
431353    +
431354    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
431355    +
431356    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
431357    +
431358    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
431359    +
431360    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
431361    +
431362    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
431363    +
431364    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
431365    +
431366    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
431367    +
431368    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
431369    +
431370    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
431371    +
431372    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
431373    +
431374    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
431375    +
431376    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
431377    +
431378    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
431379    +
431380    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
431381    +
431382    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
431383    +
431384    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
431385    +
431386    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
431387    +
431388    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
431389    +
431390    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
431391    +
431392    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
431393    +
431394    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
431395    +
431396    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
431397    +
431398    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
431399    +
431400    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
431401    +
431402    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
431403    +
431404    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
431405    +
431406    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
431407    +
431408    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
431409    +
431410    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
431411    +
431412    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
431413    +
431414    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
431415    +
431416    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
431417    +
431418    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
431419    +
431420    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
431421    +
431422    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
431423    +
431424    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
431425    +
431426    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
431427    +
431428    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
431429    +
431430    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
431431    +
431432    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
431433    +
431434    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
431435    +
431436    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
431437    +
431438    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
431439    +
431440    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
431441    +
431442    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
431443    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
431444    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
431445    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
431446    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
431447    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431448    +end;
MPRINT(EM_DIAGRAM):   end;
431449    +else do;
MPRINT(EM_DIAGRAM):   else do;
431450    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
431451    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
431452    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
431453    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
431454    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
431455    +   end;
MPRINT(EM_DIAGRAM):   end;
431456    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
431457    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
431458    +   end;
MPRINT(EM_DIAGRAM):   end;
431459    +   else do;
MPRINT(EM_DIAGRAM):   else do;
431460    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
431461    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
431462    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431463    +   end;
MPRINT(EM_DIAGRAM):   end;
431464    +end;
MPRINT(EM_DIAGRAM):   end;
431465    +
431466    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
431467    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
431468    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
431469    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
431470    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
431471    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431472    +end;
MPRINT(EM_DIAGRAM):   end;
431473    +else do;
MPRINT(EM_DIAGRAM):   else do;
431474    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
431475    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
431476    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
431477    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
431478    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
431479    +   end;
MPRINT(EM_DIAGRAM):   end;
431480    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
431481    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
431482    +   end;
MPRINT(EM_DIAGRAM):   end;
431483    +   else do;
MPRINT(EM_DIAGRAM):   else do;
431484    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
431485    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
431486    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431487    +   end;
MPRINT(EM_DIAGRAM):   end;
431488    +end;
MPRINT(EM_DIAGRAM):   end;
431489    +
431490    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
431491    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
431492    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
431493    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
431494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
431495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431496    +end;
MPRINT(EM_DIAGRAM):   end;
431497    +else do;
MPRINT(EM_DIAGRAM):   else do;
431498    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
431499    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
431500    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
431501    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
431502    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
431503    +   end;
MPRINT(EM_DIAGRAM):   end;
431504    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
431505    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
431506    +   end;
MPRINT(EM_DIAGRAM):   end;
431507    +   else do;
MPRINT(EM_DIAGRAM):   else do;
431508    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
431509    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
431510    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431511    +   end;
MPRINT(EM_DIAGRAM):   end;
431512    +end;
MPRINT(EM_DIAGRAM):   end;
431513    +
431514    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
431515    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
431516    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
431517    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
431518    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
431519    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431520    +end;
MPRINT(EM_DIAGRAM):   end;
431521    +else do;
MPRINT(EM_DIAGRAM):   else do;
431522    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
431523    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
431524    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
431525    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
431526    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
431527    +   end;
MPRINT(EM_DIAGRAM):   end;
431528    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
431529    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
431530    +   end;
MPRINT(EM_DIAGRAM):   end;
431531    +   else do;
MPRINT(EM_DIAGRAM):   else do;
431532    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
431533    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
431534    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431535    +   end;
MPRINT(EM_DIAGRAM):   end;
431536    +end;
MPRINT(EM_DIAGRAM):   end;
431537    +
431538    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
431539    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
431540    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
431541    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
431542    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
431543    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431544    +end;
MPRINT(EM_DIAGRAM):   end;
431545    +else do;
MPRINT(EM_DIAGRAM):   else do;
431546    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
431547    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
431548    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
431549    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
431550    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
431551    +   end;
MPRINT(EM_DIAGRAM):   end;
431552    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
431553    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
431554    +   end;
MPRINT(EM_DIAGRAM):   end;
431555    +   else do;
MPRINT(EM_DIAGRAM):   else do;
431556    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
431557    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
431558    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431559    +   end;
MPRINT(EM_DIAGRAM):   end;
431560    +end;
MPRINT(EM_DIAGRAM):   end;
431561    +
431562    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
431563    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
431564    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
431565    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
431566    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
431567    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431568    +end;
MPRINT(EM_DIAGRAM):   end;
431569    +else do;
MPRINT(EM_DIAGRAM):   else do;
431570    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
431571    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
431572    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
431573    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
431574    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
431575    +   end;
MPRINT(EM_DIAGRAM):   end;
431576    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
431577    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
431578    +   end;
MPRINT(EM_DIAGRAM):   end;
431579    +   else do;
MPRINT(EM_DIAGRAM):   else do;
431580    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
431581    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
431582    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431583    +   end;
MPRINT(EM_DIAGRAM):   end;
431584    +end;
MPRINT(EM_DIAGRAM):   end;
431585    +
431586    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
431587    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
431588    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
431589    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
431590    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
431591    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431592    +end;
MPRINT(EM_DIAGRAM):   end;
431593    +else do;
MPRINT(EM_DIAGRAM):   else do;
431594    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
431595    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
431596    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
431597    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
431598    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
431599    +   end;
MPRINT(EM_DIAGRAM):   end;
431600    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
431601    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
431602    +   end;
MPRINT(EM_DIAGRAM):   end;
431603    +   else do;
MPRINT(EM_DIAGRAM):   else do;
431604    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
431605    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
431606    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431607    +   end;
MPRINT(EM_DIAGRAM):   end;
431608    +end;
MPRINT(EM_DIAGRAM):   end;
431609    +
431610    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
431611    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
431612    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
431613    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
431614    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
431615    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
431616    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
431617    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
431618    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
431619    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
431620    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
431621    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
431622    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
431623    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431624    +end;
MPRINT(EM_DIAGRAM):   end;
431625    +else do;
MPRINT(EM_DIAGRAM):   else do;
431626    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
431627    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
431628    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
431629    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
431630    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
431631    +   end;
MPRINT(EM_DIAGRAM):   end;
431632    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
431633    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
431634    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
431635    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
431636    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
431637    +   end;
MPRINT(EM_DIAGRAM):   end;
431638    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
431639    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
431640    +   end;
MPRINT(EM_DIAGRAM):   end;
431641    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
431642    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
431643    +   end;
MPRINT(EM_DIAGRAM):   end;
431644    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
431645    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
431646    +   end;
MPRINT(EM_DIAGRAM):   end;
431647    +   else do;
MPRINT(EM_DIAGRAM):   else do;
431648    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
431649    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
431650    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
431651    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
431652    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
431653    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431654    +   end;
MPRINT(EM_DIAGRAM):   end;
431655    +end;
MPRINT(EM_DIAGRAM):   end;
431656    +
431657    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
431658    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
431659    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
431660    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
431661    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
431662    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
431663    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
431664    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
431665    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
431666    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
431667    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
431668    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
431669    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
431670    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
431671    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431672    +end;
MPRINT(EM_DIAGRAM):   end;
431673    +else do;
MPRINT(EM_DIAGRAM):   else do;
431674    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
431675    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
431676    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
431677    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
431678    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
431679    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
431680    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
431681    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
431682    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
431683    +         end;
MPRINT(EM_DIAGRAM):   end;
431684    +         else do;
MPRINT(EM_DIAGRAM):   else do;
431685    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
431686    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
431687    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
431688    +            end;
MPRINT(EM_DIAGRAM):   end;
431689    +         end;
MPRINT(EM_DIAGRAM):   end;
431690    +      end;
MPRINT(EM_DIAGRAM):   end;
431691    +      else do;
MPRINT(EM_DIAGRAM):   else do;
431692    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
431693    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
431694    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
431695    +         end;
MPRINT(EM_DIAGRAM):   end;
431696    +      end;
MPRINT(EM_DIAGRAM):   end;
431697    +   end;
MPRINT(EM_DIAGRAM):   end;
431698    +   else do;
MPRINT(EM_DIAGRAM):   else do;
431699    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
431700    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
431701    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
431702    +      end;
MPRINT(EM_DIAGRAM):   end;
431703    +      else do;
MPRINT(EM_DIAGRAM):   else do;
431704    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
431705    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
431706    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
431707    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
431708    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
431709    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
431710    +         end;
MPRINT(EM_DIAGRAM):   end;
431711    +      end;
MPRINT(EM_DIAGRAM):   end;
431712    +   end;
MPRINT(EM_DIAGRAM):   end;
431713    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
431714    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
431715    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
431716    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
431717    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
431718    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
431719    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431720    +   end;
MPRINT(EM_DIAGRAM):   end;
431721    +end;
MPRINT(EM_DIAGRAM):   end;
431722    +
431723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431724    +*** Checking missing input Interval
431725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
431726    +
431727    +IF NMISS(
431728    +   AcceptedCmpTotal ,
431729    +   Age ,
431730    +   Frq ,
431731    +   Income ,
431732    +   Kidhome ,
431733    +   Mnt ,
431734    +   MntFishProducts ,
431735    +   MntFruits ,
431736    +   MntGoldProds ,
431737    +   MntMeatProducts ,
431738    +   MntSweetProducts ,
431739    +   MntWines ,
431740    +   MonthsAsCustomer ,
431741    +   NumCatalogPurchases ,
431742    +   NumDealsPurchases ,
431743    +   NumDistPurchases ,
431744    +   NumStorePurchases ,
431745    +   NumWebPurchases ,
431746    +   NumWebVisitsMonth ,
431747    +   RFMstat ,
431748    +   RMntFrq ,
431749    +   Recency ,
431750    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
431751    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
431752    +
431753    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
431754    +END;
MPRINT(EM_DIAGRAM):   END;
431755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431756    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
431757    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431758    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
431759    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
431760    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
431761    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
431762    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
431763    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
431764    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
431765    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
431766    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
431767    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
431768    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
431769    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
431770    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
431771    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
431772    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
431773    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
431774    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
431775    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
431776    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
431777    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
431778    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
431779    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
431780    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
431781    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
431782    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
431783    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
431784    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
431785    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
431786    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
431787    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
431788    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
431789    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
431790    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
431791    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
431792    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
431793    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
431794    +END;
MPRINT(EM_DIAGRAM):   END;
431795    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
431796    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
431797    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
431798    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
431799    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
431800    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
431801    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
431802    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
431803    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
431804    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
431805    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
431806    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
431807    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
431808    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
431809    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
431810    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
431811    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
431812    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
431813    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
431814    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
431815    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
431816    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
431817    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
431818    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
431819    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
431820    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
431821    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
431822    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
431823    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
431824    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
431825    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
431826    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
431827    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
431828    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
431829    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
431830    +   ELSE S_NumCatalogPurchases
431831    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
431832    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
431833    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
431834    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
431835    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
431836    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
431837    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
431838    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
431839    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
431840    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
431841    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
431842    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
431843    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
431844    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
431845    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
431846    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
431847    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
431848    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
431849    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
431850    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
431851    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
431852    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
431853    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
431854    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
431855    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
431856    +END;
MPRINT(EM_DIAGRAM):   END;
431857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431858    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
431859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431861    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
431862    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431863    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431864    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
431865    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
431866    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
431867    +   H11  =     0.17501563716249 * S_AcceptedCmpTotal  +    -0.36554114449053 *
431868    +        S_Age  +    -0.38580134783102 * S_Frq  +    -0.21908382657217 *
431869    +        S_Income  +    -0.07407502089271 * S_Kidhome
431870    +          +     0.12840196100631 * S_Mnt  +     0.03929964535457 *
431871    +        S_MntFishProducts  +    -0.07747223779114 * S_MntFruits
431872    +          +     0.06367041786619 * S_MntGoldProds  +     0.97858536127159 *
431873    +        S_MntMeatProducts  +     -0.2631541253916 * S_MntSweetProducts
431874    +          +    -0.21009967468315 * S_MntWines  +     0.01772965748746 *
431875    +        S_MonthsAsCustomer  +     0.43689279156654 * S_NumCatalogPurchases
431876    +          +     0.85324794786604 * S_NumDealsPurchases
431877    +          +     0.23632583007911 * S_NumDistPurchases
431878    +          +    -0.63089078988761 * S_NumStorePurchases
431879    +          +    -0.92352748602374 * S_NumWebPurchases
431880    +          +     0.90081938176641 * S_NumWebVisitsMonth
431881    +          +     0.42330049584845 * S_RFMstat  +     0.02105180951094 *
431882    +        S_RMntFrq  +    -0.84474450609256 * S_Recency
431883    +          +     0.18914162652023 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17501563716249 * S_AcceptedCmpTotal + -0.36554114449053 * S_Age 
+ -0.38580134783102 * S_Frq + -0.21908382657217 * S_Income + -0.07407502089271 * S_Kidhome + 
0.12840196100631 * S_Mnt + 0.03929964535457 * S_MntFishProducts + -0.07747223779114 * 
S_MntFruits + 0.06367041786619 * S_MntGoldProds + 0.97858536127159 * S_MntMeatProducts + 
-0.2631541253916 * S_MntSweetProducts + -0.21009967468315 * S_MntWines + 0.01772965748746 * 
S_MonthsAsCustomer + 0.43689279156654 * S_NumCatalogPurchases + 0.85324794786604 * 
S_NumDealsPurchases + 0.23632583007911 * S_NumDistPurchases + -0.63089078988761 * 
S_NumStorePurchases + -0.92352748602374 * S_NumWebPurchases + 0.90081938176641 * 
S_NumWebVisitsMonth + 0.42330049584845 * S_RFMstat + 0.02105180951094 * S_RMntFrq + 
-0.84474450609256 * S_Recency + 0.18914162652023 * S_Teenhome ;
431884    +   H12  =     0.55034639645204 * S_AcceptedCmpTotal  +     0.09306745130673 *
431885    +        S_Age  +    -0.38144414546432 * S_Frq  +     0.39346487803525 *
431886    +        S_Income  +    -0.46092998969912 * S_Kidhome
431887    +          +    -0.21419775022567 * S_Mnt  +     -0.1419038030075 *
431888    +        S_MntFishProducts  +    -0.15086475751383 * S_MntFruits
431889    +          +    -0.10895314995081 * S_MntGoldProds  +     0.54340688178323 *
431890    +        S_MntMeatProducts  +     0.02370277071375 * S_MntSweetProducts
431891    +          +    -0.36083928148144 * S_MntWines  +    -0.09471203372244 *
431892    +        S_MonthsAsCustomer  +     0.35874170593009 * S_NumCatalogPurchases
431893    +          +     0.19685325076814 * S_NumDealsPurchases
431894    +          +     -0.0145000015739 * S_NumDistPurchases
431895    +          +     -0.5790386407956 * S_NumStorePurchases
431896    +          +    -0.36258404984745 * S_NumWebPurchases
431897    +          +     0.85107574614775 * S_NumWebVisitsMonth
431898    +          +     0.00898383307287 * S_RFMstat  +    -0.09672451639577 *
431899    +        S_RMntFrq  +     -0.7907561263466 * S_Recency
431900    +          +    -0.34901055038946 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.55034639645204 * S_AcceptedCmpTotal + 0.09306745130673 * S_Age + 
-0.38144414546432 * S_Frq + 0.39346487803525 * S_Income + -0.46092998969912 * S_Kidhome + 
-0.21419775022567 * S_Mnt + -0.1419038030075 * S_MntFishProducts + -0.15086475751383 * 
S_MntFruits + -0.10895314995081 * S_MntGoldProds + 0.54340688178323 * S_MntMeatProducts + 
0.02370277071375 * S_MntSweetProducts + -0.36083928148144 * S_MntWines + -0.09471203372244 * 
S_MonthsAsCustomer + 0.35874170593009 * S_NumCatalogPurchases + 0.19685325076814 * 
S_NumDealsPurchases + -0.0145000015739 * S_NumDistPurchases + -0.5790386407956 * 
S_NumStorePurchases + -0.36258404984745 * S_NumWebPurchases + 0.85107574614775 * 
S_NumWebVisitsMonth + 0.00898383307287 * S_RFMstat + -0.09672451639577 * S_RMntFrq + 
-0.7907561263466 * S_Recency + -0.34901055038946 * S_Teenhome ;
431901    +   H13  =     0.06080099463512 * S_AcceptedCmpTotal  +    -0.35825472239366 *
431902    +        S_Age  +    -0.01087502010135 * S_Frq  +    -0.29478705368425 *
431903    +        S_Income  +    -0.03273972934545 * S_Kidhome
431904    +          +    -0.13622677356361 * S_Mnt  +     0.18060273292985 *
431905    +        S_MntFishProducts  +     0.11972433239232 * S_MntFruits
431906    +          +    -0.03986660643959 * S_MntGoldProds  +     0.15555612346447 *
431907    +        S_MntMeatProducts  +      0.4343662861634 * S_MntSweetProducts
431908    +          +     0.03013514085559 * S_MntWines  +     0.05644710625745 *
431909    +        S_MonthsAsCustomer  +     -0.2306050975257 * S_NumCatalogPurchases
431910    +          +    -0.17268337796364 * S_NumDealsPurchases
431911    +          +    -0.23588860225052 * S_NumDistPurchases
431912    +          +     0.41380073293559 * S_NumStorePurchases
431913    +          +    -0.28143763726207 * S_NumWebPurchases
431914    +          +    -0.30914618130297 * S_NumWebVisitsMonth
431915    +          +     -0.4714998087492 * S_RFMstat  +    -0.00966743749996 *
431916    +        S_RMntFrq  +     0.81671444530655 * S_Recency
431917    +          +    -0.05979541602822 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06080099463512 * S_AcceptedCmpTotal + -0.35825472239366 * S_Age 
+ -0.01087502010135 * S_Frq + -0.29478705368425 * S_Income + -0.03273972934545 * S_Kidhome + 
-0.13622677356361 * S_Mnt + 0.18060273292985 * S_MntFishProducts + 0.11972433239232 * 
S_MntFruits + -0.03986660643959 * S_MntGoldProds + 0.15555612346447 * S_MntMeatProducts + 
0.4343662861634 * S_MntSweetProducts + 0.03013514085559 * S_MntWines + 0.05644710625745 * 
S_MonthsAsCustomer + -0.2306050975257 * S_NumCatalogPurchases + -0.17268337796364 * 
S_NumDealsPurchases + -0.23588860225052 * S_NumDistPurchases + 0.41380073293559 * 
S_NumStorePurchases + -0.28143763726207 * S_NumWebPurchases + -0.30914618130297 * 
S_NumWebVisitsMonth + -0.4714998087492 * S_RFMstat + -0.00966743749996 * S_RMntFrq + 
0.81671444530655 * S_Recency + -0.05979541602822 * S_Teenhome ;
431918    +   H14  =     0.02236165555251 * S_AcceptedCmpTotal  +     0.05878714073281 *
431919    +        S_Age  +      0.0220418507559 * S_Frq  +    -0.46976280127461 *
431920    +        S_Income  +    -0.06518326597517 * S_Kidhome
431921    +          +     0.01561710446128 * S_Mnt  +    -0.19888119617767 *
431922    +        S_MntFishProducts  +    -0.11099637502315 * S_MntFruits
431923    +          +     -0.1633241343451 * S_MntGoldProds  +    -0.65560791277244 *
431924    +        S_MntMeatProducts  +     0.08426248977242 * S_MntSweetProducts
431925    +          +     0.40538193250283 * S_MntWines  +     0.29709872876156 *
431926    +        S_MonthsAsCustomer  +    -0.64274287388323 * S_NumCatalogPurchases
431927    +          +    -0.46119515763011 * S_NumDealsPurchases
431928    +          +     0.16268822540635 * S_NumDistPurchases
431929    +          +     0.21653483412929 * S_NumStorePurchases
431930    +          +     0.46040401497854 * S_NumWebPurchases
431931    +          +     -0.7361096668674 * S_NumWebVisitsMonth
431932    +          +     0.21120270259957 * S_RFMstat  +    -0.01820419721495 *
431933    +        S_RMntFrq  +     0.80628261349293 * S_Recency
431934    +          +     0.30269385840066 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02236165555251 * S_AcceptedCmpTotal + 0.05878714073281 * S_Age + 
0.0220418507559 * S_Frq + -0.46976280127461 * S_Income + -0.06518326597517 * S_Kidhome + 
0.01561710446128 * S_Mnt + -0.19888119617767 * S_MntFishProducts + -0.11099637502315 * 
S_MntFruits + -0.1633241343451 * S_MntGoldProds + -0.65560791277244 * S_MntMeatProducts + 
0.08426248977242 * S_MntSweetProducts + 0.40538193250283 * S_MntWines + 0.29709872876156 * 
S_MonthsAsCustomer + -0.64274287388323 * S_NumCatalogPurchases + -0.46119515763011 * 
S_NumDealsPurchases + 0.16268822540635 * S_NumDistPurchases + 0.21653483412929 * 
S_NumStorePurchases + 0.46040401497854 * S_NumWebPurchases + -0.7361096668674 * 
S_NumWebVisitsMonth + 0.21120270259957 * S_RFMstat + -0.01820419721495 * S_RMntFrq + 
0.80628261349293 * S_Recency + 0.30269385840066 * S_Teenhome ;
431935    +   H15  =    -0.12213750739956 * S_AcceptedCmpTotal  +     0.11214050296975 *
431936    +        S_Age  +    -0.30158163448762 * S_Frq  +    -0.65785861830444 *
431937    +        S_Income  +     0.55328239552566 * S_Kidhome
431938    +          +    -0.10286828951896 * S_Mnt  +     0.02737244457507 *
431939    +        S_MntFishProducts  +     0.06403371753368 * S_MntFruits
431940    +          +     0.03413466437505 * S_MntGoldProds  +    -0.54204197569301 *
431941    +        S_MntMeatProducts  +     0.05510302269208 * S_MntSweetProducts
431942    +          +     0.19331185653379 * S_MntWines  +    -0.11275583865898 *
431943    +        S_MonthsAsCustomer  +    -0.61166489373672 * S_NumCatalogPurchases
431944    +          +     0.05502131610199 * S_NumDealsPurchases
431945    +          +    -0.03756550292536 * S_NumDistPurchases
431946    +          +    -0.03538043876599 * S_NumStorePurchases
431947    +          +     -0.0907757250737 * S_NumWebPurchases
431948    +          +    -0.70112968521759 * S_NumWebVisitsMonth
431949    +          +    -0.14412513555959 * S_RFMstat  +     0.21884375840225 *
431950    +        S_RMntFrq  +     0.94295210651466 * S_Recency
431951    +          +     0.35991330606304 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12213750739956 * S_AcceptedCmpTotal + 0.11214050296975 * S_Age 
+ -0.30158163448762 * S_Frq + -0.65785861830444 * S_Income + 0.55328239552566 * S_Kidhome + 
-0.10286828951896 * S_Mnt + 0.02737244457507 * S_MntFishProducts + 0.06403371753368 * 
S_MntFruits + 0.03413466437505 * S_MntGoldProds + -0.54204197569301 * S_MntMeatProducts + 
0.05510302269208 * S_MntSweetProducts + 0.19331185653379 * S_MntWines + -0.11275583865898 * 
S_MonthsAsCustomer + -0.61166489373672 * S_NumCatalogPurchases + 0.05502131610199 * 
S_NumDealsPurchases + -0.03756550292536 * S_NumDistPurchases + -0.03538043876599 * 
S_NumStorePurchases + -0.0907757250737 * S_NumWebPurchases + -0.70112968521759 * 
S_NumWebVisitsMonth + -0.14412513555959 * S_RFMstat + 0.21884375840225 * S_RMntFrq + 
0.94295210651466 * S_Recency + 0.35991330606304 * S_Teenhome ;
431952    +   H16  =    -0.36726728824296 * S_AcceptedCmpTotal  +     0.07460925934352 *
431953    +        S_Age  +    -0.43562110547346 * S_Frq  +    -0.43221933529838 *
431954    +        S_Income  +    -0.52750514886673 * S_Kidhome
431955    +          +    -0.26421661734492 * S_Mnt  +     0.14907990887311 *
431956    +        S_MntFishProducts  +     0.04789588439327 * S_MntFruits
431957    +          +    -0.20961586241585 * S_MntGoldProds  +    -0.20758519587985 *
431958    +        S_MntMeatProducts  +    -0.19867933143984 * S_MntSweetProducts
431959    +          +    -0.06534193060612 * S_MntWines  +    -0.23871571634661 *
431960    +        S_MonthsAsCustomer  +    -0.53206950950203 * S_NumCatalogPurchases
431961    +          +    -0.50827570715861 * S_NumDealsPurchases
431962    +          +    -0.47409547329081 * S_NumDistPurchases
431963    +          +     0.18399962481918 * S_NumStorePurchases
431964    +          +     0.02681212324713 * S_NumWebPurchases
431965    +          +    -0.20824959103725 * S_NumWebVisitsMonth
431966    +          +    -0.06029410016837 * S_RFMstat  +    -0.10536519478033 *
431967    +        S_RMntFrq  +     0.04705531474734 * S_Recency
431968    +          +    -0.11408993340011 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.36726728824296 * S_AcceptedCmpTotal + 0.07460925934352 * S_Age 
+ -0.43562110547346 * S_Frq + -0.43221933529838 * S_Income + -0.52750514886673 * S_Kidhome + 
-0.26421661734492 * S_Mnt + 0.14907990887311 * S_MntFishProducts + 0.04789588439327 * 
S_MntFruits + -0.20961586241585 * S_MntGoldProds + -0.20758519587985 * S_MntMeatProducts + 
-0.19867933143984 * S_MntSweetProducts + -0.06534193060612 * S_MntWines + -0.23871571634661 * 
S_MonthsAsCustomer + -0.53206950950203 * S_NumCatalogPurchases + -0.50827570715861 * 
S_NumDealsPurchases + -0.47409547329081 * S_NumDistPurchases + 0.18399962481918 * 
S_NumStorePurchases + 0.02681212324713 * S_NumWebPurchases + -0.20824959103725 * 
S_NumWebVisitsMonth + -0.06029410016837 * S_RFMstat + -0.10536519478033 * S_RMntFrq + 
0.04705531474734 * S_Recency + -0.11408993340011 * S_Teenhome ;
431969    +   H11  = H11  +    -0.77677369001519 * AcceptedCmp10
431970    +          +    -0.37032394781671 * AcceptedCmp20  +    -0.38832722412387 *
431971    +        AcceptedCmp30  +    -0.55638306754435 * AcceptedCmp40
431972    +          +    -0.38440791029959 * AcceptedCmp50  +    -0.16406106118114 *
431973    +        Complain0  +     0.13745408429927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.77677369001519 * AcceptedCmp10 + -0.37032394781671 * 
AcceptedCmp20 + -0.38832722412387 * AcceptedCmp30 + -0.55638306754435 * AcceptedCmp40 + 
-0.38440791029959 * AcceptedCmp50 + -0.16406106118114 * Complain0 + 0.13745408429927 * 
HigherEducationBinary0 ;
431974    +   H12  = H12  +    -0.05148686413458 * AcceptedCmp10
431975    +          +     0.05180152789051 * AcceptedCmp20  +    -0.19662622794776 *
431976    +        AcceptedCmp30  +     -0.1585553643874 * AcceptedCmp40
431977    +          +    -0.27247887239746 * AcceptedCmp50  +     0.04624249285151 *
431978    +        Complain0  +     0.00785440028495 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05148686413458 * AcceptedCmp10 + 0.05180152789051 * 
AcceptedCmp20 + -0.19662622794776 * AcceptedCmp30 + -0.1585553643874 * AcceptedCmp40 + 
-0.27247887239746 * AcceptedCmp50 + 0.04624249285151 * Complain0 + 0.00785440028495 * 
HigherEducationBinary0 ;
431979    +   H13  = H13  +     0.21037041808208 * AcceptedCmp10
431980    +          +     0.06300544912729 * AcceptedCmp20  +      0.2031627989618 *
431981    +        AcceptedCmp30  +    -0.16684085233007 * AcceptedCmp40
431982    +          +      0.0625549638503 * AcceptedCmp50  +     0.08211834732664 *
431983    +        Complain0  +     0.41790682924235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21037041808208 * AcceptedCmp10 + 0.06300544912729 * 
AcceptedCmp20 + 0.2031627989618 * AcceptedCmp30 + -0.16684085233007 * AcceptedCmp40 + 
0.0625549638503 * AcceptedCmp50 + 0.08211834732664 * Complain0 + 0.41790682924235 * 
HigherEducationBinary0 ;
431984    +   H14  = H14  +    -0.22633896297555 * AcceptedCmp10
431985    +          +     0.08566230730475 * AcceptedCmp20  +     0.22438004167873 *
431986    +        AcceptedCmp30  +    -0.34844091963496 * AcceptedCmp40
431987    +          +      0.2256378657623 * AcceptedCmp50  +    -0.04877442051049 *
431988    +        Complain0  +     0.06991776072868 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22633896297555 * AcceptedCmp10 + 0.08566230730475 * 
AcceptedCmp20 + 0.22438004167873 * AcceptedCmp30 + -0.34844091963496 * AcceptedCmp40 + 
0.2256378657623 * AcceptedCmp50 + -0.04877442051049 * Complain0 + 0.06991776072868 * 
HigherEducationBinary0 ;
431989    +   H15  = H15  +     0.41157678374445 * AcceptedCmp10
431990    +          +     0.54458379988837 * AcceptedCmp20  +     0.36562464175733 *
431991    +        AcceptedCmp30  +     0.42967664754272 * AcceptedCmp40
431992    +          +     0.29503069209148 * AcceptedCmp50  +     0.22816514842206 *
431993    +        Complain0  +    -0.21688291139263 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.41157678374445 * AcceptedCmp10 + 0.54458379988837 * 
AcceptedCmp20 + 0.36562464175733 * AcceptedCmp30 + 0.42967664754272 * AcceptedCmp40 + 
0.29503069209148 * AcceptedCmp50 + 0.22816514842206 * Complain0 + -0.21688291139263 * 
HigherEducationBinary0 ;
431994    +   H16  = H16  +     0.19407195798819 * AcceptedCmp10
431995    +          +     0.04247364390054 * AcceptedCmp20  +     0.08274248135062 *
431996    +        AcceptedCmp30  +    -0.03914341230116 * AcceptedCmp40
431997    +          +     0.21624329471544 * AcceptedCmp50  +     0.10868032675538 *
431998    +        Complain0  +     0.53913868676285 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19407195798819 * AcceptedCmp10 + 0.04247364390054 * 
AcceptedCmp20 + 0.08274248135062 * AcceptedCmp30 + -0.03914341230116 * AcceptedCmp40 + 
0.21624329471544 * AcceptedCmp50 + 0.10868032675538 * Complain0 + 0.53913868676285 * 
HigherEducationBinary0 ;
431999    +   H11  = H11  +    -0.10818997830847 * Education2n_Cycle
432000    +          +    -0.06250860766324 * EducationBasic  +       0.082321310702 *
432001    +        EducationGraduation  +     0.02690714866809 * EducationMaster
432002    +          +      0.1401475547652 * Marital_StatusDivorced
432003    +          +     0.09801106519846 * Marital_StatusMarried
432004    +          +    -0.26003432053167 * Marital_StatusSingle
432005    +          +     0.01618123849583 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10818997830847 * Education2n_Cycle + -0.06250860766324 * 
EducationBasic + 0.082321310702 * EducationGraduation + 0.02690714866809 * EducationMaster + 
0.1401475547652 * Marital_StatusDivorced + 0.09801106519846 * Marital_StatusMarried + 
-0.26003432053167 * Marital_StatusSingle + 0.01618123849583 * Marital_StatusTogether ;
432006    +   H12  = H12  +     0.03962548410357 * Education2n_Cycle
432007    +          +    -0.26452735705222 * EducationBasic  +     0.20050085174927 *
432008    +        EducationGraduation  +     -0.0582668884993 * EducationMaster
432009    +          +     0.33965651292585 * Marital_StatusDivorced
432010    +          +    -0.51738607463653 * Marital_StatusMarried
432011    +          +     0.57209809625866 * Marital_StatusSingle
432012    +          +    -0.44546779779432 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03962548410357 * Education2n_Cycle + -0.26452735705222 * 
EducationBasic + 0.20050085174927 * EducationGraduation + -0.0582668884993 * EducationMaster + 
0.33965651292585 * Marital_StatusDivorced + -0.51738607463653 * Marital_StatusMarried + 
0.57209809625866 * Marital_StatusSingle + -0.44546779779432 * Marital_StatusTogether ;
432013    +   H13  = H13  +     0.01128025797292 * Education2n_Cycle
432014    +          +      0.2331829736493 * EducationBasic  +    -0.21365797510985 *
432015    +        EducationGraduation  +     -0.0762564849741 * EducationMaster
432016    +          +     -0.0712692029901 * Marital_StatusDivorced
432017    +          +      0.2989539150548 * Marital_StatusMarried
432018    +          +    -0.07088797938783 * Marital_StatusSingle
432019    +          +     0.16185370186238 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01128025797292 * Education2n_Cycle + 0.2331829736493 * 
EducationBasic + -0.21365797510985 * EducationGraduation + -0.0762564849741 * EducationMaster 
+ -0.0712692029901 * Marital_StatusDivorced + 0.2989539150548 * Marital_StatusMarried + 
-0.07088797938783 * Marital_StatusSingle + 0.16185370186238 * Marital_StatusTogether ;
432020    +   H14  = H14  +     -0.2070379700286 * Education2n_Cycle
432021    +          +    -0.01037898928967 * EducationBasic  +     0.15025928327392 *
432022    +        EducationGraduation  +    -0.01705681126182 * EducationMaster
432023    +          +    -0.06075465978816 * Marital_StatusDivorced
432024    +          +     0.23328087967095 * Marital_StatusMarried
432025    +          +    -0.34401062494093 * Marital_StatusSingle
432026    +          +     0.53078479431088 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.2070379700286 * Education2n_Cycle + -0.01037898928967 * 
EducationBasic + 0.15025928327392 * EducationGraduation + -0.01705681126182 * EducationMaster 
+ -0.06075465978816 * Marital_StatusDivorced + 0.23328087967095 * Marital_StatusMarried + 
-0.34401062494093 * Marital_StatusSingle + 0.53078479431088 * Marital_StatusTogether ;
432027    +   H15  = H15  +     0.02459175230987 * Education2n_Cycle
432028    +          +     -0.4108033280498 * EducationBasic  +     0.20104265551967 *
432029    +        EducationGraduation  +     0.36213037498234 * EducationMaster
432030    +          +    -0.07312045395545 * Marital_StatusDivorced
432031    +          +     1.08247738273721 * Marital_StatusMarried
432032    +          +    -0.68676298741916 * Marital_StatusSingle
432033    +          +     0.62203169255788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.02459175230987 * Education2n_Cycle + -0.4108033280498 * 
EducationBasic + 0.20104265551967 * EducationGraduation + 0.36213037498234 * EducationMaster + 
-0.07312045395545 * Marital_StatusDivorced + 1.08247738273721 * Marital_StatusMarried + 
-0.68676298741916 * Marital_StatusSingle + 0.62203169255788 * Marital_StatusTogether ;
432034    +   H16  = H16  +    -0.18585334310939 * Education2n_Cycle
432035    +          +    -0.23205958818402 * EducationBasic  +    -0.13603377834078 *
432036    +        EducationGraduation  +    -0.11419275271029 * EducationMaster
432037    +          +    -0.20451618892357 * Marital_StatusDivorced
432038    +          +    -0.41145969312049 * Marital_StatusMarried
432039    +          +     0.44568613045702 * Marital_StatusSingle
432040    +          +    -0.24768465153678 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.18585334310939 * Education2n_Cycle + -0.23205958818402 * 
EducationBasic + -0.13603377834078 * EducationGraduation + -0.11419275271029 * EducationMaster 
+ -0.20451618892357 * Marital_StatusDivorced + -0.41145969312049 * Marital_StatusMarried + 
0.44568613045702 * Marital_StatusSingle + -0.24768465153678 * Marital_StatusTogether ;
432041    +   H11  =    -0.04019762461382 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04019762461382 + H11 ;
432042    +   H12  =     0.36549512230095 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36549512230095 + H12 ;
432043    +   H13  =    -1.38204627706606 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38204627706606 + H13 ;
432044    +   H14  =     1.38298399879632 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.38298399879632 + H14 ;
432045    +   H15  =     0.90313152481164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90313152481164 + H15 ;
432046    +   H16  =     -2.1000519329276 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.1000519329276 + H16 ;
432047    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
432048    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
432049    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
432050    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
432051    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
432052    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
432053    +END;
MPRINT(EM_DIAGRAM):   END;
432054    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
432055    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
432056    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
432057    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
432058    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
432059    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
432060    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
432061    +END;
MPRINT(EM_DIAGRAM):   END;
432062    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432063    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
432064    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432065    +
432066    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
432067    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
432068    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
432069    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
432070    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
432071    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432072    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
432073    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
432074    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
432075    +end;
MPRINT(EM_DIAGRAM):   end;
432076    +else do;
MPRINT(EM_DIAGRAM):   else do;
432077    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
432078    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
432079    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
432080    +   end;
MPRINT(EM_DIAGRAM):   end;
432081    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
432082    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
432083    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
432084    +   end;
MPRINT(EM_DIAGRAM):   end;
432085    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432086    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
432087    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
432088    +   end;
MPRINT(EM_DIAGRAM):   end;
432089    +end;
MPRINT(EM_DIAGRAM):   end;
432090    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
432091    +   P_DepVar1  =     1.88165923386255 * H11  +     2.52776524502163 * H12
432092    +          +    -1.77389131292532 * H13  +    -1.81244588070617 * H14
432093    +          +    -2.95309978013668 * H15  +    -2.05211179893121 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.88165923386255 * H11 + 2.52776524502163 * H12 + 
-1.77389131292532 * H13 + -1.81244588070617 * H14 + -2.95309978013668 * H15 + 
-2.05211179893121 * H16 ;
432094    +   P_DepVar1  =    -2.12016790420361 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.12016790420361 + P_DepVar1 ;
432095    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
432096    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
432097    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
432098    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
432099    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
432100    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
432101    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
432102    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
432103    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
432104    +END;
MPRINT(EM_DIAGRAM):   END;
432105    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
432106    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
432107    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
432108    +END;
MPRINT(EM_DIAGRAM):   END;
432109    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
432110    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
432111    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
432112    +END;
MPRINT(EM_DIAGRAM):   END;
432113    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
432114    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
432115    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
432116    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
432117    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
432118    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
432119    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
432120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432121    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
432122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432123    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
432124    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
432125    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
432126    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
432127    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
432128    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
432129    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
432130    +END;
MPRINT(EM_DIAGRAM):   END;
432131    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
432132    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
432133    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
432134    +drop
432135    +H11
432136    +H12
432137    +H13
432138    +H14
432139    +H15
432140    +H16
432141    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
432142    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
432143    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
432144    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432145    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
432146    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432147    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
432148    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
432149    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
432150    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
432151    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432152    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
432153    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432154    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
432155    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
432156    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
432157    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432158    +* Ensmbl27: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Maximum Posteriors of 7 models;
432159    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432160    +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
432161    +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
432162    +P_DepVar1 = max(
432163    +AutoNeural7_P_DepVar1 ,
432164    +AutoNeural9_P_DepVar1 ,
432165    +AutoNeural12_P_DepVar1 ,
432166    +AutoNeural11_P_DepVar1 ,
432167    +Neural3_P_DepVar1 ,
432168    +Neural10_P_DepVar1 ,
432169    +Neural9_P_DepVar1
432170    +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural7_P_DepVar1 , AutoNeural9_P_DepVar1 , 
AutoNeural12_P_DepVar1 , AutoNeural11_P_DepVar1 , Neural3_P_DepVar1 , Neural10_P_DepVar1 , 
Neural9_P_DepVar1 );
432171    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
432172    +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
432173    +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
432174    +end;
MPRINT(EM_DIAGRAM):   end;
432175    +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
432176    +P_DepVar0 = max(
432177    +AutoNeural7_P_DepVar0 ,
432178    +AutoNeural9_P_DepVar0 ,
432179    +AutoNeural12_P_DepVar0 ,
432180    +AutoNeural11_P_DepVar0 ,
432181    +Neural3_P_DepVar0 ,
432182    +Neural10_P_DepVar0 ,
432183    +Neural9_P_DepVar0
432184    +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural7_P_DepVar0 , AutoNeural9_P_DepVar0 , 
AutoNeural12_P_DepVar0 , AutoNeural11_P_DepVar0 , Neural3_P_DepVar0 , Neural10_P_DepVar0 , 
Neural9_P_DepVar0 );
432185    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
432186    +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
432187    +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
432188    +end;
MPRINT(EM_DIAGRAM):   end;
432189    +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
432190    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432191    +* Ensmbl27: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Classification Vars;
432192    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432193    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
432194    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
432195    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
432196    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
432197    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
432198    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
432199    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
432200    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
432201    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
432202    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
432203    +end;
MPRINT(EM_DIAGRAM):   end;
432204    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
432205    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
432206    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
432207    +end;
MPRINT(EM_DIAGRAM):   end;
432208    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
432209    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432210    +* Ensmbl27: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Producing Unformatted variable;
432211    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432212    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
432213    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
432214    +else
432215    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
432216    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432217    +* Ensmbl27: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing _WARN_ Variable;
432218    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432219    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
432220    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
432221    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
432222    +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
432222   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
432223    +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
432223   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
432224    +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
432224   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
432225    +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
432225   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
432226    +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
432226   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
432227    +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
432227   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
432228    +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
432228   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
432229    +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
432229   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
432230    +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
432230   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
432231    +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
432231   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
432232    +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
432232   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
432233    +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
432233   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
432234    +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
432234   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
432235    +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
432235   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
432236    +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
432236   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
432237    +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
432237   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
432238    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
432239    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
432240    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
432241    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
432242    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
432242   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
432243    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
432243   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
432244    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
432244   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
432245    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
432245   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
432246    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
432247    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
432248    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
432249    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
432250    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432251    +* Ensmbl27: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Residual Vars;
432252    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432253    +if
432254    +F_DepVar NE '1'
432255    +AND F_DepVar NE '0'
432256    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
432257    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
432258    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
432259    +end;
MPRINT(EM_DIAGRAM):   end;
432260    +else do;
MPRINT(EM_DIAGRAM):   else do;
432261    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
432262    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
432263    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
432264    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
432265    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
432266    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
432267    +END;
MPRINT(EM_DIAGRAM):   END;
432268    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
432269     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL27_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL7_TRAIN.VIEW used (Total process time):
      real time           0.34 seconds
      cpu time            0.34 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.35 seconds
      cpu time            0.35 seconds
      

MPRINT(EM_DIAGRAM):   quit;
432270     quit;
432271     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
432272     filename emflow
432272   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring AUTONEURAL7_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432273     *------------------------------------------------------------*;
432274     * Ensmbl27: Scoring AUTONEURAL7_VALIDATE data;
432275     *------------------------------------------------------------*;
432276     data EMWS8.Ensmbl27_VALIDATE
432277     / view=EMWS8.Ensmbl27_VALIDATE
432278     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_VALIDATE / view=EMWS8.Ensmbl27_VALIDATE ;
432279     set EMWS8.AutoNeural7_VALIDATE
432280     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural7_VALIDATE ;
432281     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\EMFLOWSCORE.sas.
432282    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432283    +* Ensmbl27: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Combine model for DepVar;
432284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432285    +* Ensmbl27: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 1 of 7;
432286    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432287    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432288    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
432289    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
432290    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
432291    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432292    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432293    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
432294    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
432295    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
432296    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432297    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432298    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
432299    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
432300    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
432301    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432302    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432303    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
432304    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
432305    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
432306    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432307    +
432308    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
432309    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
432309   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
432310    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
432311    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
432312    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
432313    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
432314    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
432315    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432316    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
432317    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
432318    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
432319    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432320    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432321    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
432322    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432323    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
432324    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
432325    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
432326    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432327    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
432328    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
432329    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
432330    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432331    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432332    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
432333    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
432334    +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
432335    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432336    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432337    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
432338    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
432339    +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
432340    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
432341    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
432342    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
432343    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
432344    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
432345    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
432346    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
432347    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
432348    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
432349    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
432350    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
432351    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
432352    +LENGTH _WARN_ $4
432353    +      F_DepVar  $ 12
432354    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
432355    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
432356    +
432357    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
432358    +
432359    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
432360    +
432361    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
432362    +
432363    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
432364    +
432365    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
432366    +
432367    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
432368    +
432369    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
432370    +
432371    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
432372    +
432373    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
432374    +
432375    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
432376    +
432377    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
432378    +
432379    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
432380    +
432381    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
432382    +
432383    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
432384    +
432385    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
432386    +
432387    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
432388    +
432389    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
432390    +
432391    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
432392    +
432393    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
432394    +
432395    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
432396    +
432397    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
432398    +
432399    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
432400    +
432401    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
432402    +
432403    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
432404    +
432405    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
432406    +
432407    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
432408    +
432409    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
432410    +
432411    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
432412    +
432413    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
432414    +
432415    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
432416    +
432417    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
432418    +
432419    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
432420    +
432421    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
432422    +
432423    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
432424    +
432425    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
432426    +
432427    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
432428    +
432429    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
432430    +
432431    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
432432    +
432433    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
432434    +
432435    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
432436    +
432437    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
432438    +
432439    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
432440    +
432441    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
432442    +
432443    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
432444    +
432445    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
432446    +
432447    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
432448    +
432449    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
432450    +
432451    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
432452    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
432453    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
432454    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
432455    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
432456    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432457    +end;
MPRINT(EM_DIAGRAM):   end;
432458    +else do;
MPRINT(EM_DIAGRAM):   else do;
432459    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
432460    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
432461    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432462    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
432463    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
432464    +   end;
MPRINT(EM_DIAGRAM):   end;
432465    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
432466    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
432467    +   end;
MPRINT(EM_DIAGRAM):   end;
432468    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432469    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
432470    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
432471    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432472    +   end;
MPRINT(EM_DIAGRAM):   end;
432473    +end;
MPRINT(EM_DIAGRAM):   end;
432474    +
432475    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
432476    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
432477    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
432478    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
432479    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
432480    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432481    +end;
MPRINT(EM_DIAGRAM):   end;
432482    +else do;
MPRINT(EM_DIAGRAM):   else do;
432483    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
432484    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
432485    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432486    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
432487    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
432488    +   end;
MPRINT(EM_DIAGRAM):   end;
432489    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
432490    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
432491    +   end;
MPRINT(EM_DIAGRAM):   end;
432492    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432493    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
432494    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
432495    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432496    +   end;
MPRINT(EM_DIAGRAM):   end;
432497    +end;
MPRINT(EM_DIAGRAM):   end;
432498    +
432499    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
432500    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
432501    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
432502    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
432503    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
432504    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432505    +end;
MPRINT(EM_DIAGRAM):   end;
432506    +else do;
MPRINT(EM_DIAGRAM):   else do;
432507    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
432508    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
432509    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432510    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
432511    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
432512    +   end;
MPRINT(EM_DIAGRAM):   end;
432513    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
432514    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
432515    +   end;
MPRINT(EM_DIAGRAM):   end;
432516    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432517    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
432518    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
432519    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432520    +   end;
MPRINT(EM_DIAGRAM):   end;
432521    +end;
MPRINT(EM_DIAGRAM):   end;
432522    +
432523    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
432524    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
432525    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
432526    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
432527    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
432528    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432529    +end;
MPRINT(EM_DIAGRAM):   end;
432530    +else do;
MPRINT(EM_DIAGRAM):   else do;
432531    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
432532    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
432533    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432534    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
432535    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
432536    +   end;
MPRINT(EM_DIAGRAM):   end;
432537    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
432538    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
432539    +   end;
MPRINT(EM_DIAGRAM):   end;
432540    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432541    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
432542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
432543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432544    +   end;
MPRINT(EM_DIAGRAM):   end;
432545    +end;
MPRINT(EM_DIAGRAM):   end;
432546    +
432547    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
432548    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
432549    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
432550    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
432551    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
432552    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432553    +end;
MPRINT(EM_DIAGRAM):   end;
432554    +else do;
MPRINT(EM_DIAGRAM):   else do;
432555    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
432556    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
432557    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432558    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
432559    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
432560    +   end;
MPRINT(EM_DIAGRAM):   end;
432561    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
432562    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
432563    +   end;
MPRINT(EM_DIAGRAM):   end;
432564    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432565    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
432566    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
432567    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432568    +   end;
MPRINT(EM_DIAGRAM):   end;
432569    +end;
MPRINT(EM_DIAGRAM):   end;
432570    +
432571    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
432572    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
432573    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
432574    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
432575    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
432576    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432577    +end;
MPRINT(EM_DIAGRAM):   end;
432578    +else do;
MPRINT(EM_DIAGRAM):   else do;
432579    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
432580    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
432581    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432582    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
432583    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
432584    +   end;
MPRINT(EM_DIAGRAM):   end;
432585    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
432586    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
432587    +   end;
MPRINT(EM_DIAGRAM):   end;
432588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432589    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
432590    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
432591    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432592    +   end;
MPRINT(EM_DIAGRAM):   end;
432593    +end;
MPRINT(EM_DIAGRAM):   end;
432594    +
432595    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
432596    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
432597    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
432598    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
432599    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
432600    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432601    +end;
MPRINT(EM_DIAGRAM):   end;
432602    +else do;
MPRINT(EM_DIAGRAM):   else do;
432603    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
432604    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
432605    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432606    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
432607    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
432608    +   end;
MPRINT(EM_DIAGRAM):   end;
432609    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
432610    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
432611    +   end;
MPRINT(EM_DIAGRAM):   end;
432612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432613    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
432614    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
432615    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432616    +   end;
MPRINT(EM_DIAGRAM):   end;
432617    +end;
MPRINT(EM_DIAGRAM):   end;
432618    +
432619    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
432620    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
432621    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
432622    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
432623    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
432624    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
432625    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
432626    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
432627    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
432628    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
432629    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
432630    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
432631    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
432632    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432633    +end;
MPRINT(EM_DIAGRAM):   end;
432634    +else do;
MPRINT(EM_DIAGRAM):   else do;
432635    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
432636    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
432637    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432638    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
432639    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
432640    +   end;
MPRINT(EM_DIAGRAM):   end;
432641    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
432642    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
432643    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
432644    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
432645    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
432646    +   end;
MPRINT(EM_DIAGRAM):   end;
432647    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
432648    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
432649    +   end;
MPRINT(EM_DIAGRAM):   end;
432650    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
432651    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
432652    +   end;
MPRINT(EM_DIAGRAM):   end;
432653    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
432654    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
432655    +   end;
MPRINT(EM_DIAGRAM):   end;
432656    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432657    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
432658    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
432659    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
432660    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
432661    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
432662    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432663    +   end;
MPRINT(EM_DIAGRAM):   end;
432664    +end;
MPRINT(EM_DIAGRAM):   end;
432665    +
432666    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
432667    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
432668    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
432669    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
432670    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
432671    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
432672    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
432673    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
432674    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
432675    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
432676    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
432677    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
432678    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
432679    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
432680    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432681    +end;
MPRINT(EM_DIAGRAM):   end;
432682    +else do;
MPRINT(EM_DIAGRAM):   else do;
432683    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
432684    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
432685    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432686    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
432687    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
432688    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
432689    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
432690    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
432691    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
432692    +         end;
MPRINT(EM_DIAGRAM):   end;
432693    +         else do;
MPRINT(EM_DIAGRAM):   else do;
432694    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
432695    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
432696    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
432697    +            end;
MPRINT(EM_DIAGRAM):   end;
432698    +         end;
MPRINT(EM_DIAGRAM):   end;
432699    +      end;
MPRINT(EM_DIAGRAM):   end;
432700    +      else do;
MPRINT(EM_DIAGRAM):   else do;
432701    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
432702    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
432703    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
432704    +         end;
MPRINT(EM_DIAGRAM):   end;
432705    +      end;
MPRINT(EM_DIAGRAM):   end;
432706    +   end;
MPRINT(EM_DIAGRAM):   end;
432707    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432708    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
432709    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
432710    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
432711    +      end;
MPRINT(EM_DIAGRAM):   end;
432712    +      else do;
MPRINT(EM_DIAGRAM):   else do;
432713    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
432714    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
432715    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
432716    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
432717    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
432718    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
432719    +         end;
MPRINT(EM_DIAGRAM):   end;
432720    +      end;
MPRINT(EM_DIAGRAM):   end;
432721    +   end;
MPRINT(EM_DIAGRAM):   end;
432722    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
432723    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
432724    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
432725    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
432726    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
432727    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
432728    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432729    +   end;
MPRINT(EM_DIAGRAM):   end;
432730    +end;
MPRINT(EM_DIAGRAM):   end;
432731    +
432732    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432733    +*** Checking missing input Interval
432734    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
432735    +
432736    +IF NMISS(
432737    +   AcceptedCmpTotal ,
432738    +   Age ,
432739    +   Frq ,
432740    +   Income ,
432741    +   Kidhome ,
432742    +   Mnt ,
432743    +   MntFishProducts ,
432744    +   MntFruits ,
432745    +   MntGoldProds ,
432746    +   MntMeatProducts ,
432747    +   MntSweetProducts ,
432748    +   MntWines ,
432749    +   MonthsAsCustomer ,
432750    +   NumCatalogPurchases ,
432751    +   NumDealsPurchases ,
432752    +   NumDistPurchases ,
432753    +   NumStorePurchases ,
432754    +   NumWebPurchases ,
432755    +   NumWebVisitsMonth ,
432756    +   RFMstat ,
432757    +   RMntFrq ,
432758    +   Recency ,
432759    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
432760    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
432761    +
432762    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
432763    +END;
MPRINT(EM_DIAGRAM):   END;
432764    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432765    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
432766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432767    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
432768    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
432769    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
432770    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
432771    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
432772    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
432773    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
432774    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
432775    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
432776    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
432777    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
432778    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
432779    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
432780    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
432781    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
432782    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
432783    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
432784    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
432785    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
432786    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
432787    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
432788    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
432789    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
432790    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
432791    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
432792    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
432793    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
432794    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
432795    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
432796    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
432797    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
432798    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
432799    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
432800    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
432801    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
432802    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
432803    +END;
MPRINT(EM_DIAGRAM):   END;
432804    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
432805    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
432806    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
432807    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
432808    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
432809    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
432810    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
432811    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
432812    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
432813    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
432814    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
432815    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
432816    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
432817    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
432818    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
432819    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
432820    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
432821    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
432822    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
432823    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
432824    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
432825    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
432826    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
432827    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
432828    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
432829    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
432830    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
432831    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
432832    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
432833    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
432834    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
432835    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
432836    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
432837    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
432838    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
432839    +   ELSE S_NumCatalogPurchases
432840    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
432841    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
432842    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
432843    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
432844    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
432845    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
432846    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
432847    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
432848    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
432849    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
432850    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
432851    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
432852    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
432853    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
432854    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
432855    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
432856    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
432857    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
432858    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
432859    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
432860    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
432861    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
432862    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
432863    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
432864    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
432865    +END;
MPRINT(EM_DIAGRAM):   END;
432866    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432867    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
432868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432869    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432870    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
432871    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432873    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
432874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432875    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
432876    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
432877    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
432878    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
432879    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
432880    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
432881    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
432882    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
432883    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
432884    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
432885    +          +     0.09708841024031 * S_NumDealsPurchases
432886    +          +    -0.29075561032014 * S_NumDistPurchases
432887    +          +    -0.14495394259873 * S_NumStorePurchases
432888    +          +     0.11890705145732 * S_NumWebPurchases
432889    +          +    -0.16954189911344 * S_NumWebVisitsMonth
432890    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
432891    +        S_RMntFrq  +     0.17150719398884 * S_Recency
432892    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
432893    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
432894    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
432895    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
432896    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
432897    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
432898    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
432899    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
432900    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
432901    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
432902    +          +     0.16274478997892 * S_NumDealsPurchases
432903    +          +     0.03966958784582 * S_NumDistPurchases
432904    +          +    -0.04714110726598 * S_NumStorePurchases
432905    +          +    -0.02124229528082 * S_NumWebPurchases
432906    +          +     0.29753299776832 * S_NumWebVisitsMonth
432907    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
432908    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
432909    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
432910    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
432911    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
432912    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
432913    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
432914    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
432915    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
432916    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
432917    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
432918    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
432919    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
432920    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
432921    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
432922    +        EducationGraduation  +     0.00619669837452 * EducationMaster
432923    +          +    -0.05037639679806 * Marital_StatusDivorced
432924    +          +     0.28781968727878 * Marital_StatusMarried
432925    +          +    -0.20382417074384 * Marital_StatusSingle
432926    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
432927    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
432928    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
432929    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
432930    +          +     0.06970969219123 * Marital_StatusDivorced
432931    +          +    -0.15787475744986 * Marital_StatusMarried
432932    +          +     0.14345344072192 * Marital_StatusSingle
432933    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
432934    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
432935    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
432936    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
432937    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
432938    +END;
MPRINT(EM_DIAGRAM):   END;
432939    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
432940    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
432941    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
432942    +END;
MPRINT(EM_DIAGRAM):   END;
432943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432944    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
432945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
432946    +
432947    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
432948    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
432949    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
432950    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
432951    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
432952    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
432953    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
432954    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
432955    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
432956    +end;
MPRINT(EM_DIAGRAM):   end;
432957    +else do;
MPRINT(EM_DIAGRAM):   else do;
432958    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
432959    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
432960    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
432961    +   end;
MPRINT(EM_DIAGRAM):   end;
432962    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
432963    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
432964    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
432965    +   end;
MPRINT(EM_DIAGRAM):   end;
432966    +   else do;
MPRINT(EM_DIAGRAM):   else do;
432967    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
432968    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
432969    +   end;
MPRINT(EM_DIAGRAM):   end;
432970    +end;
MPRINT(EM_DIAGRAM):   end;
432971    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
432972    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
432973    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
432974    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
432975    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
432976    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
432977    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
432978    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
432979    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
432980    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
432981    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
432982    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
432983    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
432984    +END;
MPRINT(EM_DIAGRAM):   END;
432985    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
432986    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
432987    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
432988    +END;
MPRINT(EM_DIAGRAM):   END;
432989    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
432990    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
432991    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
432992    +END;
MPRINT(EM_DIAGRAM):   END;
432993    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
432994    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
432995    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
432996    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
432997    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
432998    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
432999    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
433000    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433001    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
433002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433003    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
433004    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
433005    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
433006    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
433007    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
433008    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
433009    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
433010    +END;
MPRINT(EM_DIAGRAM):   END;
433011    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
433012    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
433013    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
433014    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
433015    +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
433016    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433017    +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
433018    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433019    +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
433020    +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
433021    +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
433022    +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
433023    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433024    +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
433025    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433026    +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
433027    +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
433028    +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
433029    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433030    +* Ensmbl27: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 2 of 7;
433031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433032    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433033    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
433034    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
433035    +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
433036    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433037    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
433038    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
433039    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
433040    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
433041    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
433042    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
433043    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
433044    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
433045    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
433046    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
433047    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
433048    +LENGTH _WARN_ $4
433049    +      F_DepVar  $ 12
433050    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
433051    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
433052    +
433053    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
433054    +
433055    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
433056    +
433057    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
433058    +
433059    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
433060    +
433061    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
433062    +
433063    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
433064    +
433065    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
433066    +
433067    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
433068    +
433069    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
433070    +
433071    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
433072    +
433073    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
433074    +
433075    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
433076    +
433077    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
433078    +
433079    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
433080    +
433081    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
433082    +
433083    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
433084    +
433085    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
433086    +
433087    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
433088    +
433089    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
433090    +
433091    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
433092    +
433093    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
433094    +
433095    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
433096    +
433097    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
433098    +
433099    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
433100    +
433101    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
433102    +
433103    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
433104    +
433105    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
433106    +
433107    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
433108    +
433109    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
433110    +
433111    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
433112    +
433113    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
433114    +
433115    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
433116    +
433117    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
433118    +
433119    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
433120    +
433121    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
433122    +
433123    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
433124    +
433125    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
433126    +
433127    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
433128    +
433129    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
433130    +
433131    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
433132    +
433133    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
433134    +
433135    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
433136    +
433137    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
433138    +
433139    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
433140    +
433141    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
433142    +
433143    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
433144    +
433145    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
433146    +
433147    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
433148    +
433149    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
433150    +
433151    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
433152    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
433153    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
433154    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
433155    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433156    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433157    +end;
MPRINT(EM_DIAGRAM):   end;
433158    +else do;
MPRINT(EM_DIAGRAM):   else do;
433159    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
433160    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
433161    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433162    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
433163    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
433164    +   end;
MPRINT(EM_DIAGRAM):   end;
433165    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
433166    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
433167    +   end;
MPRINT(EM_DIAGRAM):   end;
433168    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433169    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
433170    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433171    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433172    +   end;
MPRINT(EM_DIAGRAM):   end;
433173    +end;
MPRINT(EM_DIAGRAM):   end;
433174    +
433175    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
433176    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
433177    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
433178    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
433179    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433180    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433181    +end;
MPRINT(EM_DIAGRAM):   end;
433182    +else do;
MPRINT(EM_DIAGRAM):   else do;
433183    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
433184    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
433185    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433186    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
433187    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
433188    +   end;
MPRINT(EM_DIAGRAM):   end;
433189    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
433190    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
433191    +   end;
MPRINT(EM_DIAGRAM):   end;
433192    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433193    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
433194    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433195    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433196    +   end;
MPRINT(EM_DIAGRAM):   end;
433197    +end;
MPRINT(EM_DIAGRAM):   end;
433198    +
433199    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
433200    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
433201    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
433202    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
433203    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433204    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433205    +end;
MPRINT(EM_DIAGRAM):   end;
433206    +else do;
MPRINT(EM_DIAGRAM):   else do;
433207    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
433208    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
433209    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433210    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
433211    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
433212    +   end;
MPRINT(EM_DIAGRAM):   end;
433213    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
433214    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
433215    +   end;
MPRINT(EM_DIAGRAM):   end;
433216    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433217    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
433218    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433219    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433220    +   end;
MPRINT(EM_DIAGRAM):   end;
433221    +end;
MPRINT(EM_DIAGRAM):   end;
433222    +
433223    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
433224    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
433225    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
433226    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
433227    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433228    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433229    +end;
MPRINT(EM_DIAGRAM):   end;
433230    +else do;
MPRINT(EM_DIAGRAM):   else do;
433231    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
433232    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
433233    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433234    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
433235    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
433236    +   end;
MPRINT(EM_DIAGRAM):   end;
433237    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
433238    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
433239    +   end;
MPRINT(EM_DIAGRAM):   end;
433240    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433241    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
433242    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433243    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433244    +   end;
MPRINT(EM_DIAGRAM):   end;
433245    +end;
MPRINT(EM_DIAGRAM):   end;
433246    +
433247    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
433248    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
433249    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
433250    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
433251    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433252    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433253    +end;
MPRINT(EM_DIAGRAM):   end;
433254    +else do;
MPRINT(EM_DIAGRAM):   else do;
433255    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
433256    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
433257    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433258    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
433259    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
433260    +   end;
MPRINT(EM_DIAGRAM):   end;
433261    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
433262    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
433263    +   end;
MPRINT(EM_DIAGRAM):   end;
433264    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433265    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
433266    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433267    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433268    +   end;
MPRINT(EM_DIAGRAM):   end;
433269    +end;
MPRINT(EM_DIAGRAM):   end;
433270    +
433271    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
433272    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
433273    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
433274    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
433275    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433276    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433277    +end;
MPRINT(EM_DIAGRAM):   end;
433278    +else do;
MPRINT(EM_DIAGRAM):   else do;
433279    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
433280    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
433281    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433282    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
433283    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
433284    +   end;
MPRINT(EM_DIAGRAM):   end;
433285    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
433286    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
433287    +   end;
MPRINT(EM_DIAGRAM):   end;
433288    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433289    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
433290    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433291    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433292    +   end;
MPRINT(EM_DIAGRAM):   end;
433293    +end;
MPRINT(EM_DIAGRAM):   end;
433294    +
433295    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
433296    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
433297    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
433298    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
433299    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433300    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433301    +end;
MPRINT(EM_DIAGRAM):   end;
433302    +else do;
MPRINT(EM_DIAGRAM):   else do;
433303    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
433304    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
433305    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433306    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
433307    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
433308    +   end;
MPRINT(EM_DIAGRAM):   end;
433309    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
433310    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
433311    +   end;
MPRINT(EM_DIAGRAM):   end;
433312    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433313    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
433314    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433315    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433316    +   end;
MPRINT(EM_DIAGRAM):   end;
433317    +end;
MPRINT(EM_DIAGRAM):   end;
433318    +
433319    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
433320    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
433321    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
433322    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
433323    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
433324    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
433325    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
433326    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
433327    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
433328    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
433329    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
433330    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
433331    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433332    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433333    +end;
MPRINT(EM_DIAGRAM):   end;
433334    +else do;
MPRINT(EM_DIAGRAM):   else do;
433335    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
433336    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
433337    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433338    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
433339    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
433340    +   end;
MPRINT(EM_DIAGRAM):   end;
433341    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
433342    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
433343    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
433344    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
433345    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
433346    +   end;
MPRINT(EM_DIAGRAM):   end;
433347    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
433348    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
433349    +   end;
MPRINT(EM_DIAGRAM):   end;
433350    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
433351    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
433352    +   end;
MPRINT(EM_DIAGRAM):   end;
433353    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
433354    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
433355    +   end;
MPRINT(EM_DIAGRAM):   end;
433356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433357    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
433358    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
433359    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
433360    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
433361    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433362    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433363    +   end;
MPRINT(EM_DIAGRAM):   end;
433364    +end;
MPRINT(EM_DIAGRAM):   end;
433365    +
433366    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
433367    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
433368    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
433369    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
433370    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
433371    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
433372    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
433373    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
433374    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
433375    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
433376    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
433377    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
433378    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
433379    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433380    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433381    +end;
MPRINT(EM_DIAGRAM):   end;
433382    +else do;
MPRINT(EM_DIAGRAM):   else do;
433383    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
433384    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
433385    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433386    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
433387    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
433388    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
433389    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
433390    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
433391    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
433392    +         end;
MPRINT(EM_DIAGRAM):   end;
433393    +         else do;
MPRINT(EM_DIAGRAM):   else do;
433394    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
433395    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
433396    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
433397    +            end;
MPRINT(EM_DIAGRAM):   end;
433398    +         end;
MPRINT(EM_DIAGRAM):   end;
433399    +      end;
MPRINT(EM_DIAGRAM):   end;
433400    +      else do;
MPRINT(EM_DIAGRAM):   else do;
433401    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
433402    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
433403    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
433404    +         end;
MPRINT(EM_DIAGRAM):   end;
433405    +      end;
MPRINT(EM_DIAGRAM):   end;
433406    +   end;
MPRINT(EM_DIAGRAM):   end;
433407    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433408    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
433409    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
433410    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
433411    +      end;
MPRINT(EM_DIAGRAM):   end;
433412    +      else do;
MPRINT(EM_DIAGRAM):   else do;
433413    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
433414    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
433415    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
433416    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
433417    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
433418    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
433419    +         end;
MPRINT(EM_DIAGRAM):   end;
433420    +      end;
MPRINT(EM_DIAGRAM):   end;
433421    +   end;
MPRINT(EM_DIAGRAM):   end;
433422    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
433423    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
433424    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
433425    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
433426    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
433427    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433428    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433429    +   end;
MPRINT(EM_DIAGRAM):   end;
433430    +end;
MPRINT(EM_DIAGRAM):   end;
433431    +
433432    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433433    +*** Checking missing input Interval
433434    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
433435    +
433436    +IF NMISS(
433437    +   AcceptedCmpTotal ,
433438    +   Age ,
433439    +   Frq ,
433440    +   Income ,
433441    +   Kidhome ,
433442    +   Mnt ,
433443    +   MntFishProducts ,
433444    +   MntFruits ,
433445    +   MntGoldProds ,
433446    +   MntMeatProducts ,
433447    +   MntSweetProducts ,
433448    +   MntWines ,
433449    +   MonthsAsCustomer ,
433450    +   NumCatalogPurchases ,
433451    +   NumDealsPurchases ,
433452    +   NumDistPurchases ,
433453    +   NumStorePurchases ,
433454    +   NumWebPurchases ,
433455    +   NumWebVisitsMonth ,
433456    +   RFMstat ,
433457    +   RMntFrq ,
433458    +   Recency ,
433459    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
433460    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
433461    +
433462    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433463    +END;
MPRINT(EM_DIAGRAM):   END;
433464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433465    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
433466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433467    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
433468    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
433469    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
433470    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
433471    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
433472    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
433473    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
433474    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
433475    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
433476    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
433477    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
433478    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
433479    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
433480    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
433481    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
433482    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
433483    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
433484    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
433485    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
433486    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
433487    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
433488    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
433489    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
433490    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
433491    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
433492    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
433493    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
433494    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
433495    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
433496    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
433497    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
433498    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
433499    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
433500    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
433501    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
433502    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
433503    +END;
MPRINT(EM_DIAGRAM):   END;
433504    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
433505    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
433506    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
433507    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
433508    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
433509    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
433510    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
433511    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
433512    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
433513    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
433514    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
433515    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
433516    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
433517    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
433518    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
433519    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
433520    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
433521    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
433522    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
433523    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
433524    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
433525    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
433526    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
433527    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
433528    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
433529    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
433530    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
433531    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
433532    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
433533    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
433534    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
433535    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
433536    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
433537    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
433538    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
433539    +   ELSE S_NumCatalogPurchases
433540    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
433541    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
433542    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
433543    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
433544    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
433545    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
433546    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
433547    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
433548    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
433549    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
433550    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
433551    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
433552    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
433553    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
433554    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
433555    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
433556    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
433557    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
433558    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
433559    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
433560    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
433561    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
433562    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
433563    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
433564    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
433565    +END;
MPRINT(EM_DIAGRAM):   END;
433566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433567    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
433568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433569    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433570    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
433571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433573    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
433574    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433575    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
433576    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
433577    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
433578    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
433579    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
433580    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
433581    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
433582    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
433583    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
433584    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
433585    +          +    -1.14704878034134 * S_NumDealsPurchases
433586    +          +    -0.17763404274659 * S_NumDistPurchases
433587    +          +     0.08894400267969 * S_NumStorePurchases
433588    +          +     0.59283747891957 * S_NumWebPurchases
433589    +          +     0.85268274682505 * S_NumWebVisitsMonth
433590    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
433591    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
433592    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
433593    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
433594    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
433595    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
433596    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
433597    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
433598    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
433599    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
433600    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
433601    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
433602    +          +    -0.80841566068716 * S_NumDealsPurchases
433603    +          +    -0.17995640033768 * S_NumDistPurchases
433604    +          +     0.00713417460936 * S_NumStorePurchases
433605    +          +     0.57881024323076 * S_NumWebPurchases
433606    +          +    -1.35134224257365 * S_NumWebVisitsMonth
433607    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
433608    +        S_RMntFrq  +     1.16978656262499 * S_Recency
433609    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
433610    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
433611    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
433612    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
433613    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
433614    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
433615    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
433616    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
433617    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
433618    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
433619    +          +     0.57891364118717 * S_NumDealsPurchases
433620    +          +    -0.31024556838688 * S_NumDistPurchases
433621    +          +    -1.48708542986704 * S_NumStorePurchases
433622    +          +    -0.93009875249206 * S_NumWebPurchases
433623    +          +     2.01900039122935 * S_NumWebVisitsMonth
433624    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
433625    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
433626    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
433627    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
433628    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
433629    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
433630    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
433631    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
433632    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
433633    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
433634    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
433635    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
433636    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
433637    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
433638    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
433639    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
433640    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
433641    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
433642    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
433643    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
433644    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
433645    +          +     0.55883606830033 * Marital_StatusDivorced
433646    +          +    -0.54530037567066 * Marital_StatusMarried
433647    +          +    -0.52994736075753 * Marital_StatusSingle
433648    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
433649    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
433650    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
433651    +        EducationGraduation  +     0.31201349236277 * EducationMaster
433652    +          +    -1.07368484057033 * Marital_StatusDivorced
433653    +          +     2.73313504711262 * Marital_StatusMarried
433654    +          +    -2.18530462876058 * Marital_StatusSingle
433655    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
433656    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
433657    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
433658    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
433659    +          +     0.49993144243043 * Marital_StatusDivorced
433660    +          +    -0.38953339116829 * Marital_StatusMarried
433661    +          +    -0.10836287319942 * Marital_StatusSingle
433662    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
433663    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
433664    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
433665    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
433666    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
433667    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
433668    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
433669    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
433670    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
433671    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
433672    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
433673    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
433674    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
433675    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
433676    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
433677    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
433678    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
433679    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
433680    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
433681    +END;
MPRINT(EM_DIAGRAM):   END;
433682    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
433683    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
433684    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
433685    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
433686    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
433687    +END;
MPRINT(EM_DIAGRAM):   END;
433688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433689    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
433690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433691    +
433692    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
433693    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
433694    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
433695    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
433696    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
433697    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433698    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
433699    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
433700    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
433701    +end;
MPRINT(EM_DIAGRAM):   end;
433702    +else do;
MPRINT(EM_DIAGRAM):   else do;
433703    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
433704    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
433705    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
433706    +   end;
MPRINT(EM_DIAGRAM):   end;
433707    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
433708    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
433709    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
433710    +   end;
MPRINT(EM_DIAGRAM):   end;
433711    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433712    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
433713    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
433714    +   end;
MPRINT(EM_DIAGRAM):   end;
433715    +end;
MPRINT(EM_DIAGRAM):   end;
433716    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
433717    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
433718    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
433719    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
433720    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
433721    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
433722    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
433723    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
433724    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
433725    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
433726    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
433727    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
433728    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
433729    +END;
MPRINT(EM_DIAGRAM):   END;
433730    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
433731    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
433732    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
433733    +END;
MPRINT(EM_DIAGRAM):   END;
433734    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
433735    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
433736    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
433737    +END;
MPRINT(EM_DIAGRAM):   END;
433738    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
433739    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
433740    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
433741    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
433742    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
433743    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
433744    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
433745    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433746    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
433747    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
433748    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
433749    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
433750    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
433751    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
433752    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
433753    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
433754    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
433755    +END;
MPRINT(EM_DIAGRAM):   END;
433756    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
433757    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
433758    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
433759    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
433760    +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
433761    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433762    +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
433763    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433764    +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
433765    +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
433766    +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
433767    +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
433768    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433769    +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
433770    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433771    +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
433772    +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
433773    +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
433774    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433775    +* Ensmbl27: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 3 of 7;
433776    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433777    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433778    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
433779    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
433780    +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
433781    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
433782    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
433783    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
433784    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
433785    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
433786    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
433787    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
433788    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
433789    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
433790    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
433791    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
433792    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
433793    +LENGTH _WARN_ $4
433794    +      F_DepVar  $ 12
433795    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
433796    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
433797    +
433798    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
433799    +
433800    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
433801    +
433802    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
433803    +
433804    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
433805    +
433806    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
433807    +
433808    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
433809    +
433810    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
433811    +
433812    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
433813    +
433814    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
433815    +
433816    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
433817    +
433818    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
433819    +
433820    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
433821    +
433822    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
433823    +
433824    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
433825    +
433826    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
433827    +
433828    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
433829    +
433830    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
433831    +
433832    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
433833    +
433834    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
433835    +
433836    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
433837    +
433838    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
433839    +
433840    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
433841    +
433842    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
433843    +
433844    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
433845    +
433846    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
433847    +
433848    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
433849    +
433850    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
433851    +
433852    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
433853    +
433854    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
433855    +
433856    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
433857    +
433858    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
433859    +
433860    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
433861    +
433862    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
433863    +
433864    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
433865    +
433866    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
433867    +
433868    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
433869    +
433870    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
433871    +
433872    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
433873    +
433874    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
433875    +
433876    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
433877    +
433878    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
433879    +
433880    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
433881    +
433882    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
433883    +
433884    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
433885    +
433886    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
433887    +
433888    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
433889    +
433890    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
433891    +
433892    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
433893    +
433894    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
433895    +
433896    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
433897    +
433898    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
433899    +
433900    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
433901    +
433902    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
433903    +
433904    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
433905    +
433906    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
433907    +
433908    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
433909    +
433910    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
433911    +
433912    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
433913    +
433914    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
433915    +
433916    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
433917    +
433918    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
433919    +
433920    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
433921    +
433922    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
433923    +
433924    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
433925    +
433926    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
433927    +
433928    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
433929    +
433930    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
433931    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
433932    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
433933    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
433934    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433935    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433936    +end;
MPRINT(EM_DIAGRAM):   end;
433937    +else do;
MPRINT(EM_DIAGRAM):   else do;
433938    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
433939    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
433940    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433941    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
433942    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
433943    +   end;
MPRINT(EM_DIAGRAM):   end;
433944    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
433945    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
433946    +   end;
MPRINT(EM_DIAGRAM):   end;
433947    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433948    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
433949    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433950    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433951    +   end;
MPRINT(EM_DIAGRAM):   end;
433952    +end;
MPRINT(EM_DIAGRAM):   end;
433953    +
433954    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
433955    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
433956    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
433957    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
433958    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433959    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433960    +end;
MPRINT(EM_DIAGRAM):   end;
433961    +else do;
MPRINT(EM_DIAGRAM):   else do;
433962    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
433963    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
433964    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433965    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
433966    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
433967    +   end;
MPRINT(EM_DIAGRAM):   end;
433968    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
433969    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
433970    +   end;
MPRINT(EM_DIAGRAM):   end;
433971    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433972    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
433973    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433974    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433975    +   end;
MPRINT(EM_DIAGRAM):   end;
433976    +end;
MPRINT(EM_DIAGRAM):   end;
433977    +
433978    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
433979    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
433980    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
433981    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
433982    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
433983    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433984    +end;
MPRINT(EM_DIAGRAM):   end;
433985    +else do;
MPRINT(EM_DIAGRAM):   else do;
433986    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
433987    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
433988    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
433989    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
433990    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
433991    +   end;
MPRINT(EM_DIAGRAM):   end;
433992    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
433993    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
433994    +   end;
MPRINT(EM_DIAGRAM):   end;
433995    +   else do;
MPRINT(EM_DIAGRAM):   else do;
433996    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
433997    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
433998    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
433999    +   end;
MPRINT(EM_DIAGRAM):   end;
434000    +end;
MPRINT(EM_DIAGRAM):   end;
434001    +
434002    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
434003    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
434004    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
434005    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
434006    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
434007    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434008    +end;
MPRINT(EM_DIAGRAM):   end;
434009    +else do;
MPRINT(EM_DIAGRAM):   else do;
434010    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
434011    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
434012    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
434013    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
434014    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
434015    +   end;
MPRINT(EM_DIAGRAM):   end;
434016    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
434017    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
434018    +   end;
MPRINT(EM_DIAGRAM):   end;
434019    +   else do;
MPRINT(EM_DIAGRAM):   else do;
434020    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
434021    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
434022    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434023    +   end;
MPRINT(EM_DIAGRAM):   end;
434024    +end;
MPRINT(EM_DIAGRAM):   end;
434025    +
434026    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
434027    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
434028    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
434029    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
434030    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
434031    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434032    +end;
MPRINT(EM_DIAGRAM):   end;
434033    +else do;
MPRINT(EM_DIAGRAM):   else do;
434034    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
434035    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
434036    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
434037    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
434038    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
434039    +   end;
MPRINT(EM_DIAGRAM):   end;
434040    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
434041    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
434042    +   end;
MPRINT(EM_DIAGRAM):   end;
434043    +   else do;
MPRINT(EM_DIAGRAM):   else do;
434044    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
434045    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
434046    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434047    +   end;
MPRINT(EM_DIAGRAM):   end;
434048    +end;
MPRINT(EM_DIAGRAM):   end;
434049    +
434050    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
434051    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
434052    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
434053    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
434054    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
434055    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434056    +end;
MPRINT(EM_DIAGRAM):   end;
434057    +else do;
MPRINT(EM_DIAGRAM):   else do;
434058    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
434059    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
434060    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
434061    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
434062    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
434063    +   end;
MPRINT(EM_DIAGRAM):   end;
434064    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
434065    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
434066    +   end;
MPRINT(EM_DIAGRAM):   end;
434067    +   else do;
MPRINT(EM_DIAGRAM):   else do;
434068    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
434069    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
434070    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434071    +   end;
MPRINT(EM_DIAGRAM):   end;
434072    +end;
MPRINT(EM_DIAGRAM):   end;
434073    +
434074    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
434075    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
434076    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
434077    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
434078    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
434079    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434080    +end;
MPRINT(EM_DIAGRAM):   end;
434081    +else do;
MPRINT(EM_DIAGRAM):   else do;
434082    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
434083    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
434084    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
434085    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
434086    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
434087    +   end;
MPRINT(EM_DIAGRAM):   end;
434088    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
434089    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
434090    +   end;
MPRINT(EM_DIAGRAM):   end;
434091    +   else do;
MPRINT(EM_DIAGRAM):   else do;
434092    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
434093    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
434094    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434095    +   end;
MPRINT(EM_DIAGRAM):   end;
434096    +end;
MPRINT(EM_DIAGRAM):   end;
434097    +
434098    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
434099    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
434100    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
434101    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
434102    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
434103    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
434104    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
434105    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
434106    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
434107    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
434108    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
434109    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
434110    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
434111    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434112    +end;
MPRINT(EM_DIAGRAM):   end;
434113    +else do;
MPRINT(EM_DIAGRAM):   else do;
434114    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
434115    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
434116    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
434117    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
434118    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
434119    +   end;
MPRINT(EM_DIAGRAM):   end;
434120    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
434121    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
434122    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
434123    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
434124    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
434125    +   end;
MPRINT(EM_DIAGRAM):   end;
434126    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
434127    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
434128    +   end;
MPRINT(EM_DIAGRAM):   end;
434129    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
434130    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
434131    +   end;
MPRINT(EM_DIAGRAM):   end;
434132    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
434133    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
434134    +   end;
MPRINT(EM_DIAGRAM):   end;
434135    +   else do;
MPRINT(EM_DIAGRAM):   else do;
434136    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
434137    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
434138    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
434139    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
434140    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
434141    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434142    +   end;
MPRINT(EM_DIAGRAM):   end;
434143    +end;
MPRINT(EM_DIAGRAM):   end;
434144    +
434145    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
434146    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
434147    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
434148    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
434149    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
434150    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
434151    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
434152    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
434153    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
434154    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
434155    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
434156    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
434157    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
434158    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
434159    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434160    +end;
MPRINT(EM_DIAGRAM):   end;
434161    +else do;
MPRINT(EM_DIAGRAM):   else do;
434162    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
434163    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
434164    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
434165    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
434166    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
434167    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
434168    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
434169    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
434170    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
434171    +         end;
MPRINT(EM_DIAGRAM):   end;
434172    +         else do;
MPRINT(EM_DIAGRAM):   else do;
434173    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
434174    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
434175    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
434176    +            end;
MPRINT(EM_DIAGRAM):   end;
434177    +         end;
MPRINT(EM_DIAGRAM):   end;
434178    +      end;
MPRINT(EM_DIAGRAM):   end;
434179    +      else do;
MPRINT(EM_DIAGRAM):   else do;
434180    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
434181    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
434182    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
434183    +         end;
MPRINT(EM_DIAGRAM):   end;
434184    +      end;
MPRINT(EM_DIAGRAM):   end;
434185    +   end;
MPRINT(EM_DIAGRAM):   end;
434186    +   else do;
MPRINT(EM_DIAGRAM):   else do;
434187    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
434188    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
434189    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
434190    +      end;
MPRINT(EM_DIAGRAM):   end;
434191    +      else do;
MPRINT(EM_DIAGRAM):   else do;
434192    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
434193    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
434194    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
434195    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
434196    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
434197    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
434198    +         end;
MPRINT(EM_DIAGRAM):   end;
434199    +      end;
MPRINT(EM_DIAGRAM):   end;
434200    +   end;
MPRINT(EM_DIAGRAM):   end;
434201    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
434202    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
434203    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
434204    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
434205    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
434206    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
434207    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434208    +   end;
MPRINT(EM_DIAGRAM):   end;
434209    +end;
MPRINT(EM_DIAGRAM):   end;
434210    +
434211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434212    +*** Checking missing input Interval
434213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
434214    +
434215    +IF NMISS(
434216    +   AcceptedCmpTotal ,
434217    +   Age ,
434218    +   Frq ,
434219    +   Income ,
434220    +   Kidhome ,
434221    +   Mnt ,
434222    +   MntFishProducts ,
434223    +   MntFruits ,
434224    +   MntGoldProds ,
434225    +   MntMeatProducts ,
434226    +   MntSweetProducts ,
434227    +   MntWines ,
434228    +   MonthsAsCustomer ,
434229    +   NumCatalogPurchases ,
434230    +   NumDealsPurchases ,
434231    +   NumDistPurchases ,
434232    +   NumStorePurchases ,
434233    +   NumWebPurchases ,
434234    +   NumWebVisitsMonth ,
434235    +   RFMstat ,
434236    +   RMntFrq ,
434237    +   Recency ,
434238    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
434239    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
434240    +
434241    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
434242    +END;
MPRINT(EM_DIAGRAM):   END;
434243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434244    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
434245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434246    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
434247    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
434248    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
434249    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
434250    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
434251    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
434252    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
434253    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
434254    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
434255    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
434256    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
434257    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
434258    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
434259    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
434260    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
434261    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
434262    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
434263    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
434264    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
434265    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
434266    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
434267    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
434268    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
434269    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
434270    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
434271    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
434272    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
434273    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
434274    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
434275    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
434276    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
434277    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
434278    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
434279    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
434280    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
434281    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
434282    +END;
MPRINT(EM_DIAGRAM):   END;
434283    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
434284    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
434285    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
434286    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
434287    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
434288    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
434289    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
434290    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
434291    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
434292    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
434293    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
434294    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
434295    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
434296    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
434297    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
434298    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
434299    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
434300    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
434301    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
434302    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
434303    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
434304    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
434305    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
434306    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
434307    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
434308    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
434309    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
434310    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
434311    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
434312    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
434313    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
434314    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
434315    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
434316    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
434317    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
434318    +   ELSE S_NumCatalogPurchases
434319    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
434320    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
434321    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
434322    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
434323    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
434324    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
434325    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
434326    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
434327    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
434328    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
434329    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
434330    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
434331    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
434332    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
434333    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
434334    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
434335    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
434336    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
434337    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
434338    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
434339    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
434340    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
434341    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
434342    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
434343    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
434344    +END;
MPRINT(EM_DIAGRAM):   END;
434345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434346    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
434347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434349    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
434350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434351    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434352    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
434353    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434354    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
434355    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
434356    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
434357    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
434358    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
434359    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
434360    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
434361    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
434362    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
434363    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
434364    +          +     1.17276395296242 * S_NumDealsPurchases
434365    +          +     0.26632768295477 * S_NumDistPurchases
434366    +          +    -1.26575615903579 * S_NumStorePurchases
434367    +          +    -0.95316107557927 * S_NumWebPurchases
434368    +          +     1.01828574356487 * S_NumWebVisitsMonth
434369    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
434370    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
434371    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
434372    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
434373    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
434374    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
434375    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
434376    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
434377    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
434378    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
434379    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
434380    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
434381    +          +     1.14485571201233 * S_NumDealsPurchases
434382    +          +     0.21414266588987 * S_NumDistPurchases
434383    +          +    -0.10530090074297 * S_NumStorePurchases
434384    +          +    -0.41712321238458 * S_NumWebPurchases
434385    +          +    -0.99760766791108 * S_NumWebVisitsMonth
434386    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
434387    +        S_RMntFrq  +     1.10040128548883 * S_Recency
434388    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
434389    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
434390    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
434391    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
434392    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
434393    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
434394    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
434395    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
434396    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
434397    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
434398    +          +      0.7196418967437 * S_NumDealsPurchases
434399    +          +     0.69035286374177 * S_NumDistPurchases
434400    +          +     0.38027656631135 * S_NumStorePurchases
434401    +          +    -0.18878358997924 * S_NumWebPurchases
434402    +          +     1.61962062004798 * S_NumWebVisitsMonth
434403    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
434404    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
434405    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
434406    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
434407    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
434408    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
434409    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
434410    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
434411    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
434412    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
434413    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
434414    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
434415    +          +    -0.00642902007204 * S_NumDealsPurchases
434416    +          +     0.29785069480367 * S_NumDistPurchases
434417    +          +    -0.42243322063147 * S_NumStorePurchases
434418    +          +     0.54880896338383 * S_NumWebPurchases
434419    +          +    -0.12525846016886 * S_NumWebVisitsMonth
434420    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
434421    +        S_RMntFrq  +     0.10252211581449 * S_Recency
434422    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
434423    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
434424    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
434425    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
434426    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
434427    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
434428    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
434429    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
434430    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
434431    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
434432    +          +    -0.48404738328225 * S_NumDealsPurchases
434433    +          +    -0.02464180457879 * S_NumDistPurchases
434434    +          +     1.17201831082067 * S_NumStorePurchases
434435    +          +     0.57453655167516 * S_NumWebPurchases
434436    +          +    -1.94417019790248 * S_NumWebVisitsMonth
434437    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
434438    +        S_RMntFrq  +      1.6169916658132 * S_Recency
434439    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
434440    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
434441    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
434442    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
434443    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
434444    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
434445    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
434446    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
434447    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
434448    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
434449    +          +    -1.49850531967483 * S_NumDealsPurchases
434450    +          +    -0.82105466264223 * S_NumDistPurchases
434451    +          +     0.29984603642824 * S_NumStorePurchases
434452    +          +     0.06557123721611 * S_NumWebPurchases
434453    +          +     1.04754749365002 * S_NumWebVisitsMonth
434454    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
434455    +        S_RMntFrq  +     0.12396789666359 * S_Recency
434456    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
434457    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
434458    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
434459    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
434460    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
434461    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
434462    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
434463    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
434464    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
434465    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
434466    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
434467    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
434468    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
434469    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
434470    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
434471    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
434472    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
434473    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
434474    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
434475    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
434476    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
434477    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
434478    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
434479    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
434480    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
434481    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
434482    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
434483    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
434484    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
434485    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
434486    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
434487    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
434488    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
434489    +        EducationGraduation  +     0.07595631354847 * EducationMaster
434490    +          +     0.24583509957712 * Marital_StatusDivorced
434491    +          +    -0.22681931588361 * Marital_StatusMarried
434492    +          +    -0.12924106229536 * Marital_StatusSingle
434493    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
434494    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
434495    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
434496    +        EducationGraduation  +     0.23015089246655 * EducationMaster
434497    +          +    -0.12585334311068 * Marital_StatusDivorced
434498    +          +    -0.20835502467207 * Marital_StatusMarried
434499    +          +    -0.13839534449368 * Marital_StatusSingle
434500    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
434501    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
434502    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
434503    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
434504    +          +     0.35106363238113 * Marital_StatusDivorced
434505    +          +     -1.3414808583918 * Marital_StatusMarried
434506    +          +     1.40835320798486 * Marital_StatusSingle
434507    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
434508    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
434509    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
434510    +        EducationGraduation  +      0.1746658332011 * EducationMaster
434511    +          +     0.48174546958393 * Marital_StatusDivorced
434512    +          +    -0.41416978858191 * Marital_StatusMarried
434513    +          +    -0.23376801546265 * Marital_StatusSingle
434514    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
434515    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
434516    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
434517    +        EducationGraduation  +     0.68875064631577 * EducationMaster
434518    +          +    -0.67557643774246 * Marital_StatusDivorced
434519    +          +     1.63844045917367 * Marital_StatusMarried
434520    +          +    -0.70320960247699 * Marital_StatusSingle
434521    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
434522    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
434523    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
434524    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
434525    +          +    -0.11371453086883 * Marital_StatusDivorced
434526    +          +    -0.34226997176291 * Marital_StatusMarried
434527    +          +    -1.01568676685754 * Marital_StatusSingle
434528    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
434529    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
434530    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
434531    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
434532    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
434533    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
434534    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
434535    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
434536    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
434537    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
434538    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
434539    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
434540    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
434541    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
434542    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
434543    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
434544    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
434545    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
434546    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
434547    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
434548    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
434549    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
434550    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
434551    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
434552    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
434553    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
434554    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
434555    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
434556    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
434557    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
434558    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
434559    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
434560    +END;
MPRINT(EM_DIAGRAM):   END;
434561    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
434562    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
434563    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
434564    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
434565    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
434566    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
434567    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
434568    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
434569    +END;
MPRINT(EM_DIAGRAM):   END;
434570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434571    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
434572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434573    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
434574    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
434575    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
434576    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
434577    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
434578    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
434579    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
434580    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
434581    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
434582    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
434583    +          +    -0.87259051567474 * S_NumDealsPurchases
434584    +          +    -0.36454149529139 * S_NumDistPurchases
434585    +          +     0.12447759925061 * S_NumStorePurchases
434586    +          +    -1.08133487947367 * S_NumWebPurchases
434587    +          +    -0.49882157745454 * S_NumWebVisitsMonth
434588    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
434589    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
434590    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
434591    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
434592    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
434593    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
434594    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
434595    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
434596    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
434597    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
434598    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
434599    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
434600    +          +     2.23121497416403 * S_NumDealsPurchases
434601    +          +    -0.48674842191071 * S_NumDistPurchases
434602    +          +     1.77510728607544 * S_NumStorePurchases
434603    +          +     0.14647433155436 * S_NumWebPurchases
434604    +          +    -0.95892686924419 * S_NumWebVisitsMonth
434605    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
434606    +        S_RMntFrq  +     2.46497777428475 * S_Recency
434607    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
434608    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
434609    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
434610    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
434611    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
434612    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
434613    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
434614    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
434615    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
434616    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
434617    +          +     0.14338855349611 * S_NumDealsPurchases
434618    +          +    -2.21071010829235 * S_NumDistPurchases
434619    +          +    -0.21795889348002 * S_NumStorePurchases
434620    +          +     1.98825087883535 * S_NumWebPurchases
434621    +          +     1.02482442531149 * S_NumWebVisitsMonth
434622    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
434623    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
434624    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
434625    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
434626    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
434627    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
434628    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
434629    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
434630    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
434631    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
434632    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
434633    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
434634    +          +     0.30041205661012 * S_NumDealsPurchases
434635    +          +    -0.63499849986918 * S_NumDistPurchases
434636    +          +    -0.34155713433714 * S_NumStorePurchases
434637    +          +    -1.14183354933936 * S_NumWebPurchases
434638    +          +    -0.42681980262973 * S_NumWebVisitsMonth
434639    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
434640    +        S_RMntFrq  +     1.25852246467612 * S_Recency
434641    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
434642    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
434643    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
434644    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
434645    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
434646    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
434647    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
434648    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
434649    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
434650    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
434651    +          +    -0.21237915559831 * S_NumDealsPurchases
434652    +          +     0.48256923764182 * S_NumDistPurchases
434653    +          +    -0.45553093140641 * S_NumStorePurchases
434654    +          +      0.5593655963659 * S_NumWebPurchases
434655    +          +     0.27943768691188 * S_NumWebVisitsMonth
434656    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
434657    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
434658    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
434659    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
434660    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
434661    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
434662    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
434663    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
434664    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
434665    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
434666    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
434667    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
434668    +          +     2.38967021388062 * S_NumDealsPurchases
434669    +          +    -0.97722398866481 * S_NumDistPurchases
434670    +          +     1.57612333191312 * S_NumStorePurchases
434671    +          +    -0.75968679115983 * S_NumWebPurchases
434672    +          +    -0.64207187757251 * S_NumWebVisitsMonth
434673    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
434674    +        S_RMntFrq  +     1.71313869798331 * S_Recency
434675    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
434676    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
434677    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
434678    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
434679    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
434680    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
434681    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
434682    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
434683    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
434684    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
434685    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
434686    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
434687    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
434688    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
434689    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
434690    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
434691    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
434692    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
434693    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
434694    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
434695    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
434696    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
434697    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
434698    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
434699    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
434700    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
434701    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
434702    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
434703    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
434704    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
434705    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
434706    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
434707    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
434708    +        EducationGraduation  +      0.1073450284316 * EducationMaster
434709    +          +     0.96470902298142 * Marital_StatusDivorced
434710    +          +     0.94805959268314 * Marital_StatusMarried
434711    +          +     -0.6523948769616 * Marital_StatusSingle
434712    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
434713    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
434714    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
434715    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
434716    +          +      0.3918249505531 * Marital_StatusDivorced
434717    +          +    -0.00968091979586 * Marital_StatusMarried
434718    +          +     0.84615379885071 * Marital_StatusSingle
434719    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
434720    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
434721    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
434722    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
434723    +          +     1.14335160313191 * Marital_StatusDivorced
434724    +          +     0.50580517192175 * Marital_StatusMarried
434725    +          +     0.17264295020921 * Marital_StatusSingle
434726    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
434727    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
434728    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
434729    +        EducationGraduation  +     1.95818378342783 * EducationMaster
434730    +          +    -0.11238504444225 * Marital_StatusDivorced
434731    +          +    -0.81348274043749 * Marital_StatusMarried
434732    +          +     0.46075415610001 * Marital_StatusSingle
434733    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
434734    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
434735    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
434736    +        EducationGraduation  +     0.08396135672504 * EducationMaster
434737    +          +    -0.46342068701431 * Marital_StatusDivorced
434738    +          +    -0.41667845270204 * Marital_StatusMarried
434739    +          +    -0.47166707496281 * Marital_StatusSingle
434740    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
434741    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
434742    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
434743    +        EducationGraduation  +     0.36656103863186 * EducationMaster
434744    +          +    -0.45376613787812 * Marital_StatusDivorced
434745    +          +     0.01337046049801 * Marital_StatusMarried
434746    +          +    -0.92811489484121 * Marital_StatusSingle
434747    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
434748    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
434749    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
434750    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
434751    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
434752    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
434753    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
434754    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
434755    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
434756    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
434757    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
434758    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
434759    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
434760    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
434761    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
434762    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
434763    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
434764    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
434765    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
434766    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
434767    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
434768    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
434769    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
434770    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
434771    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
434772    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
434773    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
434774    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
434775    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
434776    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
434777    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
434778    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
434779    +END;
MPRINT(EM_DIAGRAM):   END;
434780    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
434781    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
434782    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
434783    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
434784    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
434785    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
434786    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
434787    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
434788    +END;
MPRINT(EM_DIAGRAM):   END;
434789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434790    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
434791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434792    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
434793    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
434794    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
434795    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
434796    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
434797    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
434798    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
434799    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
434800    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
434801    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
434802    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
434803    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
434804    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
434805    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
434806    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
434807    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
434808    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
434809    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
434810    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
434811    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
434812    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
434813    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
434814    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
434815    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
434816    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
434817    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
434818    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
434819    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
434820    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
434821    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
434822    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
434823    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
434824    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
434825    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
434826    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
434827    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
434828    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
434829    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
434830    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
434831    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
434832    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
434833    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
434834    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
434835    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
434836    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
434837    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
434838    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
434839    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
434840    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
434841    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
434842    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
434843    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
434844    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
434845    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
434846    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
434847    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
434848    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
434849    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
434850    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
434851    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
434852    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
434853    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
434854    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
434855    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
434856    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
434857    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
434858    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
434859    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
434860    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
434861    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
434862    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
434863    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
434864    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
434865    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
434866    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
434867    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
434868    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
434869    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
434870    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
434871    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
434872    +END;
MPRINT(EM_DIAGRAM):   END;
434873    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
434874    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
434875    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
434876    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
434877    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
434878    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
434879    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
434880    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
434881    +END;
MPRINT(EM_DIAGRAM):   END;
434882    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434883    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
434884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434885    +
434886    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
434887    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
434888    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
434889    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
434890    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
434891    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
434892    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
434893    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
434894    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
434895    +end;
MPRINT(EM_DIAGRAM):   end;
434896    +else do;
MPRINT(EM_DIAGRAM):   else do;
434897    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
434898    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
434899    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
434900    +   end;
MPRINT(EM_DIAGRAM):   end;
434901    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
434902    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
434903    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
434904    +   end;
MPRINT(EM_DIAGRAM):   end;
434905    +   else do;
MPRINT(EM_DIAGRAM):   else do;
434906    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
434907    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
434908    +   end;
MPRINT(EM_DIAGRAM):   end;
434909    +end;
MPRINT(EM_DIAGRAM):   end;
434910    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
434911    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
434912    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
434913    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
434914    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
434915    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
434916    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
434917    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
434918    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
434919    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
434920    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
434921    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
434922    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
434923    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
434924    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
434925    +END;
MPRINT(EM_DIAGRAM):   END;
434926    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
434927    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
434928    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
434929    +END;
MPRINT(EM_DIAGRAM):   END;
434930    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
434931    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
434932    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
434933    +END;
MPRINT(EM_DIAGRAM):   END;
434934    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
434935    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
434936    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
434937    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
434938    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
434939    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
434940    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
434941    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434942    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
434943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
434944    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
434945    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
434946    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
434947    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
434948    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
434949    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
434950    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
434951    +END;
MPRINT(EM_DIAGRAM):   END;
434952    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
434953    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
434954    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
434955    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
434956    +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
434957    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
434958    +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
434959    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
434960    +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
434961    +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
434962    +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
434963    +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
434964    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
434965    +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
434966    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
434967    +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
434968    +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
434969    +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
434970    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
434971    +* Ensmbl27: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 4 of 7;
434972    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
434973    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
434974    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
434975    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
434976    +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
434977    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
434978    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
434979    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
434980    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
434981    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
434982    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
434983    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
434984    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
434985    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
434986    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
434987    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
434988    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
434989    +LENGTH _WARN_ $4
434990    +      F_DepVar  $ 12
434991    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
434992    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
434993    +
434994    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
434995    +
434996    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
434997    +
434998    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
434999    +
435000    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
435001    +
435002    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
435003    +
435004    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
435005    +
435006    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
435007    +
435008    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
435009    +
435010    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
435011    +
435012    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
435013    +
435014    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
435015    +
435016    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
435017    +
435018    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
435019    +
435020    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
435021    +
435022    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
435023    +
435024    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
435025    +
435026    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
435027    +
435028    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
435029    +
435030    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
435031    +
435032    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
435033    +
435034    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
435035    +
435036    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
435037    +
435038    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
435039    +
435040    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
435041    +
435042    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
435043    +
435044    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
435045    +
435046    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
435047    +
435048    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
435049    +
435050    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
435051    +
435052    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
435053    +
435054    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
435055    +
435056    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
435057    +
435058    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
435059    +
435060    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
435061    +
435062    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
435063    +
435064    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
435065    +
435066    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
435067    +
435068    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
435069    +
435070    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
435071    +
435072    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
435073    +
435074    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
435075    +
435076    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
435077    +
435078    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
435079    +
435080    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
435081    +
435082    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
435083    +
435084    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
435085    +
435086    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
435087    +
435088    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
435089    +
435090    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
435091    +
435092    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
435093    +
435094    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
435095    +
435096    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
435097    +
435098    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
435099    +
435100    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
435101    +
435102    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
435103    +
435104    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
435105    +
435106    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
435107    +
435108    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
435109    +
435110    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
435111    +
435112    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
435113    +
435114    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
435115    +
435116    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
435117    +
435118    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
435119    +
435120    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
435121    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
435122    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
435123    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
435124    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435125    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435126    +end;
MPRINT(EM_DIAGRAM):   end;
435127    +else do;
MPRINT(EM_DIAGRAM):   else do;
435128    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435129    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
435130    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435131    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435132    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
435133    +   end;
MPRINT(EM_DIAGRAM):   end;
435134    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435135    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
435136    +   end;
MPRINT(EM_DIAGRAM):   end;
435137    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435138    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
435139    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435140    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435141    +   end;
MPRINT(EM_DIAGRAM):   end;
435142    +end;
MPRINT(EM_DIAGRAM):   end;
435143    +
435144    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
435145    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
435146    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
435147    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
435148    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435149    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435150    +end;
MPRINT(EM_DIAGRAM):   end;
435151    +else do;
MPRINT(EM_DIAGRAM):   else do;
435152    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435153    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
435154    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435155    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435156    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
435157    +   end;
MPRINT(EM_DIAGRAM):   end;
435158    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435159    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
435160    +   end;
MPRINT(EM_DIAGRAM):   end;
435161    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435162    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
435163    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435164    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435165    +   end;
MPRINT(EM_DIAGRAM):   end;
435166    +end;
MPRINT(EM_DIAGRAM):   end;
435167    +
435168    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
435169    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
435170    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
435171    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
435172    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435174    +end;
MPRINT(EM_DIAGRAM):   end;
435175    +else do;
MPRINT(EM_DIAGRAM):   else do;
435176    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435177    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
435178    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435179    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435180    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
435181    +   end;
MPRINT(EM_DIAGRAM):   end;
435182    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435183    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
435184    +   end;
MPRINT(EM_DIAGRAM):   end;
435185    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435186    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
435187    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435188    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435189    +   end;
MPRINT(EM_DIAGRAM):   end;
435190    +end;
MPRINT(EM_DIAGRAM):   end;
435191    +
435192    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
435193    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
435194    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
435195    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
435196    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435197    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435198    +end;
MPRINT(EM_DIAGRAM):   end;
435199    +else do;
MPRINT(EM_DIAGRAM):   else do;
435200    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435201    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
435202    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435203    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435204    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
435205    +   end;
MPRINT(EM_DIAGRAM):   end;
435206    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435207    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
435208    +   end;
MPRINT(EM_DIAGRAM):   end;
435209    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435210    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
435211    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435212    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435213    +   end;
MPRINT(EM_DIAGRAM):   end;
435214    +end;
MPRINT(EM_DIAGRAM):   end;
435215    +
435216    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
435217    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
435218    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
435219    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
435220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435222    +end;
MPRINT(EM_DIAGRAM):   end;
435223    +else do;
MPRINT(EM_DIAGRAM):   else do;
435224    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435225    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
435226    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435227    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435228    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
435229    +   end;
MPRINT(EM_DIAGRAM):   end;
435230    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435231    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
435232    +   end;
MPRINT(EM_DIAGRAM):   end;
435233    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435234    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
435235    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435236    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435237    +   end;
MPRINT(EM_DIAGRAM):   end;
435238    +end;
MPRINT(EM_DIAGRAM):   end;
435239    +
435240    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
435241    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
435242    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
435243    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
435244    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435245    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435246    +end;
MPRINT(EM_DIAGRAM):   end;
435247    +else do;
MPRINT(EM_DIAGRAM):   else do;
435248    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435249    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
435250    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435251    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435252    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
435253    +   end;
MPRINT(EM_DIAGRAM):   end;
435254    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435255    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
435256    +   end;
MPRINT(EM_DIAGRAM):   end;
435257    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435258    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
435259    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435260    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435261    +   end;
MPRINT(EM_DIAGRAM):   end;
435262    +end;
MPRINT(EM_DIAGRAM):   end;
435263    +
435264    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
435265    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
435266    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
435267    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
435268    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435269    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435270    +end;
MPRINT(EM_DIAGRAM):   end;
435271    +else do;
MPRINT(EM_DIAGRAM):   else do;
435272    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435273    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
435274    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435275    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
435276    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
435277    +   end;
MPRINT(EM_DIAGRAM):   end;
435278    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
435279    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
435280    +   end;
MPRINT(EM_DIAGRAM):   end;
435281    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435282    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
435283    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435284    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435285    +   end;
MPRINT(EM_DIAGRAM):   end;
435286    +end;
MPRINT(EM_DIAGRAM):   end;
435287    +
435288    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
435289    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
435290    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
435291    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
435292    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
435293    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
435294    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
435295    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
435296    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
435297    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
435298    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
435299    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
435300    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435302    +end;
MPRINT(EM_DIAGRAM):   end;
435303    +else do;
MPRINT(EM_DIAGRAM):   else do;
435304    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
435305    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
435306    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435307    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
435308    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
435309    +   end;
MPRINT(EM_DIAGRAM):   end;
435310    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
435311    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
435312    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
435313    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
435314    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
435315    +   end;
MPRINT(EM_DIAGRAM):   end;
435316    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
435317    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
435318    +   end;
MPRINT(EM_DIAGRAM):   end;
435319    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
435320    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
435321    +   end;
MPRINT(EM_DIAGRAM):   end;
435322    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
435323    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
435324    +   end;
MPRINT(EM_DIAGRAM):   end;
435325    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435326    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
435327    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
435328    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
435329    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
435330    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435331    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435332    +   end;
MPRINT(EM_DIAGRAM):   end;
435333    +end;
MPRINT(EM_DIAGRAM):   end;
435334    +
435335    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
435336    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
435337    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
435338    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
435339    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
435340    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
435341    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
435342    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
435343    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
435344    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
435345    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
435346    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
435347    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
435348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435350    +end;
MPRINT(EM_DIAGRAM):   end;
435351    +else do;
MPRINT(EM_DIAGRAM):   else do;
435352    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
435353    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
435354    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435355    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
435356    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
435357    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
435358    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
435359    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
435360    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
435361    +         end;
MPRINT(EM_DIAGRAM):   end;
435362    +         else do;
MPRINT(EM_DIAGRAM):   else do;
435363    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
435364    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
435365    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
435366    +            end;
MPRINT(EM_DIAGRAM):   end;
435367    +         end;
MPRINT(EM_DIAGRAM):   end;
435368    +      end;
MPRINT(EM_DIAGRAM):   end;
435369    +      else do;
MPRINT(EM_DIAGRAM):   else do;
435370    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
435371    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
435372    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
435373    +         end;
MPRINT(EM_DIAGRAM):   end;
435374    +      end;
MPRINT(EM_DIAGRAM):   end;
435375    +   end;
MPRINT(EM_DIAGRAM):   end;
435376    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435377    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
435378    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
435379    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
435380    +      end;
MPRINT(EM_DIAGRAM):   end;
435381    +      else do;
MPRINT(EM_DIAGRAM):   else do;
435382    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
435383    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
435384    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
435385    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
435386    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
435387    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
435388    +         end;
MPRINT(EM_DIAGRAM):   end;
435389    +      end;
MPRINT(EM_DIAGRAM):   end;
435390    +   end;
MPRINT(EM_DIAGRAM):   end;
435391    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
435392    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
435393    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
435394    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
435395    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
435396    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435397    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435398    +   end;
MPRINT(EM_DIAGRAM):   end;
435399    +end;
MPRINT(EM_DIAGRAM):   end;
435400    +
435401    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435402    +*** Checking missing input Interval
435403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
435404    +
435405    +IF NMISS(
435406    +   AcceptedCmpTotal ,
435407    +   Age ,
435408    +   Frq ,
435409    +   Income ,
435410    +   Kidhome ,
435411    +   Mnt ,
435412    +   MntFishProducts ,
435413    +   MntFruits ,
435414    +   MntGoldProds ,
435415    +   MntMeatProducts ,
435416    +   MntSweetProducts ,
435417    +   MntWines ,
435418    +   MonthsAsCustomer ,
435419    +   NumCatalogPurchases ,
435420    +   NumDealsPurchases ,
435421    +   NumDistPurchases ,
435422    +   NumStorePurchases ,
435423    +   NumWebPurchases ,
435424    +   NumWebVisitsMonth ,
435425    +   RFMstat ,
435426    +   RMntFrq ,
435427    +   Recency ,
435428    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
435429    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
435430    +
435431    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435432    +END;
MPRINT(EM_DIAGRAM):   END;
435433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435434    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
435435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435436    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
435437    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
435438    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
435439    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
435440    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
435441    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
435442    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
435443    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
435444    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
435445    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
435446    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
435447    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
435448    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
435449    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
435450    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
435451    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
435452    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
435453    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
435454    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
435455    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
435456    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
435457    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
435458    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
435459    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
435460    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
435461    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
435462    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
435463    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
435464    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
435465    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
435466    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
435467    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
435468    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
435469    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
435470    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
435471    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
435472    +END;
MPRINT(EM_DIAGRAM):   END;
435473    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
435474    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
435475    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
435476    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
435477    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
435478    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
435479    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
435480    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
435481    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
435482    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
435483    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
435484    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
435485    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
435486    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
435487    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
435488    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
435489    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
435490    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
435491    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
435492    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
435493    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
435494    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
435495    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
435496    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
435497    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
435498    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
435499    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
435500    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
435501    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
435502    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
435503    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
435504    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
435505    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
435506    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
435507    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
435508    +   ELSE S_NumCatalogPurchases
435509    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
435510    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
435511    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
435512    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
435513    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
435514    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
435515    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
435516    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
435517    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
435518    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
435519    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
435520    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
435521    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
435522    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
435523    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
435524    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
435525    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
435526    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
435527    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
435528    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
435529    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
435530    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
435531    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
435532    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
435533    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
435534    +END;
MPRINT(EM_DIAGRAM):   END;
435535    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435536    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
435537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435538    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435539    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
435540    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435541    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435542    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
435543    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435544    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
435545    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
435546    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
435547    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
435548    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
435549    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
435550    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
435551    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
435552    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
435553    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
435554    +          +     0.89422627895323 * S_NumDealsPurchases
435555    +          +    -0.13304125929765 * S_NumDistPurchases
435556    +          +    -1.04568442570811 * S_NumStorePurchases
435557    +          +    -0.28677765126751 * S_NumWebPurchases
435558    +          +      1.2327638737509 * S_NumWebVisitsMonth
435559    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
435560    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
435561    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
435562    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
435563    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
435564    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
435565    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
435566    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
435567    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
435568    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
435569    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
435570    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
435571    +          +     0.04224590196535 * S_NumDealsPurchases
435572    +          +     0.76554742700113 * S_NumDistPurchases
435573    +          +    -0.49155496870812 * S_NumStorePurchases
435574    +          +     0.59606812744403 * S_NumWebPurchases
435575    +          +     1.86809286276405 * S_NumWebVisitsMonth
435576    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
435577    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
435578    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
435579    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
435580    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
435581    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
435582    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
435583    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
435584    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
435585    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
435586    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
435587    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
435588    +          +    -0.04866536993486 * S_NumDealsPurchases
435589    +          +    -0.53535979020214 * S_NumDistPurchases
435590    +          +     2.20634071253676 * S_NumStorePurchases
435591    +          +      0.6164564989007 * S_NumWebPurchases
435592    +          +    -0.43396314395263 * S_NumWebVisitsMonth
435593    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
435594    +        S_RMntFrq  +     2.37293441098349 * S_Recency
435595    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
435596    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
435597    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
435598    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
435599    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
435600    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
435601    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
435602    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
435603    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
435604    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
435605    +          +     1.37461255707863 * S_NumDealsPurchases
435606    +          +    -0.17684775000818 * S_NumDistPurchases
435607    +          +    -0.62755623855535 * S_NumStorePurchases
435608    +          +    -1.46551649022657 * S_NumWebPurchases
435609    +          +     3.35784247878638 * S_NumWebVisitsMonth
435610    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
435611    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
435612    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
435613    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
435614    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
435615    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
435616    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
435617    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
435618    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
435619    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
435620    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
435621    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
435622    +          +    -0.76256677907121 * S_NumDealsPurchases
435623    +          +    -0.31591571751692 * S_NumDistPurchases
435624    +          +      0.0506832614089 * S_NumStorePurchases
435625    +          +      1.4636796923764 * S_NumWebPurchases
435626    +          +     0.37743519705036 * S_NumWebVisitsMonth
435627    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
435628    +        S_RMntFrq  +     0.16854775832723 * S_Recency
435629    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
435630    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
435631    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
435632    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
435633    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
435634    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
435635    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
435636    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
435637    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
435638    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
435639    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
435640    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
435641    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
435642    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
435643    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
435644    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
435645    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
435646    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
435647    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
435648    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
435649    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
435650    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
435651    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
435652    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
435653    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
435654    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
435655    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
435656    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
435657    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
435658    +          +     0.68641668264565 * Marital_StatusDivorced
435659    +          +    -0.81586871439732 * Marital_StatusMarried
435660    +          +     0.63758920518451 * Marital_StatusSingle
435661    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
435662    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
435663    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
435664    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
435665    +          +     0.05137560133238 * Marital_StatusDivorced
435666    +          +    -2.24401993266209 * Marital_StatusMarried
435667    +          +     1.57359386216115 * Marital_StatusSingle
435668    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
435669    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
435670    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
435671    +        EducationGraduation  +     0.61492669859334 * EducationMaster
435672    +          +     -1.0649987815942 * Marital_StatusDivorced
435673    +          +     0.76065111692388 * Marital_StatusMarried
435674    +          +    -0.21694149754801 * Marital_StatusSingle
435675    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
435676    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
435677    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
435678    +        EducationGraduation  +     0.04208620358211 * EducationMaster
435679    +          +     2.02155453548328 * Marital_StatusDivorced
435680    +          +    -2.60190649735306 * Marital_StatusMarried
435681    +          +     1.09149388354927 * Marital_StatusSingle
435682    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
435683    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
435684    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
435685    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
435686    +          +     0.66315970650309 * Marital_StatusDivorced
435687    +          +    -1.20476729758152 * Marital_StatusMarried
435688    +          +     0.56175027826397 * Marital_StatusSingle
435689    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
435690    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
435691    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
435692    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
435693    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
435694    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
435695    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
435696    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
435697    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
435698    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
435699    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
435700    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
435701    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
435702    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
435703    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
435704    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
435705    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
435706    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
435707    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
435708    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
435709    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
435710    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
435711    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
435712    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
435713    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
435714    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
435715    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
435716    +END;
MPRINT(EM_DIAGRAM):   END;
435717    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
435718    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
435719    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
435720    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
435721    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
435722    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
435723    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
435724    +END;
MPRINT(EM_DIAGRAM):   END;
435725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435726    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
435727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435728    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
435729    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
435730    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
435731    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
435732    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
435733    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
435734    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
435735    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
435736    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
435737    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
435738    +          +     1.50005927423985 * S_NumDealsPurchases
435739    +          +      0.5590536933569 * S_NumDistPurchases
435740    +          +    -0.61757824339318 * S_NumStorePurchases
435741    +          +     0.37259686538158 * S_NumWebPurchases
435742    +          +     2.59725437895564 * S_NumWebVisitsMonth
435743    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
435744    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
435745    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
435746    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
435747    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
435748    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
435749    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
435750    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
435751    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
435752    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
435753    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
435754    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
435755    +          +    -0.09282222088797 * S_NumDealsPurchases
435756    +          +     0.10726247938321 * S_NumDistPurchases
435757    +          +     -1.1235971458527 * S_NumStorePurchases
435758    +          +    -0.78304387839877 * S_NumWebPurchases
435759    +          +    -0.44139243179956 * S_NumWebVisitsMonth
435760    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
435761    +        S_RMntFrq  +     2.19072220135069 * S_Recency
435762    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
435763    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
435764    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
435765    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
435766    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
435767    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
435768    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
435769    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
435770    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
435771    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
435772    +          +     0.35349185459988 * S_NumDealsPurchases
435773    +          +     0.06853677714859 * S_NumDistPurchases
435774    +          +    -1.47546012999338 * S_NumStorePurchases
435775    +          +     0.20926435398916 * S_NumWebPurchases
435776    +          +    -1.00535683639093 * S_NumWebVisitsMonth
435777    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
435778    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
435779    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
435780    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
435781    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
435782    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
435783    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
435784    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
435785    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
435786    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
435787    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
435788    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
435789    +          +      0.3873586120272 * S_NumDealsPurchases
435790    +          +     0.25911651157596 * S_NumDistPurchases
435791    +          +     1.58922489084287 * S_NumStorePurchases
435792    +          +     0.49041797743368 * S_NumWebPurchases
435793    +          +     -1.5425586871929 * S_NumWebVisitsMonth
435794    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
435795    +        S_RMntFrq  +     1.03099569333498 * S_Recency
435796    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
435797    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
435798    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
435799    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
435800    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
435801    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
435802    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
435803    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
435804    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
435805    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
435806    +          +    -0.60830880287865 * S_NumDealsPurchases
435807    +          +      0.0745331267194 * S_NumDistPurchases
435808    +          +    -1.39472448256952 * S_NumStorePurchases
435809    +          +     1.95372179969087 * S_NumWebPurchases
435810    +          +    -0.63307356390404 * S_NumWebVisitsMonth
435811    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
435812    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
435813    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
435814    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
435815    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
435816    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
435817    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
435818    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
435819    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
435820    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
435821    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
435822    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
435823    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
435824    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
435825    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
435826    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
435827    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
435828    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
435829    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
435830    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
435831    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
435832    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
435833    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
435834    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
435835    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
435836    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
435837    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
435838    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
435839    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
435840    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
435841    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
435842    +          +    -1.33377871643323 * Marital_StatusDivorced
435843    +          +    -0.87184228840898 * Marital_StatusMarried
435844    +          +     1.41223186340257 * Marital_StatusSingle
435845    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
435846    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
435847    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
435848    +        EducationGraduation  +     0.38341272155343 * EducationMaster
435849    +          +    -0.21479890935233 * Marital_StatusDivorced
435850    +          +     -0.0025459519579 * Marital_StatusMarried
435851    +          +     1.33900491702264 * Marital_StatusSingle
435852    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
435853    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
435854    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
435855    +        EducationGraduation  +     0.60739269725685 * EducationMaster
435856    +          +    -0.38307267471999 * Marital_StatusDivorced
435857    +          +     0.97088969451415 * Marital_StatusMarried
435858    +          +    -0.28578224473381 * Marital_StatusSingle
435859    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
The SAS System

-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
435860    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
435861    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
435862    +        EducationGraduation  +     0.14160673378252 * EducationMaster
435863    +          +    -1.42229401093569 * Marital_StatusDivorced
435864    +          +      0.7234508382397 * Marital_StatusMarried
435865    +          +    -0.29062202974628 * Marital_StatusSingle
435866    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
435867    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
435868    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
435869    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
435870    +          +    -0.99067637207205 * Marital_StatusDivorced
435871    +          +    -0.50245902142079 * Marital_StatusMarried
435872    +          +     0.54214494533793 * Marital_StatusSingle
435873    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
435874    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
435875    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
435876    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
435877    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
435878    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
435879    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
435880    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
435881    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
435882    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
435883    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
435884    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
435885    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
435886    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
435887    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
435888    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
435889    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
435890    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
435891    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
435892    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
435893    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
435894    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
435895    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
435896    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
435897    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
435898    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
435899    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
435900    +END;
MPRINT(EM_DIAGRAM):   END;
435901    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
435902    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
435903    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
435904    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
435905    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
435906    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
435907    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
435908    +END;
MPRINT(EM_DIAGRAM):   END;
435909    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435910    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
435911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435912    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
435913    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
435914    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
435915    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
435916    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
435917    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
435918    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
435919    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
435920    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
435921    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
435922    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
435923    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
435924    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
435925    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
435926    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
435927    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
435928    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
435929    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
435930    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
435931    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
435932    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
435933    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
435934    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
435935    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
435936    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
435937    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
435938    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
435939    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
435940    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
435941    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
435942    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
435943    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
435944    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
435945    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
435946    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
435947    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
435948    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
435949    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
435950    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
435951    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
435952    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
435953    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
435954    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
435955    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
435956    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
435957    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
435958    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
435959    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
435960    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
435961    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
435962    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
435963    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
435964    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
435965    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
435966    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
435967    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
435968    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
435969    +END;
MPRINT(EM_DIAGRAM):   END;
435970    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
435971    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
435972    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
435973    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
435974    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
435975    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
435976    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
435977    +END;
MPRINT(EM_DIAGRAM):   END;
435978    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435979    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
435980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435981    +
435982    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
435983    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
435984    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
435985    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
435986    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
435987    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435988    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
435989    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
435990    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
435991    +end;
MPRINT(EM_DIAGRAM):   end;
435992    +else do;
MPRINT(EM_DIAGRAM):   else do;
435993    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
435994    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
435995    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
435996    +   end;
MPRINT(EM_DIAGRAM):   end;
435997    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
435998    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
435999    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
436000    +   end;
MPRINT(EM_DIAGRAM):   end;
436001    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436002    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
436003    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
436004    +   end;
MPRINT(EM_DIAGRAM):   end;
436005    +end;
MPRINT(EM_DIAGRAM):   end;
436006    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
436007    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
436008    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
436009    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
436010    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
436011    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
436012    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
436013    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
436014    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
436015    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
436016    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
436017    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
436018    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
436019    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
436020    +END;
MPRINT(EM_DIAGRAM):   END;
436021    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
436022    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
436023    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
436024    +END;
MPRINT(EM_DIAGRAM):   END;
436025    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
436026    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
436027    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
436028    +END;
MPRINT(EM_DIAGRAM):   END;
436029    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
436030    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
436031    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
436032    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
436033    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
436034    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
436035    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
436036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436037    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
436038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436039    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
436040    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
436041    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
436042    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
436043    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
436044    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
436045    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
436046    +END;
MPRINT(EM_DIAGRAM):   END;
436047    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
436048    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
436049    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
436050    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
436051    +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
436052    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436053    +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
436054    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436055    +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
436056    +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
436057    +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
436058    +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
436059    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436060    +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
436061    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436062    +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
436063    +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
436064    +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
436065    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436066    +* Ensmbl27: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 5 of 7;
436067    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436069    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
436070    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
436071    +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
436072    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436073    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
436074    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
436075    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
436076    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
436077    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
436078    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
436079    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
436080    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
436081    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
436082    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
436083    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
436084    +LENGTH _WARN_ $4
436085    +      F_DepVar  $ 12
436086    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
436087    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
436088    +
436089    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
436090    +
436091    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
436092    +
436093    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
436094    +
436095    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
436096    +
436097    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
436098    +
436099    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
436100    +
436101    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
436102    +
436103    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
436104    +
436105    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
436106    +
436107    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
436108    +
436109    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
436110    +
436111    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
436112    +
436113    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
436114    +
436115    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
436116    +
436117    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
436118    +
436119    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
436120    +
436121    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
436122    +
436123    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
436124    +
436125    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
436126    +
436127    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
436128    +
436129    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
436130    +
436131    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
436132    +
436133    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
436134    +
436135    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
436136    +
436137    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
436138    +
436139    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
436140    +
436141    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
436142    +
436143    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
436144    +
436145    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
436146    +
436147    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
436148    +
436149    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
436150    +
436151    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
436152    +
436153    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
436154    +
436155    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
436156    +
436157    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
436158    +
436159    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
436160    +
436161    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
436162    +
436163    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
436164    +
436165    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
436166    +
436167    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
436168    +
436169    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
436170    +
436171    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
436172    +
436173    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
436174    +
436175    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
436176    +
436177    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
436178    +
436179    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
436180    +
436181    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
436182    +
436183    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
436184    +
436185    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
436186    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
436187    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
436188    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
436189    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436190    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436191    +end;
MPRINT(EM_DIAGRAM):   end;
436192    +else do;
MPRINT(EM_DIAGRAM):   else do;
436193    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436194    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
436195    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436196    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436197    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
436198    +   end;
MPRINT(EM_DIAGRAM):   end;
436199    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436200    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
436201    +   end;
MPRINT(EM_DIAGRAM):   end;
436202    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436203    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
436204    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436205    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436206    +   end;
MPRINT(EM_DIAGRAM):   end;
436207    +end;
MPRINT(EM_DIAGRAM):   end;
436208    +
436209    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
436210    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
436211    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
436212    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
436213    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436214    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436215    +end;
MPRINT(EM_DIAGRAM):   end;
436216    +else do;
MPRINT(EM_DIAGRAM):   else do;
436217    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436218    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
436219    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436220    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436221    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
436222    +   end;
MPRINT(EM_DIAGRAM):   end;
436223    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436224    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
436225    +   end;
MPRINT(EM_DIAGRAM):   end;
436226    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436227    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
436228    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436229    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436230    +   end;
MPRINT(EM_DIAGRAM):   end;
436231    +end;
MPRINT(EM_DIAGRAM):   end;
436232    +
436233    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
436234    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
436235    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
436236    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
436237    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436238    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436239    +end;
MPRINT(EM_DIAGRAM):   end;
436240    +else do;
MPRINT(EM_DIAGRAM):   else do;
436241    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436242    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
436243    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436244    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436245    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
436246    +   end;
MPRINT(EM_DIAGRAM):   end;
436247    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436248    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
436249    +   end;
MPRINT(EM_DIAGRAM):   end;
436250    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436251    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
436252    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436253    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436254    +   end;
MPRINT(EM_DIAGRAM):   end;
436255    +end;
MPRINT(EM_DIAGRAM):   end;
436256    +
436257    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
436258    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
436259    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
436260    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
436261    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436262    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436263    +end;
MPRINT(EM_DIAGRAM):   end;
436264    +else do;
MPRINT(EM_DIAGRAM):   else do;
436265    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436266    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
436267    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436268    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436269    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
436270    +   end;
MPRINT(EM_DIAGRAM):   end;
436271    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436272    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
436273    +   end;
MPRINT(EM_DIAGRAM):   end;
436274    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436275    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
436276    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436277    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436278    +   end;
MPRINT(EM_DIAGRAM):   end;
436279    +end;
MPRINT(EM_DIAGRAM):   end;
436280    +
436281    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
436282    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
436283    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
436284    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
436285    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436286    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436287    +end;
MPRINT(EM_DIAGRAM):   end;
436288    +else do;
MPRINT(EM_DIAGRAM):   else do;
436289    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436290    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
436291    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436292    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436293    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
436294    +   end;
MPRINT(EM_DIAGRAM):   end;
436295    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436296    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
436297    +   end;
MPRINT(EM_DIAGRAM):   end;
436298    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436299    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
436300    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436301    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436302    +   end;
MPRINT(EM_DIAGRAM):   end;
436303    +end;
MPRINT(EM_DIAGRAM):   end;
436304    +
436305    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
436306    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
436307    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
436308    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
436309    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436310    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436311    +end;
MPRINT(EM_DIAGRAM):   end;
436312    +else do;
MPRINT(EM_DIAGRAM):   else do;
436313    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436314    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
436315    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436316    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436317    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
436318    +   end;
MPRINT(EM_DIAGRAM):   end;
436319    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436320    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
436321    +   end;
MPRINT(EM_DIAGRAM):   end;
436322    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436323    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
436324    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436325    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436326    +   end;
MPRINT(EM_DIAGRAM):   end;
436327    +end;
MPRINT(EM_DIAGRAM):   end;
436328    +
436329    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
436330    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
436331    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
436332    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
436333    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436334    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436335    +end;
MPRINT(EM_DIAGRAM):   end;
436336    +else do;
MPRINT(EM_DIAGRAM):   else do;
436337    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436338    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
436339    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436340    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
436341    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
436342    +   end;
MPRINT(EM_DIAGRAM):   end;
436343    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
436344    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
436345    +   end;
MPRINT(EM_DIAGRAM):   end;
436346    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436347    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
436348    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436349    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436350    +   end;
MPRINT(EM_DIAGRAM):   end;
436351    +end;
MPRINT(EM_DIAGRAM):   end;
436352    +
436353    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
436354    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
436355    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
436356    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
436357    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
436358    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
436359    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
436360    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
436361    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
436362    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
436363    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
436364    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
436365    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436366    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436367    +end;
MPRINT(EM_DIAGRAM):   end;
436368    +else do;
MPRINT(EM_DIAGRAM):   else do;
436369    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
436370    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
436371    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436372    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
436373    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
436374    +   end;
MPRINT(EM_DIAGRAM):   end;
436375    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
436376    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
436377    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
436378    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
436379    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
436380    +   end;
MPRINT(EM_DIAGRAM):   end;
436381    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
436382    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
436383    +   end;
MPRINT(EM_DIAGRAM):   end;
436384    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
436385    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
436386    +   end;
MPRINT(EM_DIAGRAM):   end;
436387    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
436388    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
436389    +   end;
MPRINT(EM_DIAGRAM):   end;
436390    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436391    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
436392    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
436393    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
436394    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
436395    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436396    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436397    +   end;
MPRINT(EM_DIAGRAM):   end;
436398    +end;
MPRINT(EM_DIAGRAM):   end;
436399    +
436400    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
436401    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
436402    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
436403    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
436404    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
436405    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
436406    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
436407    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
436408    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
436409    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
436410    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
436411    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
436412    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
436413    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436414    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436415    +end;
MPRINT(EM_DIAGRAM):   end;
436416    +else do;
MPRINT(EM_DIAGRAM):   else do;
436417    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
436418    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
436419    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436420    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
436421    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
436422    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
436423    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
436424    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
436425    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
436426    +         end;
MPRINT(EM_DIAGRAM):   end;
436427    +         else do;
MPRINT(EM_DIAGRAM):   else do;
436428    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
436429    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
436430    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
436431    +            end;
MPRINT(EM_DIAGRAM):   end;
436432    +         end;
MPRINT(EM_DIAGRAM):   end;
436433    +      end;
MPRINT(EM_DIAGRAM):   end;
436434    +      else do;
MPRINT(EM_DIAGRAM):   else do;
436435    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
436436    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
436437    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
436438    +         end;
MPRINT(EM_DIAGRAM):   end;
436439    +      end;
MPRINT(EM_DIAGRAM):   end;
436440    +   end;
MPRINT(EM_DIAGRAM):   end;
436441    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436442    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
436443    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
436444    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
436445    +      end;
MPRINT(EM_DIAGRAM):   end;
436446    +      else do;
MPRINT(EM_DIAGRAM):   else do;
436447    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
436448    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
436449    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
436450    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
436451    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
436452    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
436453    +         end;
MPRINT(EM_DIAGRAM):   end;
436454    +      end;
MPRINT(EM_DIAGRAM):   end;
436455    +   end;
MPRINT(EM_DIAGRAM):   end;
436456    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
436457    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
436458    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
436459    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
436460    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
436461    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436462    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436463    +   end;
MPRINT(EM_DIAGRAM):   end;
436464    +end;
MPRINT(EM_DIAGRAM):   end;
436465    +
436466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436467    +*** Checking missing input Interval
436468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
436469    +
436470    +IF NMISS(
436471    +   AcceptedCmpTotal ,
436472    +   Age ,
436473    +   Frq ,
436474    +   Income ,
436475    +   Kidhome ,
436476    +   Mnt ,
436477    +   MntFishProducts ,
436478    +   MntFruits ,
436479    +   MntGoldProds ,
436480    +   MntMeatProducts ,
436481    +   MntSweetProducts ,
436482    +   MntWines ,
436483    +   MonthsAsCustomer ,
436484    +   NumCatalogPurchases ,
436485    +   NumDealsPurchases ,
436486    +   NumDistPurchases ,
436487    +   NumStorePurchases ,
436488    +   NumWebPurchases ,
436489    +   NumWebVisitsMonth ,
436490    +   RFMstat ,
436491    +   RMntFrq ,
436492    +   Recency ,
436493    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
436494    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
436495    +
436496    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436497    +END;
MPRINT(EM_DIAGRAM):   END;
436498    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436499    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
436500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436501    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
436502    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
436503    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
436504    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
436505    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
436506    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
436507    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
436508    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
436509    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
436510    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
436511    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
436512    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
436513    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
436514    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
436515    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
436516    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
436517    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
436518    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
436519    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
436520    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
436521    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
436522    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
436523    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
436524    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
436525    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
436526    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
436527    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
436528    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
436529    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
436530    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
436531    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
436532    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
436533    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
436534    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
436535    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
436536    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
436537    +END;
MPRINT(EM_DIAGRAM):   END;
436538    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
436539    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
436540    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
436541    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
436542    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
436543    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
436544    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
436545    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
436546    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
436547    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
436548    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
436549    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
436550    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
436551    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
436552    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
436553    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
436554    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
436555    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
436556    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
436557    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
436558    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
436559    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
436560    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
436561    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
436562    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
436563    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
436564    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
436565    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
436566    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
436567    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
436568    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
436569    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
436570    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
436571    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
436572    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
436573    +   ELSE S_NumCatalogPurchases
436574    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
436575    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
436576    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
436577    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
436578    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
436579    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
436580    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
436581    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
436582    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
436583    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
436584    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
436585    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
436586    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
436587    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
436588    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
436589    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
436590    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
436591    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
436592    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
436593    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
436594    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
436595    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
436596    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
436597    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
436598    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
436599    +END;
MPRINT(EM_DIAGRAM):   END;
436600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436601    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
436602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436604    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
436605    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436607    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
436608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436609    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
436610    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
436611    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
436612    +        S_Income  +      0.4880522012865 * S_Kidhome
436613    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
436614    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
436615    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
436616    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
436617    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
436618    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
436619    +          +     1.28630491068585 * S_NumDealsPurchases
436620    +          +     0.12175737778271 * S_NumDistPurchases
436621    +          +    -0.62012456448967 * S_NumStorePurchases
436622    +          +     -0.6092351519122 * S_NumWebPurchases
436623    +          +     1.46336740414795 * S_NumWebVisitsMonth
436624    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
436625    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
436626    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
436627    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
436628    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
436629    +        S_Income  +     0.63026291057347 * S_Kidhome
436630    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
436631    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
436632    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
436633    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
436634    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
436635    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
436636    +          +    -0.66569109065716 * S_NumDealsPurchases
436637    +          +    -0.04991685336251 * S_NumDistPurchases
436638    +          +     0.97830186941279 * S_NumStorePurchases
436639    +          +     1.01041490205359 * S_NumWebPurchases
436640    +          +    -1.32418956036577 * S_NumWebVisitsMonth
436641    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
436642    +        S_RMntFrq  +     1.45035992156192 * S_Recency
436643    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
436644    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
436645    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
436646    +        S_Income  +     0.56998894495459 * S_Kidhome
436647    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
436648    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
436649    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
436650    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
436651    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
436652    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
436653    +          +     0.07739967453744 * S_NumDealsPurchases
436654    +          +    -0.43729543807168 * S_NumDistPurchases
436655    +          +      0.0856627398024 * S_NumStorePurchases
436656    +          +     -0.0045478100059 * S_NumWebPurchases
436657    +          +    -0.64123054514198 * S_NumWebVisitsMonth
436658    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
436659    +        S_RMntFrq  +     1.48732817876807 * S_Recency
436660    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
436661    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
436662    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
436663    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
436664    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
436665    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
436666    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
436667    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
436668    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
436669    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
436670    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
436671    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
436672    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
436673    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
436674    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
436675    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
436676    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
436677    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
436678    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
436679    +          +     0.16155355707944 * Marital_StatusDivorced
436680    +          +     0.04915644167404 * Marital_StatusMarried
436681    +          +    -0.16886350906837 * Marital_StatusSingle
436682    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
436683    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
436684    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
436685    +        EducationGraduation  +     0.03310756432448 * EducationMaster
436686    +          +    -0.15094637092036 * Marital_StatusDivorced
436687    +          +     0.07664831456886 * Marital_StatusMarried
436688    +          +    -0.47693612610813 * Marital_StatusSingle
436689    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
436690    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
436691    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
436692    +        EducationGraduation  +     0.20173383445657 * EducationMaster
436693    +          +    -0.58672623647391 * Marital_StatusDivorced
436694    +          +      1.8684271616322 * Marital_StatusMarried
436695    +          +    -1.30134837394569 * Marital_StatusSingle
436696    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
436697    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
436698    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
436699    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
436700    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
436701    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
436702    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
436703    +END;
MPRINT(EM_DIAGRAM):   END;
436704    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
436705    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
436706    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
436707    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
436708    +END;
MPRINT(EM_DIAGRAM):   END;
436709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436710    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
436711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436712    +
436713    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
436714    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
436715    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
436716    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
436717    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
436718    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436719    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
436720    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
436721    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
436722    +end;
MPRINT(EM_DIAGRAM):   end;
436723    +else do;
MPRINT(EM_DIAGRAM):   else do;
436724    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
436725    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
436726    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
436727    +   end;
MPRINT(EM_DIAGRAM):   end;
436728    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
436729    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
436730    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
436731    +   end;
MPRINT(EM_DIAGRAM):   end;
436732    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436733    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
436734    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
436735    +   end;
MPRINT(EM_DIAGRAM):   end;
436736    +end;
MPRINT(EM_DIAGRAM):   end;
436737    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
436738    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
436739    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
436740    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
436741    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
436742    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
436743    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
436744    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
436745    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
436746    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
436747    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
436748    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
436749    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
436750    +END;
MPRINT(EM_DIAGRAM):   END;
436751    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
436752    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
436753    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
436754    +END;
MPRINT(EM_DIAGRAM):   END;
436755    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
436756    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
436757    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
436758    +END;
MPRINT(EM_DIAGRAM):   END;
436759    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
436760    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
436761    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
436762    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
436763    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
436764    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
436765    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
436766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436767    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
436768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436769    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
436770    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
436771    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
436772    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
436773    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
436774    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
436775    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
436776    +END;
MPRINT(EM_DIAGRAM):   END;
436777    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
436778    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
436779    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
436780    +drop
436781    +H11
436782    +H12
436783    +H13
436784    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
436785    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
436786    +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
436787    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436788    +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
436789    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436790    +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
436791    +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
436792    +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
436793    +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
436794    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436795    +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
436796    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436797    +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
436798    +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
436799    +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
436800    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436801    +* Ensmbl27: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 6 of 7;
436802    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436803    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436804    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
436805    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
436806    +* NODE: Neural10;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
436807    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436808    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
436809    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
436810    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
436811    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
436812    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
436813    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
436814    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
436815    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
436816    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
436817    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
436818    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
436819    +LENGTH _WARN_ $4
436820    +      F_DepVar  $ 12
436821    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
436822    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
436823    +
436824    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
436825    +
436826    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
436827    +
436828    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
436829    +
436830    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
436831    +
436832    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
436833    +
436834    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
436835    +
436836    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
436837    +
436838    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
436839    +
436840    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
436841    +
436842    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
436843    +
436844    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
436845    +
436846    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
436847    +
436848    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
436849    +
436850    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
436851    +
436852    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
436853    +
436854    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
436855    +
436856    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
436857    +
436858    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
436859    +
436860    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
436861    +
436862    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
436863    +
436864    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
436865    +
436866    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
436867    +
436868    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
436869    +
436870    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
436871    +
436872    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
436873    +
436874    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
436875    +
436876    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
436877    +
436878    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
436879    +
436880    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
436881    +
436882    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
436883    +
436884    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
436885    +
436886    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
436887    +
436888    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
436889    +
436890    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
436891    +
436892    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
436893    +
436894    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
436895    +
436896    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
436897    +
436898    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
436899    +
436900    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
436901    +
436902    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
436903    +
436904    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
436905    +
436906    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
436907    +
436908    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
436909    +
436910    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
436911    +
436912    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
436913    +
436914    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
436915    +
436916    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
436917    +
436918    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
436919    +
436920    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
436921    +
436922    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
436923    +
436924    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
436925    +
436926    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
436927    +
436928    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
436929    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
436930    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
436931    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
436932    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436933    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436934    +end;
MPRINT(EM_DIAGRAM):   end;
436935    +else do;
MPRINT(EM_DIAGRAM):   else do;
436936    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436937    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
436938    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436939    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436940    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
436941    +   end;
MPRINT(EM_DIAGRAM):   end;
436942    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436943    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
436944    +   end;
MPRINT(EM_DIAGRAM):   end;
436945    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436946    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
436947    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436948    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436949    +   end;
MPRINT(EM_DIAGRAM):   end;
436950    +end;
MPRINT(EM_DIAGRAM):   end;
436951    +
436952    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
436953    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
436954    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
436955    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
436956    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436957    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436958    +end;
MPRINT(EM_DIAGRAM):   end;
436959    +else do;
MPRINT(EM_DIAGRAM):   else do;
436960    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436961    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
436962    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436963    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436964    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
436965    +   end;
MPRINT(EM_DIAGRAM):   end;
436966    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436967    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
436968    +   end;
MPRINT(EM_DIAGRAM):   end;
436969    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436970    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
436971    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436972    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436973    +   end;
MPRINT(EM_DIAGRAM):   end;
436974    +end;
MPRINT(EM_DIAGRAM):   end;
436975    +
436976    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
436977    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
436978    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
436979    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
436980    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436981    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436982    +end;
MPRINT(EM_DIAGRAM):   end;
436983    +else do;
MPRINT(EM_DIAGRAM):   else do;
436984    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436985    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
436986    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436987    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436988    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
436989    +   end;
MPRINT(EM_DIAGRAM):   end;
436990    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436991    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
436992    +   end;
MPRINT(EM_DIAGRAM):   end;
436993    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436994    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
436995    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436996    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436997    +   end;
MPRINT(EM_DIAGRAM):   end;
436998    +end;
MPRINT(EM_DIAGRAM):   end;
436999    +
437000    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
437001    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
437002    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
437003    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
437004    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437005    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437006    +end;
MPRINT(EM_DIAGRAM):   end;
437007    +else do;
MPRINT(EM_DIAGRAM):   else do;
437008    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437009    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
437010    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437011    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
437012    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
437013    +   end;
MPRINT(EM_DIAGRAM):   end;
437014    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
437015    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
437016    +   end;
MPRINT(EM_DIAGRAM):   end;
437017    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437018    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
437019    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437020    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437021    +   end;
MPRINT(EM_DIAGRAM):   end;
437022    +end;
MPRINT(EM_DIAGRAM):   end;
437023    +
437024    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
437025    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
437026    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
437027    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
437028    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437029    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437030    +end;
MPRINT(EM_DIAGRAM):   end;
437031    +else do;
MPRINT(EM_DIAGRAM):   else do;
437032    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437033    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
437034    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437035    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
437036    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
437037    +   end;
MPRINT(EM_DIAGRAM):   end;
437038    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
437039    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
437040    +   end;
MPRINT(EM_DIAGRAM):   end;
437041    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437042    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
437043    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437044    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437045    +   end;
MPRINT(EM_DIAGRAM):   end;
437046    +end;
MPRINT(EM_DIAGRAM):   end;
437047    +
437048    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
437049    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
437050    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
437051    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
437052    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437053    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437054    +end;
MPRINT(EM_DIAGRAM):   end;
437055    +else do;
MPRINT(EM_DIAGRAM):   else do;
437056    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437057    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
437058    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437059    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
437060    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
437061    +   end;
MPRINT(EM_DIAGRAM):   end;
437062    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
437063    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
437064    +   end;
MPRINT(EM_DIAGRAM):   end;
437065    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437066    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
437067    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437068    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437069    +   end;
MPRINT(EM_DIAGRAM):   end;
437070    +end;
MPRINT(EM_DIAGRAM):   end;
437071    +
437072    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
437073    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
437074    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
437075    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
437076    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437077    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437078    +end;
MPRINT(EM_DIAGRAM):   end;
437079    +else do;
MPRINT(EM_DIAGRAM):   else do;
437080    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437081    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
437082    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437083    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
437084    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
437085    +   end;
MPRINT(EM_DIAGRAM):   end;
437086    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
437087    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
437088    +   end;
MPRINT(EM_DIAGRAM):   end;
437089    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437090    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
437091    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437092    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437093    +   end;
MPRINT(EM_DIAGRAM):   end;
437094    +end;
MPRINT(EM_DIAGRAM):   end;
437095    +
437096    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
437097    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
437098    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
437099    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
437100    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
437101    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
437102    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
437103    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
437104    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
437105    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
437106    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
437107    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
437108    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437110    +end;
MPRINT(EM_DIAGRAM):   end;
437111    +else do;
MPRINT(EM_DIAGRAM):   else do;
437112    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
437113    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
437114    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437115    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
437116    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
437117    +   end;
MPRINT(EM_DIAGRAM):   end;
437118    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
437119    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
437120    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
437121    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
437122    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
437123    +   end;
MPRINT(EM_DIAGRAM):   end;
437124    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
437125    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
437126    +   end;
MPRINT(EM_DIAGRAM):   end;
437127    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
437128    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
437129    +   end;
MPRINT(EM_DIAGRAM):   end;
437130    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
437131    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
437132    +   end;
MPRINT(EM_DIAGRAM):   end;
437133    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437134    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
437135    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
437136    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
437137    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
437138    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437139    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437140    +   end;
MPRINT(EM_DIAGRAM):   end;
437141    +end;
MPRINT(EM_DIAGRAM):   end;
437142    +
437143    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
437144    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
437145    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
437146    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
437147    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
437148    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
437149    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
437150    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
437151    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
437152    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
437153    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
437154    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
437155    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
437156    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437157    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437158    +end;
MPRINT(EM_DIAGRAM):   end;
437159    +else do;
MPRINT(EM_DIAGRAM):   else do;
437160    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
437161    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
437162    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437163    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
437164    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
437165    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
437166    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
437167    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
437168    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
437169    +         end;
MPRINT(EM_DIAGRAM):   end;
437170    +         else do;
MPRINT(EM_DIAGRAM):   else do;
437171    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
437172    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
437173    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
437174    +            end;
MPRINT(EM_DIAGRAM):   end;
437175    +         end;
MPRINT(EM_DIAGRAM):   end;
437176    +      end;
MPRINT(EM_DIAGRAM):   end;
437177    +      else do;
MPRINT(EM_DIAGRAM):   else do;
437178    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
437179    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
437180    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
437181    +         end;
MPRINT(EM_DIAGRAM):   end;
437182    +      end;
MPRINT(EM_DIAGRAM):   end;
437183    +   end;
MPRINT(EM_DIAGRAM):   end;
437184    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437185    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
437186    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
437187    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
437188    +      end;
MPRINT(EM_DIAGRAM):   end;
437189    +      else do;
MPRINT(EM_DIAGRAM):   else do;
437190    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
437191    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
437192    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
437193    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
437194    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
437195    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
437196    +         end;
MPRINT(EM_DIAGRAM):   end;
437197    +      end;
MPRINT(EM_DIAGRAM):   end;
437198    +   end;
MPRINT(EM_DIAGRAM):   end;
437199    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
437200    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
437201    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
437202    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
437203    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
437204    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437205    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437206    +   end;
MPRINT(EM_DIAGRAM):   end;
437207    +end;
MPRINT(EM_DIAGRAM):   end;
437208    +
437209    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437210    +*** Checking missing input Interval
437211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
437212    +
437213    +IF NMISS(
437214    +   AcceptedCmpTotal ,
437215    +   Age ,
437216    +   Frq ,
437217    +   Income ,
437218    +   Kidhome ,
437219    +   Mnt ,
437220    +   MntFishProducts ,
437221    +   MntFruits ,
437222    +   MntGoldProds ,
437223    +   MntMeatProducts ,
437224    +   MntSweetProducts ,
437225    +   MntWines ,
437226    +   MonthsAsCustomer ,
437227    +   NumCatalogPurchases ,
437228    +   NumDealsPurchases ,
437229    +   NumDistPurchases ,
437230    +   NumStorePurchases ,
437231    +   NumWebPurchases ,
437232    +   NumWebVisitsMonth ,
437233    +   RFMstat ,
437234    +   RMntFrq ,
437235    +   Recency ,
437236    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
437237    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
437238    +
437239    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437240    +END;
MPRINT(EM_DIAGRAM):   END;
437241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437242    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
437243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437244    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
437245    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
437246    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
437247    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
437248    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
437249    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
437250    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
437251    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
437252    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
437253    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
437254    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
437255    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
437256    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
437257    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
437258    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
437259    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
437260    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
437261    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
437262    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
437263    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
437264    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
437265    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
437266    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
437267    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
437268    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
437269    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
437270    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
437271    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
437272    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
437273    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
437274    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
437275    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
437276    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
437277    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
437278    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
437279    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
437280    +END;
MPRINT(EM_DIAGRAM):   END;
437281    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
437282    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
437283    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
437284    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
437285    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
437286    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
437287    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
437288    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
437289    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
437290    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
437291    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
437292    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
437293    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
437294    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
437295    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
437296    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
437297    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
437298    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
437299    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
437300    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
437301    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
437302    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
437303    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
437304    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
437305    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
437306    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
437307    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
437308    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
437309    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
437310    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
437311    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
437312    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
437313    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
437314    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
437315    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
437316    +   ELSE S_NumCatalogPurchases
437317    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
437318    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
437319    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
437320    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
437321    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
437322    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
437323    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
437324    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
437325    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
437326    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
437327    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
437328    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
437329    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
437330    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
437331    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
437332    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
437333    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
437334    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
437335    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
437336    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
437337    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
437338    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
437339    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
437340    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
437341    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
437342    +END;
MPRINT(EM_DIAGRAM):   END;
437343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437344    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
437345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437346    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437347    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
437348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437349    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437350    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
437351    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437352    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
437353    +   H11  =    -0.56509996505673 * S_AcceptedCmpTotal  +    -0.23063823697229 *
437354    +        S_Age  +     0.27537956875262 * S_Frq  +    -0.13998299759696 *
437355    +        S_Income  +    -0.48272554811946 * S_Kidhome
437356    +          +     0.02078968845252 * S_Mnt  +     0.39778286292195 *
437357    +        S_MntFishProducts  +    -0.05943228184406 * S_MntFruits
437358    +          +    -0.22076005674037 * S_MntGoldProds  +    -1.15470073662687 *
437359    +        S_MntMeatProducts  +     0.01689175327079 * S_MntSweetProducts
437360    +          +     0.38794071873445 * S_MntWines  +      0.0790144986614 *
437361    +        S_MonthsAsCustomer  +     -0.5385547715034 * S_NumCatalogPurchases
437362    +          +    -0.21965892172232 * S_NumDealsPurchases
437363    +          +     0.18147972034868 * S_NumDistPurchases
437364    +          +     0.36657814181657 * S_NumStorePurchases
437365    +          +      0.2558783559717 * S_NumWebPurchases
437366    +          +    -0.12008925196796 * S_NumWebVisitsMonth
437367    +          +     -0.2801394750033 * S_RFMstat  +    -0.15606351466959 *
437368    +        S_RMntFrq  +     0.37914209292496 * S_Recency
437369    +          +     0.40705261237123 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.56509996505673 * S_AcceptedCmpTotal + -0.23063823697229 * S_Age 
+ 0.27537956875262 * S_Frq + -0.13998299759696 * S_Income + -0.48272554811946 * S_Kidhome + 
0.02078968845252 * S_Mnt + 0.39778286292195 * S_MntFishProducts + -0.05943228184406 * 
S_MntFruits + -0.22076005674037 * S_MntGoldProds + -1.15470073662687 * S_MntMeatProducts + 
0.01689175327079 * S_MntSweetProducts + 0.38794071873445 * S_MntWines + 0.0790144986614 * 
S_MonthsAsCustomer + -0.5385547715034 * S_NumCatalogPurchases + -0.21965892172232 * 
S_NumDealsPurchases + 0.18147972034868 * S_NumDistPurchases + 0.36657814181657 * 
S_NumStorePurchases + 0.2558783559717 * S_NumWebPurchases + -0.12008925196796 * 
S_NumWebVisitsMonth + -0.2801394750033 * S_RFMstat + -0.15606351466959 * S_RMntFrq + 
0.37914209292496 * S_Recency + 0.40705261237123 * S_Teenhome ;
437370    +   H12  =    -0.33633432608107 * S_AcceptedCmpTotal  +     0.16353547895993 *
437371    +        S_Age  +     0.24085016715236 * S_Frq  +    -0.12216338707901 *
437372    +        S_Income  +     0.24387947620062 * S_Kidhome
437373    +          +     0.49145996867369 * S_Mnt  +      0.0578610487644 *
437374    +        S_MntFishProducts  +     0.02621200334488 * S_MntFruits
437375    +          +    -0.22909633857209 * S_MntGoldProds  +    -0.86136295830946 *
437376    +        S_MntMeatProducts  +     0.11908088548047 * S_MntSweetProducts
437377    +          +     0.63547632412982 * S_MntWines  +      0.2259508551947 *
437378    +        S_MonthsAsCustomer  +    -0.13471041074588 * S_NumCatalogPurchases
437379    +          +    -0.05257082874614 * S_NumDealsPurchases
437380    +          +     0.41456571712035 * S_NumDistPurchases
437381    +          +     0.23489798619427 * S_NumStorePurchases
437382    +          +     0.27816946712153 * S_NumWebPurchases
437383    +          +    -0.60321927125997 * S_NumWebVisitsMonth
437384    +          +    -0.13771604724576 * S_RFMstat  +     0.32661912615265 *
437385    +        S_RMntFrq  +     0.37992942536792 * S_Recency
437386    +          +     0.23123529364349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33633432608107 * S_AcceptedCmpTotal + 0.16353547895993 * S_Age 
+ 0.24085016715236 * S_Frq + -0.12216338707901 * S_Income + 0.24387947620062 * S_Kidhome + 
0.49145996867369 * S_Mnt + 0.0578610487644 * S_MntFishProducts + 0.02621200334488 * 
S_MntFruits + -0.22909633857209 * S_MntGoldProds + -0.86136295830946 * S_MntMeatProducts + 
0.11908088548047 * S_MntSweetProducts + 0.63547632412982 * S_MntWines + 0.2259508551947 * 
S_MonthsAsCustomer + -0.13471041074588 * S_NumCatalogPurchases + -0.05257082874614 * 
S_NumDealsPurchases + 0.41456571712035 * S_NumDistPurchases + 0.23489798619427 * 
S_NumStorePurchases + 0.27816946712153 * S_NumWebPurchases + -0.60321927125997 * 
S_NumWebVisitsMonth + -0.13771604724576 * S_RFMstat + 0.32661912615265 * S_RMntFrq + 
0.37992942536792 * S_Recency + 0.23123529364349 * S_Teenhome ;
437387    +   H13  =    -0.62677142457909 * S_AcceptedCmpTotal  +    -0.10225199885389 *
437388    +        S_Age  +     0.05375482280846 * S_Frq  +     -0.2276300280575 *
437389    +        S_Income  +     0.20262487803684 * S_Kidhome
437390    +          +    -0.14876269646837 * S_Mnt  +     -0.4868127566475 *
437391    +        S_MntFishProducts  +    -0.14012815992673 * S_MntFruits
437392    +          +     0.10460152409631 * S_MntGoldProds  +     0.32637815775717 *
437393    +        S_MntMeatProducts  +    -0.31544850569482 * S_MntSweetProducts
437394    +          +     0.04232116862038 * S_MntWines  +     0.04384330908855 *
437395    +        S_MonthsAsCustomer  +       0.024361263039 * S_NumCatalogPurchases
437396    +          +      0.0913099268589 * S_NumDealsPurchases
437397    +          +    -0.05574305289625 * S_NumDistPurchases
437398    +          +    -0.09928560475828 * S_NumStorePurchases
437399    +          +     0.00041482984053 * S_NumWebPurchases
437400    +          +    -0.03314322750163 * S_NumWebVisitsMonth
437401    +          +    -0.18963089491876 * S_RFMstat  +    -0.07289922796134 *
437402    +        S_RMntFrq  +     -0.0998656801694 * S_Recency
437403    +          +     0.07805710264311 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62677142457909 * S_AcceptedCmpTotal + -0.10225199885389 * S_Age 
+ 0.05375482280846 * S_Frq + -0.2276300280575 * S_Income + 0.20262487803684 * S_Kidhome + 
-0.14876269646837 * S_Mnt + -0.4868127566475 * S_MntFishProducts + -0.14012815992673 * 
S_MntFruits + 0.10460152409631 * S_MntGoldProds + 0.32637815775717 * S_MntMeatProducts + 
-0.31544850569482 * S_MntSweetProducts + 0.04232116862038 * S_MntWines + 0.04384330908855 * 
S_MonthsAsCustomer + 0.024361263039 * S_NumCatalogPurchases + 0.0913099268589 * 
S_NumDealsPurchases + -0.05574305289625 * S_NumDistPurchases + -0.09928560475828 * 
S_NumStorePurchases + 0.00041482984053 * S_NumWebPurchases + -0.03314322750163 * 
S_NumWebVisitsMonth + -0.18963089491876 * S_RFMstat + -0.07289922796134 * S_RMntFrq + 
-0.0998656801694 * S_Recency + 0.07805710264311 * S_Teenhome ;
437404    +   H14  =     0.58578346547732 * S_AcceptedCmpTotal  +     0.04716075363777 *
437405    +        S_Age  +     0.23789426503274 * S_Frq  +     0.09306785885014 *
437406    +        S_Income  +     0.26225843602768 * S_Kidhome
437407    +          +     0.28381069432619 * S_Mnt  +    -0.20750545498741 *
437408    +        S_MntFishProducts  +     -0.0153624448098 * S_MntFruits
437409    +          +    -0.02656939541352 * S_MntGoldProds  +     1.97911440218059 *
437410    +        S_MntMeatProducts  +     0.28353571629196 * S_MntSweetProducts
437411    +          +    -0.69002907264222 * S_MntWines  +    -0.01673377005001 *
437412    +        S_MonthsAsCustomer  +     1.76601520216011 * S_NumCatalogPurchases
437413    +          +     0.83559002761395 * S_NumDealsPurchases
437414    +          +     0.30813434559451 * S_NumDistPurchases
437415    +          +    -0.61391039002598 * S_NumStorePurchases
437416    +          +    -1.03190502679863 * S_NumWebPurchases
437417    +          +     0.13374464245621 * S_NumWebVisitsMonth
437418    +          +     0.34844972128972 * S_RFMstat  +     0.00077632967209 *
437419    +        S_RMntFrq  +    -0.37521605306084 * S_Recency
437420    +          +    -0.00142295377819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58578346547732 * S_AcceptedCmpTotal + 0.04716075363777 * S_Age + 
0.23789426503274 * S_Frq + 0.09306785885014 * S_Income + 0.26225843602768 * S_Kidhome + 
0.28381069432619 * S_Mnt + -0.20750545498741 * S_MntFishProducts + -0.0153624448098 * 
S_MntFruits + -0.02656939541352 * S_MntGoldProds + 1.97911440218059 * S_MntMeatProducts + 
0.28353571629196 * S_MntSweetProducts + -0.69002907264222 * S_MntWines + -0.01673377005001 * 
S_MonthsAsCustomer + 1.76601520216011 * S_NumCatalogPurchases + 0.83559002761395 * 
S_NumDealsPurchases + 0.30813434559451 * S_NumDistPurchases + -0.61391039002598 * 
S_NumStorePurchases + -1.03190502679863 * S_NumWebPurchases + 0.13374464245621 * 
S_NumWebVisitsMonth + 0.34844972128972 * S_RFMstat + 0.00077632967209 * S_RMntFrq + 
-0.37521605306084 * S_Recency + -0.00142295377819 * S_Teenhome ;
437421    +   H15  =      0.5305297970665 * S_AcceptedCmpTotal  +    -0.02853929527052 *
437422    +        S_Age  +    -0.17491582531678 * S_Frq  +     0.67721722139265 *
437423    +        S_Income  +      -0.692179901076 * S_Kidhome
437424    +          +      0.0753885945685 * S_Mnt  +     0.07509531201013 *
437425    +        S_MntFishProducts  +    -0.09558593671631 * S_MntFruits
437426    +          +     -0.1010519397785 * S_MntGoldProds  +     0.90842125479786 *
437427    +        S_MntMeatProducts  +    -0.05268487318554 * S_MntSweetProducts
437428    +          +    -0.41869343587904 * S_MntWines  +     0.00774546781662 *
437429    +        S_MonthsAsCustomer  +     0.69118571360022 * S_NumCatalogPurchases
437430    +          +     0.65604427948051 * S_NumDealsPurchases
437431    +          +     0.01430165674945 * S_NumDistPurchases
437432    +          +    -0.76865963932685 * S_NumStorePurchases
437433    +          +    -0.72521754496401 * S_NumWebPurchases
437434    +          +     1.59453686210397 * S_NumWebVisitsMonth
437435    +          +     0.07015818288598 * S_RFMstat  +    -0.48678185627279 *
437436    +        S_RMntFrq  +    -1.32992957279361 * S_Recency
437437    +          +    -0.30389277845474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.5305297970665 * S_AcceptedCmpTotal + -0.02853929527052 * S_Age + 
-0.17491582531678 * S_Frq + 0.67721722139265 * S_Income + -0.692179901076 * S_Kidhome + 
0.0753885945685 * S_Mnt + 0.07509531201013 * S_MntFishProducts + -0.09558593671631 * 
S_MntFruits + -0.1010519397785 * S_MntGoldProds + 0.90842125479786 * S_MntMeatProducts + 
-0.05268487318554 * S_MntSweetProducts + -0.41869343587904 * S_MntWines + 0.00774546781662 * 
S_MonthsAsCustomer + 0.69118571360022 * S_NumCatalogPurchases + 0.65604427948051 * 
S_NumDealsPurchases + 0.01430165674945 * S_NumDistPurchases + -0.76865963932685 * 
S_NumStorePurchases + -0.72521754496401 * S_NumWebPurchases + 1.59453686210397 * 
S_NumWebVisitsMonth + 0.07015818288598 * S_RFMstat + -0.48678185627279 * S_RMntFrq + 
-1.32992957279361 * S_Recency + -0.30389277845474 * S_Teenhome ;
437438    +   H16  =    -0.14461357872357 * S_AcceptedCmpTotal  +     0.33306933698178 *
437439    +        S_Age  +     0.23947139684336 * S_Frq  +     0.25400354895308 *
437440    +        S_Income  +    -0.23602869688727 * S_Kidhome
437441    +          +     0.01762051414513 * S_Mnt  +    -0.02278009971118 *
437442    +        S_MntFishProducts  +      0.0138100640729 * S_MntFruits
437443    +          +     0.10885605658644 * S_MntGoldProds  +    -0.08129497127342 *
437444    +        S_MntMeatProducts  +    -0.15226579430345 * S_MntSweetProducts
437445    +          +    -0.28936878643978 * S_MntWines  +     0.18699471527536 *
437446    +        S_MonthsAsCustomer  +     0.22218904316421 * S_NumCatalogPurchases
437447    +          +    -0.30337362777997 * S_NumDealsPurchases
437448    +          +     0.11551482249746 * S_NumDistPurchases
437449    +          +     0.19719845223838 * S_NumStorePurchases
437450    +          +     0.16011319337206 * S_NumWebPurchases
437451    +          +    -0.19222801416081 * S_NumWebVisitsMonth
437452    +          +    -0.21560223408993 * S_RFMstat  +    -0.09112530580192 *
437453    +        S_RMntFrq  +     0.01056840325776 * S_Recency
437454    +          +      -0.297834752682 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14461357872357 * S_AcceptedCmpTotal + 0.33306933698178 * S_Age 
+ 0.23947139684336 * S_Frq + 0.25400354895308 * S_Income + -0.23602869688727 * S_Kidhome + 
0.01762051414513 * S_Mnt + -0.02278009971118 * S_MntFishProducts + 0.0138100640729 * 
S_MntFruits + 0.10885605658644 * S_MntGoldProds + -0.08129497127342 * S_MntMeatProducts + 
-0.15226579430345 * S_MntSweetProducts + -0.28936878643978 * S_MntWines + 0.18699471527536 * 
S_MonthsAsCustomer + 0.22218904316421 * S_NumCatalogPurchases + -0.30337362777997 * 
S_NumDealsPurchases + 0.11551482249746 * S_NumDistPurchases + 0.19719845223838 * 
S_NumStorePurchases + 0.16011319337206 * S_NumWebPurchases + -0.19222801416081 * 
S_NumWebVisitsMonth + -0.21560223408993 * S_RFMstat + -0.09112530580192 * S_RMntFrq + 
0.01056840325776 * S_Recency + -0.297834752682 * S_Teenhome ;
437455    +   H17  =     0.15982134979751 * S_AcceptedCmpTotal  +    -0.10107478816004 *
437456    +        S_Age  +     0.02027525505315 * S_Frq  +     0.41229842787905 *
437457    +        S_Income  +    -0.47270881977809 * S_Kidhome
437458    +          +     0.12024996830569 * S_Mnt  +    -0.28295608579685 *
437459    +        S_MntFishProducts  +    -0.07163379649201 * S_MntFruits
437460    +          +     0.09552477346527 * S_MntGoldProds  +    -0.01286236006652 *
437461    +        S_MntMeatProducts  +     0.00943538063039 * S_MntSweetProducts
437462    +          +     0.04434518979611 * S_MntWines  +     -0.1176196348599 *
437463    +        S_MonthsAsCustomer  +      0.3393965598874 * S_NumCatalogPurchases
437464    +          +    -0.16806813676368 * S_NumDealsPurchases
437465    +          +      0.1680540538046 * S_NumDistPurchases
437466    +          +     0.09845423109173 * S_NumStorePurchases
437467    +          +     0.22281606853536 * S_NumWebPurchases
437468    +          +       0.650769024744 * S_NumWebVisitsMonth
437469    +          +     0.09481237306076 * S_RFMstat  +     0.13733671608882 *
437470    +        S_RMntFrq  +    -1.11177537596499 * S_Recency
437471    +          +     -0.4787522037445 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.15982134979751 * S_AcceptedCmpTotal + -0.10107478816004 * S_Age 
+ 0.02027525505315 * S_Frq + 0.41229842787905 * S_Income + -0.47270881977809 * S_Kidhome + 
0.12024996830569 * S_Mnt + -0.28295608579685 * S_MntFishProducts + -0.07163379649201 * 
S_MntFruits + 0.09552477346527 * S_MntGoldProds + -0.01286236006652 * S_MntMeatProducts + 
0.00943538063039 * S_MntSweetProducts + 0.04434518979611 * S_MntWines + -0.1176196348599 * 
S_MonthsAsCustomer + 0.3393965598874 * S_NumCatalogPurchases + -0.16806813676368 * 
S_NumDealsPurchases + 0.1680540538046 * S_NumDistPurchases + 0.09845423109173 * 
S_NumStorePurchases + 0.22281606853536 * S_NumWebPurchases + 0.650769024744 * 
S_NumWebVisitsMonth + 0.09481237306076 * S_RFMstat + 0.13733671608882 * S_RMntFrq + 
-1.11177537596499 * S_Recency + -0.4787522037445 * S_Teenhome ;
437472    +   H11  = H11  +     0.13366172993941 * AcceptedCmp10
437473    +          +     0.05223132673306 * AcceptedCmp20  +    -0.12431756055238 *
437474    +        AcceptedCmp30  +    -0.11023452429442 * AcceptedCmp40
437475    +          +     0.07032238409995 * AcceptedCmp50  +    -0.26682806608348 *
437476    +        Complain0  +    -0.02499813030323 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13366172993941 * AcceptedCmp10 + 0.05223132673306 * 
AcceptedCmp20 + -0.12431756055238 * AcceptedCmp30 + -0.11023452429442 * AcceptedCmp40 + 
0.07032238409995 * AcceptedCmp50 + -0.26682806608348 * Complain0 + -0.02499813030323 * 
HigherEducationBinary0 ;
437477    +   H12  = H12  +     0.00554245438596 * AcceptedCmp10
437478    +          +     0.15839567066461 * AcceptedCmp20  +     0.37076825865406 *
437479    +        AcceptedCmp30  +    -0.35554633579904 * AcceptedCmp40
437480    +          +     0.37072771407119 * AcceptedCmp50  +    -0.05194089161987 *
437481    +        Complain0  +    -0.37225966683728 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00554245438596 * AcceptedCmp10 + 0.15839567066461 * 
AcceptedCmp20 + 0.37076825865406 * AcceptedCmp30 + -0.35554633579904 * AcceptedCmp40 + 
0.37072771407119 * AcceptedCmp50 + -0.05194089161987 * Complain0 + -0.37225966683728 * 
HigherEducationBinary0 ;
437482    +   H13  = H13  +    -0.22559016468364 * AcceptedCmp10
437483    +          +     0.05833377673707 * AcceptedCmp20  +    -0.03636700985548 *
437484    +        AcceptedCmp30  +    -0.25569759811115 * AcceptedCmp40
437485    +          +    -0.04684336742413 * AcceptedCmp50  +     0.04628503093017 *
437486    +        Complain0  +     -0.0274690420199 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22559016468364 * AcceptedCmp10 + 0.05833377673707 * 
AcceptedCmp20 + -0.03636700985548 * AcceptedCmp30 + -0.25569759811115 * AcceptedCmp40 + 
-0.04684336742413 * AcceptedCmp50 + 0.04628503093017 * Complain0 + -0.0274690420199 * 
HigherEducationBinary0 ;
437487    +   H14  = H14  +    -0.32760772054296 * AcceptedCmp10
437488    +          +      -0.115974524782 * AcceptedCmp20  +     0.17243389922886 *
437489    +        AcceptedCmp30  +      0.2619520865817 * AcceptedCmp40
437490    +          +    -0.10340137441821 * AcceptedCmp50  +     0.07381382988108 *
437491    +        Complain0  +    -0.02819765040354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32760772054296 * AcceptedCmp10 + -0.115974524782 * 
AcceptedCmp20 + 0.17243389922886 * AcceptedCmp30 + 0.2619520865817 * AcceptedCmp40 + 
-0.10340137441821 * AcceptedCmp50 + 0.07381382988108 * Complain0 + -0.02819765040354 * 
HigherEducationBinary0 ;
437492    +   H15  = H15  +    -0.26084605443779 * AcceptedCmp10
437493    +          +    -0.16387661015452 * AcceptedCmp20  +    -0.16566201323403 *
437494    +        AcceptedCmp30  +    -0.35263428487299 * AcceptedCmp40
437495    +          +    -0.32839719627655 * AcceptedCmp50  +     0.02360464331322 *
437496    +        Complain0  +    -0.27283273238131 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.26084605443779 * AcceptedCmp10 + -0.16387661015452 * 
AcceptedCmp20 + -0.16566201323403 * AcceptedCmp30 + -0.35263428487299 * AcceptedCmp40 + 
-0.32839719627655 * AcceptedCmp50 + 0.02360464331322 * Complain0 + -0.27283273238131 * 
HigherEducationBinary0 ;
437497    +   H16  = H16  +     0.01304183242542 * AcceptedCmp10
437498    +          +     0.04566997893346 * AcceptedCmp20  +    -0.04050514571317 *
437499    +        AcceptedCmp30  +    -0.01620566973366 * AcceptedCmp40
437500    +          +    -0.07167046817245 * AcceptedCmp50  +    -0.06511918231577 *
437501    +        Complain0  +     0.23270681066978 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304183242542 * AcceptedCmp10 + 0.04566997893346 * 
AcceptedCmp20 + -0.04050514571317 * AcceptedCmp30 + -0.01620566973366 * AcceptedCmp40 + 
-0.07167046817245 * AcceptedCmp50 + -0.06511918231577 * Complain0 + 0.23270681066978 * 
HigherEducationBinary0 ;
437502    +   H17  = H17  +     0.01260470527699 * AcceptedCmp10
437503    +          +    -0.16882003264299 * AcceptedCmp20  +    -0.27439169721218 *
437504    +        AcceptedCmp30  +    -0.26741927505062 * AcceptedCmp40
437505    +          +    -0.13327257255598 * AcceptedCmp50  +     -0.1392453082395 *
437506    +        Complain0  +     0.31998419104809 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01260470527699 * AcceptedCmp10 + -0.16882003264299 * 
AcceptedCmp20 + -0.27439169721218 * AcceptedCmp30 + -0.26741927505062 * AcceptedCmp40 + 
-0.13327257255598 * AcceptedCmp50 + -0.1392453082395 * Complain0 + 0.31998419104809 * 
HigherEducationBinary0 ;
437507    +   H11  = H11  +     0.06102738975935 * Education2n_Cycle
437508    +          +     0.28943057977991 * EducationBasic  +     0.30966749770345 *
437509    +        EducationGraduation  +     0.02445863067232 * EducationMaster
437510    +          +     0.42984001630756 * Marital_StatusDivorced
437511    +          +     -0.4660144877239 * Marital_StatusMarried
437512    +          +     0.44888148801285 * Marital_StatusSingle
437513    +          +    -0.35337765969826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06102738975935 * Education2n_Cycle + 0.28943057977991 * 
EducationBasic + 0.30966749770345 * EducationGraduation + 0.02445863067232 * EducationMaster + 
0.42984001630756 * Marital_StatusDivorced + -0.4660144877239 * Marital_StatusMarried + 
0.44888148801285 * Marital_StatusSingle + -0.35337765969826 * Marital_StatusTogether ;
437514    +   H12  = H12  +    -0.14873776047169 * Education2n_Cycle
437515    +          +     0.02114476645887 * EducationBasic  +    -0.06983582232977 *
437516    +        EducationGraduation  +     0.28773168978233 * EducationMaster
437517    +          +     0.10758942571981 * Marital_StatusDivorced
437518    +          +     0.51795960036213 * Marital_StatusMarried
437519    +          +    -0.40242992087783 * Marital_StatusSingle
437520    +          +     0.59638712724774 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.14873776047169 * Education2n_Cycle + 0.02114476645887 * 
EducationBasic + -0.06983582232977 * EducationGraduation + 0.28773168978233 * EducationMaster 
+ 0.10758942571981 * Marital_StatusDivorced + 0.51795960036213 * Marital_StatusMarried + 
-0.40242992087783 * Marital_StatusSingle + 0.59638712724774 * Marital_StatusTogether ;
437521    +   H13  = H13  +     0.07261326268026 * Education2n_Cycle
437522    +          +     0.22828601903683 * EducationBasic  +    -0.09808260614396 *
437523    +        EducationGraduation  +      0.1986661885803 * EducationMaster
437524    +          +    -0.05264595890678 * Marital_StatusDivorced
437525    +          +     0.07468414180829 * Marital_StatusMarried
437526    +          +     0.20145352309024 * Marital_StatusSingle
437527    +          +     0.21800692249317 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07261326268026 * Education2n_Cycle + 0.22828601903683 * 
EducationBasic + -0.09808260614396 * EducationGraduation + 0.1986661885803 * EducationMaster + 
-0.05264595890678 * Marital_StatusDivorced + 0.07468414180829 * Marital_StatusMarried + 
0.20145352309024 * Marital_StatusSingle + 0.21800692249317 * Marital_StatusTogether ;
437528    +   H14  = H14  +    -0.16591436756181 * Education2n_Cycle
437529    +          +     0.10944605668626 * EducationBasic  +    -0.04736510771915 *
437530    +        EducationGraduation  +     0.28768591072195 * EducationMaster
437531    +          +    -0.41440932029593 * Marital_StatusDivorced
437532    +          +     0.65630698363184 * Marital_StatusMarried
437533    +          +    -0.37277384861759 * Marital_StatusSingle
437534    +          +     0.66742239790358 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16591436756181 * Education2n_Cycle + 0.10944605668626 * 
EducationBasic + -0.04736510771915 * EducationGraduation + 0.28768591072195 * EducationMaster 
+ -0.41440932029593 * Marital_StatusDivorced + 0.65630698363184 * Marital_StatusMarried + 
-0.37277384861759 * Marital_StatusSingle + 0.66742239790358 * Marital_StatusTogether ;
437535    +   H15  = H15  +     0.14874986561786 * Education2n_Cycle
437536    +          +    -0.26075650045962 * EducationBasic  +     0.31386399943318 *
437537    +        EducationGraduation  +    -0.19252087246622 * EducationMaster
437538    +          +     0.86284304352233 * Marital_StatusDivorced
437539    +          +    -0.85716490342524 * Marital_StatusMarried
437540    +          +     0.74516572826411 * Marital_StatusSingle
437541    +          +    -0.94596838391348 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14874986561786 * Education2n_Cycle + -0.26075650045962 * 
EducationBasic + 0.31386399943318 * EducationGraduation + -0.19252087246622 * EducationMaster 
+ 0.86284304352233 * Marital_StatusDivorced + -0.85716490342524 * Marital_StatusMarried + 
0.74516572826411 * Marital_StatusSingle + -0.94596838391348 * Marital_StatusTogether ;
437542    +   H16  = H16  +     0.05955306560033 * Education2n_Cycle
437543    +          +    -0.33179362702455 * EducationBasic  +    -0.11577784652643 *
437544    +        EducationGraduation  +    -0.12481149416801 * EducationMaster
437545    +          +    -0.11928801837478 * Marital_StatusDivorced
437546    +          +    -0.15909233409421 * Marital_StatusMarried
437547    +          +     0.34325131781601 * Marital_StatusSingle
437548    +          +    -0.10826134118683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05955306560033 * Education2n_Cycle + -0.33179362702455 * 
EducationBasic + -0.11577784652643 * EducationGraduation + -0.12481149416801 * EducationMaster 
+ -0.11928801837478 * Marital_StatusDivorced + -0.15909233409421 * Marital_StatusMarried + 
0.34325131781601 * Marital_StatusSingle + -0.10826134118683 * Marital_StatusTogether ;
437549    +   H17  = H17  +      0.0153077476724 * Education2n_Cycle
437550    +          +    -0.21261765604905 * EducationBasic  +    -0.12217248919773 *
437551    +        EducationGraduation  +    -0.08573366282988 * EducationMaster
437552    +          +     0.15109481730803 * Marital_StatusDivorced
437553    +          +    -1.01578758379559 * Marital_StatusMarried
437554    +          +     0.70421923836193 * Marital_StatusSingle
437555    +          +    -0.63730370729331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0153077476724 * Education2n_Cycle + -0.21261765604905 * 
EducationBasic + -0.12217248919773 * EducationGraduation + -0.08573366282988 * EducationMaster 
+ 0.15109481730803 * Marital_StatusDivorced + -1.01578758379559 * Marital_StatusMarried + 
0.70421923836193 * Marital_StatusSingle + -0.63730370729331 * Marital_StatusTogether ;
437556    +   H11  =     0.02509750258391 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02509750258391 + H11 ;
437557    +   H12  =    -0.58342149790654 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58342149790654 + H12 ;
437558    +   H13  =    -1.03881761031374 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03881761031374 + H13 ;
437559    +   H14  =     0.84311700438452 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84311700438452 + H14 ;
437560    +   H15  =    -0.42140887324666 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42140887324666 + H15 ;
437561    +   H16  =    -1.77342637643401 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77342637643401 + H16 ;
437562    +   H17  =    -1.60862695180721 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.60862695180721 + H17 ;
437563    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
437564    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
437565    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
437566    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
437567    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
437568    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
437569    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
437570    +END;
MPRINT(EM_DIAGRAM):   END;
437571    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
437572    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
437573    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
437574    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
437575    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
437576    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
437577    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
437578    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
437579    +END;
MPRINT(EM_DIAGRAM):   END;
437580    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437581    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
437582    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437583    +
437584    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
437585    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
437586    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
437587    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
437588    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
437589    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437590    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
437591    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
437592    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
437593    +end;
MPRINT(EM_DIAGRAM):   end;
437594    +else do;
MPRINT(EM_DIAGRAM):   else do;
437595    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
437596    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
437597    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
437598    +   end;
MPRINT(EM_DIAGRAM):   end;
437599    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
437600    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
437601    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
437602    +   end;
MPRINT(EM_DIAGRAM):   end;
437603    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437604    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
437605    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
437606    +   end;
MPRINT(EM_DIAGRAM):   end;
437607    +end;
MPRINT(EM_DIAGRAM):   end;
437608    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
437609    +   P_DepVar1  =    -1.59177479560764 * H11  +    -1.61754897134463 * H12
437610    +          +     0.34365500815599 * H13  +     3.22562781339883 * H14
437611    +          +     3.60138310710336 * H15  +     0.57380881905142 * H16
437612    +          +     2.14937033273881 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.59177479560764 * H11 + -1.61754897134463 * H12 + 
0.34365500815599 * H13 + 3.22562781339883 * H14 + 3.60138310710336 * H15 + 0.57380881905142 * 
H16 + 2.14937033273881 * H17 ;
437613    +   P_DepVar1  =      -2.174490498324 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.174490498324 + P_DepVar1 ;
437614    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
437615    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
437616    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
437617    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
437618    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
437619    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
437620    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
437621    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
437622    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
437623    +END;
MPRINT(EM_DIAGRAM):   END;
437624    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
437625    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
437626    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
437627    +END;
MPRINT(EM_DIAGRAM):   END;
437628    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
437629    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
437630    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
437631    +END;
MPRINT(EM_DIAGRAM):   END;
437632    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
437633    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
437634    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
437635    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
437636    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
437637    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
437638    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
437639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437640    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
437641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437642    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
437643    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
437644    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
437645    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
437646    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
437647    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
437648    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
437649    +END;
MPRINT(EM_DIAGRAM):   END;
437650    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
437651    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
437652    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
437653    +drop
437654    +H11
437655    +H12
437656    +H13
437657    +H14
437658    +H15
437659    +H16
437660    +H17
437661    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
437662    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
437663    +* Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
437664    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
437665    +* Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
437666    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
437667    +drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
437668    +Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
437669    +drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
437670    +Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
437671    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
437672    +* Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
437673    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
437674    +length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
437675    +drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
437676    +Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
437677    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
437678    +* Ensmbl27: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Scoring Code of model 7 of 7;
437679    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
437680    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
437681    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
437682    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
437683    +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
437684    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
437685    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
437686    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
437687    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
437688    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
437689    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
437690    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
437691    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
437692    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
437693    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
437694    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
437695    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
437696    +LENGTH _WARN_ $4
437697    +      F_DepVar  $ 12
437698    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
437699    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
437700    +
437701    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
437702    +
437703    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
437704    +
437705    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
437706    +
437707    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
437708    +
437709    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
437710    +
437711    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
437712    +
437713    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
437714    +
437715    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
437716    +
437717    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
437718    +
437719    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
437720    +
437721    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
437722    +
437723    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
437724    +
437725    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
437726    +
437727    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
437728    +
437729    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
437730    +
437731    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
437732    +
437733    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
437734    +
437735    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
437736    +
437737    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
437738    +
437739    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
437740    +
437741    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
437742    +
437743    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
437744    +
437745    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
437746    +
437747    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
437748    +
437749    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
437750    +
437751    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
437752    +
437753    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
437754    +
437755    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
437756    +
437757    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
437758    +
437759    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
437760    +
437761    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
437762    +
437763    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
437764    +
437765    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
437766    +
437767    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
437768    +
437769    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
437770    +
437771    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
437772    +
437773    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
437774    +
437775    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
437776    +
437777    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
437778    +
437779    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
437780    +
437781    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
437782    +
437783    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
437784    +
437785    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
437786    +
437787    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
437788    +
437789    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
437790    +
437791    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
437792    +
437793    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
437794    +
437795    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
437796    +
437797    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
437798    +
437799    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
437800    +
437801    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
437802    +
437803    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
437804    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
437805    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
437806    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
437807    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437808    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437809    +end;
MPRINT(EM_DIAGRAM):   end;
437810    +else do;
MPRINT(EM_DIAGRAM):   else do;
437811    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437812    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
437813    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437814    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
437815    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
437816    +   end;
MPRINT(EM_DIAGRAM):   end;
437817    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
437818    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
437819    +   end;
MPRINT(EM_DIAGRAM):   end;
437820    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437821    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
437822    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437823    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437824    +   end;
MPRINT(EM_DIAGRAM):   end;
437825    +end;
MPRINT(EM_DIAGRAM):   end;
437826    +
437827    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
437828    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
437829    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
437830    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
437831    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437832    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437833    +end;
MPRINT(EM_DIAGRAM):   end;
437834    +else do;
MPRINT(EM_DIAGRAM):   else do;
437835    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437836    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
437837    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437838    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
437839    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
437840    +   end;
MPRINT(EM_DIAGRAM):   end;
437841    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
437842    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
437843    +   end;
MPRINT(EM_DIAGRAM):   end;
437844    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437845    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
437846    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437847    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437848    +   end;
MPRINT(EM_DIAGRAM):   end;
437849    +end;
MPRINT(EM_DIAGRAM):   end;
437850    +
437851    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
437852    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
437853    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
437854    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
437855    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437856    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437857    +end;
MPRINT(EM_DIAGRAM):   end;
437858    +else do;
MPRINT(EM_DIAGRAM):   else do;
437859    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437860    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
437861    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437862    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
437863    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
437864    +   end;
MPRINT(EM_DIAGRAM):   end;
437865    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
437866    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
437867    +   end;
MPRINT(EM_DIAGRAM):   end;
437868    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437869    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
437870    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437871    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437872    +   end;
MPRINT(EM_DIAGRAM):   end;
437873    +end;
MPRINT(EM_DIAGRAM):   end;
437874    +
437875    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
437876    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
437877    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
437878    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
437879    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437881    +end;
MPRINT(EM_DIAGRAM):   end;
437882    +else do;
MPRINT(EM_DIAGRAM):   else do;
437883    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437884    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
437885    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437886    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
437887    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
437888    +   end;
MPRINT(EM_DIAGRAM):   end;
437889    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
437890    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
437891    +   end;
MPRINT(EM_DIAGRAM):   end;
437892    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437893    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
437894    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437895    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437896    +   end;
MPRINT(EM_DIAGRAM):   end;
437897    +end;
MPRINT(EM_DIAGRAM):   end;
437898    +
437899    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
437900    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
437901    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
437902    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
437903    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437904    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437905    +end;
MPRINT(EM_DIAGRAM):   end;
437906    +else do;
MPRINT(EM_DIAGRAM):   else do;
437907    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437908    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
437909    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437910    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
437911    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
437912    +   end;
MPRINT(EM_DIAGRAM):   end;
437913    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
437914    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
437915    +   end;
MPRINT(EM_DIAGRAM):   end;
437916    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437917    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
437918    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437919    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437920    +   end;
MPRINT(EM_DIAGRAM):   end;
437921    +end;
MPRINT(EM_DIAGRAM):   end;
437922    +
437923    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
437924    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
437925    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
437926    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
437927    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437928    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437929    +end;
MPRINT(EM_DIAGRAM):   end;
437930    +else do;
MPRINT(EM_DIAGRAM):   else do;
437931    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437932    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
437933    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437934    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
437935    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
437936    +   end;
MPRINT(EM_DIAGRAM):   end;
437937    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
437938    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
437939    +   end;
MPRINT(EM_DIAGRAM):   end;
437940    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437941    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
437942    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437943    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437944    +   end;
MPRINT(EM_DIAGRAM):   end;
437945    +end;
MPRINT(EM_DIAGRAM):   end;
437946    +
437947    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
437948    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
437949    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
437950    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
437951    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437952    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437953    +end;
MPRINT(EM_DIAGRAM):   end;
437954    +else do;
MPRINT(EM_DIAGRAM):   else do;
437955    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
437956    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
437957    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437958    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
437959    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
437960    +   end;
MPRINT(EM_DIAGRAM):   end;
437961    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
437962    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
437963    +   end;
MPRINT(EM_DIAGRAM):   end;
437964    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437965    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
437966    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
437967    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437968    +   end;
MPRINT(EM_DIAGRAM):   end;
437969    +end;
MPRINT(EM_DIAGRAM):   end;
437970    +
437971    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
437972    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
437973    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
437974    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
437975    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
437976    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
437977    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
437978    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
437979    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
437980    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
437981    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
437982    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
437983    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
437984    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
437985    +end;
MPRINT(EM_DIAGRAM):   end;
437986    +else do;
MPRINT(EM_DIAGRAM):   else do;
437987    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
437988    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
437989    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
437990    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
437991    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
437992    +   end;
MPRINT(EM_DIAGRAM):   end;
437993    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
437994    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
437995    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
437996    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
437997    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
437998    +   end;
MPRINT(EM_DIAGRAM):   end;
437999    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
438000    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
438001    +   end;
MPRINT(EM_DIAGRAM):   end;
438002    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
438003    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
438004    +   end;
MPRINT(EM_DIAGRAM):   end;
438005    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
438006    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
438007    +   end;
MPRINT(EM_DIAGRAM):   end;
438008    +   else do;
MPRINT(EM_DIAGRAM):   else do;
438009    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
438010    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
438011    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
438012    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
438013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
438014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438015    +   end;
MPRINT(EM_DIAGRAM):   end;
438016    +end;
MPRINT(EM_DIAGRAM):   end;
438017    +
438018    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
438019    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
438020    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
438021    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
438022    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
438023    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
438024    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
438025    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
438026    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
438027    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
438028    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
438029    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
438030    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
438031    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
438032    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438033    +end;
MPRINT(EM_DIAGRAM):   end;
438034    +else do;
MPRINT(EM_DIAGRAM):   else do;
438035    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
438036    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
438037    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
438038    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
438039    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
438040    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
438041    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
438042    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
438043    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
438044    +         end;
MPRINT(EM_DIAGRAM):   end;
438045    +         else do;
MPRINT(EM_DIAGRAM):   else do;
438046    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
438047    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
438048    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
438049    +            end;
MPRINT(EM_DIAGRAM):   end;
438050    +         end;
MPRINT(EM_DIAGRAM):   end;
438051    +      end;
MPRINT(EM_DIAGRAM):   end;
438052    +      else do;
MPRINT(EM_DIAGRAM):   else do;
438053    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
438054    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
438055    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
438056    +         end;
MPRINT(EM_DIAGRAM):   end;
438057    +      end;
MPRINT(EM_DIAGRAM):   end;
438058    +   end;
MPRINT(EM_DIAGRAM):   end;
438059    +   else do;
MPRINT(EM_DIAGRAM):   else do;
438060    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
438061    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
438062    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
438063    +      end;
MPRINT(EM_DIAGRAM):   end;
438064    +      else do;
MPRINT(EM_DIAGRAM):   else do;
438065    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
438066    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
438067    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
438068    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
438069    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
438070    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
438071    +         end;
MPRINT(EM_DIAGRAM):   end;
438072    +      end;
MPRINT(EM_DIAGRAM):   end;
438073    +   end;
MPRINT(EM_DIAGRAM):   end;
438074    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
438075    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
438076    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
438077    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
438078    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
438079    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
438080    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438081    +   end;
MPRINT(EM_DIAGRAM):   end;
438082    +end;
MPRINT(EM_DIAGRAM):   end;
438083    +
438084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438085    +*** Checking missing input Interval
438086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
438087    +
438088    +IF NMISS(
438089    +   AcceptedCmpTotal ,
438090    +   Age ,
438091    +   Frq ,
438092    +   Income ,
438093    +   Kidhome ,
438094    +   Mnt ,
438095    +   MntFishProducts ,
438096    +   MntFruits ,
438097    +   MntGoldProds ,
438098    +   MntMeatProducts ,
438099    +   MntSweetProducts ,
438100    +   MntWines ,
438101    +   MonthsAsCustomer ,
438102    +   NumCatalogPurchases ,
438103    +   NumDealsPurchases ,
438104    +   NumDistPurchases ,
438105    +   NumStorePurchases ,
438106    +   NumWebPurchases ,
438107    +   NumWebVisitsMonth ,
438108    +   RFMstat ,
438109    +   RMntFrq ,
438110    +   Recency ,
438111    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
438112    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
438113    +
438114    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438115    +END;
MPRINT(EM_DIAGRAM):   END;
438116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438117    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
438118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438119    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
438120    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
438121    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
438122    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
438123    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
438124    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
438125    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
438126    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
438127    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
438128    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
438129    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
438130    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
438131    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
438132    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
438133    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
438134    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
438135    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
438136    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
438137    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
438138    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
438139    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
438140    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
438141    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
438142    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
438143    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
438144    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
438145    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
438146    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
438147    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
438148    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
438149    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
438150    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
438151    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
438152    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
438153    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
438154    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
438155    +END;
MPRINT(EM_DIAGRAM):   END;
438156    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
438157    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
438158    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
438159    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
438160    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
438161    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
438162    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
438163    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
438164    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
438165    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
438166    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
438167    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
438168    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
438169    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
438170    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
438171    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
438172    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
438173    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
438174    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
438175    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
438176    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
438177    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
438178    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
438179    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
438180    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
438181    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
438182    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
438183    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
438184    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
438185    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
438186    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
438187    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
438188    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
438189    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
438190    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
438191    +   ELSE S_NumCatalogPurchases
438192    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
438193    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
438194    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
438195    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
438196    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
438197    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
438198    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
438199    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
438200    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
438201    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
438202    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
438203    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
438204    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
438205    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
438206    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
438207    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
438208    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
438209    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
438210    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
438211    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
438212    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
438213    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
438214    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
438215    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
438216    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
438217    +END;
MPRINT(EM_DIAGRAM):   END;
438218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438219    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
438220    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438221    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438222    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
438223    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438225    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
438226    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438227    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
438228    +   H11  =     0.17501563716249 * S_AcceptedCmpTotal  +    -0.36554114449053 *
438229    +        S_Age  +    -0.38580134783102 * S_Frq  +    -0.21908382657217 *
438230    +        S_Income  +    -0.07407502089271 * S_Kidhome
438231    +          +     0.12840196100631 * S_Mnt  +     0.03929964535457 *
438232    +        S_MntFishProducts  +    -0.07747223779114 * S_MntFruits
438233    +          +     0.06367041786619 * S_MntGoldProds  +     0.97858536127159 *
438234    +        S_MntMeatProducts  +     -0.2631541253916 * S_MntSweetProducts
438235    +          +    -0.21009967468315 * S_MntWines  +     0.01772965748746 *
438236    +        S_MonthsAsCustomer  +     0.43689279156654 * S_NumCatalogPurchases
438237    +          +     0.85324794786604 * S_NumDealsPurchases
438238    +          +     0.23632583007911 * S_NumDistPurchases
438239    +          +    -0.63089078988761 * S_NumStorePurchases
438240    +          +    -0.92352748602374 * S_NumWebPurchases
438241    +          +     0.90081938176641 * S_NumWebVisitsMonth
438242    +          +     0.42330049584845 * S_RFMstat  +     0.02105180951094 *
438243    +        S_RMntFrq  +    -0.84474450609256 * S_Recency
438244    +          +     0.18914162652023 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17501563716249 * S_AcceptedCmpTotal + -0.36554114449053 * S_Age 
+ -0.38580134783102 * S_Frq + -0.21908382657217 * S_Income + -0.07407502089271 * S_Kidhome + 
0.12840196100631 * S_Mnt + 0.03929964535457 * S_MntFishProducts + -0.07747223779114 * 
S_MntFruits + 0.06367041786619 * S_MntGoldProds + 0.97858536127159 * S_MntMeatProducts + 
-0.2631541253916 * S_MntSweetProducts + -0.21009967468315 * S_MntWines + 0.01772965748746 * 
S_MonthsAsCustomer + 0.43689279156654 * S_NumCatalogPurchases + 0.85324794786604 * 
S_NumDealsPurchases + 0.23632583007911 * S_NumDistPurchases + -0.63089078988761 * 
S_NumStorePurchases + -0.92352748602374 * S_NumWebPurchases + 0.90081938176641 * 
S_NumWebVisitsMonth + 0.42330049584845 * S_RFMstat + 0.02105180951094 * S_RMntFrq + 
-0.84474450609256 * S_Recency + 0.18914162652023 * S_Teenhome ;
438245    +   H12  =     0.55034639645204 * S_AcceptedCmpTotal  +     0.09306745130673 *
438246    +        S_Age  +    -0.38144414546432 * S_Frq  +     0.39346487803525 *
438247    +        S_Income  +    -0.46092998969912 * S_Kidhome
438248    +          +    -0.21419775022567 * S_Mnt  +     -0.1419038030075 *
438249    +        S_MntFishProducts  +    -0.15086475751383 * S_MntFruits
438250    +          +    -0.10895314995081 * S_MntGoldProds  +     0.54340688178323 *
438251    +        S_MntMeatProducts  +     0.02370277071375 * S_MntSweetProducts
438252    +          +    -0.36083928148144 * S_MntWines  +    -0.09471203372244 *
438253    +        S_MonthsAsCustomer  +     0.35874170593009 * S_NumCatalogPurchases
438254    +          +     0.19685325076814 * S_NumDealsPurchases
438255    +          +     -0.0145000015739 * S_NumDistPurchases
438256    +          +     -0.5790386407956 * S_NumStorePurchases
438257    +          +    -0.36258404984745 * S_NumWebPurchases
438258    +          +     0.85107574614775 * S_NumWebVisitsMonth
438259    +          +     0.00898383307287 * S_RFMstat  +    -0.09672451639577 *
438260    +        S_RMntFrq  +     -0.7907561263466 * S_Recency
438261    +          +    -0.34901055038946 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.55034639645204 * S_AcceptedCmpTotal + 0.09306745130673 * S_Age + 
-0.38144414546432 * S_Frq + 0.39346487803525 * S_Income + -0.46092998969912 * S_Kidhome + 
-0.21419775022567 * S_Mnt + -0.1419038030075 * S_MntFishProducts + -0.15086475751383 * 
S_MntFruits + -0.10895314995081 * S_MntGoldProds + 0.54340688178323 * S_MntMeatProducts + 
0.02370277071375 * S_MntSweetProducts + -0.36083928148144 * S_MntWines + -0.09471203372244 * 
S_MonthsAsCustomer + 0.35874170593009 * S_NumCatalogPurchases + 0.19685325076814 * 
S_NumDealsPurchases + -0.0145000015739 * S_NumDistPurchases + -0.5790386407956 * 
S_NumStorePurchases + -0.36258404984745 * S_NumWebPurchases + 0.85107574614775 * 
S_NumWebVisitsMonth + 0.00898383307287 * S_RFMstat + -0.09672451639577 * S_RMntFrq + 
-0.7907561263466 * S_Recency + -0.34901055038946 * S_Teenhome ;
438262    +   H13  =     0.06080099463512 * S_AcceptedCmpTotal  +    -0.35825472239366 *
438263    +        S_Age  +    -0.01087502010135 * S_Frq  +    -0.29478705368425 *
438264    +        S_Income  +    -0.03273972934545 * S_Kidhome
438265    +          +    -0.13622677356361 * S_Mnt  +     0.18060273292985 *
438266    +        S_MntFishProducts  +     0.11972433239232 * S_MntFruits
438267    +          +    -0.03986660643959 * S_MntGoldProds  +     0.15555612346447 *
438268    +        S_MntMeatProducts  +      0.4343662861634 * S_MntSweetProducts
438269    +          +     0.03013514085559 * S_MntWines  +     0.05644710625745 *
438270    +        S_MonthsAsCustomer  +     -0.2306050975257 * S_NumCatalogPurchases
438271    +          +    -0.17268337796364 * S_NumDealsPurchases
438272    +          +    -0.23588860225052 * S_NumDistPurchases
438273    +          +     0.41380073293559 * S_NumStorePurchases
438274    +          +    -0.28143763726207 * S_NumWebPurchases
438275    +          +    -0.30914618130297 * S_NumWebVisitsMonth
438276    +          +     -0.4714998087492 * S_RFMstat  +    -0.00966743749996 *
438277    +        S_RMntFrq  +     0.81671444530655 * S_Recency
438278    +          +    -0.05979541602822 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06080099463512 * S_AcceptedCmpTotal + -0.35825472239366 * S_Age 
+ -0.01087502010135 * S_Frq + -0.29478705368425 * S_Income + -0.03273972934545 * S_Kidhome + 
-0.13622677356361 * S_Mnt + 0.18060273292985 * S_MntFishProducts + 0.11972433239232 * 
S_MntFruits + -0.03986660643959 * S_MntGoldProds + 0.15555612346447 * S_MntMeatProducts + 
0.4343662861634 * S_MntSweetProducts + 0.03013514085559 * S_MntWines + 0.05644710625745 * 
S_MonthsAsCustomer + -0.2306050975257 * S_NumCatalogPurchases + -0.17268337796364 * 
S_NumDealsPurchases + -0.23588860225052 * S_NumDistPurchases + 0.41380073293559 * 
S_NumStorePurchases + -0.28143763726207 * S_NumWebPurchases + -0.30914618130297 * 
S_NumWebVisitsMonth + -0.4714998087492 * S_RFMstat + -0.00966743749996 * S_RMntFrq + 
0.81671444530655 * S_Recency + -0.05979541602822 * S_Teenhome ;
438279    +   H14  =     0.02236165555251 * S_AcceptedCmpTotal  +     0.05878714073281 *
438280    +        S_Age  +      0.0220418507559 * S_Frq  +    -0.46976280127461 *
438281    +        S_Income  +    -0.06518326597517 * S_Kidhome
438282    +          +     0.01561710446128 * S_Mnt  +    -0.19888119617767 *
438283    +        S_MntFishProducts  +    -0.11099637502315 * S_MntFruits
438284    +          +     -0.1633241343451 * S_MntGoldProds  +    -0.65560791277244 *
438285    +        S_MntMeatProducts  +     0.08426248977242 * S_MntSweetProducts
438286    +          +     0.40538193250283 * S_MntWines  +     0.29709872876156 *
438287    +        S_MonthsAsCustomer  +    -0.64274287388323 * S_NumCatalogPurchases
438288    +          +    -0.46119515763011 * S_NumDealsPurchases
438289    +          +     0.16268822540635 * S_NumDistPurchases
438290    +          +     0.21653483412929 * S_NumStorePurchases
438291    +          +     0.46040401497854 * S_NumWebPurchases
438292    +          +     -0.7361096668674 * S_NumWebVisitsMonth
438293    +          +     0.21120270259957 * S_RFMstat  +    -0.01820419721495 *
438294    +        S_RMntFrq  +     0.80628261349293 * S_Recency
438295    +          +     0.30269385840066 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02236165555251 * S_AcceptedCmpTotal + 0.05878714073281 * S_Age + 
0.0220418507559 * S_Frq + -0.46976280127461 * S_Income + -0.06518326597517 * S_Kidhome + 
0.01561710446128 * S_Mnt + -0.19888119617767 * S_MntFishProducts + -0.11099637502315 * 
S_MntFruits + -0.1633241343451 * S_MntGoldProds + -0.65560791277244 * S_MntMeatProducts + 
0.08426248977242 * S_MntSweetProducts + 0.40538193250283 * S_MntWines + 0.29709872876156 * 
S_MonthsAsCustomer + -0.64274287388323 * S_NumCatalogPurchases + -0.46119515763011 * 
S_NumDealsPurchases + 0.16268822540635 * S_NumDistPurchases + 0.21653483412929 * 
S_NumStorePurchases + 0.46040401497854 * S_NumWebPurchases + -0.7361096668674 * 
S_NumWebVisitsMonth + 0.21120270259957 * S_RFMstat + -0.01820419721495 * S_RMntFrq + 
0.80628261349293 * S_Recency + 0.30269385840066 * S_Teenhome ;
438296    +   H15  =    -0.12213750739956 * S_AcceptedCmpTotal  +     0.11214050296975 *
438297    +        S_Age  +    -0.30158163448762 * S_Frq  +    -0.65785861830444 *
438298    +        S_Income  +     0.55328239552566 * S_Kidhome
438299    +          +    -0.10286828951896 * S_Mnt  +     0.02737244457507 *
438300    +        S_MntFishProducts  +     0.06403371753368 * S_MntFruits
438301    +          +     0.03413466437505 * S_MntGoldProds  +    -0.54204197569301 *
438302    +        S_MntMeatProducts  +     0.05510302269208 * S_MntSweetProducts
438303    +          +     0.19331185653379 * S_MntWines  +    -0.11275583865898 *
438304    +        S_MonthsAsCustomer  +    -0.61166489373672 * S_NumCatalogPurchases
438305    +          +     0.05502131610199 * S_NumDealsPurchases
438306    +          +    -0.03756550292536 * S_NumDistPurchases
438307    +          +    -0.03538043876599 * S_NumStorePurchases
438308    +          +     -0.0907757250737 * S_NumWebPurchases
438309    +          +    -0.70112968521759 * S_NumWebVisitsMonth
438310    +          +    -0.14412513555959 * S_RFMstat  +     0.21884375840225 *
438311    +        S_RMntFrq  +     0.94295210651466 * S_Recency
438312    +          +     0.35991330606304 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12213750739956 * S_AcceptedCmpTotal + 0.11214050296975 * S_Age 
+ -0.30158163448762 * S_Frq + -0.65785861830444 * S_Income + 0.55328239552566 * S_Kidhome + 
-0.10286828951896 * S_Mnt + 0.02737244457507 * S_MntFishProducts + 0.06403371753368 * 
S_MntFruits + 0.03413466437505 * S_MntGoldProds + -0.54204197569301 * S_MntMeatProducts + 
0.05510302269208 * S_MntSweetProducts + 0.19331185653379 * S_MntWines + -0.11275583865898 * 
S_MonthsAsCustomer + -0.61166489373672 * S_NumCatalogPurchases + 0.05502131610199 * 
S_NumDealsPurchases + -0.03756550292536 * S_NumDistPurchases + -0.03538043876599 * 
S_NumStorePurchases + -0.0907757250737 * S_NumWebPurchases + -0.70112968521759 * 
S_NumWebVisitsMonth + -0.14412513555959 * S_RFMstat + 0.21884375840225 * S_RMntFrq + 
0.94295210651466 * S_Recency + 0.35991330606304 * S_Teenhome ;
438313    +   H16  =    -0.36726728824296 * S_AcceptedCmpTotal  +     0.07460925934352 *
438314    +        S_Age  +    -0.43562110547346 * S_Frq  +    -0.43221933529838 *
438315    +        S_Income  +    -0.52750514886673 * S_Kidhome
438316    +          +    -0.26421661734492 * S_Mnt  +     0.14907990887311 *
438317    +        S_MntFishProducts  +     0.04789588439327 * S_MntFruits
438318    +          +    -0.20961586241585 * S_MntGoldProds  +    -0.20758519587985 *
438319    +        S_MntMeatProducts  +    -0.19867933143984 * S_MntSweetProducts
438320    +          +    -0.06534193060612 * S_MntWines  +    -0.23871571634661 *
438321    +        S_MonthsAsCustomer  +    -0.53206950950203 * S_NumCatalogPurchases
438322    +          +    -0.50827570715861 * S_NumDealsPurchases
438323    +          +    -0.47409547329081 * S_NumDistPurchases
438324    +          +     0.18399962481918 * S_NumStorePurchases
438325    +          +     0.02681212324713 * S_NumWebPurchases
438326    +          +    -0.20824959103725 * S_NumWebVisitsMonth
438327    +          +    -0.06029410016837 * S_RFMstat  +    -0.10536519478033 *
438328    +        S_RMntFrq  +     0.04705531474734 * S_Recency
438329    +          +    -0.11408993340011 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.36726728824296 * S_AcceptedCmpTotal + 0.07460925934352 * S_Age 
+ -0.43562110547346 * S_Frq + -0.43221933529838 * S_Income + -0.52750514886673 * S_Kidhome + 
-0.26421661734492 * S_Mnt + 0.14907990887311 * S_MntFishProducts + 0.04789588439327 * 
S_MntFruits + -0.20961586241585 * S_MntGoldProds + -0.20758519587985 * S_MntMeatProducts + 
-0.19867933143984 * S_MntSweetProducts + -0.06534193060612 * S_MntWines + -0.23871571634661 * 
S_MonthsAsCustomer + -0.53206950950203 * S_NumCatalogPurchases + -0.50827570715861 * 
S_NumDealsPurchases + -0.47409547329081 * S_NumDistPurchases + 0.18399962481918 * 
S_NumStorePurchases + 0.02681212324713 * S_NumWebPurchases + -0.20824959103725 * 
S_NumWebVisitsMonth + -0.06029410016837 * S_RFMstat + -0.10536519478033 * S_RMntFrq + 
0.04705531474734 * S_Recency + -0.11408993340011 * S_Teenhome ;
438330    +   H11  = H11  +    -0.77677369001519 * AcceptedCmp10
438331    +          +    -0.37032394781671 * AcceptedCmp20  +    -0.38832722412387 *
438332    +        AcceptedCmp30  +    -0.55638306754435 * AcceptedCmp40
438333    +          +    -0.38440791029959 * AcceptedCmp50  +    -0.16406106118114 *
438334    +        Complain0  +     0.13745408429927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.77677369001519 * AcceptedCmp10 + -0.37032394781671 * 
AcceptedCmp20 + -0.38832722412387 * AcceptedCmp30 + -0.55638306754435 * AcceptedCmp40 + 
-0.38440791029959 * AcceptedCmp50 + -0.16406106118114 * Complain0 + 0.13745408429927 * 
HigherEducationBinary0 ;
438335    +   H12  = H12  +    -0.05148686413458 * AcceptedCmp10
438336    +          +     0.05180152789051 * AcceptedCmp20  +    -0.19662622794776 *
438337    +        AcceptedCmp30  +     -0.1585553643874 * AcceptedCmp40
438338    +          +    -0.27247887239746 * AcceptedCmp50  +     0.04624249285151 *
438339    +        Complain0  +     0.00785440028495 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05148686413458 * AcceptedCmp10 + 0.05180152789051 * 
AcceptedCmp20 + -0.19662622794776 * AcceptedCmp30 + -0.1585553643874 * AcceptedCmp40 + 
-0.27247887239746 * AcceptedCmp50 + 0.04624249285151 * Complain0 + 0.00785440028495 * 
HigherEducationBinary0 ;
438340    +   H13  = H13  +     0.21037041808208 * AcceptedCmp10
438341    +          +     0.06300544912729 * AcceptedCmp20  +      0.2031627989618 *
438342    +        AcceptedCmp30  +    -0.16684085233007 * AcceptedCmp40
438343    +          +      0.0625549638503 * AcceptedCmp50  +     0.08211834732664 *
438344    +        Complain0  +     0.41790682924235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21037041808208 * AcceptedCmp10 + 0.06300544912729 * 
AcceptedCmp20 + 0.2031627989618 * AcceptedCmp30 + -0.16684085233007 * AcceptedCmp40 + 
0.0625549638503 * AcceptedCmp50 + 0.08211834732664 * Complain0 + 0.41790682924235 * 
HigherEducationBinary0 ;
438345    +   H14  = H14  +    -0.22633896297555 * AcceptedCmp10
438346    +          +     0.08566230730475 * AcceptedCmp20  +     0.22438004167873 *
438347    +        AcceptedCmp30  +    -0.34844091963496 * AcceptedCmp40
438348    +          +      0.2256378657623 * AcceptedCmp50  +    -0.04877442051049 *
438349    +        Complain0  +     0.06991776072868 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22633896297555 * AcceptedCmp10 + 0.08566230730475 * 
AcceptedCmp20 + 0.22438004167873 * AcceptedCmp30 + -0.34844091963496 * AcceptedCmp40 + 
0.2256378657623 * AcceptedCmp50 + -0.04877442051049 * Complain0 + 0.06991776072868 * 
HigherEducationBinary0 ;
438350    +   H15  = H15  +     0.41157678374445 * AcceptedCmp10
438351    +          +     0.54458379988837 * AcceptedCmp20  +     0.36562464175733 *
438352    +        AcceptedCmp30  +     0.42967664754272 * AcceptedCmp40
438353    +          +     0.29503069209148 * AcceptedCmp50  +     0.22816514842206 *
438354    +        Complain0  +    -0.21688291139263 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.41157678374445 * AcceptedCmp10 + 0.54458379988837 * 
AcceptedCmp20 + 0.36562464175733 * AcceptedCmp30 + 0.42967664754272 * AcceptedCmp40 + 
0.29503069209148 * AcceptedCmp50 + 0.22816514842206 * Complain0 + -0.21688291139263 * 
HigherEducationBinary0 ;
438355    +   H16  = H16  +     0.19407195798819 * AcceptedCmp10
438356    +          +     0.04247364390054 * AcceptedCmp20  +     0.08274248135062 *
438357    +        AcceptedCmp30  +    -0.03914341230116 * AcceptedCmp40
438358    +          +     0.21624329471544 * AcceptedCmp50  +     0.10868032675538 *
438359    +        Complain0  +     0.53913868676285 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19407195798819 * AcceptedCmp10 + 0.04247364390054 * 
AcceptedCmp20 + 0.08274248135062 * AcceptedCmp30 + -0.03914341230116 * AcceptedCmp40 + 
0.21624329471544 * AcceptedCmp50 + 0.10868032675538 * Complain0 + 0.53913868676285 * 
HigherEducationBinary0 ;
438360    +   H11  = H11  +    -0.10818997830847 * Education2n_Cycle
438361    +          +    -0.06250860766324 * EducationBasic  +       0.082321310702 *
438362    +        EducationGraduation  +     0.02690714866809 * EducationMaster
438363    +          +      0.1401475547652 * Marital_StatusDivorced
438364    +          +     0.09801106519846 * Marital_StatusMarried
438365    +          +    -0.26003432053167 * Marital_StatusSingle
438366    +          +     0.01618123849583 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10818997830847 * Education2n_Cycle + -0.06250860766324 * 
EducationBasic + 0.082321310702 * EducationGraduation + 0.02690714866809 * EducationMaster + 
0.1401475547652 * Marital_StatusDivorced + 0.09801106519846 * Marital_StatusMarried + 
-0.26003432053167 * Marital_StatusSingle + 0.01618123849583 * Marital_StatusTogether ;
438367    +   H12  = H12  +     0.03962548410357 * Education2n_Cycle
438368    +          +    -0.26452735705222 * EducationBasic  +     0.20050085174927 *
438369    +        EducationGraduation  +     -0.0582668884993 * EducationMaster
438370    +          +     0.33965651292585 * Marital_StatusDivorced
438371    +          +    -0.51738607463653 * Marital_StatusMarried
438372    +          +     0.57209809625866 * Marital_StatusSingle
438373    +          +    -0.44546779779432 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03962548410357 * Education2n_Cycle + -0.26452735705222 * 
EducationBasic + 0.20050085174927 * EducationGraduation + -0.0582668884993 * EducationMaster + 
0.33965651292585 * Marital_StatusDivorced + -0.51738607463653 * Marital_StatusMarried + 
0.57209809625866 * Marital_StatusSingle + -0.44546779779432 * Marital_StatusTogether ;
438374    +   H13  = H13  +     0.01128025797292 * Education2n_Cycle
438375    +          +      0.2331829736493 * EducationBasic  +    -0.21365797510985 *
438376    +        EducationGraduation  +     -0.0762564849741 * EducationMaster
438377    +          +     -0.0712692029901 * Marital_StatusDivorced
438378    +          +      0.2989539150548 * Marital_StatusMarried
438379    +          +    -0.07088797938783 * Marital_StatusSingle
438380    +          +     0.16185370186238 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01128025797292 * Education2n_Cycle + 0.2331829736493 * 
EducationBasic + -0.21365797510985 * EducationGraduation + -0.0762564849741 * EducationMaster 
+ -0.0712692029901 * Marital_StatusDivorced + 0.2989539150548 * Marital_StatusMarried + 
-0.07088797938783 * Marital_StatusSingle + 0.16185370186238 * Marital_StatusTogether ;
438381    +   H14  = H14  +     -0.2070379700286 * Education2n_Cycle
438382    +          +    -0.01037898928967 * EducationBasic  +     0.15025928327392 *
438383    +        EducationGraduation  +    -0.01705681126182 * EducationMaster
438384    +          +    -0.06075465978816 * Marital_StatusDivorced
438385    +          +     0.23328087967095 * Marital_StatusMarried
438386    +          +    -0.34401062494093 * Marital_StatusSingle
438387    +          +     0.53078479431088 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.2070379700286 * Education2n_Cycle + -0.01037898928967 * 
EducationBasic + 0.15025928327392 * EducationGraduation + -0.01705681126182 * EducationMaster 
+ -0.06075465978816 * Marital_StatusDivorced + 0.23328087967095 * Marital_StatusMarried + 
-0.34401062494093 * Marital_StatusSingle + 0.53078479431088 * Marital_StatusTogether ;
438388    +   H15  = H15  +     0.02459175230987 * Education2n_Cycle
438389    +          +     -0.4108033280498 * EducationBasic  +     0.20104265551967 *
438390    +        EducationGraduation  +     0.36213037498234 * EducationMaster
438391    +          +    -0.07312045395545 * Marital_StatusDivorced
438392    +          +     1.08247738273721 * Marital_StatusMarried
438393    +          +    -0.68676298741916 * Marital_StatusSingle
438394    +          +     0.62203169255788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.02459175230987 * Education2n_Cycle + -0.4108033280498 * 
EducationBasic + 0.20104265551967 * EducationGraduation + 0.36213037498234 * EducationMaster + 
-0.07312045395545 * Marital_StatusDivorced + 1.08247738273721 * Marital_StatusMarried + 
-0.68676298741916 * Marital_StatusSingle + 0.62203169255788 * Marital_StatusTogether ;
438395    +   H16  = H16  +    -0.18585334310939 * Education2n_Cycle
438396    +          +    -0.23205958818402 * EducationBasic  +    -0.13603377834078 *
438397    +        EducationGraduation  +    -0.11419275271029 * EducationMaster
438398    +          +    -0.20451618892357 * Marital_StatusDivorced
438399    +          +    -0.41145969312049 * Marital_StatusMarried
438400    +          +     0.44568613045702 * Marital_StatusSingle
438401    +          +    -0.24768465153678 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.18585334310939 * Education2n_Cycle + -0.23205958818402 * 
EducationBasic + -0.13603377834078 * EducationGraduation + -0.11419275271029 * EducationMaster 
+ -0.20451618892357 * Marital_StatusDivorced + -0.41145969312049 * Marital_StatusMarried + 
0.44568613045702 * Marital_StatusSingle + -0.24768465153678 * Marital_StatusTogether ;
438402    +   H11  =    -0.04019762461382 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04019762461382 + H11 ;
438403    +   H12  =     0.36549512230095 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36549512230095 + H12 ;
438404    +   H13  =    -1.38204627706606 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38204627706606 + H13 ;
438405    +   H14  =     1.38298399879632 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.38298399879632 + H14 ;
438406    +   H15  =     0.90313152481164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90313152481164 + H15 ;
438407    +   H16  =     -2.1000519329276 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.1000519329276 + H16 ;
438408    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
438409    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
438410    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
438411    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
438412    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
438413    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
438414    +END;
MPRINT(EM_DIAGRAM):   END;
438415    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
438416    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
438417    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
438418    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
438419    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
438420    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
438421    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
438422    +END;
MPRINT(EM_DIAGRAM):   END;
438423    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438424    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
438425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438426    +
438427    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
438428    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
438429    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
438430    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
438431    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
438432    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
438433    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
438434    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
438435    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
438436    +end;
MPRINT(EM_DIAGRAM):   end;
438437    +else do;
MPRINT(EM_DIAGRAM):   else do;
438438    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
438439    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
438440    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
438441    +   end;
MPRINT(EM_DIAGRAM):   end;
438442    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
438443    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
438444    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
438445    +   end;
MPRINT(EM_DIAGRAM):   end;
438446    +   else do;
MPRINT(EM_DIAGRAM):   else do;
438447    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
438448    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
438449    +   end;
MPRINT(EM_DIAGRAM):   end;
438450    +end;
MPRINT(EM_DIAGRAM):   end;
438451    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
438452    +   P_DepVar1  =     1.88165923386255 * H11  +     2.52776524502163 * H12
438453    +          +    -1.77389131292532 * H13  +    -1.81244588070617 * H14
438454    +          +    -2.95309978013668 * H15  +    -2.05211179893121 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.88165923386255 * H11 + 2.52776524502163 * H12 + 
-1.77389131292532 * H13 + -1.81244588070617 * H14 + -2.95309978013668 * H15 + 
-2.05211179893121 * H16 ;
438455    +   P_DepVar1  =    -2.12016790420361 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.12016790420361 + P_DepVar1 ;
438456    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
438457    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
438458    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
438459    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
438460    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
438461    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
438462    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
438463    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
438464    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
438465    +END;
MPRINT(EM_DIAGRAM):   END;
438466    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
438467    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
438468    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
438469    +END;
MPRINT(EM_DIAGRAM):   END;
438470    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
438471    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
438472    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
438473    +END;
MPRINT(EM_DIAGRAM):   END;
438474    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
438475    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
438476    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
438477    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
438478    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
438479    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
438480    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
438481    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438482    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
438483    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
438484    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
438485    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
438486    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
438487    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
438488    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
438489    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
438490    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
438491    +END;
MPRINT(EM_DIAGRAM):   END;
438492    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
438493    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
438494    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
438495    +drop
438496    +H11
438497    +H12
438498    +H13
438499    +H14
438500    +H15
438501    +H16
438502    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
438503    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
438504    +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
438505    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438506    +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
438507    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438508    +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
438509    +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
438510    +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
438511    +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
438512    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438513    +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
438514    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438515    +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
438516    +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
438517    +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
438518    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438519    +* Ensmbl27: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Maximum Posteriors of 7 models;
438520    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438521    +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
438522    +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
438523    +P_DepVar1 = max(
438524    +AutoNeural7_P_DepVar1 ,
438525    +AutoNeural9_P_DepVar1 ,
438526    +AutoNeural12_P_DepVar1 ,
438527    +AutoNeural11_P_DepVar1 ,
438528    +Neural3_P_DepVar1 ,
438529    +Neural10_P_DepVar1 ,
438530    +Neural9_P_DepVar1
438531    +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural7_P_DepVar1 , AutoNeural9_P_DepVar1 , 
AutoNeural12_P_DepVar1 , AutoNeural11_P_DepVar1 , Neural3_P_DepVar1 , Neural10_P_DepVar1 , 
Neural9_P_DepVar1 );
438532    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
438533    +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
438534    +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
438535    +end;
MPRINT(EM_DIAGRAM):   end;
438536    +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
438537    +P_DepVar0 = max(
438538    +AutoNeural7_P_DepVar0 ,
438539    +AutoNeural9_P_DepVar0 ,
438540    +AutoNeural12_P_DepVar0 ,
438541    +AutoNeural11_P_DepVar0 ,
438542    +Neural3_P_DepVar0 ,
438543    +Neural10_P_DepVar0 ,
438544    +Neural9_P_DepVar0
438545    +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural7_P_DepVar0 , AutoNeural9_P_DepVar0 , 
AutoNeural12_P_DepVar0 , AutoNeural11_P_DepVar0 , Neural3_P_DepVar0 , Neural10_P_DepVar0 , 
Neural9_P_DepVar0 );
438546    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
438547    +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
438548    +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
438549    +end;
MPRINT(EM_DIAGRAM):   end;
438550    +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
438551    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438552    +* Ensmbl27: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Classification Vars;
438553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438554    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
438555    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
438556    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
438557    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
438558    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
438559    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
438560    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
438561    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
438562    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
438563    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
438564    +end;
MPRINT(EM_DIAGRAM):   end;
438565    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
438566    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
438567    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
438568    +end;
MPRINT(EM_DIAGRAM):   end;
438569    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
438570    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438571    +* Ensmbl27: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Producing Unformatted variable;
438572    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438573    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
438574    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
438575    +else
438576    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
438577    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438578    +* Ensmbl27: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing _WARN_ Variable;
438579    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438580    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
438581    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
438582    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
438583    +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
438583   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
438584    +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
438584   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
438585    +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
438585   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
438586    +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
438586   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
438587    +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
438587   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
438588    +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
438588   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
438589    +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
438589   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
438590    +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
438590   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
438591    +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
438591   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
438592    +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
438592   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
438593    +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
438593   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
438594    +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
438594   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
438595    +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
438595   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
438596    +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
438596   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
438597    +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
438597   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
438598    +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
438598   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
438599    +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
438600    +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
438601    +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
438602    +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
438603    +if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
438603   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
438604    +if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
438604   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
438605    +if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
438605   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
438606    +if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
438606   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
438607    +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
438608    +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
438609    +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
438610    +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
438611    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438612    +* Ensmbl27: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing Residual Vars;
438613    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
438614    +if
438615    +F_DepVar NE '1'
438616    +AND F_DepVar NE '0'
438617    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
438618    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
438619    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
438620    +end;
MPRINT(EM_DIAGRAM):   end;
438621    +else do;
MPRINT(EM_DIAGRAM):   else do;
438622    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
438623    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
438624    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
438625    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
438626    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
438627    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
438628    +END;
MPRINT(EM_DIAGRAM):   END;
438629    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
438630     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL27_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL7_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.29 seconds
      cpu time            0.29 seconds
      

MPRINT(EM_DIAGRAM):   quit;
438631     quit;
438632     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl27_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl27_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl27_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
438692     filename _pref
438692   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
438693     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
438694     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
438695    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
438696    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
438697    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
438698    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
438699    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
438700    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
438701    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
438702    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
438703    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
438704    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
438705    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
438706    +LENGTH _WARN_ $4
438707    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
438708    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
438709    +
438710    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
438711    +
438712    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
438713    +
438714    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
438715    +
438716    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
438717    +
438718    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
438719    +
438720    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
438721    +
438722    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
438723    +
438724    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
438725    +
438726    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
438727    +
438728    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
438729    +
438730    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
438731    +
438732    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
438733    +
438734    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
438735    +
438736    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
438737    +
438738    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
438739    +
438740    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
438741    +
438742    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
438743    +
438744    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
438745    +
438746    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
438747    +
438748    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
438749    +
438750    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
438751    +
438752    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
438753    +
438754    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
438755    +
438756    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
438757    +
438758    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
438759    +
438760    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
438761    +
438762    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
438763    +
438764    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
438765    +
438766    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
438767    +
438768    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
438769    +
438770    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
438771    +
438772    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
438773    +
438774    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
438775    +
438776    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
438777    +
438778    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
438779    +
438780    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
438781    +
438782    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
438783    +
438784    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
438785    +
438786    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
438787    +
438788    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
438789    +
438790    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
438791    +
438792    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
438793    +
438794    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
438795    +
438796    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
438797    +
438798    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
438799    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
438800    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
438801    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
438802    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
438803    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438804    +end;
MPRINT(EM_DIAGRAM):   end;
438805    +else do;
MPRINT(EM_DIAGRAM):   else do;
438806    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
438807    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
438808    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
438809    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
438810    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
438811    +   end;
MPRINT(EM_DIAGRAM):   end;
438812    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
438813    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
438814    +   end;
MPRINT(EM_DIAGRAM):   end;
438815    +   else do;
MPRINT(EM_DIAGRAM):   else do;
438816    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
438817    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
438818    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438819    +   end;
MPRINT(EM_DIAGRAM):   end;
438820    +end;
MPRINT(EM_DIAGRAM):   end;
438821    +
438822    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
438823    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
438824    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
438825    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
438826    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
438827    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438828    +end;
MPRINT(EM_DIAGRAM):   end;
438829    +else do;
MPRINT(EM_DIAGRAM):   else do;
438830    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
438831    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
438832    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
438833    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
438834    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
438835    +   end;
MPRINT(EM_DIAGRAM):   end;
438836    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
438837    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
438838    +   end;
MPRINT(EM_DIAGRAM):   end;
438839    +   else do;
MPRINT(EM_DIAGRAM):   else do;
438840    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
438841    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
438842    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438843    +   end;
MPRINT(EM_DIAGRAM):   end;
438844    +end;
MPRINT(EM_DIAGRAM):   end;
438845    +
438846    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
438847    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
438848    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
438849    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
438850    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
438851    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438852    +end;
MPRINT(EM_DIAGRAM):   end;
438853    +else do;
MPRINT(EM_DIAGRAM):   else do;
438854    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
438855    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
438856    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
438857    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
438858    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
438859    +   end;
MPRINT(EM_DIAGRAM):   end;
438860    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
438861    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
438862    +   end;
MPRINT(EM_DIAGRAM):   end;
438863    +   else do;
MPRINT(EM_DIAGRAM):   else do;
438864    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
438865    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
438866    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438867    +   end;
MPRINT(EM_DIAGRAM):   end;
438868    +end;
MPRINT(EM_DIAGRAM):   end;
438869    +
438870    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
438871    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
438872    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
438873    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
438874    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
438875    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438876    +end;
MPRINT(EM_DIAGRAM):   end;
438877    +else do;
MPRINT(EM_DIAGRAM):   else do;
438878    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
438879    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
438880    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
438881    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
438882    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
438883    +   end;
MPRINT(EM_DIAGRAM):   end;
438884    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
438885    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
438886    +   end;
MPRINT(EM_DIAGRAM):   end;
438887    +   else do;
MPRINT(EM_DIAGRAM):   else do;
438888    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
438889    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
438890    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438891    +   end;
MPRINT(EM_DIAGRAM):   end;
438892    +end;
MPRINT(EM_DIAGRAM):   end;
438893    +
438894    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
438895    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
438896    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
438897    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
438898    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
438899    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438900    +end;
MPRINT(EM_DIAGRAM):   end;
438901    +else do;
MPRINT(EM_DIAGRAM):   else do;
438902    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
438903    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
438904    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
438905    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
438906    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
438907    +   end;
MPRINT(EM_DIAGRAM):   end;
438908    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
438909    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
438910    +   end;
MPRINT(EM_DIAGRAM):   end;
438911    +   else do;
MPRINT(EM_DIAGRAM):   else do;
438912    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
438913    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
438914    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438915    +   end;
MPRINT(EM_DIAGRAM):   end;
438916    +end;
MPRINT(EM_DIAGRAM):   end;
438917    +
438918    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
438919    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
438920    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
438921    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
438922    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
438923    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438924    +end;
MPRINT(EM_DIAGRAM):   end;
438925    +else do;
MPRINT(EM_DIAGRAM):   else do;
438926    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
438927    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
438928    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
438929    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
438930    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
438931    +   end;
MPRINT(EM_DIAGRAM):   end;
438932    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
438933    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
438934    +   end;
MPRINT(EM_DIAGRAM):   end;
438935    +   else do;
MPRINT(EM_DIAGRAM):   else do;
438936    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
438937    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
438938    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438939    +   end;
MPRINT(EM_DIAGRAM):   end;
438940    +end;
MPRINT(EM_DIAGRAM):   end;
438941    +
438942    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
438943    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
438944    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
438945    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
438946    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
438947    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438948    +end;
MPRINT(EM_DIAGRAM):   end;
438949    +else do;
MPRINT(EM_DIAGRAM):   else do;
438950    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
438951    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
438952    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
438953    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
438954    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
438955    +   end;
MPRINT(EM_DIAGRAM):   end;
438956    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
438957    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
438958    +   end;
MPRINT(EM_DIAGRAM):   end;
438959    +   else do;
MPRINT(EM_DIAGRAM):   else do;
438960    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
438961    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
438962    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438963    +   end;
MPRINT(EM_DIAGRAM):   end;
438964    +end;
MPRINT(EM_DIAGRAM):   end;
438965    +
438966    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
438967    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
438968    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
438969    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
438970    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
438971    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
438972    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
438973    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
438974    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
438975    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
438976    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
438977    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
438978    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
438979    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
438980    +end;
MPRINT(EM_DIAGRAM):   end;
438981    +else do;
MPRINT(EM_DIAGRAM):   else do;
438982    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
438983    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
438984    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
438985    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
438986    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
438987    +   end;
MPRINT(EM_DIAGRAM):   end;
438988    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
438989    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
438990    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
438991    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
438992    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
438993    +   end;
MPRINT(EM_DIAGRAM):   end;
438994    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
438995    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
438996    +   end;
MPRINT(EM_DIAGRAM):   end;
438997    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
438998    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
438999    +   end;
MPRINT(EM_DIAGRAM):   end;
439000    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
439001    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
439002    +   end;
MPRINT(EM_DIAGRAM):   end;
439003    +   else do;
MPRINT(EM_DIAGRAM):   else do;
439004    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
439005    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
439006    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
439007    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
439008    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
439009    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439010    +   end;
MPRINT(EM_DIAGRAM):   end;
439011    +end;
MPRINT(EM_DIAGRAM):   end;
439012    +
439013    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
439014    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
439015    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
439016    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
439017    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
439018    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
439019    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
439020    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
439021    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
439022    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
439023    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
439024    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
439025    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
439026    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
439027    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439028    +end;
MPRINT(EM_DIAGRAM):   end;
439029    +else do;
MPRINT(EM_DIAGRAM):   else do;
439030    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
439031    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
439032    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
439033    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
439034    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
439035    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
439036    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
439037    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
439038    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
439039    +         end;
MPRINT(EM_DIAGRAM):   end;
439040    +         else do;
MPRINT(EM_DIAGRAM):   else do;
439041    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
439042    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
439043    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
439044    +            end;
MPRINT(EM_DIAGRAM):   end;
439045    +         end;
MPRINT(EM_DIAGRAM):   end;
439046    +      end;
MPRINT(EM_DIAGRAM):   end;
439047    +      else do;
MPRINT(EM_DIAGRAM):   else do;
439048    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
439049    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
439050    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
439051    +         end;
MPRINT(EM_DIAGRAM):   end;
439052    +      end;
MPRINT(EM_DIAGRAM):   end;
439053    +   end;
MPRINT(EM_DIAGRAM):   end;
439054    +   else do;
MPRINT(EM_DIAGRAM):   else do;
439055    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
439056    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
439057    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
439058    +      end;
MPRINT(EM_DIAGRAM):   end;
439059    +      else do;
MPRINT(EM_DIAGRAM):   else do;
439060    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
439061    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
439062    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
439063    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
439064    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
439065    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
439066    +         end;
MPRINT(EM_DIAGRAM):   end;
439067    +      end;
MPRINT(EM_DIAGRAM):   end;
439068    +   end;
MPRINT(EM_DIAGRAM):   end;
439069    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
439070    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
439071    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
439072    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
439073    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
439074    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
439075    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439076    +   end;
MPRINT(EM_DIAGRAM):   end;
439077    +end;
MPRINT(EM_DIAGRAM):   end;
439078    +
439079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439080    +*** Checking missing input Interval
439081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
439082    +
439083    +IF NMISS(
439084    +   AcceptedCmpTotal ,
439085    +   Age ,
439086    +   Frq ,
439087    +   Income ,
439088    +   Kidhome ,
439089    +   Mnt ,
439090    +   MntFishProducts ,
439091    +   MntFruits ,
439092    +   MntGoldProds ,
439093    +   MntMeatProducts ,
439094    +   MntSweetProducts ,
439095    +   MntWines ,
439096    +   MonthsAsCustomer ,
439097    +   NumCatalogPurchases ,
439098    +   NumDealsPurchases ,
439099    +   NumDistPurchases ,
439100    +   NumStorePurchases ,
439101    +   NumWebPurchases ,
439102    +   NumWebVisitsMonth ,
439103    +   RFMstat ,
439104    +   RMntFrq ,
439105    +   Recency ,
439106    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
439107    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
439108    +
439109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439110    +END;
MPRINT(EM_DIAGRAM):   END;
439111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439112    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
439113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439114    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
439115    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
439116    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
439117    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
439118    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
439119    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
439120    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
439121    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
439122    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
439123    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
439124    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
439125    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
439126    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
439127    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
439128    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
439129    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
439130    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
439131    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
439132    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
439133    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
439134    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
439135    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
439136    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
439137    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
439138    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
439139    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
439140    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
439141    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
439142    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
439143    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
439144    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
439145    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
439146    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
439147    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
439148    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
439149    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
439150    +END;
MPRINT(EM_DIAGRAM):   END;
439151    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
439152    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
439153    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
439154    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
439155    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
439156    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
439157    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
439158    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
439159    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
439160    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
439161    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
439162    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
439163    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
439164    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
439165    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
439166    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
439167    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
439168    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
439169    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
439170    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
439171    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
439172    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
439173    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
439174    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
439175    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
439176    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
439177    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
439178    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
439179    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
439180    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
439181    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
439182    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
439183    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
439184    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
439185    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
439186    +   ELSE S_NumCatalogPurchases
439187    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
439188    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
439189    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
439190    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
439191    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
439192    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
439193    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
439194    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
439195    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
439196    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
439197    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
439198    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
439199    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
439200    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
439201    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
439202    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
439203    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
439204    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
439205    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
439206    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
439207    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
439208    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
439209    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
439210    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
439211    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
439212    +END;
MPRINT(EM_DIAGRAM):   END;
439213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439214    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
439215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439217    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
439218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439219    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439220    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
439221    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439222    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
439223    +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
439224    +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
439225    +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
439226    +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
439227    +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
439228    +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
439229    +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
439230    +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
439231    +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
439232    +          +     0.09708841024031 * S_NumDealsPurchases
439233    +          +    -0.29075561032014 * S_NumDistPurchases
439234    +          +    -0.14495394259873 * S_NumStorePurchases
439235    +          +     0.11890705145732 * S_NumWebPurchases
439236    +          +    -0.16954189911344 * S_NumWebVisitsMonth
439237    +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
439238    +        S_RMntFrq  +     0.17150719398884 * S_Recency
439239    +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
439240    +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
439241    +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
439242    +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
439243    +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
439244    +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
439245    +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
439246    +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
439247    +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
439248    +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
439249    +          +     0.16274478997892 * S_NumDealsPurchases
439250    +          +     0.03966958784582 * S_NumDistPurchases
439251    +          +    -0.04714110726598 * S_NumStorePurchases
439252    +          +    -0.02124229528082 * S_NumWebPurchases
439253    +          +     0.29753299776832 * S_NumWebVisitsMonth
439254    +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
439255    +        S_RMntFrq  +     -0.3340129986623 * S_Recency
439256    +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
439257    +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
439258    +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
439259    +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
439260    +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
439261    +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
439262    +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
439263    +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
439264    +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
439265    +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
439266    +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
439267    +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
439268    +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
439269    +        EducationGraduation  +     0.00619669837452 * EducationMaster
439270    +          +    -0.05037639679806 * Marital_StatusDivorced
439271    +          +     0.28781968727878 * Marital_StatusMarried
439272    +          +    -0.20382417074384 * Marital_StatusSingle
439273    +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
439274    +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
439275    +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
439276    +        EducationGraduation  +    -0.06952670554019 * EducationMaster
439277    +          +     0.06970969219123 * Marital_StatusDivorced
439278    +          +    -0.15787475744986 * Marital_StatusMarried
439279    +          +     0.14345344072192 * Marital_StatusSingle
439280    +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
439281    +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
439282    +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
439283    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
439284    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
439285    +END;
MPRINT(EM_DIAGRAM):   END;
439286    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
439287    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
439288    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
439289    +END;
MPRINT(EM_DIAGRAM):   END;
439290    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439291    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
439292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439293    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
439294    +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
439295    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
439296    +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
439297    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
439298    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
439299    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
439300    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
439301    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
439302    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
439303    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
439304    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
439305    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
439306    +END;
MPRINT(EM_DIAGRAM):   END;
439307    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
439308    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
439309    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
439310    +END;
MPRINT(EM_DIAGRAM):   END;
439311    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
439312    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
439313    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
439314    +END;
MPRINT(EM_DIAGRAM):   END;
439315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439316    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
439317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
439318    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
439319    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
439320    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
439321    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
439322    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
439323    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
439324    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
439325    +END;
MPRINT(EM_DIAGRAM):   END;
439326    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
439327    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
439328    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
439329    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
439330     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
439331     quit;
439332     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
439333     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
439334     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
439335     retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
439336     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
439337     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439338     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
439339     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439340     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

439341     proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
439342     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439343     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439344     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
439345     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
439346     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
439347     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439348     proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
439349     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

439350     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
439351     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439352     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439353     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
439354     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
439355     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439356     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439357     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
439358     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
439358   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.

439359     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439360     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
439361     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439362     filename _pref
439362   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
439363     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
439364     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
439365    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
439366    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
439367    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
439368    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
439369    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
439370    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
439371     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
439372     quit;
439373     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
439374     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
439375     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
439376     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
439377     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
439378     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439379     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
439380     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439381     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439382     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
439383     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439384     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439385     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
439386     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
439387     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
439388     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439389     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
439390     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

439391     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
439392     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439393     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439394     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
439395     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
439396     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439397     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439398     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
439399     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
439399   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

439400     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439401     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
439402     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439403     filename _pref
439403   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
439404     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
439405     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
439406    +
439407    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
439408    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
439408   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
439409    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
439410    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
439411    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
439412    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
439413    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
439414     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
439415     quit;
439416     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
439417     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
439418     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
439419     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
439420     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
439421     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439422     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
439423     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439424     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439425     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
439426     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439427     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439428     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
439429     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
439430     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
439431     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439432     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
439433     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439434     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
439435     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439436     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439437     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
439438     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
439439     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439440     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439441     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
439442     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
439442   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

439443     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439444     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
439445     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439446     filename _pref
439446   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
439447     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
439448     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
439449    +
439450    +
439451    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
439452    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
439453    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
439454    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
439455    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
439456    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
439457    +
439458    +
439459    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
439460    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
439461    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
439462    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
439463    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
439464    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
439465    +
439466    +
439467    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
439468    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
439469    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
439470    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
439471    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
439472    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
439473    +
439474    +
439475    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
439476    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
439477    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
439478    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
439479    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
439480    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
439481    +
439482    +
439483    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
439484    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
439485    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
439486    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
439487    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
439488    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
439489    +
439490    +
439491    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
439492    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
439493    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
439494    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
439495    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
439496    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
439497    +
439498    +
439499    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
439500    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
439501    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
439502    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
439503    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
439504    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
439505    +
439506    +
439507    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
439508    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
439509    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
439510    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
439511    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
439512    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
439513    +if
439514    +_FILTERNORM1 not in ( '.')
439515    + and
439516    +_FILTERNORM2 not in ( '.')
439517    + and
439518    +_FILTERNORM3 not in ( '.')
439519    + and
439520    +_FILTERNORM4 not in ( '.')
439521    + and
439522    +_FILTERNORM5 not in ( '.')
439523    + and
439524    +_FILTERNORM6 not in ( '.')
439525    + and
439526    +_FILTERNORM7 not in ( ' ')
439527    + and
439528    +_FILTERNORM8 not in ( ' ')
439529    +and
439530    +( Dt_Customer ne .)
439531    +and ( Income ne . and (Income<=107000))
439532    +and ( Kidhome ne .)
439533    +and ( MntFishProducts ne .)
439534    +and ( MntFruits ne .)
439535    +and ( MntGoldProds ne .)
439536    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
439537    +and ( MntSweetProducts ne .)
439538    +and ( MntWines ne .)
439539    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
439540    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
439541    +and ( NumStorePurchases ne .)
439542    +and ( NumWebPurchases ne .)
439543    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
439544    +and ( Recency ne .)
439545    +and ( Teenhome ne .)
439546    +and ( Year_Birth ne .)
439547    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
439548    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
439549    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
439550    +end;
MPRINT(EM_DIAGRAM):   end;
439551    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
439552    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
439553     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
439554     quit;
439555     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
439556     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
439557     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
439558     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
439559     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
439560     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439561     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
439562     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439563     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439564     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
439565     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439566     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439567     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
439568     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
439569     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
439570     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439571     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
439572     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

439573     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
439574     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439575     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439576     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
439577     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
439578     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
439579     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439580     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
439581     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
439581   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

439582     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439583     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
439584     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439585     %macro varDept(fcmpdata=,id=);
439586     %global nobs&id scoreFlag&id;
439587     %let scoreFlag&id = 0;
439588     %if &id=1 or ^&fcmpStart %then %do;
439589     proc sort data=&fcmpdata out=_temp&id nodupkey;
439590     by NAME;
439591     where id=&id and LHS in( %let j=1;
439592     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
439593     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
439594     "&var" %let j = %eval(&j+1);
439595     %end;
439596     );
439597     run;
439598     %let dsid = %sysfunc(open(_temp&id));
439599     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
439600     %let dsid = %sysfunc(close(&dsid));
439601     %if &&nobs&id %then %do;
439602     %let scoreFlag&id = 1;
439603     %let fcmpStart = 1;
439604     %end;
439605     %else %let fcmpStart = 0;
439606     %end;
439607     %else %do;
439608     proc sort data=&fcmpdata out=_tempid;
439609     where id=&id;
439610     by LHS;
439611     run;
439612     %let dsid = %sysfunc(open(_tempid));
439613     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
439614     %let dsid = %sysfunc(close(&dsid));
439615     %if ^&&nobs&id %then %do;
439616     proc datasets lib=work nolist;
439617     delete _tempid;
439618     run;
439619     quit;
439620     %end;
439621     %else %do;
439622     data _tempAll;
439623     set %let j=%eval(&id-1);
439624     %do x=1 %to &j;
439625     %if &&nobs&x %then %do;
439626     _temp&x %end;
439627     %end;
439628     ;
439629     run;
439630     proc sql;
439631     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
439631   ! work._tempid p2 where p.name=p2.lhs;
439632     quit;
439633     data _temp&id;
439634     set _temp&id;
439635     where LHS ne '' and NAME ne '' and Node ne '';
439636     run;
439637     proc datasets lib=work nolist;
439638     delete _tempAll;
439639     run;
439640     %let dsid = %sysfunc(open(_temp&id));
439641     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
439642     %let dsid = %sysfunc(close(&dsid));
439643     %if ^&&nobs&id %then %do;
439644     proc datasets lib=work nolist;
439645     delete _temp&id;
439646     run;
439647     quit;
439648     %end;
439649     %else %do;
439650     %let scoreFlag&id = 1;
439651     data _temp&id;
439652     set _temp&id;
439653     where LHS ne NAME and node ne '';
439654     run;
439655     %let dsid = %sysfunc(open(_temp&id));
439656     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
439657     %let dsid = %sysfunc(close(&dsid));
439658     %if ^&&nobs&id %then %do;
439659     proc datasets lib=work nolist;
439660     delete _temp&id;
439661     run;
439662     quit;
439663     %end;
439664     %else %do;
439665     proc sort data=_temp&id nodupkey;
439666     by LHS NAME;
439667     run;
439668     %end;
439669     %end;
439670     %end;
439671     %end;
439672     %mend varDept;
439673     %macro optCode(outdata=fcmpdata);
439674     %global fcmpStart;
439675     %let fcmpStart = 0;
439676     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
439677     %let NumNodes=9;
439678     %do k=1 %to &NumNodes;
439679     %vardept(fcmpdata=&outdata, id=&k);
439680     %end;
439681     %mend optCode;
439682     %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 140 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

439683     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
439684     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
439685     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
439686     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439687     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
439688     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
439689     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
439690     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439691     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
439692     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
439692   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

439693     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439694     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
439695     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
439696     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

439697     filename _pref
439697   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
439698     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
439699     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
439700    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
439701    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
439702    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
439703    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
439704    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
439705    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
439706    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
439707    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
439708    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
439709    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
439710    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
439711    +LENGTH _WARN_ $4
439712    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
439713    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
439714    +
439715    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
439716    +
439717    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
439718    +
439719    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
439720    +
439721    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
439722    +
439723    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
439724    +
439725    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
439726    +
439727    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
439728    +
439729    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
439730    +
439731    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
439732    +
439733    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
439734    +
439735    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
439736    +
439737    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
439738    +
439739    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
439740    +
439741    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
439742    +
439743    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
439744    +
439745    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
439746    +
439747    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
439748    +
439749    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
439750    +
439751    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
439752    +
439753    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
439754    +
439755    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
439756    +
439757    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
439758    +
439759    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
439760    +
439761    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
439762    +
439763    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
439764    +
439765    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
439766    +
439767    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
439768    +
439769    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
439770    +
439771    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
439772    +
439773    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
439774    +
439775    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
439776    +
439777    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
439778    +
439779    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
439780    +
439781    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
439782    +
439783    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
439784    +
439785    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
439786    +
439787    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
439788    +
439789    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
439790    +
439791    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
439792    +
439793    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
439794    +
439795    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
439796    +
439797    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
439798    +
439799    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
439800    +
439801    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
439802    +
439803    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
439804    +
439805    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
439806    +
439807    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
439808    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
439809    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
439810    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
439811    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
439812    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439813    +end;
MPRINT(EM_DIAGRAM):   end;
439814    +else do;
MPRINT(EM_DIAGRAM):   else do;
439815    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
439816    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
439817    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
439818    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
439819    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
439820    +   end;
MPRINT(EM_DIAGRAM):   end;
439821    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
439822    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
439823    +   end;
MPRINT(EM_DIAGRAM):   end;
439824    +   else do;
MPRINT(EM_DIAGRAM):   else do;
439825    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
439826    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
439827    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439828    +   end;
MPRINT(EM_DIAGRAM):   end;
439829    +end;
MPRINT(EM_DIAGRAM):   end;
439830    +
439831    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
439832    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
439833    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
439834    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
439835    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
439836    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439837    +end;
MPRINT(EM_DIAGRAM):   end;
439838    +else do;
MPRINT(EM_DIAGRAM):   else do;
439839    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
439840    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
439841    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
439842    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
439843    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
439844    +   end;
MPRINT(EM_DIAGRAM):   end;
439845    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
439846    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
439847    +   end;
MPRINT(EM_DIAGRAM):   end;
439848    +   else do;
MPRINT(EM_DIAGRAM):   else do;
439849    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
439850    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
439851    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439852    +   end;
MPRINT(EM_DIAGRAM):   end;
439853    +end;
MPRINT(EM_DIAGRAM):   end;
439854    +
439855    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
439856    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
439857    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
439858    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
439859    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
439860    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439861    +end;
MPRINT(EM_DIAGRAM):   end;
439862    +else do;
MPRINT(EM_DIAGRAM):   else do;
439863    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
439864    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
439865    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
439866    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
439867    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
439868    +   end;
MPRINT(EM_DIAGRAM):   end;
439869    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
439870    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
439871    +   end;
MPRINT(EM_DIAGRAM):   end;
439872    +   else do;
MPRINT(EM_DIAGRAM):   else do;
439873    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
439874    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
439875    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439876    +   end;
MPRINT(EM_DIAGRAM):   end;
439877    +end;
MPRINT(EM_DIAGRAM):   end;
439878    +
439879    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
439880    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
439881    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
439882    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
439883    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
439884    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439885    +end;
MPRINT(EM_DIAGRAM):   end;
439886    +else do;
MPRINT(EM_DIAGRAM):   else do;
439887    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
439888    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
439889    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
439890    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
439891    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
439892    +   end;
MPRINT(EM_DIAGRAM):   end;
439893    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
439894    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
439895    +   end;
MPRINT(EM_DIAGRAM):   end;
439896    +   else do;
MPRINT(EM_DIAGRAM):   else do;
439897    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
439898    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
439899    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439900    +   end;
MPRINT(EM_DIAGRAM):   end;
439901    +end;
MPRINT(EM_DIAGRAM):   end;
439902    +
439903    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
439904    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
439905    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
439906    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
439907    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
439908    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439909    +end;
MPRINT(EM_DIAGRAM):   end;
439910    +else do;
MPRINT(EM_DIAGRAM):   else do;
439911    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
439912    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
439913    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
439914    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
439915    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
439916    +   end;
MPRINT(EM_DIAGRAM):   end;
439917    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
439918    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
439919    +   end;
MPRINT(EM_DIAGRAM):   end;
439920    +   else do;
MPRINT(EM_DIAGRAM):   else do;
439921    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
439922    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
439923    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439924    +   end;
MPRINT(EM_DIAGRAM):   end;
439925    +end;
MPRINT(EM_DIAGRAM):   end;
439926    +
439927    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
439928    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
439929    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
439930    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
439931    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
439932    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439933    +end;
MPRINT(EM_DIAGRAM):   end;
439934    +else do;
MPRINT(EM_DIAGRAM):   else do;
439935    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
439936    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
439937    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
439938    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
439939    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
439940    +   end;
MPRINT(EM_DIAGRAM):   end;
439941    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
439942    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
439943    +   end;
MPRINT(EM_DIAGRAM):   end;
439944    +   else do;
MPRINT(EM_DIAGRAM):   else do;
439945    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
439946    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
439947    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439948    +   end;
MPRINT(EM_DIAGRAM):   end;
439949    +end;
MPRINT(EM_DIAGRAM):   end;
439950    +
439951    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
439952    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
439953    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
439954    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
439955    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
439956    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439957    +end;
MPRINT(EM_DIAGRAM):   end;
439958    +else do;
MPRINT(EM_DIAGRAM):   else do;
439959    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
439960    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
439961    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
439962    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
439963    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
439964    +   end;
MPRINT(EM_DIAGRAM):   end;
439965    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
439966    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
439967    +   end;
MPRINT(EM_DIAGRAM):   end;
439968    +   else do;
MPRINT(EM_DIAGRAM):   else do;
439969    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
439970    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
439971    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439972    +   end;
MPRINT(EM_DIAGRAM):   end;
439973    +end;
MPRINT(EM_DIAGRAM):   end;
439974    +
439975    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
439976    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
439977    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
439978    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
439979    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
439980    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
439981    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
439982    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
439983    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
439984    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
439985    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
439986    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
439987    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
439988    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
439989    +end;
MPRINT(EM_DIAGRAM):   end;
439990    +else do;
MPRINT(EM_DIAGRAM):   else do;
439991    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
439992    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
439993    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
439994    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
439995    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
439996    +   end;
MPRINT(EM_DIAGRAM):   end;
439997    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
439998    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
439999    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
440000    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
440001    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
440002    +   end;
MPRINT(EM_DIAGRAM):   end;
440003    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
440004    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
440005    +   end;
MPRINT(EM_DIAGRAM):   end;
440006    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
440007    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
440008    +   end;
MPRINT(EM_DIAGRAM):   end;
440009    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
440010    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
440011    +   end;
MPRINT(EM_DIAGRAM):   end;
440012    +   else do;
MPRINT(EM_DIAGRAM):   else do;
440013    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
440014    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
440015    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
440016    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
440017    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
440018    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440019    +   end;
MPRINT(EM_DIAGRAM):   end;
440020    +end;
MPRINT(EM_DIAGRAM):   end;
440021    +
440022    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
440023    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
440024    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
440025    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
440026    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
440027    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
440028    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
440029    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
440030    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
440031    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
440032    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
440033    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
440034    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
440035    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
440036    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440037    +end;
MPRINT(EM_DIAGRAM):   end;
440038    +else do;
MPRINT(EM_DIAGRAM):   else do;
440039    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
440040    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
440041    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
440042    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
440043    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
440044    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
440045    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
440046    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
440047    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
440048    +         end;
MPRINT(EM_DIAGRAM):   end;
440049    +         else do;
MPRINT(EM_DIAGRAM):   else do;
440050    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
440051    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
440052    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
440053    +            end;
MPRINT(EM_DIAGRAM):   end;
440054    +         end;
MPRINT(EM_DIAGRAM):   end;
440055    +      end;
MPRINT(EM_DIAGRAM):   end;
440056    +      else do;
MPRINT(EM_DIAGRAM):   else do;
440057    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
440058    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
440059    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
440060    +         end;
MPRINT(EM_DIAGRAM):   end;
440061    +      end;
MPRINT(EM_DIAGRAM):   end;
440062    +   end;
MPRINT(EM_DIAGRAM):   end;
440063    +   else do;
MPRINT(EM_DIAGRAM):   else do;
440064    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
440065    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
440066    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
440067    +      end;
MPRINT(EM_DIAGRAM):   end;
440068    +      else do;
MPRINT(EM_DIAGRAM):   else do;
440069    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
440070    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
440071    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
440072    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
440073    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
440074    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
440075    +         end;
MPRINT(EM_DIAGRAM):   end;
440076    +      end;
MPRINT(EM_DIAGRAM):   end;
440077    +   end;
MPRINT(EM_DIAGRAM):   end;
440078    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
440079    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
440080    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
440081    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
440082    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
440083    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
440084    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440085    +   end;
MPRINT(EM_DIAGRAM):   end;
440086    +end;
MPRINT(EM_DIAGRAM):   end;
440087    +
440088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440089    +*** Checking missing input Interval
440090    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
440091    +
440092    +IF NMISS(
440093    +   AcceptedCmpTotal ,
440094    +   Age ,
440095    +   Frq ,
440096    +   Income ,
440097    +   Kidhome ,
440098    +   Mnt ,
440099    +   MntFishProducts ,
440100    +   MntFruits ,
440101    +   MntGoldProds ,
440102    +   MntMeatProducts ,
440103    +   MntSweetProducts ,
440104    +   MntWines ,
440105    +   MonthsAsCustomer ,
440106    +   NumCatalogPurchases ,
440107    +   NumDealsPurchases ,
440108    +   NumDistPurchases ,
440109    +   NumStorePurchases ,
440110    +   NumWebPurchases ,
440111    +   NumWebVisitsMonth ,
440112    +   RFMstat ,
440113    +   RMntFrq ,
440114    +   Recency ,
440115    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
440116    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
440117    +
440118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440119    +END;
MPRINT(EM_DIAGRAM):   END;
440120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440121    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
440122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440123    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
440124    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
440125    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
440126    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
440127    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
440128    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
440129    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
440130    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
440131    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
440132    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
440133    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
440134    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
440135    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
440136    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
440137    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
440138    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
440139    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
440140    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
440141    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
440142    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
440143    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
440144    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
440145    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
440146    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
440147    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
440148    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
440149    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
440150    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
440151    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
440152    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
440153    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
440154    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
440155    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
440156    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
440157    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
440158    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
440159    +END;
MPRINT(EM_DIAGRAM):   END;
440160    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
440161    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
440162    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
440163    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
440164    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
440165    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
440166    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
440167    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
440168    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
440169    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
440170    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
440171    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
440172    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
440173    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
440174    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
440175    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
440176    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
440177    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
440178    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
440179    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
440180    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
440181    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
440182    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
440183    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
440184    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
440185    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
440186    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
440187    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
440188    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
440189    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
440190    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
440191    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
440192    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
440193    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
440194    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
440195    +   ELSE S_NumCatalogPurchases
440196    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
440197    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
440198    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
440199    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
440200    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
440201    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
440202    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
440203    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
440204    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
440205    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
440206    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
440207    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
440208    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
440209    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
440210    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
440211    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
440212    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
440213    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
440214    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
440215    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
440216    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
440217    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
440218    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
440219    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
440220    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
440221    +END;
MPRINT(EM_DIAGRAM):   END;
440222    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440223    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
440224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440225    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440226    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
440227    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440228    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440229    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
440230    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440231    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
440232    +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
440233    +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
440234    +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
440235    +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
440236    +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
440237    +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
440238    +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
440239    +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
440240    +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
440241    +          +    -1.14704878034134 * S_NumDealsPurchases
440242    +          +    -0.17763404274659 * S_NumDistPurchases
440243    +          +     0.08894400267969 * S_NumStorePurchases
440244    +          +     0.59283747891957 * S_NumWebPurchases
440245    +          +     0.85268274682505 * S_NumWebVisitsMonth
440246    +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
440247    +        S_RMntFrq  +    -1.22871580072103 * S_Recency
440248    +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
440249    +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
440250    +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
440251    +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
440252    +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
440253    +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
440254    +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
440255    +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
440256    +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
440257    +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
440258    +          +    -0.80841566068716 * S_NumDealsPurchases
440259    +          +    -0.17995640033768 * S_NumDistPurchases
440260    +          +     0.00713417460936 * S_NumStorePurchases
440261    +          +     0.57881024323076 * S_NumWebPurchases
440262    +          +    -1.35134224257365 * S_NumWebVisitsMonth
440263    +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
440264    +        S_RMntFrq  +     1.16978656262499 * S_Recency
440265    +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
440266    +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
440267    +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
440268    +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
440269    +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
440270    +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
440271    +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
440272    +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
440273    +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
440274    +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
440275    +          +     0.57891364118717 * S_NumDealsPurchases
440276    +          +    -0.31024556838688 * S_NumDistPurchases
440277    +          +    -1.48708542986704 * S_NumStorePurchases
440278    +          +    -0.93009875249206 * S_NumWebPurchases
440279    +          +     2.01900039122935 * S_NumWebVisitsMonth
440280    +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
440281    +        S_RMntFrq  +    -2.30414631760388 * S_Recency
440282    +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
440283    +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
440284    +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
440285    +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
440286    +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
440287    +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
440288    +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
440289    +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
440290    +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
440291    +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
440292    +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
440293    +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
440294    +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
440295    +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
440296    +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
440297    +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
440298    +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
440299    +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
440300    +        EducationGraduation  +    -0.68730596079478 * EducationMaster
440301    +          +     0.55883606830033 * Marital_StatusDivorced
440302    +          +    -0.54530037567066 * Marital_StatusMarried
440303    +          +    -0.52994736075753 * Marital_StatusSingle
440304    +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
440305    +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
440306    +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
440307    +        EducationGraduation  +     0.31201349236277 * EducationMaster
440308    +          +    -1.07368484057033 * Marital_StatusDivorced
440309    +          +     2.73313504711262 * Marital_StatusMarried
440310    +          +    -2.18530462876058 * Marital_StatusSingle
440311    +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
440312    +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
440313    +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
440314    +        EducationGraduation  +    -0.35544166792219 * EducationMaster
440315    +          +     0.49993144243043 * Marital_StatusDivorced
440316    +          +    -0.38953339116829 * Marital_StatusMarried
440317    +          +    -0.10836287319942 * Marital_StatusSingle
440318    +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
440319    +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
440320    +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
440321    +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
440322    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
440323    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
440324    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
440325    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
440326    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
440327    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
440328    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
440329    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
440330    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
440331    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
440332    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
440333    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
440334    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
440335    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
440336    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
440337    +END;
MPRINT(EM_DIAGRAM):   END;
440338    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
440339    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
440340    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
440341    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
440342    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
440343    +END;
MPRINT(EM_DIAGRAM):   END;
440344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440345    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
440346    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440347    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
440348    +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
440349    +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
440350    +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
440351    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
440352    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
440353    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
440354    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
440355    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
440356    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
440357    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
440358    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
440359    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
440360    +END;
MPRINT(EM_DIAGRAM):   END;
440361    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
440362    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
440363    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
440364    +END;
MPRINT(EM_DIAGRAM):   END;
440365    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
440366    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
440367    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
440368    +END;
MPRINT(EM_DIAGRAM):   END;
440369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440370    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
440371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
440372    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
440373    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
440374    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
440375    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
440376    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
440377    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
440378    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
440379    +END;
MPRINT(EM_DIAGRAM):   END;
440380    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
440381    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
440382    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
440383    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
440384     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
440385     quit;
440386     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
440387     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
440388     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
440389     retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
440390     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
440391     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

440392     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
440393     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440394     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440395     proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
440396     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440397     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

440398     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
440399     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
440400     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
440401     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440402     proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
440403     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

440404     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
440405     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440406     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440407     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
440408     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
440409     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440410     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

440411     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
440412     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
440412   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

440413     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440414     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
440415     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

440416     filename _pref
440416   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
440417     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
440418     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
440419    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
440420    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
440421    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
440422    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
440423    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
440424    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
440425     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
440426     quit;
440427     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
440428     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
440429     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
440430     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
440431     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
440432     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440433     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
440434     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440435     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440436     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
440437     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440438     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440439     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
440440     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
440441     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
440442     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440443     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
440444     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

440445     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
440446     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440447     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

440448     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
440449     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
440450     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440451     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440452     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
440453     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
440453   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

440454     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440455     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
440456     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440457     filename _pref
440457   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
440458     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
440459     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
440460    +
440461    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
440462    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
440462   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
440463    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
440464    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
440465    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
440466    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
440467    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
440468     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
440469     quit;
440470     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
440471     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
440472     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
440473     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
440474     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
440475     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

440476     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
440477     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440478     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440479     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
440480     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440481     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440482     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
440483     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
440484     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
440485     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

440486     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
440487     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440488     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
440489     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440490     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440491     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
440492     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
440493     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440494     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

440495     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
440496     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
440496   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

440497     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440498     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
440499     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440500     filename _pref
440500   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
440501     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
440502     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
440503    +
440504    +
440505    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
440506    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
440507    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
440508    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
440509    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
440510    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
440511    +
440512    +
440513    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
440514    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
440515    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
440516    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
440517    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
440518    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
440519    +
440520    +
440521    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
440522    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
440523    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
440524    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
440525    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
440526    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
440527    +
440528    +
440529    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
440530    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
440531    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
440532    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
440533    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
440534    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
440535    +
440536    +
440537    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
440538    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
440539    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
440540    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
440541    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
440542    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
440543    +
440544    +
440545    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
440546    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
440547    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
440548    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
440549    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
440550    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
440551    +
440552    +
440553    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
440554    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
440555    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
440556    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
440557    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
440558    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
440559    +
440560    +
440561    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
440562    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
440563    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
440564    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
440565    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
440566    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
440567    +if
440568    +_FILTERNORM1 not in ( '.')
440569    + and
440570    +_FILTERNORM2 not in ( '.')
440571    + and
440572    +_FILTERNORM3 not in ( '.')
440573    + and
440574    +_FILTERNORM4 not in ( '.')
440575    + and
440576    +_FILTERNORM5 not in ( '.')
440577    + and
440578    +_FILTERNORM6 not in ( '.')
440579    + and
440580    +_FILTERNORM7 not in ( ' ')
440581    + and
440582    +_FILTERNORM8 not in ( ' ')
440583    +and
440584    +( Dt_Customer ne .)
440585    +and ( Income ne . and (Income<=107000))
440586    +and ( Kidhome ne .)
440587    +and ( MntFishProducts ne .)
440588    +and ( MntFruits ne .)
440589    +and ( MntGoldProds ne .)
440590    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
440591    +and ( MntSweetProducts ne .)
440592    +and ( MntWines ne .)
440593    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
440594    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
440595    +and ( NumStorePurchases ne .)
440596    +and ( NumWebPurchases ne .)
440597    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
440598    +and ( Recency ne .)
440599    +and ( Teenhome ne .)
440600    +and ( Year_Birth ne .)
440601    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
440602    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
440603    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
440604    +end;
MPRINT(EM_DIAGRAM):   end;
440605    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
440606    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
440607     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
440608     quit;
440609     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
440610     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
440611     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
440612     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
440613     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
440614     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440615     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
440616     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440617     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

440618     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
440619     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440620     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440621     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
440622     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
440623     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
440624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
The SAS System

NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440625     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
440626     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

440627     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
440628     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440629     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

440630     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
440631     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
440632     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
440633     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440634     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
440635     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
440635   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

440636     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

440637     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
440638     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440639     %macro varDept(fcmpdata=,id=);
440640     %global nobs&id scoreFlag&id;
440641     %let scoreFlag&id = 0;
440642     %if &id=1 or ^&fcmpStart %then %do;
440643     proc sort data=&fcmpdata out=_temp&id nodupkey;
440644     by NAME;
440645     where id=&id and LHS in( %let j=1;
440646     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
440647     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
440648     "&var" %let j = %eval(&j+1);
440649     %end;
440650     );
440651     run;
440652     %let dsid = %sysfunc(open(_temp&id));
440653     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
440654     %let dsid = %sysfunc(close(&dsid));
440655     %if &&nobs&id %then %do;
440656     %let scoreFlag&id = 1;
440657     %let fcmpStart = 1;
440658     %end;
440659     %else %let fcmpStart = 0;
440660     %end;
440661     %else %do;
440662     proc sort data=&fcmpdata out=_tempid;
440663     where id=&id;
440664     by LHS;
440665     run;
440666     %let dsid = %sysfunc(open(_tempid));
440667     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
440668     %let dsid = %sysfunc(close(&dsid));
440669     %if ^&&nobs&id %then %do;
440670     proc datasets lib=work nolist;
440671     delete _tempid;
440672     run;
440673     quit;
440674     %end;
440675     %else %do;
440676     data _tempAll;
440677     set %let j=%eval(&id-1);
440678     %do x=1 %to &j;
440679     %if &&nobs&x %then %do;
440680     _temp&x %end;
440681     %end;
440682     ;
440683     run;
440684     proc sql;
440685     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
440685   ! work._tempid p2 where p.name=p2.lhs;
440686     quit;
440687     data _temp&id;
440688     set _temp&id;
440689     where LHS ne '' and NAME ne '' and Node ne '';
440690     run;
440691     proc datasets lib=work nolist;
440692     delete _tempAll;
440693     run;
440694     %let dsid = %sysfunc(open(_temp&id));
440695     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
440696     %let dsid = %sysfunc(close(&dsid));
440697     %if ^&&nobs&id %then %do;
440698     proc datasets lib=work nolist;
440699     delete _temp&id;
440700     run;
440701     quit;
440702     %end;
440703     %else %do;
440704     %let scoreFlag&id = 1;
440705     data _temp&id;
440706     set _temp&id;
440707     where LHS ne NAME and node ne '';
440708     run;
440709     %let dsid = %sysfunc(open(_temp&id));
440710     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
440711     %let dsid = %sysfunc(close(&dsid));
440712     %if ^&&nobs&id %then %do;
440713     proc datasets lib=work nolist;
440714     delete _temp&id;
440715     run;
440716     quit;
440717     %end;
440718     %else %do;
440719     proc sort data=_temp&id nodupkey;
440720     by LHS NAME;
440721     run;
440722     %end;
440723     %end;
440724     %end;
440725     %end;
440726     %mend varDept;
440727     %macro optCode(outdata=fcmpdata);
440728     %global fcmpStart;
440729     %let fcmpStart = 0;
440730     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
440731     %let NumNodes=9;
440732     %do k=1 %to &NumNodes;
440733     %vardept(fcmpdata=&outdata, id=&k);
440734     %end;
440735     %mend optCode;
440736     %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

440737     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
440738     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
440739     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
440740     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440741     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
440742     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
440743     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
440744     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440745     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
440746     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
440746   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

440747     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

440748     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
440749     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
440750     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

440751     filename _pref
440751   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
440752     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
440753     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
440754    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
440755    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
440756    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
440757    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
440758    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
440759    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
440760    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
440761    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
440762    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
440763    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
440764    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
440765    +LENGTH _WARN_ $4
440766    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
440767    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
440768    +
440769    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
440770    +
440771    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
440772    +
440773    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
440774    +
440775    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
440776    +
440777    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
440778    +
440779    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
440780    +
440781    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
440782    +
440783    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
440784    +
440785    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
440786    +
440787    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
440788    +
440789    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
440790    +
440791    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
440792    +
440793    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
440794    +
440795    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
440796    +
440797    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
440798    +
440799    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
440800    +
440801    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
440802    +
440803    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
440804    +
440805    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
440806    +
440807    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
440808    +
440809    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
440810    +
440811    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
440812    +
440813    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
440814    +
440815    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
440816    +
440817    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
440818    +
440819    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
440820    +
440821    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
440822    +
440823    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
440824    +
440825    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
440826    +
440827    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
440828    +
440829    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
440830    +
440831    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
440832    +
440833    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
440834    +
440835    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
440836    +
440837    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
440838    +
440839    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
440840    +
440841    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
440842    +
440843    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
440844    +
440845    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
440846    +
440847    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
440848    +
440849    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
440850    +
440851    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
440852    +
440853    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
440854    +
440855    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
440856    +
440857    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
440858    +
440859    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
440860    +
440861    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
440862    +
440863    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
440864    +
440865    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
440866    +
440867    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
440868    +
440869    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
440870    +
440871    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
440872    +
440873    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
440874    +
440875    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
440876    +
440877    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
440878    +
440879    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
440880    +
440881    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
440882    +
440883    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
440884    +
440885    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
440886    +
440887    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
440888    +
440889    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
440890    +
440891    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
440892    +
440893    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
440894    +
440895    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
440896    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
440897    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
440898    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
440899    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
440900    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440901    +end;
MPRINT(EM_DIAGRAM):   end;
440902    +else do;
MPRINT(EM_DIAGRAM):   else do;
440903    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
440904    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
440905    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
440906    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
440907    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
440908    +   end;
MPRINT(EM_DIAGRAM):   end;
440909    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
440910    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
440911    +   end;
MPRINT(EM_DIAGRAM):   end;
440912    +   else do;
MPRINT(EM_DIAGRAM):   else do;
440913    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
440914    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
440915    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440916    +   end;
MPRINT(EM_DIAGRAM):   end;
440917    +end;
MPRINT(EM_DIAGRAM):   end;
440918    +
440919    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
440920    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
440921    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
440922    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
440923    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
440924    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440925    +end;
MPRINT(EM_DIAGRAM):   end;
440926    +else do;
MPRINT(EM_DIAGRAM):   else do;
440927    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
440928    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
440929    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
440930    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
440931    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
440932    +   end;
MPRINT(EM_DIAGRAM):   end;
440933    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
440934    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
440935    +   end;
MPRINT(EM_DIAGRAM):   end;
440936    +   else do;
MPRINT(EM_DIAGRAM):   else do;
440937    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
440938    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
440939    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440940    +   end;
MPRINT(EM_DIAGRAM):   end;
440941    +end;
MPRINT(EM_DIAGRAM):   end;
440942    +
440943    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
440944    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
440945    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
440946    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
440947    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
440948    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440949    +end;
MPRINT(EM_DIAGRAM):   end;
440950    +else do;
MPRINT(EM_DIAGRAM):   else do;
440951    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
440952    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
440953    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
440954    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
440955    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
440956    +   end;
MPRINT(EM_DIAGRAM):   end;
440957    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
440958    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
440959    +   end;
MPRINT(EM_DIAGRAM):   end;
440960    +   else do;
MPRINT(EM_DIAGRAM):   else do;
440961    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
440962    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
440963    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440964    +   end;
MPRINT(EM_DIAGRAM):   end;
440965    +end;
MPRINT(EM_DIAGRAM):   end;
440966    +
440967    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
440968    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
440969    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
440970    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
440971    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
440972    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440973    +end;
MPRINT(EM_DIAGRAM):   end;
440974    +else do;
MPRINT(EM_DIAGRAM):   else do;
440975    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
440976    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
440977    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
440978    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
440979    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
440980    +   end;
MPRINT(EM_DIAGRAM):   end;
440981    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
440982    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
440983    +   end;
MPRINT(EM_DIAGRAM):   end;
440984    +   else do;
MPRINT(EM_DIAGRAM):   else do;
440985    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
440986    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
440987    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440988    +   end;
MPRINT(EM_DIAGRAM):   end;
440989    +end;
MPRINT(EM_DIAGRAM):   end;
440990    +
440991    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
440992    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
440993    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
440994    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
440995    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
440996    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
440997    +end;
MPRINT(EM_DIAGRAM):   end;
440998    +else do;
MPRINT(EM_DIAGRAM):   else do;
440999    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
441000    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
441001    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
441002    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
441003    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
441004    +   end;
MPRINT(EM_DIAGRAM):   end;
441005    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
441006    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
441007    +   end;
MPRINT(EM_DIAGRAM):   end;
441008    +   else do;
MPRINT(EM_DIAGRAM):   else do;
441009    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
441010    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
441011    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
441012    +   end;
MPRINT(EM_DIAGRAM):   end;
441013    +end;
MPRINT(EM_DIAGRAM):   end;
441014    +
441015    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
441016    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
441017    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
441018    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
441019    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
441020    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
441021    +end;
MPRINT(EM_DIAGRAM):   end;
441022    +else do;
MPRINT(EM_DIAGRAM):   else do;
441023    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
441024    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
441025    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
441026    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
441027    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
441028    +   end;
MPRINT(EM_DIAGRAM):   end;
441029    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
441030    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
441031    +   end;
MPRINT(EM_DIAGRAM):   end;
441032    +   else do;
MPRINT(EM_DIAGRAM):   else do;
441033    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
441034    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
441035    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
441036    +   end;
MPRINT(EM_DIAGRAM):   end;
441037    +end;
MPRINT(EM_DIAGRAM):   end;
441038    +
441039    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
441040    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
441041    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
441042    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
441043    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
441044    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
441045    +end;
MPRINT(EM_DIAGRAM):   end;
441046    +else do;
MPRINT(EM_DIAGRAM):   else do;
441047    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
441048    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
441049    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
441050    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
441051    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
441052    +   end;
MPRINT(EM_DIAGRAM):   end;
441053    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
441054    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
441055    +   end;
MPRINT(EM_DIAGRAM):   end;
441056    +   else do;
MPRINT(EM_DIAGRAM):   else do;
441057    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
441058    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
441059    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
441060    +   end;
MPRINT(EM_DIAGRAM):   end;
441061    +end;
MPRINT(EM_DIAGRAM):   end;
441062    +
441063    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
441064    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
441065    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
441066    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
441067    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
441068    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
441069    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
441070    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
441071    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
441072    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
441073    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
441074    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
441075    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
441076    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
441077    +end;
MPRINT(EM_DIAGRAM):   end;
441078    +else do;
MPRINT(EM_DIAGRAM):   else do;
441079    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
441080    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
441081    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
441082    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
441083    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
441084    +   end;
MPRINT(EM_DIAGRAM):   end;
441085    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
441086    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
441087    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
441088    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
441089    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
441090    +   end;
MPRINT(EM_DIAGRAM):   end;
441091    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
441092    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
441093    +   end;
MPRINT(EM_DIAGRAM):   end;
441094    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
441095    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
441096    +   end;
MPRINT(EM_DIAGRAM):   end;
441097    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
441098    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
441099    +   end;
MPRINT(EM_DIAGRAM):   end;
441100    +   else do;
MPRINT(EM_DIAGRAM):   else do;
441101    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
441102    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
441103    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
441104    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
441105    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
441106    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
441107    +   end;
MPRINT(EM_DIAGRAM):   end;
441108    +end;
MPRINT(EM_DIAGRAM):   end;
441109    +
441110    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
441111    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
441112    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
441113    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
441114    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
441115    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
441116    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
441117    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
441118    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
441119    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
441120    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
441121    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
441122    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
441123    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
441124    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
441125    +end;
MPRINT(EM_DIAGRAM):   end;
441126    +else do;
MPRINT(EM_DIAGRAM):   else do;
441127    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
441128    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
441129    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
441130    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
441131    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
441132    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
441133    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
441134    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
441135    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
441136    +         end;
MPRINT(EM_DIAGRAM):   end;
441137    +         else do;
MPRINT(EM_DIAGRAM):   else do;
441138    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
441139    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
441140    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
441141    +            end;
MPRINT(EM_DIAGRAM):   end;
441142    +         end;
MPRINT(EM_DIAGRAM):   end;
441143    +      end;
MPRINT(EM_DIAGRAM):   end;
441144    +      else do;
MPRINT(EM_DIAGRAM):   else do;
441145    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
441146    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
441147    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
441148    +         end;
MPRINT(EM_DIAGRAM):   end;
441149    +      end;
MPRINT(EM_DIAGRAM):   end;
441150    +   end;
MPRINT(EM_DIAGRAM):   end;
441151    +   else do;
MPRINT(EM_DIAGRAM):   else do;
441152    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
441153    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
441154    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
441155    +      end;
MPRINT(EM_DIAGRAM):   end;
441156    +      else do;
MPRINT(EM_DIAGRAM):   else do;
441157    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
441158    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
441159    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
441160    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
441161    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
441162    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
441163    +         end;
MPRINT(EM_DIAGRAM):   end;
441164    +      end;
MPRINT(EM_DIAGRAM):   end;
441165    +   end;
MPRINT(EM_DIAGRAM):   end;
441166    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
441167    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
441168    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
441169    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
441170    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
441171    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
441172    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
441173    +   end;
MPRINT(EM_DIAGRAM):   end;
441174    +end;
MPRINT(EM_DIAGRAM):   end;
441175    +
441176    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441177    +*** Checking missing input Interval
441178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
441179    +
441180    +IF NMISS(
441181    +   AcceptedCmpTotal ,
441182    +   Age ,
441183    +   Frq ,
441184    +   Income ,
441185    +   Kidhome ,
441186    +   Mnt ,
441187    +   MntFishProducts ,
441188    +   MntFruits ,
441189    +   MntGoldProds ,
441190    +   MntMeatProducts ,
441191    +   MntSweetProducts ,
441192    +   MntWines ,
441193    +   MonthsAsCustomer ,
441194    +   NumCatalogPurchases ,
441195    +   NumDealsPurchases ,
441196    +   NumDistPurchases ,
441197    +   NumStorePurchases ,
441198    +   NumWebPurchases ,
441199    +   NumWebVisitsMonth ,
441200    +   RFMstat ,
441201    +   RMntFrq ,
441202    +   Recency ,
441203    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
441204    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
441205    +
441206    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
441207    +END;
MPRINT(EM_DIAGRAM):   END;
441208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441209    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
441210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441211    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
441212    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
441213    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
441214    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
441215    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
441216    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
441217    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
441218    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
441219    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
441220    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
441221    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
441222    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
441223    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
441224    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
441225    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
441226    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
441227    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
441228    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
441229    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
441230    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
441231    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
441232    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
441233    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
441234    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
441235    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
441236    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
441237    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
441238    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
441239    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
441240    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
441241    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
441242    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
441243    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
441244    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
441245    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
441246    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
441247    +END;
MPRINT(EM_DIAGRAM):   END;
441248    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
441249    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
441250    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
441251    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
441252    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
441253    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
441254    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
441255    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
441256    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
441257    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
441258    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
441259    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
441260    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
441261    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
441262    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
441263    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
441264    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
441265    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
441266    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
441267    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
441268    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
441269    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
441270    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
441271    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
441272    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
441273    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
441274    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
441275    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
441276    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
441277    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
441278    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
441279    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
441280    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
441281    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
441282    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
441283    +   ELSE S_NumCatalogPurchases
441284    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
441285    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
441286    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
441287    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
441288    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
441289    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
441290    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
441291    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
441292    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
441293    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
441294    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
441295    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
441296    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
441297    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
441298    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
441299    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
441300    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
441301    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
441302    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
441303    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
441304    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
441305    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
441306    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
441307    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
441308    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
441309    +END;
MPRINT(EM_DIAGRAM):   END;
441310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441311    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
441312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441313    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441314    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
441315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441316    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441317    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
441318    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441319    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
441320    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
441321    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
441322    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
441323    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
441324    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
441325    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
441326    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
441327    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
441328    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
441329    +          +     1.17276395296242 * S_NumDealsPurchases
441330    +          +     0.26632768295477 * S_NumDistPurchases
441331    +          +    -1.26575615903579 * S_NumStorePurchases
441332    +          +    -0.95316107557927 * S_NumWebPurchases
441333    +          +     1.01828574356487 * S_NumWebVisitsMonth
441334    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
441335    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
441336    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
441337    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
441338    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
441339    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
441340    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
441341    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
441342    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
441343    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
441344    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
441345    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
441346    +          +     1.14485571201233 * S_NumDealsPurchases
441347    +          +     0.21414266588987 * S_NumDistPurchases
441348    +          +    -0.10530090074297 * S_NumStorePurchases
441349    +          +    -0.41712321238458 * S_NumWebPurchases
441350    +          +    -0.99760766791108 * S_NumWebVisitsMonth
441351    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
441352    +        S_RMntFrq  +     1.10040128548883 * S_Recency
441353    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
441354    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
441355    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
441356    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
441357    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
441358    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
441359    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
441360    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
441361    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
441362    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
441363    +          +      0.7196418967437 * S_NumDealsPurchases
441364    +          +     0.69035286374177 * S_NumDistPurchases
441365    +          +     0.38027656631135 * S_NumStorePurchases
441366    +          +    -0.18878358997924 * S_NumWebPurchases
441367    +          +     1.61962062004798 * S_NumWebVisitsMonth
441368    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
441369    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
441370    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
441371    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
441372    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
441373    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
441374    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
441375    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
441376    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
441377    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
441378    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
441379    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
441380    +          +    -0.00642902007204 * S_NumDealsPurchases
441381    +          +     0.29785069480367 * S_NumDistPurchases
441382    +          +    -0.42243322063147 * S_NumStorePurchases
441383    +          +     0.54880896338383 * S_NumWebPurchases
441384    +          +    -0.12525846016886 * S_NumWebVisitsMonth
441385    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
441386    +        S_RMntFrq  +     0.10252211581449 * S_Recency
441387    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
441388    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
441389    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
441390    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
441391    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
441392    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
441393    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
441394    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
441395    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
441396    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
441397    +          +    -0.48404738328225 * S_NumDealsPurchases
441398    +          +    -0.02464180457879 * S_NumDistPurchases
441399    +          +     1.17201831082067 * S_NumStorePurchases
441400    +          +     0.57453655167516 * S_NumWebPurchases
441401    +          +    -1.94417019790248 * S_NumWebVisitsMonth
441402    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
441403    +        S_RMntFrq  +      1.6169916658132 * S_Recency
441404    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
441405    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
441406    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
441407    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
441408    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
441409    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
441410    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
441411    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
441412    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
441413    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
441414    +          +    -1.49850531967483 * S_NumDealsPurchases
441415    +          +    -0.82105466264223 * S_NumDistPurchases
441416    +          +     0.29984603642824 * S_NumStorePurchases
441417    +          +     0.06557123721611 * S_NumWebPurchases
441418    +          +     1.04754749365002 * S_NumWebVisitsMonth
441419    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
441420    +        S_RMntFrq  +     0.12396789666359 * S_Recency
441421    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
441422    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
441423    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
441424    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
441425    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
441426    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
441427    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
441428    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
441429    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
441430    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
441431    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
441432    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
441433    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
441434    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
441435    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
441436    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
441437    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
441438    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
441439    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
441440    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
441441    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
441442    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
441443    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
441444    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
441445    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
441446    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
441447    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
441448    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
441449    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
441450    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
441451    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
441452    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
441453    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
441454    +        EducationGraduation  +     0.07595631354847 * EducationMaster
441455    +          +     0.24583509957712 * Marital_StatusDivorced
441456    +          +    -0.22681931588361 * Marital_StatusMarried
441457    +          +    -0.12924106229536 * Marital_StatusSingle
441458    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
441459    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
441460    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
441461    +        EducationGraduation  +     0.23015089246655 * EducationMaster
441462    +          +    -0.12585334311068 * Marital_StatusDivorced
441463    +          +    -0.20835502467207 * Marital_StatusMarried
441464    +          +    -0.13839534449368 * Marital_StatusSingle
441465    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
441466    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
441467    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
441468    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
441469    +          +     0.35106363238113 * Marital_StatusDivorced
441470    +          +     -1.3414808583918 * Marital_StatusMarried
441471    +          +     1.40835320798486 * Marital_StatusSingle
441472    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
441473    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
441474    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
441475    +        EducationGraduation  +      0.1746658332011 * EducationMaster
441476    +          +     0.48174546958393 * Marital_StatusDivorced
441477    +          +    -0.41416978858191 * Marital_StatusMarried
441478    +          +    -0.23376801546265 * Marital_StatusSingle
441479    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
441480    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
441481    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
441482    +        EducationGraduation  +     0.68875064631577 * EducationMaster
441483    +          +    -0.67557643774246 * Marital_StatusDivorced
441484    +          +     1.63844045917367 * Marital_StatusMarried
441485    +          +    -0.70320960247699 * Marital_StatusSingle
441486    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
441487    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
441488    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
441489    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
441490    +          +    -0.11371453086883 * Marital_StatusDivorced
441491    +          +    -0.34226997176291 * Marital_StatusMarried
441492    +          +    -1.01568676685754 * Marital_StatusSingle
441493    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
441494    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
441495    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
441496    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
441497    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
441498    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
441499    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
441500    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
441501    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
441502    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
441503    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
441504    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
441505    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
441506    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
441507    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
441508    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
441509    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
441510    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
441511    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
441512    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
441513    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
441514    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
441515    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
441516    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
441517    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
441518    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
441519    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
441520    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
441521    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
441522    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
441523    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
441524    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
441525    +END;
MPRINT(EM_DIAGRAM):   END;
441526    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
441527    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
441528    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
441529    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
441530    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
441531    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
441532    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
441533    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
441534    +END;
MPRINT(EM_DIAGRAM):   END;
441535    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441536    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
441537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441538    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
441539    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
441540    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
441541    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
441542    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
441543    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
441544    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
441545    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
441546    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
441547    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
441548    +          +    -0.87259051567474 * S_NumDealsPurchases
441549    +          +    -0.36454149529139 * S_NumDistPurchases
441550    +          +     0.12447759925061 * S_NumStorePurchases
441551    +          +    -1.08133487947367 * S_NumWebPurchases
441552    +          +    -0.49882157745454 * S_NumWebVisitsMonth
441553    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
441554    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
441555    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
441556    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
441557    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
441558    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
441559    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
441560    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
441561    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
441562    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
441563    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
441564    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
441565    +          +     2.23121497416403 * S_NumDealsPurchases
441566    +          +    -0.48674842191071 * S_NumDistPurchases
441567    +          +     1.77510728607544 * S_NumStorePurchases
441568    +          +     0.14647433155436 * S_NumWebPurchases
441569    +          +    -0.95892686924419 * S_NumWebVisitsMonth
441570    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
441571    +        S_RMntFrq  +     2.46497777428475 * S_Recency
441572    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
441573    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
441574    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
441575    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
441576    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
441577    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
441578    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
441579    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
441580    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
441581    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
441582    +          +     0.14338855349611 * S_NumDealsPurchases
441583    +          +    -2.21071010829235 * S_NumDistPurchases
441584    +          +    -0.21795889348002 * S_NumStorePurchases
441585    +          +     1.98825087883535 * S_NumWebPurchases
441586    +          +     1.02482442531149 * S_NumWebVisitsMonth
441587    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
441588    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
441589    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
441590    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
441591    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
441592    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
441593    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
441594    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
441595    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
441596    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
441597    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
441598    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
441599    +          +     0.30041205661012 * S_NumDealsPurchases
441600    +          +    -0.63499849986918 * S_NumDistPurchases
441601    +          +    -0.34155713433714 * S_NumStorePurchases
441602    +          +    -1.14183354933936 * S_NumWebPurchases
441603    +          +    -0.42681980262973 * S_NumWebVisitsMonth
441604    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
441605    +        S_RMntFrq  +     1.25852246467612 * S_Recency
441606    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
441607    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
441608    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
441609    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
441610    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
441611    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
441612    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
441613    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
441614    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
441615    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
441616    +          +    -0.21237915559831 * S_NumDealsPurchases
441617    +          +     0.48256923764182 * S_NumDistPurchases
441618    +          +    -0.45553093140641 * S_NumStorePurchases
441619    +          +      0.5593655963659 * S_NumWebPurchases
441620    +          +     0.27943768691188 * S_NumWebVisitsMonth
441621    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
441622    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
441623    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
441624    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
441625    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
441626    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
441627    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
441628    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
441629    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
441630    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
441631    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
441632    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
441633    +          +     2.38967021388062 * S_NumDealsPurchases
441634    +          +    -0.97722398866481 * S_NumDistPurchases
441635    +          +     1.57612333191312 * S_NumStorePurchases
441636    +          +    -0.75968679115983 * S_NumWebPurchases
441637    +          +    -0.64207187757251 * S_NumWebVisitsMonth
441638    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
441639    +        S_RMntFrq  +     1.71313869798331 * S_Recency
441640    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
441641    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
441642    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
441643    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
441644    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
441645    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
441646    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
441647    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
441648    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
441649    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
441650    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
441651    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
441652    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
441653    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
441654    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
441655    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
441656    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
441657    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
441658    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
441659    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
441660    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
441661    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
441662    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
441663    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
441664    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
441665    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
441666    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
441667    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
441668    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
441669    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
441670    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
441671    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
441672    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
441673    +        EducationGraduation  +      0.1073450284316 * EducationMaster
441674    +          +     0.96470902298142 * Marital_StatusDivorced
441675    +          +     0.94805959268314 * Marital_StatusMarried
441676    +          +     -0.6523948769616 * Marital_StatusSingle
441677    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
441678    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
441679    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
441680    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
441681    +          +      0.3918249505531 * Marital_StatusDivorced
441682    +          +    -0.00968091979586 * Marital_StatusMarried
441683    +          +     0.84615379885071 * Marital_StatusSingle
441684    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
441685    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
441686    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
441687    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
441688    +          +     1.14335160313191 * Marital_StatusDivorced
441689    +          +     0.50580517192175 * Marital_StatusMarried
441690    +          +     0.17264295020921 * Marital_StatusSingle
441691    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
441692    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
441693    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
441694    +        EducationGraduation  +     1.95818378342783 * EducationMaster
441695    +          +    -0.11238504444225 * Marital_StatusDivorced
441696    +          +    -0.81348274043749 * Marital_StatusMarried
441697    +          +     0.46075415610001 * Marital_StatusSingle
441698    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
441699    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
441700    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
441701    +        EducationGraduation  +     0.08396135672504 * EducationMaster
441702    +          +    -0.46342068701431 * Marital_StatusDivorced
441703    +          +    -0.41667845270204 * Marital_StatusMarried
441704    +          +    -0.47166707496281 * Marital_StatusSingle
441705    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
441706    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
441707    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
441708    +        EducationGraduation  +     0.36656103863186 * EducationMaster
441709    +          +    -0.45376613787812 * Marital_StatusDivorced
441710    +          +     0.01337046049801 * Marital_StatusMarried
441711    +          +    -0.92811489484121 * Marital_StatusSingle
441712    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
441713    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
441714    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
441715    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
441716    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
441717    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
441718    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
441719    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
441720    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
441721    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
441722    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
441723    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
441724    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
441725    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
441726    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
441727    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
441728    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
441729    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
441730    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
441731    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
441732    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
441733    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
441734    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
441735    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
441736    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
441737    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
441738    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
441739    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
441740    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
441741    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
441742    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
441743    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
441744    +END;
MPRINT(EM_DIAGRAM):   END;
441745    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
441746    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
441747    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
441748    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
441749    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
441750    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
441751    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
441752    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
441753    +END;
MPRINT(EM_DIAGRAM):   END;
441754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441755    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
441756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441757    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
441758    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
441759    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
441760    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
441761    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
441762    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
441763    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
441764    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
441765    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
441766    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
441767    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
441768    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
441769    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
441770    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
441771    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
441772    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
441773    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
441774    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
441775    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
441776    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
441777    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
441778    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
441779    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
441780    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
441781    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
441782    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
441783    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
441784    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
441785    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
441786    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
441787    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
441788    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
441789    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
441790    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
441791    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
441792    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
441793    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
441794    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
441795    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
441796    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
441797    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
441798    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
441799    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
441800    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
441801    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
441802    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
441803    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
441804    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
441805    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
441806    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
441807    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
441808    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
441809    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
441810    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
441811    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
441812    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
441813    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
441814    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
441815    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
441816    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
441817    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
441818    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
441819    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
441820    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
441821    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
441822    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
441823    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
441824    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
441825    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
441826    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
441827    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
441828    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
441829    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
441830    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
441831    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
441832    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
441833    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
441834    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
441835    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
441836    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
441837    +END;
MPRINT(EM_DIAGRAM):   END;
441838    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
441839    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
441840    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
441841    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
441842    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
441843    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
441844    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
441845    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
441846    +END;
MPRINT(EM_DIAGRAM):   END;
441847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441848    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
441849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441850    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
441851    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
441852    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
441853    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
441854    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
441855    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
441856    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
441857    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
441858    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
441859    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
441860    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
441861    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
441862    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
441863    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
441864    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
441865    +END;
MPRINT(EM_DIAGRAM):   END;
441866    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
441867    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
441868    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
441869    +END;
MPRINT(EM_DIAGRAM):   END;
441870    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
441871    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
441872    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
441873    +END;
MPRINT(EM_DIAGRAM):   END;
441874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441875    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
441876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
441877    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
441878    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
441879    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
441880    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
441881    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
441882    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
441883    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
441884    +END;
MPRINT(EM_DIAGRAM):   END;
441885    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
441886    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
441887    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
441888    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
441889     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
441890     quit;
441891     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
441892     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
441893     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
441894     retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
441895     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
441896     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441897     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
441898     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441899     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

441900     proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
441901     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441902     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441903     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
441904     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
441905     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
441906     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441907     proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
441908     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

441909     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
441910     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441911     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441912     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
441913     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
441914     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441915     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441916     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
441917     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
441917   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.

441918     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

441919     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
441920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441921     filename _pref
441921   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
441922     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
441923     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
441924    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
441925    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
441926    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
441927    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
441928    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
441929    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
441930     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
441931     quit;
441932     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
441933     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
441934     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
441935     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
441936     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
441937     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

441938     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
441939     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441940     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441941     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
441942     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441943     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441944     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
441945     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
441946     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
441947     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

441948     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
441949     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

441950     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
441951     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441952     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441953     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
441954     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
441955     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441956     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441957     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
441958     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
441958   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

441959     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

441960     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
441961     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441962     filename _pref
441962   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
441963     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
441964     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
441965    +
441966    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
441967    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
441967   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
441968    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
441969    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
441970    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
441971    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
441972    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
441973     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
441974     quit;
441975     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
441976     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
441977     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
441978     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
441979     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
441980     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441981     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
441982     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441983     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

441984     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
441985     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441986     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441987     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
441988     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
441989     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
441990     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441991     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
441992     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

441993     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
441994     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441995     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

441996     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
441997     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
441998     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
441999     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

442000     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
442001     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
442001   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

442002     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

442003     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
442004     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

442005     filename _pref
442005   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
442006     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
442007     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
442008    +
442009    +
442010    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
442011    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
442012    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
442013    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
442014    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
442015    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
442016    +
442017    +
442018    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
442019    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
442020    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
442021    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
442022    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
442023    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
442024    +
442025    +
442026    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
442027    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
442028    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
442029    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
442030    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
442031    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
442032    +
442033    +
442034    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
442035    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
442036    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
442037    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
442038    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
442039    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
442040    +
442041    +
442042    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
442043    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
442044    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
442045    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
442046    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
442047    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
442048    +
442049    +
442050    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
442051    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
442052    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
442053    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
442054    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
442055    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
442056    +
442057    +
442058    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
442059    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
442060    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
442061    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
442062    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
442063    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
442064    +
442065    +
442066    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
442067    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
442068    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
442069    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
442070    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
442071    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
442072    +if
442073    +_FILTERNORM1 not in ( '.')
442074    + and
442075    +_FILTERNORM2 not in ( '.')
442076    + and
442077    +_FILTERNORM3 not in ( '.')
442078    + and
442079    +_FILTERNORM4 not in ( '.')
442080    + and
442081    +_FILTERNORM5 not in ( '.')
442082    + and
442083    +_FILTERNORM6 not in ( '.')
442084    + and
442085    +_FILTERNORM7 not in ( ' ')
442086    + and
442087    +_FILTERNORM8 not in ( ' ')
442088    +and
442089    +( Dt_Customer ne .)
442090    +and ( Income ne . and (Income<=107000))
442091    +and ( Kidhome ne .)
442092    +and ( MntFishProducts ne .)
442093    +and ( MntFruits ne .)
442094    +and ( MntGoldProds ne .)
442095    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
442096    +and ( MntSweetProducts ne .)
442097    +and ( MntWines ne .)
442098    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
442099    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
442100    +and ( NumStorePurchases ne .)
442101    +and ( NumWebPurchases ne .)
442102    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
442103    +and ( Recency ne .)
442104    +and ( Teenhome ne .)
442105    +and ( Year_Birth ne .)
442106    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
442107    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
442108    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
442109    +end;
MPRINT(EM_DIAGRAM):   end;
442110    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
442111    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
442112     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
442113     quit;
442114     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
442115     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
442116     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
442117     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
442118     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
442119     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

442120     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
442121     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
442122     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

442123     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
442124     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
442125     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

442126     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
442127     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
442128     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
442129     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

442130     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
442131     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

442132     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
442133     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
442134     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

442135     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
442136     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
442137     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
442138     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

442139     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
442140     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
442140   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

442141     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

442142     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
442143     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

442144     %macro varDept(fcmpdata=,id=);
442145     %global nobs&id scoreFlag&id;
442146     %let scoreFlag&id = 0;
442147     %if &id=1 or ^&fcmpStart %then %do;
442148     proc sort data=&fcmpdata out=_temp&id nodupkey;
442149     by NAME;
442150     where id=&id and LHS in( %let j=1;
442151     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
442152     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
442153     "&var" %let j = %eval(&j+1);
442154     %end;
442155     );
442156     run;
442157     %let dsid = %sysfunc(open(_temp&id));
442158     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
442159     %let dsid = %sysfunc(close(&dsid));
442160     %if &&nobs&id %then %do;
442161     %let scoreFlag&id = 1;
442162     %let fcmpStart = 1;
442163     %end;
442164     %else %let fcmpStart = 0;
442165     %end;
442166     %else %do;
442167     proc sort data=&fcmpdata out=_tempid;
442168     where id=&id;
442169     by LHS;
442170     run;
442171     %let dsid = %sysfunc(open(_tempid));
442172     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
442173     %let dsid = %sysfunc(close(&dsid));
442174     %if ^&&nobs&id %then %do;
442175     proc datasets lib=work nolist;
442176     delete _tempid;
442177     run;
442178     quit;
442179     %end;
442180     %else %do;
442181     data _tempAll;
442182     set %let j=%eval(&id-1);
442183     %do x=1 %to &j;
442184     %if &&nobs&x %then %do;
442185     _temp&x %end;
442186     %end;
442187     ;
442188     run;
442189     proc sql;
442190     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
442190   ! work._tempid p2 where p.name=p2.lhs;
442191     quit;
442192     data _temp&id;
442193     set _temp&id;
442194     where LHS ne '' and NAME ne '' and Node ne '';
442195     run;
442196     proc datasets lib=work nolist;
442197     delete _tempAll;
442198     run;
442199     %let dsid = %sysfunc(open(_temp&id));
442200     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
442201     %let dsid = %sysfunc(close(&dsid));
442202     %if ^&&nobs&id %then %do;
442203     proc datasets lib=work nolist;
442204     delete _temp&id;
442205     run;
442206     quit;
442207     %end;
442208     %else %do;
442209     %let scoreFlag&id = 1;
442210     data _temp&id;
442211     set _temp&id;
442212     where LHS ne NAME and node ne '';
442213     run;
442214     %let dsid = %sysfunc(open(_temp&id));
442215     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
442216     %let dsid = %sysfunc(close(&dsid));
442217     %if ^&&nobs&id %then %do;
442218     proc datasets lib=work nolist;
442219     delete _temp&id;
442220     run;
442221     quit;
442222     %end;
442223     %else %do;
442224     proc sort data=_temp&id nodupkey;
442225     by LHS NAME;
442226     run;
442227     %end;
442228     %end;
442229     %end;
442230     %end;
442231     %mend varDept;
442232     %macro optCode(outdata=fcmpdata);
442233     %global fcmpStart;
442234     %let fcmpStart = 0;
442235     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
442236     %let NumNodes=9;
442237     %do k=1 %to &NumNodes;
442238     %vardept(fcmpdata=&outdata, id=&k);
442239     %end;
442240     %mend optCode;
442241     %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 197 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

442242     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
442243     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
442244     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
442245     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

442246     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
442247     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
442248     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
442249     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

442250     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
442251     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
442251   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

442252     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

442253     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
442254     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
442255     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

442256     filename _pref
442256   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
442257     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
442258     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
442259    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
442260    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
442261    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
442262    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
442263    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
442264    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
442265    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
442266    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
442267    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
442268    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
442269    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
442270    +LENGTH _WARN_ $4
442271    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
442272    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
442273    +
442274    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
442275    +
442276    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
442277    +
442278    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
442279    +
442280    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
442281    +
442282    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
442283    +
442284    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
442285    +
442286    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
442287    +
442288    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
442289    +
442290    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
442291    +
442292    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
442293    +
442294    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
442295    +
442296    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
442297    +
442298    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
442299    +
442300    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
442301    +
442302    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
442303    +
442304    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
442305    +
442306    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
442307    +
442308    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
442309    +
442310    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
442311    +
442312    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
442313    +
442314    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
442315    +
442316    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
442317    +
442318    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
442319    +
442320    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
442321    +
442322    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
442323    +
442324    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
442325    +
442326    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
442327    +
442328    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
442329    +
442330    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
442331    +
442332    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
442333    +
442334    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
442335    +
442336    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
442337    +
442338    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
442339    +
442340    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
442341    +
442342    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
442343    +
442344    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
442345    +
442346    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
442347    +
442348    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
442349    +
442350    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
442351    +
442352    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
442353    +
442354    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
442355    +
442356    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
442357    +
442358    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
442359    +
442360    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
442361    +
442362    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
442363    +
442364    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
442365    +
442366    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
442367    +
442368    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
442369    +
442370    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
442371    +
442372    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
442373    +
442374    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
442375    +
442376    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
442377    +
442378    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
442379    +
442380    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
442381    +
442382    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
442383    +
442384    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
442385    +
442386    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
442387    +
442388    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
442389    +
442390    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
442391    +
442392    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
442393    +
442394    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
442395    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
442396    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
442397    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
442398    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
442399    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442400    +end;
MPRINT(EM_DIAGRAM):   end;
442401    +else do;
MPRINT(EM_DIAGRAM):   else do;
442402    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
442403    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
442404    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
442405    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
442406    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
442407    +   end;
MPRINT(EM_DIAGRAM):   end;
442408    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
442409    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
442410    +   end;
MPRINT(EM_DIAGRAM):   end;
442411    +   else do;
MPRINT(EM_DIAGRAM):   else do;
442412    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
442413    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
442414    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442415    +   end;
MPRINT(EM_DIAGRAM):   end;
442416    +end;
MPRINT(EM_DIAGRAM):   end;
442417    +
442418    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
442419    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
442420    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
442421    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
442422    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
442423    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442424    +end;
MPRINT(EM_DIAGRAM):   end;
442425    +else do;
MPRINT(EM_DIAGRAM):   else do;
442426    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
442427    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
442428    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
442429    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
442430    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
442431    +   end;
MPRINT(EM_DIAGRAM):   end;
442432    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
442433    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
442434    +   end;
MPRINT(EM_DIAGRAM):   end;
442435    +   else do;
MPRINT(EM_DIAGRAM):   else do;
442436    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
442437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
442438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442439    +   end;
MPRINT(EM_DIAGRAM):   end;
442440    +end;
MPRINT(EM_DIAGRAM):   end;
442441    +
442442    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
442443    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
442444    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
442445    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
442446    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
442447    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442448    +end;
MPRINT(EM_DIAGRAM):   end;
442449    +else do;
MPRINT(EM_DIAGRAM):   else do;
442450    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
442451    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
442452    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
442453    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
442454    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
442455    +   end;
MPRINT(EM_DIAGRAM):   end;
442456    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
442457    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
442458    +   end;
MPRINT(EM_DIAGRAM):   end;
442459    +   else do;
MPRINT(EM_DIAGRAM):   else do;
442460    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
442461    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
442462    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442463    +   end;
MPRINT(EM_DIAGRAM):   end;
442464    +end;
MPRINT(EM_DIAGRAM):   end;
442465    +
442466    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
442467    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
442468    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
442469    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
442470    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
442471    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442472    +end;
MPRINT(EM_DIAGRAM):   end;
442473    +else do;
MPRINT(EM_DIAGRAM):   else do;
442474    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
442475    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
442476    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
442477    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
442478    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
442479    +   end;
MPRINT(EM_DIAGRAM):   end;
442480    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
442481    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
442482    +   end;
MPRINT(EM_DIAGRAM):   end;
442483    +   else do;
MPRINT(EM_DIAGRAM):   else do;
442484    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
442485    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
442486    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442487    +   end;
MPRINT(EM_DIAGRAM):   end;
442488    +end;
MPRINT(EM_DIAGRAM):   end;
442489    +
442490    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
442491    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
442492    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
442493    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
442494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
442495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442496    +end;
MPRINT(EM_DIAGRAM):   end;
442497    +else do;
MPRINT(EM_DIAGRAM):   else do;
442498    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
442499    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
442500    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
442501    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
442502    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
442503    +   end;
MPRINT(EM_DIAGRAM):   end;
442504    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
442505    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
442506    +   end;
MPRINT(EM_DIAGRAM):   end;
442507    +   else do;
MPRINT(EM_DIAGRAM):   else do;
442508    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
442509    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
442510    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442511    +   end;
MPRINT(EM_DIAGRAM):   end;
442512    +end;
MPRINT(EM_DIAGRAM):   end;
442513    +
442514    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
442515    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
442516    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
442517    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
442518    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
442519    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442520    +end;
MPRINT(EM_DIAGRAM):   end;
442521    +else do;
MPRINT(EM_DIAGRAM):   else do;
442522    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
442523    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
442524    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
442525    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
442526    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
442527    +   end;
MPRINT(EM_DIAGRAM):   end;
442528    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
442529    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
442530    +   end;
MPRINT(EM_DIAGRAM):   end;
442531    +   else do;
MPRINT(EM_DIAGRAM):   else do;
442532    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
442533    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
442534    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442535    +   end;
MPRINT(EM_DIAGRAM):   end;
442536    +end;
MPRINT(EM_DIAGRAM):   end;
442537    +
442538    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
442539    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
442540    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
442541    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
442542    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
442543    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442544    +end;
MPRINT(EM_DIAGRAM):   end;
442545    +else do;
MPRINT(EM_DIAGRAM):   else do;
442546    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
442547    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
442548    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
442549    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
442550    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
442551    +   end;
MPRINT(EM_DIAGRAM):   end;
442552    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
442553    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
442554    +   end;
MPRINT(EM_DIAGRAM):   end;
442555    +   else do;
MPRINT(EM_DIAGRAM):   else do;
442556    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
442557    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
442558    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442559    +   end;
MPRINT(EM_DIAGRAM):   end;
442560    +end;
MPRINT(EM_DIAGRAM):   end;
442561    +
442562    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
442563    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
442564    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
442565    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
442566    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
442567    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
442568    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
442569    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
442570    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
442571    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
442572    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
442573    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
442574    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
442575    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442576    +end;
MPRINT(EM_DIAGRAM):   end;
442577    +else do;
MPRINT(EM_DIAGRAM):   else do;
442578    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
442579    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
442580    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
442581    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
442582    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
442583    +   end;
MPRINT(EM_DIAGRAM):   end;
442584    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
442585    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
442586    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
442587    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
442588    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
442589    +   end;
MPRINT(EM_DIAGRAM):   end;
442590    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
442591    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
442592    +   end;
MPRINT(EM_DIAGRAM):   end;
442593    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
442594    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
442595    +   end;
MPRINT(EM_DIAGRAM):   end;
442596    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
442597    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
442598    +   end;
MPRINT(EM_DIAGRAM):   end;
442599    +   else do;
MPRINT(EM_DIAGRAM):   else do;
442600    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
442601    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
442602    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
442603    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
442604    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
442605    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442606    +   end;
MPRINT(EM_DIAGRAM):   end;
442607    +end;
MPRINT(EM_DIAGRAM):   end;
442608    +
442609    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
442610    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
442611    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
442612    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
442613    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
442614    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
442615    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
442616    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
442617    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
442618    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
442619    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
442620    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
442621    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
442622    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
442623    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442624    +end;
MPRINT(EM_DIAGRAM):   end;
442625    +else do;
MPRINT(EM_DIAGRAM):   else do;
442626    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
442627    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
442628    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
442629    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
442630    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
442631    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
442632    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
442633    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
442634    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
442635    +         end;
MPRINT(EM_DIAGRAM):   end;
442636    +         else do;
MPRINT(EM_DIAGRAM):   else do;
442637    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
442638    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
442639    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
442640    +            end;
MPRINT(EM_DIAGRAM):   end;
442641    +         end;
MPRINT(EM_DIAGRAM):   end;
442642    +      end;
MPRINT(EM_DIAGRAM):   end;
442643    +      else do;
MPRINT(EM_DIAGRAM):   else do;
442644    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
442645    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
442646    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
442647    +         end;
MPRINT(EM_DIAGRAM):   end;
442648    +      end;
MPRINT(EM_DIAGRAM):   end;
442649    +   end;
MPRINT(EM_DIAGRAM):   end;
442650    +   else do;
MPRINT(EM_DIAGRAM):   else do;
442651    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
442652    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
442653    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
442654    +      end;
MPRINT(EM_DIAGRAM):   end;
442655    +      else do;
MPRINT(EM_DIAGRAM):   else do;
442656    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
442657    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
442658    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
442659    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
442660    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
442661    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
442662    +         end;
MPRINT(EM_DIAGRAM):   end;
442663    +      end;
MPRINT(EM_DIAGRAM):   end;
442664    +   end;
MPRINT(EM_DIAGRAM):   end;
442665    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
442666    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
442667    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
442668    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
442669    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
442670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
442671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442672    +   end;
MPRINT(EM_DIAGRAM):   end;
442673    +end;
MPRINT(EM_DIAGRAM):   end;
442674    +
442675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
442676    +*** Checking missing input Interval
442677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
442678    +
442679    +IF NMISS(
442680    +   AcceptedCmpTotal ,
442681    +   Age ,
442682    +   Frq ,
442683    +   Income ,
442684    +   Kidhome ,
442685    +   Mnt ,
442686    +   MntFishProducts ,
442687    +   MntFruits ,
442688    +   MntGoldProds ,
442689    +   MntMeatProducts ,
442690    +   MntSweetProducts ,
442691    +   MntWines ,
442692    +   MonthsAsCustomer ,
442693    +   NumCatalogPurchases ,
442694    +   NumDealsPurchases ,
442695    +   NumDistPurchases ,
442696    +   NumStorePurchases ,
442697    +   NumWebPurchases ,
442698    +   NumWebVisitsMonth ,
442699    +   RFMstat ,
442700    +   RMntFrq ,
442701    +   Recency ,
442702    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
442703    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
442704    +
442705    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
442706    +END;
MPRINT(EM_DIAGRAM):   END;
442707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
442708    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
442709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
442710    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
442711    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
442712    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
442713    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
442714    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
442715    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
442716    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
442717    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
442718    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
442719    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
442720    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
442721    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
442722    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
442723    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
442724    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
442725    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
442726    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
442727    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
442728    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
442729    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
442730    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
442731    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
442732    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
442733    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
442734    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
442735    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
442736    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
442737    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
442738    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
442739    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
442740    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
442741    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
442742    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
442743    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
442744    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
442745    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
442746    +END;
MPRINT(EM_DIAGRAM):   END;
442747    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
442748    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
442749    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
442750    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
442751    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
442752    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
442753    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
442754    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
442755    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
442756    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
442757    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
442758    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
442759    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
442760    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
442761    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
442762    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
442763    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
442764    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
442765    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
442766    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
442767    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
442768    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
442769    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
442770    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
442771    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
442772    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
442773    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
442774    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
442775    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
442776    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
442777    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
442778    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
442779    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
442780    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
442781    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
442782    +   ELSE S_NumCatalogPurchases
442783    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
442784    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
442785    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
442786    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
442787    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
442788    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
442789    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
442790    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
442791    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
442792    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
442793    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
442794    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
442795    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
442796    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
442797    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
442798    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
442799    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
442800    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
442801    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
442802    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
442803    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
442804    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
442805    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
442806    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
442807    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
442808    +END;
MPRINT(EM_DIAGRAM):   END;
442809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
442810    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
442811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
442812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
442813    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
442814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
442815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
442816    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
442817    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
442818    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
442819    +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
442820    +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
442821    +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
442822    +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
442823    +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
442824    +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
442825    +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
442826    +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
442827    +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
442828    +          +     0.89422627895323 * S_NumDealsPurchases
442829    +          +    -0.13304125929765 * S_NumDistPurchases
442830    +          +    -1.04568442570811 * S_NumStorePurchases
442831    +          +    -0.28677765126751 * S_NumWebPurchases
442832    +          +      1.2327638737509 * S_NumWebVisitsMonth
442833    +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
442834    +        S_RMntFrq  +    -0.86930969765816 * S_Recency
442835    +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
442836    +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
442837    +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
442838    +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
442839    +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
442840    +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
442841    +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
442842    +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
442843    +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
442844    +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
442845    +          +     0.04224590196535 * S_NumDealsPurchases
442846    +          +     0.76554742700113 * S_NumDistPurchases
442847    +          +    -0.49155496870812 * S_NumStorePurchases
442848    +          +     0.59606812744403 * S_NumWebPurchases
442849    +          +     1.86809286276405 * S_NumWebVisitsMonth
442850    +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
442851    +        S_RMntFrq  +    -2.09222283465666 * S_Recency
442852    +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
442853    +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
442854    +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
442855    +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
442856    +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
442857    +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
442858    +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
442859    +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
442860    +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
442861    +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
442862    +          +    -0.04866536993486 * S_NumDealsPurchases
442863    +          +    -0.53535979020214 * S_NumDistPurchases
442864    +          +     2.20634071253676 * S_NumStorePurchases
442865    +          +      0.6164564989007 * S_NumWebPurchases
442866    +          +    -0.43396314395263 * S_NumWebVisitsMonth
442867    +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
442868    +        S_RMntFrq  +     2.37293441098349 * S_Recency
442869    +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
442870    +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
442871    +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
442872    +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
442873    +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
442874    +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
442875    +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
442876    +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
442877    +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
442878    +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
442879    +          +     1.37461255707863 * S_NumDealsPurchases
442880    +          +    -0.17684775000818 * S_NumDistPurchases
442881    +          +    -0.62755623855535 * S_NumStorePurchases
442882    +          +    -1.46551649022657 * S_NumWebPurchases
442883    +          +     3.35784247878638 * S_NumWebVisitsMonth
442884    +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
442885    +        S_RMntFrq  +    -2.61971612923471 * S_Recency
442886    +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
442887    +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
442888    +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
442889    +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
442890    +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
442891    +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
442892    +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
442893    +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
442894    +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
442895    +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
442896    +          +    -0.76256677907121 * S_NumDealsPurchases
442897    +          +    -0.31591571751692 * S_NumDistPurchases
442898    +          +      0.0506832614089 * S_NumStorePurchases
442899    +          +      1.4636796923764 * S_NumWebPurchases
442900    +          +     0.37743519705036 * S_NumWebVisitsMonth
442901    +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
442902    +        S_RMntFrq  +     0.16854775832723 * S_Recency
442903    +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
442904    +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
442905    +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
442906    +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
442907    +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
442908    +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
442909    +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
442910    +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
442911    +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
442912    +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
442913    +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
442914    +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
442915    +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
442916    +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
442917    +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
442918    +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
442919    +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
442920    +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
442921    +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
442922    +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
442923    +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
442924    +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
442925    +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
442926    +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
442927    +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
442928    +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
442929    +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
442930    +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
442931    +        EducationGraduation  +    -0.37141290775302 * EducationMaster
442932    +          +     0.68641668264565 * Marital_StatusDivorced
442933    +          +    -0.81586871439732 * Marital_StatusMarried
442934    +          +     0.63758920518451 * Marital_StatusSingle
442935    +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
442936    +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
442937    +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
442938    +        EducationGraduation  +     -0.4412391934844 * EducationMaster
442939    +          +     0.05137560133238 * Marital_StatusDivorced
442940    +          +    -2.24401993266209 * Marital_StatusMarried
442941    +          +     1.57359386216115 * Marital_StatusSingle
442942    +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
442943    +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
442944    +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
442945    +        EducationGraduation  +     0.61492669859334 * EducationMaster
442946    +          +     -1.0649987815942 * Marital_StatusDivorced
442947    +          +     0.76065111692388 * Marital_StatusMarried
442948    +          +    -0.21694149754801 * Marital_StatusSingle
442949    +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
442950    +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
442951    +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
442952    +        EducationGraduation  +     0.04208620358211 * EducationMaster
442953    +          +     2.02155453548328 * Marital_StatusDivorced
442954    +          +    -2.60190649735306 * Marital_StatusMarried
442955    +          +     1.09149388354927 * Marital_StatusSingle
442956    +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
442957    +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
442958    +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
442959    +        EducationGraduation  +    -0.60853091001689 * EducationMaster
442960    +          +     0.66315970650309 * Marital_StatusDivorced
442961    +          +    -1.20476729758152 * Marital_StatusMarried
442962    +          +     0.56175027826397 * Marital_StatusSingle
442963    +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
442964    +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
442965    +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
442966    +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
442967    +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
442968    +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
442969    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
442970    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
442971    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
442972    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
442973    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
442974    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
442975    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
442976    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
442977    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
442978    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
442979    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
442980    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
442981    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
442982    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
442983    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
442984    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
442985    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
442986    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
442987    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
442988    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
442989    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
442990    +END;
MPRINT(EM_DIAGRAM):   END;
442991    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
442992    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
442993    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
442994    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
442995    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
442996    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
442997    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
442998    +END;
MPRINT(EM_DIAGRAM):   END;
442999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443000    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
443001    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443002    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
443003    +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
443004    +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
443005    +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
443006    +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
443007    +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
443008    +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
443009    +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
443010    +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
443011    +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
443012    +          +     1.50005927423985 * S_NumDealsPurchases
443013    +          +      0.5590536933569 * S_NumDistPurchases
443014    +          +    -0.61757824339318 * S_NumStorePurchases
443015    +          +     0.37259686538158 * S_NumWebPurchases
443016    +          +     2.59725437895564 * S_NumWebVisitsMonth
443017    +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
443018    +        S_RMntFrq  +    -2.38795796980324 * S_Recency
443019    +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
443020    +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
443021    +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
443022    +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
443023    +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
443024    +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
443025    +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
443026    +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
443027    +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
443028    +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
443029    +          +    -0.09282222088797 * S_NumDealsPurchases
443030    +          +     0.10726247938321 * S_NumDistPurchases
443031    +          +     -1.1235971458527 * S_NumStorePurchases
443032    +          +    -0.78304387839877 * S_NumWebPurchases
443033    +          +    -0.44139243179956 * S_NumWebVisitsMonth
443034    +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
443035    +        S_RMntFrq  +     2.19072220135069 * S_Recency
443036    +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
443037    +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
443038    +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
443039    +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
443040    +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
443041    +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
443042    +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
443043    +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
443044    +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
443045    +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
443046    +          +     0.35349185459988 * S_NumDealsPurchases
443047    +          +     0.06853677714859 * S_NumDistPurchases
443048    +          +    -1.47546012999338 * S_NumStorePurchases
443049    +          +     0.20926435398916 * S_NumWebPurchases
443050    +          +    -1.00535683639093 * S_NumWebVisitsMonth
443051    +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
443052    +        S_RMntFrq  +    -1.59138379954757 * S_Recency
443053    +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
443054    +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
443055    +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
443056    +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
443057    +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
443058    +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
443059    +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
443060    +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
443061    +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
443062    +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
443063    +          +      0.3873586120272 * S_NumDealsPurchases
443064    +          +     0.25911651157596 * S_NumDistPurchases
443065    +          +     1.58922489084287 * S_NumStorePurchases
443066    +          +     0.49041797743368 * S_NumWebPurchases
443067    +          +     -1.5425586871929 * S_NumWebVisitsMonth
443068    +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
443069    +        S_RMntFrq  +     1.03099569333498 * S_Recency
443070    +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
443071    +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
443072    +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
443073    +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
443074    +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
443075    +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
443076    +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
443077    +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
443078    +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
443079    +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
443080    +          +    -0.60830880287865 * S_NumDealsPurchases
443081    +          +      0.0745331267194 * S_NumDistPurchases
443082    +          +    -1.39472448256952 * S_NumStorePurchases
443083    +          +     1.95372179969087 * S_NumWebPurchases
443084    +          +    -0.63307356390404 * S_NumWebVisitsMonth
443085    +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
443086    +        S_RMntFrq  +    -0.29197897313114 * S_Recency
443087    +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
443088    +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
443089    +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
443090    +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
443091    +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
443092    +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
443093    +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
443094    +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
443095    +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
443096    +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
443097    +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
443098    +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
443099    +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
443100    +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
443101    +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
443102    +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
443103    +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
443104    +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
443105    +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
443106    +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
443107    +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
443108    +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
443109    +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
443110    +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
443111    +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
443112    +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
443113    +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
443114    +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
443115    +        EducationGraduation  +    -1.16900224373137 * EducationMaster
443116    +          +    -1.33377871643323 * Marital_StatusDivorced
443117    +          +    -0.87184228840898 * Marital_StatusMarried
443118    +          +     1.41223186340257 * Marital_StatusSingle
443119    +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
443120    +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
443121    +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
443122    +        EducationGraduation  +     0.38341272155343 * EducationMaster
443123    +          +    -0.21479890935233 * Marital_StatusDivorced
443124    +          +     -0.0025459519579 * Marital_StatusMarried
443125    +          +     1.33900491702264 * Marital_StatusSingle
443126    +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
443127    +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
443128    +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
443129    +        EducationGraduation  +     0.60739269725685 * EducationMaster
443130    +          +    -0.38307267471999 * Marital_StatusDivorced
443131    +          +     0.97088969451415 * Marital_StatusMarried
443132    +          +    -0.28578224473381 * Marital_StatusSingle
443133    +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
443134    +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
443135    +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
443136    +        EducationGraduation  +     0.14160673378252 * EducationMaster
443137    +          +    -1.42229401093569 * Marital_StatusDivorced
443138    +          +      0.7234508382397 * Marital_StatusMarried
443139    +          +    -0.29062202974628 * Marital_StatusSingle
443140    +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
443141    +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
443142    +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
443143    +        EducationGraduation  +     -0.7118631990538 * EducationMaster
443144    +          +    -0.99067637207205 * Marital_StatusDivorced
443145    +          +    -0.50245902142079 * Marital_StatusMarried
443146    +          +     0.54214494533793 * Marital_StatusSingle
443147    +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
443148    +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
443149    +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
443150    +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
443151    +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
443152    +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
443153    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
443154    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
443155    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
443156    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
443157    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
443158    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
443159    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
443160    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
443161    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
443162    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
443163    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
443164    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
443165    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
443166    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
443167    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
443168    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
443169    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
443170    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
443171    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
443172    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
443173    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
443174    +END;
MPRINT(EM_DIAGRAM):   END;
443175    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
443176    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
443177    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
443178    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
443179    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
443180    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
443181    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
443182    +END;
MPRINT(EM_DIAGRAM):   END;
443183    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443184    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
443185    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443186    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
443187    +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
443188    +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
443189    +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
443190    +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
443191    +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
443192    +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
443193    +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
443194    +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
443195    +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
443196    +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
443197    +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
443198    +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
443199    +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
443200    +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
443201    +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
443202    +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
443203    +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
443204    +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
443205    +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
443206    +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
443207    +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
443208    +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
443209    +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
443210    +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
443211    +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
443212    +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
443213    +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
443214    +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
443215    +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
443216    +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
443217    +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
443218    +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
443219    +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
443220    +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
443221    +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
443222    +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
443223    +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
443224    +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
443225    +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
443226    +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
443227    +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
443228    +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
443229    +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
443230    +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
443231    +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
443232    +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
443233    +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
443234    +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
443235    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
443236    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
443237    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
443238    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
443239    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
443240    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
443241    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
443242    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
443243    +END;
MPRINT(EM_DIAGRAM):   END;
443244    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
443245    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
443246    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
443247    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
443248    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
443249    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
443250    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
443251    +END;
MPRINT(EM_DIAGRAM):   END;
443252    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443253    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
443254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443255    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
443256    +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
443257    +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
443258    +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
443259    +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
443260    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
443261    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
443262    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
443263    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
443264    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
443265    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
443266    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
443267    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
443268    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
443269    +END;
MPRINT(EM_DIAGRAM):   END;
443270    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
443271    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
443272    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
443273    +END;
MPRINT(EM_DIAGRAM):   END;
443274    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
443275    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
443276    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
443277    +END;
MPRINT(EM_DIAGRAM):   END;
443278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443279    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
443280    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443281    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
443282    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
443283    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
443284    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
443285    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
443286    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
443287    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
443288    +END;
MPRINT(EM_DIAGRAM):   END;
443289    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
443290    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
443291    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
443292    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
443293     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
443294     quit;
443295     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
443296     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
443297     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
443298     retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
443299     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
443300     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

443301     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
443302     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443303     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443304     proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
443305     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443306     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443307     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
443308     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
443309     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
443310     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443311     proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
443312     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

443313     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
443314     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443315     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443316     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
443317     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
443318     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443319     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443320     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
443321     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
443321   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

443322     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

443323     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
443324     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443325     filename _pref
443325   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
443326     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
443327     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
443328    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
443329    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
443330    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
443331    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
443332    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
443333    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
443334     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
443335     quit;
443336     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
443337     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
443338     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
443339     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
443340     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
443341     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443342     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
443343     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443344     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

443345     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
443346     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443347     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443348     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
443349     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
443350     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
443351     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443352     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
443353     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

443354     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
443355     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443356     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443357     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
443358     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
443359     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443360     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443361     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
443362     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
443362   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

443363     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443364     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
443365     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443366     filename _pref
443366   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
443367     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
443368     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
443369    +
443370    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
443371    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
443371   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
443372    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
443373    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
443374    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
443375    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
443376    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
443377     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
443378     quit;
443379     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
443380     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
443381     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
443382     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
443383     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
443384     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443385     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
443386     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443387     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

443388     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
443389     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443390     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443391     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
443392     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
443393     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
443394     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443395     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
443396     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443397     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
443398     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443399     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443400     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
443401     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
443402     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443403     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

443404     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
443405     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
443405   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

443406     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443407     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
443408     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443409     filename _pref
443409   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
443410     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
443411     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
443412    +
443413    +
443414    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
443415    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
443416    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
443417    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
443418    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
443419    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
443420    +
443421    +
443422    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
443423    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
443424    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
443425    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
443426    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
443427    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
443428    +
443429    +
443430    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
443431    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
443432    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
443433    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
443434    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
443435    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
443436    +
443437    +
443438    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
443439    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
443440    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
443441    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
443442    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
443443    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
443444    +
443445    +
443446    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
443447    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
443448    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
443449    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
443450    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
443451    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
443452    +
443453    +
443454    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
443455    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
443456    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
443457    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
443458    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
443459    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
443460    +
443461    +
443462    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
443463    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
443464    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
443465    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
443466    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
443467    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
443468    +
443469    +
443470    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
443471    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
443472    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
443473    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
443474    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
443475    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
443476    +if
443477    +_FILTERNORM1 not in ( '.')
443478    + and
443479    +_FILTERNORM2 not in ( '.')
443480    + and
443481    +_FILTERNORM3 not in ( '.')
443482    + and
443483    +_FILTERNORM4 not in ( '.')
443484    + and
443485    +_FILTERNORM5 not in ( '.')
443486    + and
443487    +_FILTERNORM6 not in ( '.')
443488    + and
443489    +_FILTERNORM7 not in ( ' ')
443490    + and
443491    +_FILTERNORM8 not in ( ' ')
443492    +and
443493    +( Dt_Customer ne .)
443494    +and ( Income ne . and (Income<=107000))
443495    +and ( Kidhome ne .)
443496    +and ( MntFishProducts ne .)
443497    +and ( MntFruits ne .)
443498    +and ( MntGoldProds ne .)
443499    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
443500    +and ( MntSweetProducts ne .)
443501    +and ( MntWines ne .)
443502    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
443503    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
443504    +and ( NumStorePurchases ne .)
443505    +and ( NumWebPurchases ne .)
443506    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
443507    +and ( Recency ne .)
443508    +and ( Teenhome ne .)
443509    +and ( Year_Birth ne .)
443510    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
443511    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
443512    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
443513    +end;
MPRINT(EM_DIAGRAM):   end;
443514    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
443515    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
443516     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
443517     quit;
443518     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
443519     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
443520     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
443521     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
443522     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
443523     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443524     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
443525     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443526     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443527     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
443528     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443529     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443530     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
443531     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
443532     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
443533     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443534     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
443535     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

443536     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
443537     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443538     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443539     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
443540     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
443541     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
443542     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

443543     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
443544     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
443544   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

443545     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443546     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
443547     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443548     %macro varDept(fcmpdata=,id=);
443549     %global nobs&id scoreFlag&id;
443550     %let scoreFlag&id = 0;
443551     %if &id=1 or ^&fcmpStart %then %do;
443552     proc sort data=&fcmpdata out=_temp&id nodupkey;
443553     by NAME;
443554     where id=&id and LHS in( %let j=1;
443555     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
443556     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
443557     "&var" %let j = %eval(&j+1);
443558     %end;
443559     );
443560     run;
443561     %let dsid = %sysfunc(open(_temp&id));
443562     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
443563     %let dsid = %sysfunc(close(&dsid));
443564     %if &&nobs&id %then %do;
443565     %let scoreFlag&id = 1;
443566     %let fcmpStart = 1;
443567     %end;
443568     %else %let fcmpStart = 0;
443569     %end;
443570     %else %do;
443571     proc sort data=&fcmpdata out=_tempid;
443572     where id=&id;
443573     by LHS;
443574     run;
443575     %let dsid = %sysfunc(open(_tempid));
443576     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
443577     %let dsid = %sysfunc(close(&dsid));
443578     %if ^&&nobs&id %then %do;
443579     proc datasets lib=work nolist;
443580     delete _tempid;
443581     run;
443582     quit;
443583     %end;
443584     %else %do;
443585     data _tempAll;
443586     set %let j=%eval(&id-1);
443587     %do x=1 %to &j;
443588     %if &&nobs&x %then %do;
443589     _temp&x %end;
443590     %end;
443591     ;
443592     run;
443593     proc sql;
443594     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
443594   ! work._tempid p2 where p.name=p2.lhs;
443595     quit;
443596     data _temp&id;
443597     set _temp&id;
443598     where LHS ne '' and NAME ne '' and Node ne '';
443599     run;
443600     proc datasets lib=work nolist;
443601     delete _tempAll;
443602     run;
443603     %let dsid = %sysfunc(open(_temp&id));
443604     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
443605     %let dsid = %sysfunc(close(&dsid));
443606     %if ^&&nobs&id %then %do;
443607     proc datasets lib=work nolist;
443608     delete _temp&id;
443609     run;
443610     quit;
443611     %end;
443612     %else %do;
443613     %let scoreFlag&id = 1;
443614     data _temp&id;
443615     set _temp&id;
443616     where LHS ne NAME and node ne '';
443617     run;
443618     %let dsid = %sysfunc(open(_temp&id));
443619     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
443620     %let dsid = %sysfunc(close(&dsid));
443621     %if ^&&nobs&id %then %do;
443622     proc datasets lib=work nolist;
443623     delete _temp&id;
443624     run;
443625     quit;
443626     %end;
443627     %else %do;
443628     proc sort data=_temp&id nodupkey;
443629     by LHS NAME;
443630     run;
443631     %end;
443632     %end;
443633     %end;
443634     %end;
443635     %mend varDept;
443636     %macro optCode(outdata=fcmpdata);
443637     %global fcmpStart;
443638     %let fcmpStart = 0;
443639     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
443640     %let NumNodes=9;
443641     %do k=1 %to &NumNodes;
443642     %vardept(fcmpdata=&outdata, id=&k);
443643     %end;
443644     %mend optCode;
443645     %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

443646     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
443647     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
443648     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
443649     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443650     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
443651     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
443652     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
443653     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

443654     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
443655     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
443655   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

443656     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443657     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
443658     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
443659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

443660     filename _pref
443660   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
443661     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
443662     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
443663    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
443664    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
443665    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
443666    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
443667    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
443668    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
443669    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
443670    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
443671    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
443672    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
443673    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
443674    +LENGTH _WARN_ $4
443675    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
443676    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
443677    +
443678    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
443679    +
443680    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
443681    +
443682    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
443683    +
443684    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
443685    +
443686    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
443687    +
443688    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
443689    +
443690    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
443691    +
443692    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
443693    +
443694    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
443695    +
443696    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
443697    +
443698    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
443699    +
443700    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
443701    +
443702    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
443703    +
443704    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
443705    +
443706    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
443707    +
443708    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
443709    +
443710    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
443711    +
443712    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
443713    +
443714    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
443715    +
443716    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
443717    +
443718    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
443719    +
443720    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
443721    +
443722    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
443723    +
443724    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
443725    +
443726    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
443727    +
443728    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
443729    +
443730    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
443731    +
443732    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
443733    +
443734    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
443735    +
443736    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
443737    +
443738    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
443739    +
443740    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
443741    +
443742    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
443743    +
443744    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
443745    +
443746    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
443747    +
443748    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
443749    +
443750    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
443751    +
443752    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
443753    +
443754    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
443755    +
443756    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
443757    +
443758    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
443759    +
443760    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
443761    +
443762    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
443763    +
443764    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
443765    +
443766    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
443767    +
443768    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
443769    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
443770    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
443771    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
443772    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443773    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443774    +end;
MPRINT(EM_DIAGRAM):   end;
443775    +else do;
MPRINT(EM_DIAGRAM):   else do;
443776    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443777    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
443778    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443779    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443780    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
443781    +   end;
MPRINT(EM_DIAGRAM):   end;
443782    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443783    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
443784    +   end;
MPRINT(EM_DIAGRAM):   end;
443785    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443786    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
443787    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443788    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443789    +   end;
MPRINT(EM_DIAGRAM):   end;
443790    +end;
MPRINT(EM_DIAGRAM):   end;
443791    +
443792    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
443793    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
443794    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
443795    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
443796    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443797    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443798    +end;
MPRINT(EM_DIAGRAM):   end;
443799    +else do;
MPRINT(EM_DIAGRAM):   else do;
443800    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443801    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
443802    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443803    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443804    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
443805    +   end;
MPRINT(EM_DIAGRAM):   end;
443806    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443807    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
443808    +   end;
MPRINT(EM_DIAGRAM):   end;
443809    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443810    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
443811    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443812    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443813    +   end;
MPRINT(EM_DIAGRAM):   end;
443814    +end;
MPRINT(EM_DIAGRAM):   end;
443815    +
443816    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
443817    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
443818    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
443819    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
443820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443822    +end;
MPRINT(EM_DIAGRAM):   end;
443823    +else do;
MPRINT(EM_DIAGRAM):   else do;
443824    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443825    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
443826    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443827    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443828    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
443829    +   end;
MPRINT(EM_DIAGRAM):   end;
443830    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443831    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
443832    +   end;
MPRINT(EM_DIAGRAM):   end;
443833    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443834    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
443835    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443836    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443837    +   end;
MPRINT(EM_DIAGRAM):   end;
443838    +end;
MPRINT(EM_DIAGRAM):   end;
443839    +
443840    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
443841    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
443842    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
443843    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
443844    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443845    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443846    +end;
MPRINT(EM_DIAGRAM):   end;
443847    +else do;
MPRINT(EM_DIAGRAM):   else do;
443848    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443849    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
443850    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443851    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443852    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
443853    +   end;
MPRINT(EM_DIAGRAM):   end;
443854    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443855    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
443856    +   end;
MPRINT(EM_DIAGRAM):   end;
443857    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443858    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
443859    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443860    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443861    +   end;
MPRINT(EM_DIAGRAM):   end;
443862    +end;
MPRINT(EM_DIAGRAM):   end;
443863    +
443864    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
443865    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
443866    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
443867    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
443868    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443869    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443870    +end;
MPRINT(EM_DIAGRAM):   end;
443871    +else do;
MPRINT(EM_DIAGRAM):   else do;
443872    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443873    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
443874    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443875    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443876    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
443877    +   end;
MPRINT(EM_DIAGRAM):   end;
443878    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443879    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
443880    +   end;
MPRINT(EM_DIAGRAM):   end;
443881    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443882    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
443883    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443884    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443885    +   end;
MPRINT(EM_DIAGRAM):   end;
443886    +end;
MPRINT(EM_DIAGRAM):   end;
443887    +
443888    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
443889    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
443890    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
443891    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
443892    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443893    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443894    +end;
MPRINT(EM_DIAGRAM):   end;
443895    +else do;
MPRINT(EM_DIAGRAM):   else do;
443896    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443897    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
443898    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443899    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443900    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
443901    +   end;
MPRINT(EM_DIAGRAM):   end;
443902    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443903    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
443904    +   end;
MPRINT(EM_DIAGRAM):   end;
443905    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443906    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
443907    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443908    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443909    +   end;
MPRINT(EM_DIAGRAM):   end;
443910    +end;
MPRINT(EM_DIAGRAM):   end;
443911    +
443912    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
443913    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
443914    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
443915    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
443916    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443917    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443918    +end;
MPRINT(EM_DIAGRAM):   end;
443919    +else do;
MPRINT(EM_DIAGRAM):   else do;
443920    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443921    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
443922    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443923    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
443924    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
443925    +   end;
MPRINT(EM_DIAGRAM):   end;
443926    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
443927    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
443928    +   end;
MPRINT(EM_DIAGRAM):   end;
443929    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443930    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
443931    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443932    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443933    +   end;
MPRINT(EM_DIAGRAM):   end;
443934    +end;
MPRINT(EM_DIAGRAM):   end;
443935    +
443936    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
443937    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
443938    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
443939    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
443940    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
443941    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
443942    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
443943    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
443944    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
443945    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
443946    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
443947    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
443948    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443949    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443950    +end;
MPRINT(EM_DIAGRAM):   end;
443951    +else do;
MPRINT(EM_DIAGRAM):   else do;
443952    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
443953    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
443954    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443955    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
443956    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
443957    +   end;
MPRINT(EM_DIAGRAM):   end;
443958    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
443959    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
443960    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
443961    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
443962    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
443963    +   end;
MPRINT(EM_DIAGRAM):   end;
443964    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
443965    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
443966    +   end;
MPRINT(EM_DIAGRAM):   end;
443967    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
443968    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
443969    +   end;
MPRINT(EM_DIAGRAM):   end;
443970    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
443971    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
443972    +   end;
MPRINT(EM_DIAGRAM):   end;
443973    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443974    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
443975    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
443976    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
443977    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
443978    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443979    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443980    +   end;
MPRINT(EM_DIAGRAM):   end;
443981    +end;
MPRINT(EM_DIAGRAM):   end;
443982    +
443983    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
443984    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
443985    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
443986    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
443987    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
443988    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
443989    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
443990    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
443991    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
443992    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
443993    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
443994    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
443995    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
443996    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443998    +end;
MPRINT(EM_DIAGRAM):   end;
443999    +else do;
MPRINT(EM_DIAGRAM):   else do;
444000    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
444001    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
444002    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444003    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
444004    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
444005    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
444006    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
444007    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
444008    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
444009    +         end;
MPRINT(EM_DIAGRAM):   end;
444010    +         else do;
MPRINT(EM_DIAGRAM):   else do;
444011    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
444012    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
444013    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
444014    +            end;
MPRINT(EM_DIAGRAM):   end;
444015    +         end;
MPRINT(EM_DIAGRAM):   end;
444016    +      end;
MPRINT(EM_DIAGRAM):   end;
444017    +      else do;
MPRINT(EM_DIAGRAM):   else do;
444018    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
444019    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
444020    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
444021    +         end;
MPRINT(EM_DIAGRAM):   end;
444022    +      end;
MPRINT(EM_DIAGRAM):   end;
444023    +   end;
MPRINT(EM_DIAGRAM):   end;
444024    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444025    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
444026    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
444027    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
444028    +      end;
MPRINT(EM_DIAGRAM):   end;
444029    +      else do;
MPRINT(EM_DIAGRAM):   else do;
444030    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
444031    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
444032    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
444033    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
444034    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
444035    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
444036    +         end;
MPRINT(EM_DIAGRAM):   end;
444037    +      end;
MPRINT(EM_DIAGRAM):   end;
444038    +   end;
MPRINT(EM_DIAGRAM):   end;
444039    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
444040    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
444041    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
444042    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
444043    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
444044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444046    +   end;
MPRINT(EM_DIAGRAM):   end;
444047    +end;
MPRINT(EM_DIAGRAM):   end;
444048    +
444049    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444050    +*** Checking missing input Interval
444051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
444052    +
444053    +IF NMISS(
444054    +   AcceptedCmpTotal ,
444055    +   Age ,
444056    +   Frq ,
444057    +   Income ,
444058    +   Kidhome ,
444059    +   Mnt ,
444060    +   MntFishProducts ,
444061    +   MntFruits ,
444062    +   MntGoldProds ,
444063    +   MntMeatProducts ,
444064    +   MntSweetProducts ,
444065    +   MntWines ,
444066    +   MonthsAsCustomer ,
444067    +   NumCatalogPurchases ,
444068    +   NumDealsPurchases ,
444069    +   NumDistPurchases ,
444070    +   NumStorePurchases ,
444071    +   NumWebPurchases ,
444072    +   NumWebVisitsMonth ,
444073    +   RFMstat ,
444074    +   RMntFrq ,
444075    +   Recency ,
444076    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
444077    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
444078    +
444079    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444080    +END;
MPRINT(EM_DIAGRAM):   END;
444081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444082    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
444083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444084    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
444085    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
444086    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
444087    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
444088    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
444089    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
444090    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
444091    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
444092    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
444093    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
444094    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
444095    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
444096    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
444097    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
444098    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
444099    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
444100    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
444101    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
444102    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
444103    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
444104    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
444105    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
444106    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
444107    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
444108    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
444109    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
444110    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
444111    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
444112    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
444113    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
444114    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
444115    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
444116    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
444117    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
444118    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
444119    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
444120    +END;
MPRINT(EM_DIAGRAM):   END;
444121    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
444122    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
444123    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
444124    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
444125    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
444126    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
444127    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
444128    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
444129    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
444130    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
444131    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
444132    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
444133    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
444134    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
444135    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
444136    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
444137    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
444138    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
444139    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
444140    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
444141    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
444142    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
444143    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
444144    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
444145    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
444146    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
444147    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
444148    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
444149    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
444150    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
444151    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
444152    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
444153    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
444154    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
444155    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
444156    +   ELSE S_NumCatalogPurchases
444157    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
444158    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
444159    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
444160    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
444161    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
444162    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
444163    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
444164    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
444165    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
444166    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
444167    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
444168    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
444169    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
444170    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
444171    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
444172    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
444173    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
444174    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
444175    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
444176    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
444177    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
444178    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
444179    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
444180    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
444181    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
444182    +END;
MPRINT(EM_DIAGRAM):   END;
444183    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444184    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
444185    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444187    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
444188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444189    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444190    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
444191    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444192    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
444193    +   H11  =     0.74666931543537 * S_AcceptedCmpTotal  +    -0.26928580042975 *
444194    +        S_Age  +     0.03131160696792 * S_Frq  +     0.37966440012262 *
444195    +        S_Income  +      0.4880522012865 * S_Kidhome
444196    +          +    -0.10642365845458 * S_Mnt  +     0.07021626529074 *
444197    +        S_MntFishProducts  +    -0.40502977166003 * S_MntFruits
444198    +          +    -0.02349027629347 * S_MntGoldProds  +     1.05528002915119 *
444199    +        S_MntMeatProducts  +    -0.12400227624159 * S_MntSweetProducts
444200    +          +    -0.97101385029429 * S_MntWines  +     0.09983399059623 *
444201    +        S_MonthsAsCustomer  +     0.92029846720585 * S_NumCatalogPurchases
444202    +          +     1.28630491068585 * S_NumDealsPurchases
444203    +          +     0.12175737778271 * S_NumDistPurchases
444204    +          +    -0.62012456448967 * S_NumStorePurchases
444205    +          +     -0.6092351519122 * S_NumWebPurchases
444206    +          +     1.46336740414795 * S_NumWebVisitsMonth
444207    +          +     0.69679756539023 * S_RFMstat  +     0.19882494898547 *
444208    +        S_RMntFrq  +    -1.02986329135861 * S_Recency
444209    +          +      0.0049755319955 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.74666931543537 * S_AcceptedCmpTotal + -0.26928580042975 * S_Age 
+ 0.03131160696792 * S_Frq + 0.37966440012262 * S_Income + 0.4880522012865 * S_Kidhome + 
-0.10642365845458 * S_Mnt + 0.07021626529074 * S_MntFishProducts + -0.40502977166003 * 
S_MntFruits + -0.02349027629347 * S_MntGoldProds + 1.05528002915119 * S_MntMeatProducts + 
-0.12400227624159 * S_MntSweetProducts + -0.97101385029429 * S_MntWines + 0.09983399059623 * 
S_MonthsAsCustomer + 0.92029846720585 * S_NumCatalogPurchases + 1.28630491068585 * 
S_NumDealsPurchases + 0.12175737778271 * S_NumDistPurchases + -0.62012456448967 * 
S_NumStorePurchases + -0.6092351519122 * S_NumWebPurchases + 1.46336740414795 * 
S_NumWebVisitsMonth + 0.69679756539023 * S_RFMstat + 0.19882494898547 * S_RMntFrq + 
-1.02986329135861 * S_Recency + 0.0049755319955 * S_Teenhome ;
444210    +   H12  =    -0.91147771903585 * S_AcceptedCmpTotal  +    -0.07240098012329 *
444211    +        S_Age  +     0.26286532004526 * S_Frq  +    -0.43462974385984 *
444212    +        S_Income  +     0.63026291057347 * S_Kidhome
444213    +          +     0.15892598048777 * S_Mnt  +     0.96482485555311 *
444214    +        S_MntFishProducts  +    -0.04775061278769 * S_MntFruits
444215    +          +    -0.14625524046285 * S_MntGoldProds  +    -1.56223918788692 *
444216    +        S_MntMeatProducts  +    -0.51302960479013 * S_MntSweetProducts
444217    +          +     0.56413001484415 * S_MntWines  +     0.28344048349537 *
444218    +        S_MonthsAsCustomer  +    -0.84830633187723 * S_NumCatalogPurchases
444219    +          +    -0.66569109065716 * S_NumDealsPurchases
444220    +          +    -0.04991685336251 * S_NumDistPurchases
444221    +          +     0.97830186941279 * S_NumStorePurchases
444222    +          +     1.01041490205359 * S_NumWebPurchases
444223    +          +    -1.32418956036577 * S_NumWebVisitsMonth
444224    +          +    -0.11032432808867 * S_RFMstat  +     0.09917599091828 *
444225    +        S_RMntFrq  +     1.45035992156192 * S_Recency
444226    +          +     0.38289769509688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.91147771903585 * S_AcceptedCmpTotal + -0.07240098012329 * S_Age 
+ 0.26286532004526 * S_Frq + -0.43462974385984 * S_Income + 0.63026291057347 * S_Kidhome + 
0.15892598048777 * S_Mnt + 0.96482485555311 * S_MntFishProducts + -0.04775061278769 * 
S_MntFruits + -0.14625524046285 * S_MntGoldProds + -1.56223918788692 * S_MntMeatProducts + 
-0.51302960479013 * S_MntSweetProducts + 0.56413001484415 * S_MntWines + 0.28344048349537 * 
S_MonthsAsCustomer + -0.84830633187723 * S_NumCatalogPurchases + -0.66569109065716 * 
S_NumDealsPurchases + -0.04991685336251 * S_NumDistPurchases + 0.97830186941279 * 
S_NumStorePurchases + 1.01041490205359 * S_NumWebPurchases + -1.32418956036577 * 
S_NumWebVisitsMonth + -0.11032432808867 * S_RFMstat + 0.09917599091828 * S_RMntFrq + 
1.45035992156192 * S_Recency + 0.38289769509688 * S_Teenhome ;
444227    +   H13  =    -0.14475824149684 * S_AcceptedCmpTotal  +    -0.16657585718812 *
444228    +        S_Age  +    -0.20157354778904 * S_Frq  +    -1.05691184936615 *
444229    +        S_Income  +     0.56998894495459 * S_Kidhome
444230    +          +     0.18949667873044 * S_Mnt  +    -0.20862370006966 *
444231    +        S_MntFishProducts  +      0.1024167951483 * S_MntFruits
444232    +          +     0.08478049294226 * S_MntGoldProds  +    -0.39072502110043 *
444233    +        S_MntMeatProducts  +     0.28675920068433 * S_MntSweetProducts
444234    +          +      0.3076165718478 * S_MntWines  +    -0.24620359701099 *
444235    +        S_MonthsAsCustomer  +    -0.59353014518331 * S_NumCatalogPurchases
444236    +          +     0.07739967453744 * S_NumDealsPurchases
444237    +          +    -0.43729543807168 * S_NumDistPurchases
444238    +          +      0.0856627398024 * S_NumStorePurchases
444239    +          +     -0.0045478100059 * S_NumWebPurchases
444240    +          +    -0.64123054514198 * S_NumWebVisitsMonth
444241    +          +     0.10052569590232 * S_RFMstat  +     -0.3728458977342 *
444242    +        S_RMntFrq  +     1.48732817876807 * S_Recency
444243    +          +     0.85232956367064 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14475824149684 * S_AcceptedCmpTotal + -0.16657585718812 * S_Age 
+ -0.20157354778904 * S_Frq + -1.05691184936615 * S_Income + 0.56998894495459 * S_Kidhome + 
0.18949667873044 * S_Mnt + -0.20862370006966 * S_MntFishProducts + 0.1024167951483 * 
S_MntFruits + 0.08478049294226 * S_MntGoldProds + -0.39072502110043 * S_MntMeatProducts + 
0.28675920068433 * S_MntSweetProducts + 0.3076165718478 * S_MntWines + -0.24620359701099 * 
S_MonthsAsCustomer + -0.59353014518331 * S_NumCatalogPurchases + 0.07739967453744 * 
S_NumDealsPurchases + -0.43729543807168 * S_NumDistPurchases + 0.0856627398024 * 
S_NumStorePurchases + -0.0045478100059 * S_NumWebPurchases + -0.64123054514198 * 
S_NumWebVisitsMonth + 0.10052569590232 * S_RFMstat + -0.3728458977342 * S_RMntFrq + 
1.48732817876807 * S_Recency + 0.85232956367064 * S_Teenhome ;
444244    +   H11  = H11  +    -0.62033856363993 * AcceptedCmp10
444245    +          +    -0.00989853037258 * AcceptedCmp20  +    -0.77097813133684 *
444246    +        AcceptedCmp30  +    -0.31448879986852 * AcceptedCmp40
444247    +          +    -0.18015100491326 * AcceptedCmp50  +     0.05706658641547 *
444248    +        Complain0  +    -0.50105732309148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.62033856363993 * AcceptedCmp10 + -0.00989853037258 * 
AcceptedCmp20 + -0.77097813133684 * AcceptedCmp30 + -0.31448879986852 * AcceptedCmp40 + 
-0.18015100491326 * AcceptedCmp50 + 0.05706658641547 * Complain0 + -0.50105732309148 * 
HigherEducationBinary0 ;
444249    +   H12  = H12  +     0.18414272565688 * AcceptedCmp10
444250    +          +      -0.043654707425 * AcceptedCmp20  +    -0.32394050721443 *
444251    +        AcceptedCmp30  +    -0.06950576864476 * AcceptedCmp40
444252    +          +     1.12623106550654 * AcceptedCmp50  +     -0.0339705259886 *
444253    +        Complain0  +    -0.02110753805765 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.18414272565688 * AcceptedCmp10 + -0.043654707425 * 
AcceptedCmp20 + -0.32394050721443 * AcceptedCmp30 + -0.06950576864476 * AcceptedCmp40 + 
1.12623106550654 * AcceptedCmp50 + -0.0339705259886 * Complain0 + -0.02110753805765 * 
HigherEducationBinary0 ;
444254    +   H13  = H13  +     0.14110100411707 * AcceptedCmp10
444255    +          +     0.64032852332569 * AcceptedCmp20  +     0.50653679176195 *
444256    +        AcceptedCmp30  +     0.42616036519805 * AcceptedCmp40
444257    +          +     0.07072170981185 * AcceptedCmp50  +     0.29291097359872 *
444258    +        Complain0  +    -0.31418317974788 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.14110100411707 * AcceptedCmp10 + 0.64032852332569 * 
AcceptedCmp20 + 0.50653679176195 * AcceptedCmp30 + 0.42616036519805 * AcceptedCmp40 + 
0.07072170981185 * AcceptedCmp50 + 0.29291097359872 * Complain0 + -0.31418317974788 * 
HigherEducationBinary0 ;
444259    +   H11  = H11  +     0.03341889038374 * Education2n_Cycle
444260    +          +     0.11423971315431 * EducationBasic  +     0.27817968687951 *
444261    +        EducationGraduation  +     -0.0281674058306 * EducationMaster
444262    +          +     0.16155355707944 * Marital_StatusDivorced
444263    +          +     0.04915644167404 * Marital_StatusMarried
444264    +          +    -0.16886350906837 * Marital_StatusSingle
444265    +          +    -0.09540299348184 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03341889038374 * Education2n_Cycle + 0.11423971315431 * 
EducationBasic + 0.27817968687951 * EducationGraduation + -0.0281674058306 * EducationMaster + 
0.16155355707944 * Marital_StatusDivorced + 0.04915644167404 * Marital_StatusMarried + 
-0.16886350906837 * Marital_StatusSingle + -0.09540299348184 * Marital_StatusTogether ;
444266    +   H12  = H12  +    -0.18658767739271 * Education2n_Cycle
444267    +          +     0.31497893454838 * EducationBasic  +    -0.02835844728364 *
444268    +        EducationGraduation  +     0.03310756432448 * EducationMaster
444269    +          +    -0.15094637092036 * Marital_StatusDivorced
444270    +          +     0.07664831456886 * Marital_StatusMarried
444271    +          +    -0.47693612610813 * Marital_StatusSingle
444272    +          +     0.14693691283858 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18658767739271 * Education2n_Cycle + 0.31497893454838 * 
EducationBasic + -0.02835844728364 * EducationGraduation + 0.03310756432448 * EducationMaster 
+ -0.15094637092036 * Marital_StatusDivorced + 0.07664831456886 * Marital_StatusMarried + 
-0.47693612610813 * Marital_StatusSingle + 0.14693691283858 * Marital_StatusTogether ;
444273    +   H13  = H13  +      0.0502517318618 * Education2n_Cycle
444274    +          +    -0.13621229906896 * EducationBasic  +     0.20624951172738 *
444275    +        EducationGraduation  +     0.20173383445657 * EducationMaster
444276    +          +    -0.58672623647391 * Marital_StatusDivorced
444277    +          +      1.8684271616322 * Marital_StatusMarried
444278    +          +    -1.30134837394569 * Marital_StatusSingle
444279    +          +     1.11308583986156 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0502517318618 * Education2n_Cycle + -0.13621229906896 * 
EducationBasic + 0.20624951172738 * EducationGraduation + 0.20173383445657 * EducationMaster + 
-0.58672623647391 * Marital_StatusDivorced + 1.8684271616322 * Marital_StatusMarried + 
-1.30134837394569 * Marital_StatusSingle + 1.11308583986156 * Marital_StatusTogether ;
444280    +   H11  =    -1.22504924155195 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22504924155195 + H11 ;
444281    +   H12  =     0.36945079976002 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36945079976002 + H12 ;
444282    +   H13  =     1.84114106095878 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.84114106095878 + H13 ;
444283    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
444284    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
444285    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
444286    +END;
MPRINT(EM_DIAGRAM):   END;
444287    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
444288    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
444289    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
444290    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
444291    +END;
MPRINT(EM_DIAGRAM):   END;
444292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444293    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
444294    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444295    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
444296    +   P_DepVar1  =     2.49740994012105 * H11  +    -2.95405883837745 * H12
444297    +          +    -3.26077127833109 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.49740994012105 * H11 + -2.95405883837745 * H12 + 
-3.26077127833109 * H13 ;
444298    +   P_DepVar1  =    -0.23645507747647 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23645507747647 + P_DepVar1 ;
444299    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
444300    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
444301    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
444302    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
444303    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
444304    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
444305    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
444306    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
444307    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
444308    +END;
MPRINT(EM_DIAGRAM):   END;
444309    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
444310    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
444311    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
444312    +END;
MPRINT(EM_DIAGRAM):   END;
444313    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
444314    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
444315    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
444316    +END;
MPRINT(EM_DIAGRAM):   END;
444317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444318    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
444319    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444320    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
444321    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
444322    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
444323    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
444324    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
444325    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
444326    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
444327    +END;
MPRINT(EM_DIAGRAM):   END;
444328    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
444329    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
444330    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
444331    +drop
444332    +H11
444333    +H12
444334    +H13
444335    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
444336    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
444337     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
444338     quit;
444339     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
444340     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
444341     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
444342     retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
444343     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
444344     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

444345     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
444346     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444347     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444348     proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
444349     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444350     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444351     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
444352     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
444353     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
444354     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444355     proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
444356     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

444357     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
444358     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444359     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.17 seconds
      cpu time            0.00 seconds
      

444360     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
444361     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
444362     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444363     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

444364     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
444365     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
444365   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

444366     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444367     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
444368     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444369     filename _pref
444369   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
444370     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
444371     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
444372    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
444373    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
444374    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
444375    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
444376    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
444377    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
444378     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
444379     quit;
444380     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
444381     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
444382     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
444383     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
444384     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
444385     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

444386     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
444387     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444388     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444389     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
444390     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444391     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444392     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
444393     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
444394     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
444395     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444396     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
444397     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

444398     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
444399     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444400     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444401     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
444402     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
444403     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444404     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444405     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
444406     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
444406   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

444407     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

444408     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
444409     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444410     filename _pref
444410   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
444411     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
444412     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
444413    +
444414    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
444415    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
444415   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
444416    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
444417    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
444418    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
444419    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
444420    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
444421     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
444422     quit;
444423     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
444424     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
444425     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
444426     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
444427     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
444428     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444429     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
444430     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444431     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444432     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
444433     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444434     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

444435     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
444436     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
444437     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
444438     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444439     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
444440     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444441     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
444442     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444443     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

444444     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
444445     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
444446     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444447     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444448     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
444449     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
444449   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

444450     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

444451     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
444452     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444453     filename _pref
444453   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
444454     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
444455     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
444456    +
444457    +
444458    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
444459    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
444460    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
444461    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
444462    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
444463    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
444464    +
444465    +
444466    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
444467    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
444468    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
444469    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
444470    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
444471    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
444472    +
444473    +
444474    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
444475    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
444476    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
444477    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
444478    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
444479    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
444480    +
444481    +
444482    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
444483    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
444484    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
444485    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
444486    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
444487    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
444488    +
444489    +
444490    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
444491    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
444492    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
444493    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
444494    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
444495    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
444496    +
444497    +
444498    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
444499    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
444500    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
444501    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
444502    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
444503    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
444504    +
444505    +
444506    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
444507    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
444508    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
444509    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
444510    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
444511    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
444512    +
444513    +
444514    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
444515    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
444516    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
444517    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
444518    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
444519    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
444520    +if
444521    +_FILTERNORM1 not in ( '.')
444522    + and
444523    +_FILTERNORM2 not in ( '.')
444524    + and
444525    +_FILTERNORM3 not in ( '.')
444526    + and
444527    +_FILTERNORM4 not in ( '.')
444528    + and
444529    +_FILTERNORM5 not in ( '.')
444530    + and
444531    +_FILTERNORM6 not in ( '.')
444532    + and
444533    +_FILTERNORM7 not in ( ' ')
444534    + and
444535    +_FILTERNORM8 not in ( ' ')
444536    +and
444537    +( Dt_Customer ne .)
444538    +and ( Income ne . and (Income<=107000))
444539    +and ( Kidhome ne .)
444540    +and ( MntFishProducts ne .)
444541    +and ( MntFruits ne .)
444542    +and ( MntGoldProds ne .)
444543    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
444544    +and ( MntSweetProducts ne .)
444545    +and ( MntWines ne .)
444546    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
444547    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
444548    +and ( NumStorePurchases ne .)
444549    +and ( NumWebPurchases ne .)
444550    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
444551    +and ( Recency ne .)
444552    +and ( Teenhome ne .)
444553    +and ( Year_Birth ne .)
444554    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
444555    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
444556    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
444557    +end;
MPRINT(EM_DIAGRAM):   end;
444558    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
444559    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
444560     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
444561     quit;
444562     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
444563     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
444564     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
444565     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
444566     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
444567     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444568     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
444569     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444570     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

444571     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
444572     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444573     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444574     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
444575     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
444576     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
444577     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444578     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
444579     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

444580     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
444581     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444582     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444583     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
444584     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
444585     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
444586     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444587     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
444588     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
444588   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

444589     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444590     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
444591     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444592     %macro varDept(fcmpdata=,id=);
444593     %global nobs&id scoreFlag&id;
444594     %let scoreFlag&id = 0;
444595     %if &id=1 or ^&fcmpStart %then %do;
444596     proc sort data=&fcmpdata out=_temp&id nodupkey;
444597     by NAME;
444598     where id=&id and LHS in( %let j=1;
444599     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
444600     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
444601     "&var" %let j = %eval(&j+1);
444602     %end;
444603     );
444604     run;
444605     %let dsid = %sysfunc(open(_temp&id));
444606     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
444607     %let dsid = %sysfunc(close(&dsid));
444608     %if &&nobs&id %then %do;
444609     %let scoreFlag&id = 1;
444610     %let fcmpStart = 1;
444611     %end;
444612     %else %let fcmpStart = 0;
444613     %end;
444614     %else %do;
444615     proc sort data=&fcmpdata out=_tempid;
444616     where id=&id;
444617     by LHS;
444618     run;
444619     %let dsid = %sysfunc(open(_tempid));
444620     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
444621     %let dsid = %sysfunc(close(&dsid));
444622     %if ^&&nobs&id %then %do;
444623     proc datasets lib=work nolist;
444624     delete _tempid;
444625     run;
444626     quit;
444627     %end;
444628     %else %do;
444629     data _tempAll;
444630     set %let j=%eval(&id-1);
444631     %do x=1 %to &j;
444632     %if &&nobs&x %then %do;
444633     _temp&x %end;
444634     %end;
444635     ;
444636     run;
444637     proc sql;
444638     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
444638   ! work._tempid p2 where p.name=p2.lhs;
444639     quit;
444640     data _temp&id;
444641     set _temp&id;
444642     where LHS ne '' and NAME ne '' and Node ne '';
444643     run;
444644     proc datasets lib=work nolist;
444645     delete _tempAll;
444646     run;
444647     %let dsid = %sysfunc(open(_temp&id));
444648     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
444649     %let dsid = %sysfunc(close(&dsid));
444650     %if ^&&nobs&id %then %do;
444651     proc datasets lib=work nolist;
444652     delete _temp&id;
444653     run;
444654     quit;
444655     %end;
444656     %else %do;
444657     %let scoreFlag&id = 1;
444658     data _temp&id;
444659     set _temp&id;
444660     where LHS ne NAME and node ne '';
444661     run;
444662     %let dsid = %sysfunc(open(_temp&id));
444663     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
444664     %let dsid = %sysfunc(close(&dsid));
444665     %if ^&&nobs&id %then %do;
444666     proc datasets lib=work nolist;
444667     delete _temp&id;
444668     run;
444669     quit;
444670     %end;
444671     %else %do;
444672     proc sort data=_temp&id nodupkey;
444673     by LHS NAME;
444674     run;
444675     %end;
444676     %end;
444677     %end;
444678     %end;
444679     %mend varDept;
444680     %macro optCode(outdata=fcmpdata);
444681     %global fcmpStart;
444682     %let fcmpStart = 0;
444683     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
444684     %let NumNodes=9;
444685     %do k=1 %to &NumNodes;
444686     %vardept(fcmpdata=&outdata, id=&k);
444687     %end;
444688     %mend optCode;
444689     %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
The SAS System

MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

444690     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
444691     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
444692     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
444693     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444694     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
444695     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
444696     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
444697     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444698     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
444699     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
444699   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

444700     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

444701     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
444702     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
444703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

444704     filename _pref
444704   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas";
444705     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
444706     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMPUBLISHSCORE.sas.
444707    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
444708    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
444709    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
444710    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
444711    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
444712    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
444713    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
444714    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
444715    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
444716    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
444717    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
444718    +LENGTH _WARN_ $4
444719    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
444720    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
444721    +
444722    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
444723    +
444724    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
444725    +
444726    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
444727    +
444728    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
444729    +
444730    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
444731    +
444732    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
444733    +
444734    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
444735    +
444736    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
444737    +
444738    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
444739    +
444740    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
444741    +
444742    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
444743    +
444744    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
444745    +
444746    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
444747    +
444748    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
444749    +
444750    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
444751    +
444752    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
444753    +
444754    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
444755    +
444756    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
444757    +
444758    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
444759    +
444760    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
444761    +
444762    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
444763    +
444764    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
444765    +
444766    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
444767    +
444768    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
444769    +
444770    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
444771    +
444772    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
444773    +
444774    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
444775    +
444776    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
444777    +
444778    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
444779    +
444780    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
444781    +
444782    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
444783    +
444784    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
444785    +
444786    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
444787    +
444788    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
444789    +
444790    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
444791    +
444792    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
444793    +
444794    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
444795    +
444796    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
444797    +
444798    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
444799    +
444800    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
444801    +
444802    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
444803    +
444804    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
444805    +
444806    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
444807    +
444808    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
444809    +
444810    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
444811    +
444812    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
444813    +
444814    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
444815    +
444816    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
444817    +
444818    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
444819    +
444820    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
444821    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
444822    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
444823    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
444824    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444825    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444826    +end;
MPRINT(EM_DIAGRAM):   end;
444827    +else do;
MPRINT(EM_DIAGRAM):   else do;
444828    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444829    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
444830    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444831    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444832    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
444833    +   end;
MPRINT(EM_DIAGRAM):   end;
444834    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444835    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
444836    +   end;
MPRINT(EM_DIAGRAM):   end;
444837    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444838    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
444839    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444840    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444841    +   end;
MPRINT(EM_DIAGRAM):   end;
444842    +end;
MPRINT(EM_DIAGRAM):   end;
444843    +
444844    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
444845    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
444846    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
444847    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
444848    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444849    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444850    +end;
MPRINT(EM_DIAGRAM):   end;
444851    +else do;
MPRINT(EM_DIAGRAM):   else do;
444852    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444853    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
444854    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444855    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444856    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
444857    +   end;
MPRINT(EM_DIAGRAM):   end;
444858    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444859    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
444860    +   end;
MPRINT(EM_DIAGRAM):   end;
444861    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444862    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
444863    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444864    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444865    +   end;
MPRINT(EM_DIAGRAM):   end;
444866    +end;
MPRINT(EM_DIAGRAM):   end;
444867    +
444868    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
444869    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
444870    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
444871    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
444872    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444873    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444874    +end;
MPRINT(EM_DIAGRAM):   end;
444875    +else do;
MPRINT(EM_DIAGRAM):   else do;
444876    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444877    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
444878    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444879    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444880    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
444881    +   end;
MPRINT(EM_DIAGRAM):   end;
444882    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444883    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
444884    +   end;
MPRINT(EM_DIAGRAM):   end;
444885    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444886    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
444887    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444888    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444889    +   end;
MPRINT(EM_DIAGRAM):   end;
444890    +end;
MPRINT(EM_DIAGRAM):   end;
444891    +
444892    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
444893    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
444894    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
444895    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
444896    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444897    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444898    +end;
MPRINT(EM_DIAGRAM):   end;
444899    +else do;
MPRINT(EM_DIAGRAM):   else do;
444900    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444901    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
444902    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444903    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444904    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
444905    +   end;
MPRINT(EM_DIAGRAM):   end;
444906    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444907    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
444908    +   end;
MPRINT(EM_DIAGRAM):   end;
444909    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444910    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
444911    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444912    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444913    +   end;
MPRINT(EM_DIAGRAM):   end;
444914    +end;
MPRINT(EM_DIAGRAM):   end;
444915    +
444916    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
444917    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
444918    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
444919    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
444920    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444921    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444922    +end;
MPRINT(EM_DIAGRAM):   end;
444923    +else do;
MPRINT(EM_DIAGRAM):   else do;
444924    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444925    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
444926    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444927    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444928    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
444929    +   end;
MPRINT(EM_DIAGRAM):   end;
444930    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444931    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
444932    +   end;
MPRINT(EM_DIAGRAM):   end;
444933    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444934    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
444935    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444936    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444937    +   end;
MPRINT(EM_DIAGRAM):   end;
444938    +end;
MPRINT(EM_DIAGRAM):   end;
444939    +
444940    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
444941    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
444942    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
444943    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
444944    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444945    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444946    +end;
MPRINT(EM_DIAGRAM):   end;
444947    +else do;
MPRINT(EM_DIAGRAM):   else do;
444948    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444949    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
444950    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444951    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444952    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
444953    +   end;
MPRINT(EM_DIAGRAM):   end;
444954    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444955    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
444956    +   end;
MPRINT(EM_DIAGRAM):   end;
444957    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444958    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
444959    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444960    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444961    +   end;
MPRINT(EM_DIAGRAM):   end;
444962    +end;
MPRINT(EM_DIAGRAM):   end;
444963    +
444964    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
444965    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
444966    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
444967    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
444968    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444969    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444970    +end;
MPRINT(EM_DIAGRAM):   end;
444971    +else do;
MPRINT(EM_DIAGRAM):   else do;
444972    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444973    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
444974    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444975    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
444976    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
444977    +   end;
MPRINT(EM_DIAGRAM):   end;
444978    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
444979    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
444980    +   end;
MPRINT(EM_DIAGRAM):   end;
444981    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444982    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
444983    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444984    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444985    +   end;
MPRINT(EM_DIAGRAM):   end;
444986    +end;
MPRINT(EM_DIAGRAM):   end;
444987    +
444988    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
444989    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
444990    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
444991    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
444992    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
444993    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
444994    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
444995    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
444996    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
444997    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
444998    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
444999    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
445000    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445001    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445002    +end;
MPRINT(EM_DIAGRAM):   end;
445003    +else do;
MPRINT(EM_DIAGRAM):   else do;
445004    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
445005    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
445006    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445007    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
445008    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
445009    +   end;
MPRINT(EM_DIAGRAM):   end;
445010    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
445011    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
445012    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
445013    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
445014    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
445015    +   end;
MPRINT(EM_DIAGRAM):   end;
445016    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
445017    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
445018    +   end;
MPRINT(EM_DIAGRAM):   end;
445019    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
445020    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
445021    +   end;
MPRINT(EM_DIAGRAM):   end;
445022    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
445023    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
445024    +   end;
MPRINT(EM_DIAGRAM):   end;
445025    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445026    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
445027    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
445028    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
445029    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
445030    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445031    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445032    +   end;
MPRINT(EM_DIAGRAM):   end;
445033    +end;
MPRINT(EM_DIAGRAM):   end;
445034    +
445035    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
445036    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
445037    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
445038    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
445039    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
445040    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
445041    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
445042    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
445043    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
445044    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
445045    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
445046    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
445047    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
445048    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445050    +end;
MPRINT(EM_DIAGRAM):   end;
445051    +else do;
MPRINT(EM_DIAGRAM):   else do;
445052    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
445053    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
445054    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445055    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
445056    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
445057    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
445058    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
445059    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
445060    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445061    +         end;
MPRINT(EM_DIAGRAM):   end;
445062    +         else do;
MPRINT(EM_DIAGRAM):   else do;
445063    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
445064    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
445065    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445066    +            end;
MPRINT(EM_DIAGRAM):   end;
445067    +         end;
MPRINT(EM_DIAGRAM):   end;
445068    +      end;
MPRINT(EM_DIAGRAM):   end;
445069    +      else do;
MPRINT(EM_DIAGRAM):   else do;
445070    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
445071    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
445072    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445073    +         end;
MPRINT(EM_DIAGRAM):   end;
445074    +      end;
MPRINT(EM_DIAGRAM):   end;
445075    +   end;
MPRINT(EM_DIAGRAM):   end;
445076    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445077    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
445078    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
445079    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445080    +      end;
MPRINT(EM_DIAGRAM):   end;
445081    +      else do;
MPRINT(EM_DIAGRAM):   else do;
445082    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
445083    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
445084    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
445085    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
445086    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
445087    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445088    +         end;
MPRINT(EM_DIAGRAM):   end;
445089    +      end;
MPRINT(EM_DIAGRAM):   end;
445090    +   end;
MPRINT(EM_DIAGRAM):   end;
445091    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
445092    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
445093    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
445094    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
445095    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
445096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445098    +   end;
MPRINT(EM_DIAGRAM):   end;
445099    +end;
MPRINT(EM_DIAGRAM):   end;
445100    +
445101    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445102    +*** Checking missing input Interval
445103    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
445104    +
445105    +IF NMISS(
445106    +   AcceptedCmpTotal ,
445107    +   Age ,
445108    +   Frq ,
445109    +   Income ,
445110    +   Kidhome ,
445111    +   Mnt ,
445112    +   MntFishProducts ,
445113    +   MntFruits ,
445114    +   MntGoldProds ,
445115    +   MntMeatProducts ,
445116    +   MntSweetProducts ,
445117    +   MntWines ,
445118    +   MonthsAsCustomer ,
445119    +   NumCatalogPurchases ,
445120    +   NumDealsPurchases ,
445121    +   NumDistPurchases ,
445122    +   NumStorePurchases ,
445123    +   NumWebPurchases ,
445124    +   NumWebVisitsMonth ,
445125    +   RFMstat ,
445126    +   RMntFrq ,
445127    +   Recency ,
445128    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
445129    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
445130    +
445131    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445132    +END;
MPRINT(EM_DIAGRAM):   END;
445133    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445134    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
445135    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445136    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
445137    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
445138    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
445139    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
445140    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
445141    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
445142    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
445143    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
445144    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
445145    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
445146    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
445147    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
445148    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
445149    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
445150    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
445151    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
445152    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
445153    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
445154    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
445155    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
445156    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
445157    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
445158    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
445159    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
445160    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
445161    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
445162    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
445163    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
445164    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
445165    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
445166    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
445167    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
445168    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
445169    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
445170    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
445171    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
445172    +END;
MPRINT(EM_DIAGRAM):   END;
445173    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
445174    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
445175    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
445176    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
445177    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
445178    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
445179    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
445180    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
445181    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
445182    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
445183    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
445184    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
445185    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
445186    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
445187    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
445188    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
445189    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
445190    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
445191    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
445192    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
445193    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
445194    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
445195    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
445196    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
445197    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
445198    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
445199    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
445200    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
445201    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
445202    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
445203    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
445204    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
445205    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
445206    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
445207    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
445208    +   ELSE S_NumCatalogPurchases
445209    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
445210    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
445211    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
445212    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
445213    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
445214    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
445215    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
445216    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
445217    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
445218    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
445219    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
445220    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
445221    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
445222    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
445223    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
445224    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
445225    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
445226    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
445227    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
445228    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
445229    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
445230    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
445231    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
445232    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
445233    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
445234    +END;
MPRINT(EM_DIAGRAM):   END;
445235    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445236    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
445237    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445239    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
445240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445242    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
445243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445244    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
445245    +   H11  =    -0.56509996505673 * S_AcceptedCmpTotal  +    -0.23063823697229 *
445246    +        S_Age  +     0.27537956875262 * S_Frq  +    -0.13998299759696 *
445247    +        S_Income  +    -0.48272554811946 * S_Kidhome
445248    +          +     0.02078968845252 * S_Mnt  +     0.39778286292195 *
445249    +        S_MntFishProducts  +    -0.05943228184406 * S_MntFruits
445250    +          +    -0.22076005674037 * S_MntGoldProds  +    -1.15470073662687 *
445251    +        S_MntMeatProducts  +     0.01689175327079 * S_MntSweetProducts
445252    +          +     0.38794071873445 * S_MntWines  +      0.0790144986614 *
445253    +        S_MonthsAsCustomer  +     -0.5385547715034 * S_NumCatalogPurchases
445254    +          +    -0.21965892172232 * S_NumDealsPurchases
445255    +          +     0.18147972034868 * S_NumDistPurchases
445256    +          +     0.36657814181657 * S_NumStorePurchases
445257    +          +      0.2558783559717 * S_NumWebPurchases
445258    +          +    -0.12008925196796 * S_NumWebVisitsMonth
445259    +          +     -0.2801394750033 * S_RFMstat  +    -0.15606351466959 *
445260    +        S_RMntFrq  +     0.37914209292496 * S_Recency
445261    +          +     0.40705261237123 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.56509996505673 * S_AcceptedCmpTotal + -0.23063823697229 * S_Age 
+ 0.27537956875262 * S_Frq + -0.13998299759696 * S_Income + -0.48272554811946 * S_Kidhome + 
0.02078968845252 * S_Mnt + 0.39778286292195 * S_MntFishProducts + -0.05943228184406 * 
S_MntFruits + -0.22076005674037 * S_MntGoldProds + -1.15470073662687 * S_MntMeatProducts + 
0.01689175327079 * S_MntSweetProducts + 0.38794071873445 * S_MntWines + 0.0790144986614 * 
S_MonthsAsCustomer + -0.5385547715034 * S_NumCatalogPurchases + -0.21965892172232 * 
S_NumDealsPurchases + 0.18147972034868 * S_NumDistPurchases + 0.36657814181657 * 
S_NumStorePurchases + 0.2558783559717 * S_NumWebPurchases + -0.12008925196796 * 
S_NumWebVisitsMonth + -0.2801394750033 * S_RFMstat + -0.15606351466959 * S_RMntFrq + 
0.37914209292496 * S_Recency + 0.40705261237123 * S_Teenhome ;
445262    +   H12  =    -0.33633432608107 * S_AcceptedCmpTotal  +     0.16353547895993 *
445263    +        S_Age  +     0.24085016715236 * S_Frq  +    -0.12216338707901 *
445264    +        S_Income  +     0.24387947620062 * S_Kidhome
445265    +          +     0.49145996867369 * S_Mnt  +      0.0578610487644 *
445266    +        S_MntFishProducts  +     0.02621200334488 * S_MntFruits
445267    +          +    -0.22909633857209 * S_MntGoldProds  +    -0.86136295830946 *
445268    +        S_MntMeatProducts  +     0.11908088548047 * S_MntSweetProducts
445269    +          +     0.63547632412982 * S_MntWines  +      0.2259508551947 *
445270    +        S_MonthsAsCustomer  +    -0.13471041074588 * S_NumCatalogPurchases
445271    +          +    -0.05257082874614 * S_NumDealsPurchases
445272    +          +     0.41456571712035 * S_NumDistPurchases
445273    +          +     0.23489798619427 * S_NumStorePurchases
445274    +          +     0.27816946712153 * S_NumWebPurchases
445275    +          +    -0.60321927125997 * S_NumWebVisitsMonth
445276    +          +    -0.13771604724576 * S_RFMstat  +     0.32661912615265 *
445277    +        S_RMntFrq  +     0.37992942536792 * S_Recency
445278    +          +     0.23123529364349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33633432608107 * S_AcceptedCmpTotal + 0.16353547895993 * S_Age 
+ 0.24085016715236 * S_Frq + -0.12216338707901 * S_Income + 0.24387947620062 * S_Kidhome + 
0.49145996867369 * S_Mnt + 0.0578610487644 * S_MntFishProducts + 0.02621200334488 * 
S_MntFruits + -0.22909633857209 * S_MntGoldProds + -0.86136295830946 * S_MntMeatProducts + 
0.11908088548047 * S_MntSweetProducts + 0.63547632412982 * S_MntWines + 0.2259508551947 * 
S_MonthsAsCustomer + -0.13471041074588 * S_NumCatalogPurchases + -0.05257082874614 * 
S_NumDealsPurchases + 0.41456571712035 * S_NumDistPurchases + 0.23489798619427 * 
S_NumStorePurchases + 0.27816946712153 * S_NumWebPurchases + -0.60321927125997 * 
S_NumWebVisitsMonth + -0.13771604724576 * S_RFMstat + 0.32661912615265 * S_RMntFrq + 
0.37992942536792 * S_Recency + 0.23123529364349 * S_Teenhome ;
445279    +   H13  =    -0.62677142457909 * S_AcceptedCmpTotal  +    -0.10225199885389 *
445280    +        S_Age  +     0.05375482280846 * S_Frq  +     -0.2276300280575 *
445281    +        S_Income  +     0.20262487803684 * S_Kidhome
445282    +          +    -0.14876269646837 * S_Mnt  +     -0.4868127566475 *
445283    +        S_MntFishProducts  +    -0.14012815992673 * S_MntFruits
445284    +          +     0.10460152409631 * S_MntGoldProds  +     0.32637815775717 *
445285    +        S_MntMeatProducts  +    -0.31544850569482 * S_MntSweetProducts
445286    +          +     0.04232116862038 * S_MntWines  +     0.04384330908855 *
445287    +        S_MonthsAsCustomer  +       0.024361263039 * S_NumCatalogPurchases
445288    +          +      0.0913099268589 * S_NumDealsPurchases
445289    +          +    -0.05574305289625 * S_NumDistPurchases
445290    +          +    -0.09928560475828 * S_NumStorePurchases
445291    +          +     0.00041482984053 * S_NumWebPurchases
445292    +          +    -0.03314322750163 * S_NumWebVisitsMonth
445293    +          +    -0.18963089491876 * S_RFMstat  +    -0.07289922796134 *
445294    +        S_RMntFrq  +     -0.0998656801694 * S_Recency
445295    +          +     0.07805710264311 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62677142457909 * S_AcceptedCmpTotal + -0.10225199885389 * S_Age 
+ 0.05375482280846 * S_Frq + -0.2276300280575 * S_Income + 0.20262487803684 * S_Kidhome + 
-0.14876269646837 * S_Mnt + -0.4868127566475 * S_MntFishProducts + -0.14012815992673 * 
S_MntFruits + 0.10460152409631 * S_MntGoldProds + 0.32637815775717 * S_MntMeatProducts + 
-0.31544850569482 * S_MntSweetProducts + 0.04232116862038 * S_MntWines + 0.04384330908855 * 
S_MonthsAsCustomer + 0.024361263039 * S_NumCatalogPurchases + 0.0913099268589 * 
S_NumDealsPurchases + -0.05574305289625 * S_NumDistPurchases + -0.09928560475828 * 
S_NumStorePurchases + 0.00041482984053 * S_NumWebPurchases + -0.03314322750163 * 
S_NumWebVisitsMonth + -0.18963089491876 * S_RFMstat + -0.07289922796134 * S_RMntFrq + 
-0.0998656801694 * S_Recency + 0.07805710264311 * S_Teenhome ;
445296    +   H14  =     0.58578346547732 * S_AcceptedCmpTotal  +     0.04716075363777 *
445297    +        S_Age  +     0.23789426503274 * S_Frq  +     0.09306785885014 *
445298    +        S_Income  +     0.26225843602768 * S_Kidhome
445299    +          +     0.28381069432619 * S_Mnt  +    -0.20750545498741 *
445300    +        S_MntFishProducts  +     -0.0153624448098 * S_MntFruits
445301    +          +    -0.02656939541352 * S_MntGoldProds  +     1.97911440218059 *
445302    +        S_MntMeatProducts  +     0.28353571629196 * S_MntSweetProducts
445303    +          +    -0.69002907264222 * S_MntWines  +    -0.01673377005001 *
445304    +        S_MonthsAsCustomer  +     1.76601520216011 * S_NumCatalogPurchases
445305    +          +     0.83559002761395 * S_NumDealsPurchases
445306    +          +     0.30813434559451 * S_NumDistPurchases
445307    +          +    -0.61391039002598 * S_NumStorePurchases
445308    +          +    -1.03190502679863 * S_NumWebPurchases
445309    +          +     0.13374464245621 * S_NumWebVisitsMonth
445310    +          +     0.34844972128972 * S_RFMstat  +     0.00077632967209 *
445311    +        S_RMntFrq  +    -0.37521605306084 * S_Recency
445312    +          +    -0.00142295377819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58578346547732 * S_AcceptedCmpTotal + 0.04716075363777 * S_Age + 
0.23789426503274 * S_Frq + 0.09306785885014 * S_Income + 0.26225843602768 * S_Kidhome + 
0.28381069432619 * S_Mnt + -0.20750545498741 * S_MntFishProducts + -0.0153624448098 * 
S_MntFruits + -0.02656939541352 * S_MntGoldProds + 1.97911440218059 * S_MntMeatProducts + 
0.28353571629196 * S_MntSweetProducts + -0.69002907264222 * S_MntWines + -0.01673377005001 * 
S_MonthsAsCustomer + 1.76601520216011 * S_NumCatalogPurchases + 0.83559002761395 * 
S_NumDealsPurchases + 0.30813434559451 * S_NumDistPurchases + -0.61391039002598 * 
S_NumStorePurchases + -1.03190502679863 * S_NumWebPurchases + 0.13374464245621 * 
S_NumWebVisitsMonth + 0.34844972128972 * S_RFMstat + 0.00077632967209 * S_RMntFrq + 
-0.37521605306084 * S_Recency + -0.00142295377819 * S_Teenhome ;
445313    +   H15  =      0.5305297970665 * S_AcceptedCmpTotal  +    -0.02853929527052 *
445314    +        S_Age  +    -0.17491582531678 * S_Frq  +     0.67721722139265 *
445315    +        S_Income  +      -0.692179901076 * S_Kidhome
445316    +          +      0.0753885945685 * S_Mnt  +     0.07509531201013 *
445317    +        S_MntFishProducts  +    -0.09558593671631 * S_MntFruits
445318    +          +     -0.1010519397785 * S_MntGoldProds  +     0.90842125479786 *
445319    +        S_MntMeatProducts  +    -0.05268487318554 * S_MntSweetProducts
445320    +          +    -0.41869343587904 * S_MntWines  +     0.00774546781662 *
445321    +        S_MonthsAsCustomer  +     0.69118571360022 * S_NumCatalogPurchases
445322    +          +     0.65604427948051 * S_NumDealsPurchases
445323    +          +     0.01430165674945 * S_NumDistPurchases
445324    +          +    -0.76865963932685 * S_NumStorePurchases
445325    +          +    -0.72521754496401 * S_NumWebPurchases
445326    +          +     1.59453686210397 * S_NumWebVisitsMonth
445327    +          +     0.07015818288598 * S_RFMstat  +    -0.48678185627279 *
445328    +        S_RMntFrq  +    -1.32992957279361 * S_Recency
445329    +          +    -0.30389277845474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.5305297970665 * S_AcceptedCmpTotal + -0.02853929527052 * S_Age + 
-0.17491582531678 * S_Frq + 0.67721722139265 * S_Income + -0.692179901076 * S_Kidhome + 
0.0753885945685 * S_Mnt + 0.07509531201013 * S_MntFishProducts + -0.09558593671631 * 
S_MntFruits + -0.1010519397785 * S_MntGoldProds + 0.90842125479786 * S_MntMeatProducts + 
-0.05268487318554 * S_MntSweetProducts + -0.41869343587904 * S_MntWines + 0.00774546781662 * 
S_MonthsAsCustomer + 0.69118571360022 * S_NumCatalogPurchases + 0.65604427948051 * 
S_NumDealsPurchases + 0.01430165674945 * S_NumDistPurchases + -0.76865963932685 * 
S_NumStorePurchases + -0.72521754496401 * S_NumWebPurchases + 1.59453686210397 * 
S_NumWebVisitsMonth + 0.07015818288598 * S_RFMstat + -0.48678185627279 * S_RMntFrq + 
-1.32992957279361 * S_Recency + -0.30389277845474 * S_Teenhome ;
445330    +   H16  =    -0.14461357872357 * S_AcceptedCmpTotal  +     0.33306933698178 *
445331    +        S_Age  +     0.23947139684336 * S_Frq  +     0.25400354895308 *
445332    +        S_Income  +    -0.23602869688727 * S_Kidhome
445333    +          +     0.01762051414513 * S_Mnt  +    -0.02278009971118 *
445334    +        S_MntFishProducts  +      0.0138100640729 * S_MntFruits
445335    +          +     0.10885605658644 * S_MntGoldProds  +    -0.08129497127342 *
445336    +        S_MntMeatProducts  +    -0.15226579430345 * S_MntSweetProducts
445337    +          +    -0.28936878643978 * S_MntWines  +     0.18699471527536 *
445338    +        S_MonthsAsCustomer  +     0.22218904316421 * S_NumCatalogPurchases
445339    +          +    -0.30337362777997 * S_NumDealsPurchases
445340    +          +     0.11551482249746 * S_NumDistPurchases
445341    +          +     0.19719845223838 * S_NumStorePurchases
445342    +          +     0.16011319337206 * S_NumWebPurchases
445343    +          +    -0.19222801416081 * S_NumWebVisitsMonth
445344    +          +    -0.21560223408993 * S_RFMstat  +    -0.09112530580192 *
445345    +        S_RMntFrq  +     0.01056840325776 * S_Recency
445346    +          +      -0.297834752682 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14461357872357 * S_AcceptedCmpTotal + 0.33306933698178 * S_Age 
+ 0.23947139684336 * S_Frq + 0.25400354895308 * S_Income + -0.23602869688727 * S_Kidhome + 
0.01762051414513 * S_Mnt + -0.02278009971118 * S_MntFishProducts + 0.0138100640729 * 
S_MntFruits + 0.10885605658644 * S_MntGoldProds + -0.08129497127342 * S_MntMeatProducts + 
-0.15226579430345 * S_MntSweetProducts + -0.28936878643978 * S_MntWines + 0.18699471527536 * 
S_MonthsAsCustomer + 0.22218904316421 * S_NumCatalogPurchases + -0.30337362777997 * 
S_NumDealsPurchases + 0.11551482249746 * S_NumDistPurchases + 0.19719845223838 * 
S_NumStorePurchases + 0.16011319337206 * S_NumWebPurchases + -0.19222801416081 * 
S_NumWebVisitsMonth + -0.21560223408993 * S_RFMstat + -0.09112530580192 * S_RMntFrq + 
0.01056840325776 * S_Recency + -0.297834752682 * S_Teenhome ;
445347    +   H17  =     0.15982134979751 * S_AcceptedCmpTotal  +    -0.10107478816004 *
445348    +        S_Age  +     0.02027525505315 * S_Frq  +     0.41229842787905 *
445349    +        S_Income  +    -0.47270881977809 * S_Kidhome
445350    +          +     0.12024996830569 * S_Mnt  +    -0.28295608579685 *
445351    +        S_MntFishProducts  +    -0.07163379649201 * S_MntFruits
445352    +          +     0.09552477346527 * S_MntGoldProds  +    -0.01286236006652 *
445353    +        S_MntMeatProducts  +     0.00943538063039 * S_MntSweetProducts
445354    +          +     0.04434518979611 * S_MntWines  +     -0.1176196348599 *
445355    +        S_MonthsAsCustomer  +      0.3393965598874 * S_NumCatalogPurchases
445356    +          +    -0.16806813676368 * S_NumDealsPurchases
445357    +          +      0.1680540538046 * S_NumDistPurchases
445358    +          +     0.09845423109173 * S_NumStorePurchases
445359    +          +     0.22281606853536 * S_NumWebPurchases
445360    +          +       0.650769024744 * S_NumWebVisitsMonth
445361    +          +     0.09481237306076 * S_RFMstat  +     0.13733671608882 *
445362    +        S_RMntFrq  +    -1.11177537596499 * S_Recency
445363    +          +     -0.4787522037445 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.15982134979751 * S_AcceptedCmpTotal + -0.10107478816004 * S_Age 
+ 0.02027525505315 * S_Frq + 0.41229842787905 * S_Income + -0.47270881977809 * S_Kidhome + 
0.12024996830569 * S_Mnt + -0.28295608579685 * S_MntFishProducts + -0.07163379649201 * 
S_MntFruits + 0.09552477346527 * S_MntGoldProds + -0.01286236006652 * S_MntMeatProducts + 
0.00943538063039 * S_MntSweetProducts + 0.04434518979611 * S_MntWines + -0.1176196348599 * 
S_MonthsAsCustomer + 0.3393965598874 * S_NumCatalogPurchases + -0.16806813676368 * 
S_NumDealsPurchases + 0.1680540538046 * S_NumDistPurchases + 0.09845423109173 * 
S_NumStorePurchases + 0.22281606853536 * S_NumWebPurchases + 0.650769024744 * 
S_NumWebVisitsMonth + 0.09481237306076 * S_RFMstat + 0.13733671608882 * S_RMntFrq + 
-1.11177537596499 * S_Recency + -0.4787522037445 * S_Teenhome ;
445364    +   H11  = H11  +     0.13366172993941 * AcceptedCmp10
445365    +          +     0.05223132673306 * AcceptedCmp20  +    -0.12431756055238 *
445366    +        AcceptedCmp30  +    -0.11023452429442 * AcceptedCmp40
445367    +          +     0.07032238409995 * AcceptedCmp50  +    -0.26682806608348 *
445368    +        Complain0  +    -0.02499813030323 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13366172993941 * AcceptedCmp10 + 0.05223132673306 * 
AcceptedCmp20 + -0.12431756055238 * AcceptedCmp30 + -0.11023452429442 * AcceptedCmp40 + 
0.07032238409995 * AcceptedCmp50 + -0.26682806608348 * Complain0 + -0.02499813030323 * 
HigherEducationBinary0 ;
445369    +   H12  = H12  +     0.00554245438596 * AcceptedCmp10
445370    +          +     0.15839567066461 * AcceptedCmp20  +     0.37076825865406 *
445371    +        AcceptedCmp30  +    -0.35554633579904 * AcceptedCmp40
445372    +          +     0.37072771407119 * AcceptedCmp50  +    -0.05194089161987 *
445373    +        Complain0  +    -0.37225966683728 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00554245438596 * AcceptedCmp10 + 0.15839567066461 * 
AcceptedCmp20 + 0.37076825865406 * AcceptedCmp30 + -0.35554633579904 * AcceptedCmp40 + 
0.37072771407119 * AcceptedCmp50 + -0.05194089161987 * Complain0 + -0.37225966683728 * 
HigherEducationBinary0 ;
445374    +   H13  = H13  +    -0.22559016468364 * AcceptedCmp10
445375    +          +     0.05833377673707 * AcceptedCmp20  +    -0.03636700985548 *
445376    +        AcceptedCmp30  +    -0.25569759811115 * AcceptedCmp40
445377    +          +    -0.04684336742413 * AcceptedCmp50  +     0.04628503093017 *
445378    +        Complain0  +     -0.0274690420199 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22559016468364 * AcceptedCmp10 + 0.05833377673707 * 
AcceptedCmp20 + -0.03636700985548 * AcceptedCmp30 + -0.25569759811115 * AcceptedCmp40 + 
-0.04684336742413 * AcceptedCmp50 + 0.04628503093017 * Complain0 + -0.0274690420199 * 
HigherEducationBinary0 ;
445379    +   H14  = H14  +    -0.32760772054296 * AcceptedCmp10
445380    +          +      -0.115974524782 * AcceptedCmp20  +     0.17243389922886 *
445381    +        AcceptedCmp30  +      0.2619520865817 * AcceptedCmp40
445382    +          +    -0.10340137441821 * AcceptedCmp50  +     0.07381382988108 *
445383    +        Complain0  +    -0.02819765040354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32760772054296 * AcceptedCmp10 + -0.115974524782 * 
AcceptedCmp20 + 0.17243389922886 * AcceptedCmp30 + 0.2619520865817 * AcceptedCmp40 + 
-0.10340137441821 * AcceptedCmp50 + 0.07381382988108 * Complain0 + -0.02819765040354 * 
HigherEducationBinary0 ;
445384    +   H15  = H15  +    -0.26084605443779 * AcceptedCmp10
445385    +          +    -0.16387661015452 * AcceptedCmp20  +    -0.16566201323403 *
445386    +        AcceptedCmp30  +    -0.35263428487299 * AcceptedCmp40
445387    +          +    -0.32839719627655 * AcceptedCmp50  +     0.02360464331322 *
445388    +        Complain0  +    -0.27283273238131 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.26084605443779 * AcceptedCmp10 + -0.16387661015452 * 
AcceptedCmp20 + -0.16566201323403 * AcceptedCmp30 + -0.35263428487299 * AcceptedCmp40 + 
-0.32839719627655 * AcceptedCmp50 + 0.02360464331322 * Complain0 + -0.27283273238131 * 
HigherEducationBinary0 ;
445389    +   H16  = H16  +     0.01304183242542 * AcceptedCmp10
445390    +          +     0.04566997893346 * AcceptedCmp20  +    -0.04050514571317 *
445391    +        AcceptedCmp30  +    -0.01620566973366 * AcceptedCmp40
445392    +          +    -0.07167046817245 * AcceptedCmp50  +    -0.06511918231577 *
445393    +        Complain0  +     0.23270681066978 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304183242542 * AcceptedCmp10 + 0.04566997893346 * 
AcceptedCmp20 + -0.04050514571317 * AcceptedCmp30 + -0.01620566973366 * AcceptedCmp40 + 
-0.07167046817245 * AcceptedCmp50 + -0.06511918231577 * Complain0 + 0.23270681066978 * 
HigherEducationBinary0 ;
445394    +   H17  = H17  +     0.01260470527699 * AcceptedCmp10
445395    +          +    -0.16882003264299 * AcceptedCmp20  +    -0.27439169721218 *
445396    +        AcceptedCmp30  +    -0.26741927505062 * AcceptedCmp40
445397    +          +    -0.13327257255598 * AcceptedCmp50  +     -0.1392453082395 *
445398    +        Complain0  +     0.31998419104809 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01260470527699 * AcceptedCmp10 + -0.16882003264299 * 
AcceptedCmp20 + -0.27439169721218 * AcceptedCmp30 + -0.26741927505062 * AcceptedCmp40 + 
-0.13327257255598 * AcceptedCmp50 + -0.1392453082395 * Complain0 + 0.31998419104809 * 
HigherEducationBinary0 ;
445399    +   H11  = H11  +     0.06102738975935 * Education2n_Cycle
445400    +          +     0.28943057977991 * EducationBasic  +     0.30966749770345 *
445401    +        EducationGraduation  +     0.02445863067232 * EducationMaster
445402    +          +     0.42984001630756 * Marital_StatusDivorced
445403    +          +     -0.4660144877239 * Marital_StatusMarried
445404    +          +     0.44888148801285 * Marital_StatusSingle
445405    +          +    -0.35337765969826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06102738975935 * Education2n_Cycle + 0.28943057977991 * 
EducationBasic + 0.30966749770345 * EducationGraduation + 0.02445863067232 * EducationMaster + 
0.42984001630756 * Marital_StatusDivorced + -0.4660144877239 * Marital_StatusMarried + 
0.44888148801285 * Marital_StatusSingle + -0.35337765969826 * Marital_StatusTogether ;
445406    +   H12  = H12  +    -0.14873776047169 * Education2n_Cycle
445407    +          +     0.02114476645887 * EducationBasic  +    -0.06983582232977 *
445408    +        EducationGraduation  +     0.28773168978233 * EducationMaster
445409    +          +     0.10758942571981 * Marital_StatusDivorced
445410    +          +     0.51795960036213 * Marital_StatusMarried
445411    +          +    -0.40242992087783 * Marital_StatusSingle
445412    +          +     0.59638712724774 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.14873776047169 * Education2n_Cycle + 0.02114476645887 * 
EducationBasic + -0.06983582232977 * EducationGraduation + 0.28773168978233 * EducationMaster 
+ 0.10758942571981 * Marital_StatusDivorced + 0.51795960036213 * Marital_StatusMarried + 
-0.40242992087783 * Marital_StatusSingle + 0.59638712724774 * Marital_StatusTogether ;
445413    +   H13  = H13  +     0.07261326268026 * Education2n_Cycle
445414    +          +     0.22828601903683 * EducationBasic  +    -0.09808260614396 *
445415    +        EducationGraduation  +      0.1986661885803 * EducationMaster
445416    +          +    -0.05264595890678 * Marital_StatusDivorced
445417    +          +     0.07468414180829 * Marital_StatusMarried
445418    +          +     0.20145352309024 * Marital_StatusSingle
445419    +          +     0.21800692249317 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07261326268026 * Education2n_Cycle + 0.22828601903683 * 
EducationBasic + -0.09808260614396 * EducationGraduation + 0.1986661885803 * EducationMaster + 
-0.05264595890678 * Marital_StatusDivorced + 0.07468414180829 * Marital_StatusMarried + 
0.20145352309024 * Marital_StatusSingle + 0.21800692249317 * Marital_StatusTogether ;
445420    +   H14  = H14  +    -0.16591436756181 * Education2n_Cycle
445421    +          +     0.10944605668626 * EducationBasic  +    -0.04736510771915 *
445422    +        EducationGraduation  +     0.28768591072195 * EducationMaster
445423    +          +    -0.41440932029593 * Marital_StatusDivorced
445424    +          +     0.65630698363184 * Marital_StatusMarried
445425    +          +    -0.37277384861759 * Marital_StatusSingle
445426    +          +     0.66742239790358 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16591436756181 * Education2n_Cycle + 0.10944605668626 * 
EducationBasic + -0.04736510771915 * EducationGraduation + 0.28768591072195 * EducationMaster 
+ -0.41440932029593 * Marital_StatusDivorced + 0.65630698363184 * Marital_StatusMarried + 
-0.37277384861759 * Marital_StatusSingle + 0.66742239790358 * Marital_StatusTogether ;
445427    +   H15  = H15  +     0.14874986561786 * Education2n_Cycle
445428    +          +    -0.26075650045962 * EducationBasic  +     0.31386399943318 *
445429    +        EducationGraduation  +    -0.19252087246622 * EducationMaster
445430    +          +     0.86284304352233 * Marital_StatusDivorced
445431    +          +    -0.85716490342524 * Marital_StatusMarried
445432    +          +     0.74516572826411 * Marital_StatusSingle
445433    +          +    -0.94596838391348 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14874986561786 * Education2n_Cycle + -0.26075650045962 * 
EducationBasic + 0.31386399943318 * EducationGraduation + -0.19252087246622 * EducationMaster 
+ 0.86284304352233 * Marital_StatusDivorced + -0.85716490342524 * Marital_StatusMarried + 
0.74516572826411 * Marital_StatusSingle + -0.94596838391348 * Marital_StatusTogether ;
445434    +   H16  = H16  +     0.05955306560033 * Education2n_Cycle
445435    +          +    -0.33179362702455 * EducationBasic  +    -0.11577784652643 *
445436    +        EducationGraduation  +    -0.12481149416801 * EducationMaster
445437    +          +    -0.11928801837478 * Marital_StatusDivorced
445438    +          +    -0.15909233409421 * Marital_StatusMarried
445439    +          +     0.34325131781601 * Marital_StatusSingle
445440    +          +    -0.10826134118683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05955306560033 * Education2n_Cycle + -0.33179362702455 * 
EducationBasic + -0.11577784652643 * EducationGraduation + -0.12481149416801 * EducationMaster 
+ -0.11928801837478 * Marital_StatusDivorced + -0.15909233409421 * Marital_StatusMarried + 
0.34325131781601 * Marital_StatusSingle + -0.10826134118683 * Marital_StatusTogether ;
445441    +   H17  = H17  +      0.0153077476724 * Education2n_Cycle
445442    +          +    -0.21261765604905 * EducationBasic  +    -0.12217248919773 *
445443    +        EducationGraduation  +    -0.08573366282988 * EducationMaster
445444    +          +     0.15109481730803 * Marital_StatusDivorced
445445    +          +    -1.01578758379559 * Marital_StatusMarried
445446    +          +     0.70421923836193 * Marital_StatusSingle
445447    +          +    -0.63730370729331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0153077476724 * Education2n_Cycle + -0.21261765604905 * 
EducationBasic + -0.12217248919773 * EducationGraduation + -0.08573366282988 * EducationMaster 
+ 0.15109481730803 * Marital_StatusDivorced + -1.01578758379559 * Marital_StatusMarried + 
0.70421923836193 * Marital_StatusSingle + -0.63730370729331 * Marital_StatusTogether ;
445448    +   H11  =     0.02509750258391 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02509750258391 + H11 ;
445449    +   H12  =    -0.58342149790654 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58342149790654 + H12 ;
445450    +   H13  =    -1.03881761031374 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03881761031374 + H13 ;
445451    +   H14  =     0.84311700438452 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84311700438452 + H14 ;
445452    +   H15  =    -0.42140887324666 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42140887324666 + H15 ;
445453    +   H16  =    -1.77342637643401 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77342637643401 + H16 ;
445454    +   H17  =    -1.60862695180721 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.60862695180721 + H17 ;
445455    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
445456    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
445457    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
445458    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
445459    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
445460    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
445461    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
445462    +END;
MPRINT(EM_DIAGRAM):   END;
445463    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
445464    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
445465    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
445466    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
445467    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
445468    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
445469    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
445470    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
445471    +END;
MPRINT(EM_DIAGRAM):   END;
445472    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445473    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
445474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445475    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
445476    +   P_DepVar1  =    -1.59177479560764 * H11  +    -1.61754897134463 * H12
445477    +          +     0.34365500815599 * H13  +     3.22562781339883 * H14
445478    +          +     3.60138310710336 * H15  +     0.57380881905142 * H16
445479    +          +     2.14937033273881 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.59177479560764 * H11 + -1.61754897134463 * H12 + 
0.34365500815599 * H13 + 3.22562781339883 * H14 + 3.60138310710336 * H15 + 0.57380881905142 * 
H16 + 2.14937033273881 * H17 ;
445480    +   P_DepVar1  =      -2.174490498324 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.174490498324 + P_DepVar1 ;
445481    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
445482    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
445483    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
445484    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
445485    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
445486    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
445487    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
445488    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
445489    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
445490    +END;
MPRINT(EM_DIAGRAM):   END;
445491    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
445492    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
445493    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
445494    +END;
MPRINT(EM_DIAGRAM):   END;
445495    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
445496    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
445497    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
445498    +END;
MPRINT(EM_DIAGRAM):   END;
445499    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445500    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
445501    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445502    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
445503    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
445504    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
445505    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
445506    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
445507    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
445508    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
445509    +END;
MPRINT(EM_DIAGRAM):   END;
445510    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
445511    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
445512    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
445513    +drop
445514    +H11
445515    +H12
445516    +H13
445517    +H14
445518    +H15
445519    +H16
445520    +H17
445521    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
445522    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
445523     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
445524     quit;
445525     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
445526     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
445527     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
445528     retain ID 2 Node "Neural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural10";
445529     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
445530     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445531     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
445532     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445533     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3050 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3050 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445534     proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural10_variableset out=_temp2(keep=NAME CREATOR);
445535     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445536     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445537     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
445538     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
445539     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
445540     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445541     proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural10_train out=_meta(keep=NAME) noprint;
445542     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445543     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
445544     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445545     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445546     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
445547     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
445548     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445549     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445550     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
445551     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
445551   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

445552     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445553     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
445554     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

445555     filename _pref
445555   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
445556     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
445557     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
445558    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
445559    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
445560    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
445561    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
445562    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
445563    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
445564     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
445565     quit;
445566     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
445567     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
445568     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
445569     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
445570     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
445571     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445572     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
445573     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445574     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445575     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
445576     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445577     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445578     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
445579     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
445580     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
445581     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445582     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
445583     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445584     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
445585     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445586     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445587     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
445588     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
445589     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445590     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445591     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
445592     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
445592   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

445593     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445594     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
445595     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445596     filename _pref
445596   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
445597     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
445598     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
445599    +
445600    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
445601    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
445601   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
445602    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
445603    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
445604    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
445605    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
445606    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
445607     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
445608     quit;
445609     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
445610     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
445611     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
445612     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
445613     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
445614     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445615     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
445616     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445617     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445618     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
445619     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445620     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445621     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
445622     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
445623     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
445624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445625     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
445626     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445627     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
445628     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445629     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445630     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
445631     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
445632     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445633     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445634     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
445635     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
445635   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

445636     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445637     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
445638     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445639     filename _pref
445639   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
445640     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
445641     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
445642    +
445643    +
445644    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
445645    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
445646    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
445647    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
445648    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
445649    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
445650    +
445651    +
445652    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
445653    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
445654    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
445655    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
445656    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
445657    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
445658    +
445659    +
445660    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
445661    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
445662    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
445663    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
445664    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
445665    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
445666    +
445667    +
445668    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
445669    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
445670    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
445671    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
445672    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
445673    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
445674    +
445675    +
445676    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
445677    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
445678    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
445679    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
445680    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
445681    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
445682    +
445683    +
445684    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
445685    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
445686    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
445687    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
445688    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
445689    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
445690    +
445691    +
445692    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
445693    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
445694    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
445695    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
445696    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
445697    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
445698    +
445699    +
445700    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
445701    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
445702    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
445703    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
445704    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
445705    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
445706    +if
445707    +_FILTERNORM1 not in ( '.')
445708    + and
445709    +_FILTERNORM2 not in ( '.')
445710    + and
445711    +_FILTERNORM3 not in ( '.')
445712    + and
445713    +_FILTERNORM4 not in ( '.')
445714    + and
445715    +_FILTERNORM5 not in ( '.')
445716    + and
445717    +_FILTERNORM6 not in ( '.')
445718    + and
445719    +_FILTERNORM7 not in ( ' ')
445720    + and
445721    +_FILTERNORM8 not in ( ' ')
445722    +and
445723    +( Dt_Customer ne .)
445724    +and ( Income ne . and (Income<=107000))
445725    +and ( Kidhome ne .)
445726    +and ( MntFishProducts ne .)
445727    +and ( MntFruits ne .)
445728    +and ( MntGoldProds ne .)
445729    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
445730    +and ( MntSweetProducts ne .)
445731    +and ( MntWines ne .)
445732    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
445733    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
445734    +and ( NumStorePurchases ne .)
445735    +and ( NumWebPurchases ne .)
445736    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
445737    +and ( Recency ne .)
445738    +and ( Teenhome ne .)
445739    +and ( Year_Birth ne .)
445740    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
445741    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
445742    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
445743    +end;
MPRINT(EM_DIAGRAM):   end;
445744    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
445745    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
445746     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
445747     quit;
445748     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
445749     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
445750     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
445751     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
445752     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
445753     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445754     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
445755     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445756     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445757     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
445758     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445759     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445760     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
445761     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
445762     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
445763     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445764     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
445765     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

445766     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
445767     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445768     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445769     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
445770     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
445771     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
445772     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445773     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
445774     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
445774   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

445775     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445776     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
445777     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445778     %macro varDept(fcmpdata=,id=);
445779     %global nobs&id scoreFlag&id;
445780     %let scoreFlag&id = 0;
445781     %if &id=1 or ^&fcmpStart %then %do;
445782     proc sort data=&fcmpdata out=_temp&id nodupkey;
445783     by NAME;
445784     where id=&id and LHS in( %let j=1;
445785     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
445786     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
445787     "&var" %let j = %eval(&j+1);
445788     %end;
445789     );
445790     run;
445791     %let dsid = %sysfunc(open(_temp&id));
445792     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
445793     %let dsid = %sysfunc(close(&dsid));
445794     %if &&nobs&id %then %do;
445795     %let scoreFlag&id = 1;
445796     %let fcmpStart = 1;
445797     %end;
445798     %else %let fcmpStart = 0;
445799     %end;
445800     %else %do;
445801     proc sort data=&fcmpdata out=_tempid;
445802     where id=&id;
445803     by LHS;
445804     run;
445805     %let dsid = %sysfunc(open(_tempid));
445806     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
445807     %let dsid = %sysfunc(close(&dsid));
445808     %if ^&&nobs&id %then %do;
445809     proc datasets lib=work nolist;
445810     delete _tempid;
445811     run;
445812     quit;
445813     %end;
445814     %else %do;
445815     data _tempAll;
445816     set %let j=%eval(&id-1);
445817     %do x=1 %to &j;
445818     %if &&nobs&x %then %do;
445819     _temp&x %end;
445820     %end;
445821     ;
445822     run;
445823     proc sql;
445824     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
445824   ! work._tempid p2 where p.name=p2.lhs;
445825     quit;
445826     data _temp&id;
445827     set _temp&id;
445828     where LHS ne '' and NAME ne '' and Node ne '';
445829     run;
445830     proc datasets lib=work nolist;
445831     delete _tempAll;
445832     run;
445833     %let dsid = %sysfunc(open(_temp&id));
445834     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
445835     %let dsid = %sysfunc(close(&dsid));
445836     %if ^&&nobs&id %then %do;
445837     proc datasets lib=work nolist;
445838     delete _temp&id;
445839     run;
445840     quit;
445841     %end;
445842     %else %do;
445843     %let scoreFlag&id = 1;
445844     data _temp&id;
445845     set _temp&id;
445846     where LHS ne NAME and node ne '';
445847     run;
445848     %let dsid = %sysfunc(open(_temp&id));
445849     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
445850     %let dsid = %sysfunc(close(&dsid));
445851     %if ^&&nobs&id %then %do;
445852     proc datasets lib=work nolist;
445853     delete _temp&id;
445854     run;
445855     quit;
445856     %end;
445857     %else %do;
445858     proc sort data=_temp&id nodupkey;
445859     by LHS NAME;
445860     run;
445861     %end;
445862     %end;
445863     %end;
445864     %end;
445865     %mend varDept;
445866     %macro optCode(outdata=fcmpdata);
445867     %global fcmpStart;
445868     %let fcmpStart = 0;
445869     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
445870     %let NumNodes=9;
445871     %do k=1 %to &NumNodes;
445872     %vardept(fcmpdata=&outdata, id=&k);
445873     %end;
445874     %mend optCode;
445875     %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

445876     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
445877     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
445878     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
445879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445880     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
445881     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
445882     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
445883     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

445884     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
445885     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
445885   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

445886     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445887     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
445888     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
445889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445890     filename _pref
445890   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
445891     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
445892     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
445893    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
445894    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
445895    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
445896    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
445897    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
445898    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
445899    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
445900    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
445901    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
445902    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
445903    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
445904    +LENGTH _WARN_ $4
445905    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
445906    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
445907    +
445908    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
445909    +
445910    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
445911    +
445912    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
445913    +
445914    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
445915    +
445916    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
445917    +
445918    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
445919    +
445920    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
445921    +
445922    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
445923    +
445924    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
445925    +
445926    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
445927    +
445928    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
445929    +
445930    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
445931    +
445932    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
445933    +
445934    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
445935    +
445936    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
445937    +
445938    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
445939    +
445940    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
445941    +
445942    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
445943    +
445944    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
445945    +
445946    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
445947    +
445948    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
445949    +
445950    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
445951    +
445952    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
445953    +
445954    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
445955    +
445956    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
445957    +
445958    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
445959    +
445960    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
445961    +
445962    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
445963    +
445964    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
445965    +
445966    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
445967    +
445968    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
445969    +
445970    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
445971    +
445972    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
445973    +
445974    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
445975    +
445976    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
445977    +
445978    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
445979    +
445980    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
445981    +
445982    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
445983    +
445984    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
445985    +
445986    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
445987    +
445988    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
445989    +
445990    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
445991    +
445992    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
445993    +
445994    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
445995    +
445996    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
445997    +
445998    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
445999    +
446000    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
446001    +
446002    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
446003    +
446004    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
446005    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
446006    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
446007    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
446008    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
446009    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446010    +end;
MPRINT(EM_DIAGRAM):   end;
446011    +else do;
MPRINT(EM_DIAGRAM):   else do;
446012    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
446013    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
446014    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446015    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
446016    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
446017    +   end;
MPRINT(EM_DIAGRAM):   end;
446018    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
446019    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
446020    +   end;
MPRINT(EM_DIAGRAM):   end;
446021    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446022    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
446023    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
446024    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446025    +   end;
MPRINT(EM_DIAGRAM):   end;
446026    +end;
MPRINT(EM_DIAGRAM):   end;
446027    +
446028    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
446029    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
446030    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
446031    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
446032    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
446033    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446034    +end;
MPRINT(EM_DIAGRAM):   end;
446035    +else do;
MPRINT(EM_DIAGRAM):   else do;
446036    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
446037    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
446038    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446039    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
446040    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
446041    +   end;
MPRINT(EM_DIAGRAM):   end;
446042    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
446043    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
446044    +   end;
MPRINT(EM_DIAGRAM):   end;
446045    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446046    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
446047    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
446048    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446049    +   end;
MPRINT(EM_DIAGRAM):   end;
446050    +end;
MPRINT(EM_DIAGRAM):   end;
446051    +
446052    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
446053    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
446054    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
446055    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
446056    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
446057    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446058    +end;
MPRINT(EM_DIAGRAM):   end;
446059    +else do;
MPRINT(EM_DIAGRAM):   else do;
446060    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
446061    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
446062    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446063    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
446064    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
446065    +   end;
MPRINT(EM_DIAGRAM):   end;
446066    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
446067    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
446068    +   end;
MPRINT(EM_DIAGRAM):   end;
446069    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446070    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
446071    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
446072    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446073    +   end;
MPRINT(EM_DIAGRAM):   end;
446074    +end;
MPRINT(EM_DIAGRAM):   end;
446075    +
446076    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
446077    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
446078    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
446079    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
446080    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
446081    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446082    +end;
MPRINT(EM_DIAGRAM):   end;
446083    +else do;
MPRINT(EM_DIAGRAM):   else do;
446084    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
446085    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
446086    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446087    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
446088    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
446089    +   end;
MPRINT(EM_DIAGRAM):   end;
446090    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
446091    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
446092    +   end;
MPRINT(EM_DIAGRAM):   end;
446093    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446094    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
446095    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
446096    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446097    +   end;
MPRINT(EM_DIAGRAM):   end;
446098    +end;
MPRINT(EM_DIAGRAM):   end;
446099    +
446100    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
446101    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
446102    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
446103    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
446104    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
446105    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446106    +end;
MPRINT(EM_DIAGRAM):   end;
446107    +else do;
MPRINT(EM_DIAGRAM):   else do;
446108    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
446109    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
446110    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446111    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
446112    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
446113    +   end;
MPRINT(EM_DIAGRAM):   end;
446114    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
446115    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
446116    +   end;
MPRINT(EM_DIAGRAM):   end;
446117    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446118    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
446119    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
446120    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446121    +   end;
MPRINT(EM_DIAGRAM):   end;
446122    +end;
MPRINT(EM_DIAGRAM):   end;
446123    +
446124    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
446125    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
446126    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
446127    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
446128    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
446129    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446130    +end;
MPRINT(EM_DIAGRAM):   end;
446131    +else do;
MPRINT(EM_DIAGRAM):   else do;
446132    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
446133    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
446134    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446135    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
446136    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
446137    +   end;
MPRINT(EM_DIAGRAM):   end;
446138    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
446139    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
446140    +   end;
MPRINT(EM_DIAGRAM):   end;
446141    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446142    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
446143    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
446144    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446145    +   end;
MPRINT(EM_DIAGRAM):   end;
446146    +end;
MPRINT(EM_DIAGRAM):   end;
446147    +
446148    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
446149    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
446150    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
446151    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
446152    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
446153    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446154    +end;
MPRINT(EM_DIAGRAM):   end;
446155    +else do;
MPRINT(EM_DIAGRAM):   else do;
446156    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
446157    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
446158    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446159    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
446160    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
446161    +   end;
MPRINT(EM_DIAGRAM):   end;
446162    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
446163    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
446164    +   end;
MPRINT(EM_DIAGRAM):   end;
446165    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446166    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
446167    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
446168    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446169    +   end;
MPRINT(EM_DIAGRAM):   end;
446170    +end;
MPRINT(EM_DIAGRAM):   end;
446171    +
446172    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
446173    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
446174    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
446175    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
446176    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
446177    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
446178    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
446179    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
446180    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
446181    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
446182    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
446183    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
446184    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
446185    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446186    +end;
MPRINT(EM_DIAGRAM):   end;
446187    +else do;
MPRINT(EM_DIAGRAM):   else do;
446188    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
446189    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
446190    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446191    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
446192    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
446193    +   end;
MPRINT(EM_DIAGRAM):   end;
446194    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
446195    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
446196    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
446197    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
446198    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
446199    +   end;
MPRINT(EM_DIAGRAM):   end;
446200    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
446201    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
446202    +   end;
MPRINT(EM_DIAGRAM):   end;
446203    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
446204    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
446205    +   end;
MPRINT(EM_DIAGRAM):   end;
446206    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
446207    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
446208    +   end;
MPRINT(EM_DIAGRAM):   end;
446209    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446210    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
446211    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
446212    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
446213    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
446214    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
446215    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446216    +   end;
MPRINT(EM_DIAGRAM):   end;
446217    +end;
MPRINT(EM_DIAGRAM):   end;
446218    +
446219    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
446220    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
446221    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
446222    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
446223    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
446224    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
446225    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
446226    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
446227    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
446228    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
446229    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
446230    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
446231    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
446232    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
446233    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446234    +end;
MPRINT(EM_DIAGRAM):   end;
446235    +else do;
MPRINT(EM_DIAGRAM):   else do;
446236    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
446237    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
446238    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446239    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
446240    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
446241    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
446242    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
446243    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
446244    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
446245    +         end;
MPRINT(EM_DIAGRAM):   end;
446246    +         else do;
MPRINT(EM_DIAGRAM):   else do;
446247    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
446248    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
446249    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
446250    +            end;
MPRINT(EM_DIAGRAM):   end;
446251    +         end;
MPRINT(EM_DIAGRAM):   end;
446252    +      end;
MPRINT(EM_DIAGRAM):   end;
446253    +      else do;
MPRINT(EM_DIAGRAM):   else do;
446254    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
446255    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
446256    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
446257    +         end;
MPRINT(EM_DIAGRAM):   end;
446258    +      end;
MPRINT(EM_DIAGRAM):   end;
446259    +   end;
MPRINT(EM_DIAGRAM):   end;
446260    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446261    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
446262    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
446263    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
446264    +      end;
MPRINT(EM_DIAGRAM):   end;
446265    +      else do;
MPRINT(EM_DIAGRAM):   else do;
446266    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
446267    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
446268    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
446269    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
446270    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
446271    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
446272    +         end;
MPRINT(EM_DIAGRAM):   end;
446273    +      end;
MPRINT(EM_DIAGRAM):   end;
446274    +   end;
MPRINT(EM_DIAGRAM):   end;
446275    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
446276    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
446277    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
446278    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
446279    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
446280    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
446281    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446282    +   end;
MPRINT(EM_DIAGRAM):   end;
446283    +end;
MPRINT(EM_DIAGRAM):   end;
446284    +
446285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446286    +*** Checking missing input Interval
446287    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
446288    +
446289    +IF NMISS(
446290    +   AcceptedCmpTotal ,
446291    +   Age ,
446292    +   Frq ,
446293    +   Income ,
446294    +   Kidhome ,
446295    +   Mnt ,
446296    +   MntFishProducts ,
446297    +   MntFruits ,
446298    +   MntGoldProds ,
446299    +   MntMeatProducts ,
446300    +   MntSweetProducts ,
446301    +   MntWines ,
446302    +   MonthsAsCustomer ,
446303    +   NumCatalogPurchases ,
446304    +   NumDealsPurchases ,
446305    +   NumDistPurchases ,
446306    +   NumStorePurchases ,
446307    +   NumWebPurchases ,
446308    +   NumWebVisitsMonth ,
446309    +   RFMstat ,
446310    +   RMntFrq ,
446311    +   Recency ,
446312    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
446313    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
446314    +
446315    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446316    +END;
MPRINT(EM_DIAGRAM):   END;
446317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446318    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
446319    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446320    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
446321    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
446322    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
446323    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
446324    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
446325    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
446326    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
446327    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
446328    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
446329    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
446330    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
446331    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
446332    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
446333    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
446334    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
446335    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
446336    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
446337    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
446338    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
446339    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
446340    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
446341    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
446342    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
446343    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
446344    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
446345    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
446346    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
446347    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
446348    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
446349    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
446350    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
446351    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
446352    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
446353    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
446354    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
446355    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
446356    +END;
MPRINT(EM_DIAGRAM):   END;
446357    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
446358    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
446359    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
446360    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
446361    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
446362    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
446363    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
446364    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
446365    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
446366    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
446367    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
446368    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
446369    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
446370    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
446371    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
446372    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
446373    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
446374    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
446375    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
446376    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
446377    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
446378    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
446379    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
446380    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
446381    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
446382    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
446383    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
446384    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
446385    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
446386    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
446387    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
446388    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
446389    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
446390    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
446391    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
446392    +   ELSE S_NumCatalogPurchases
446393    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
446394    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
446395    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
446396    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
446397    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
446398    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
446399    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
446400    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
446401    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
446402    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
446403    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
446404    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
446405    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
446406    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
446407    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
446408    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
446409    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
446410    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
446411    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
446412    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
446413    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
446414    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
446415    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
446416    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
446417    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
446418    +END;
MPRINT(EM_DIAGRAM):   END;
446419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446420    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
446421    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446423    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
446424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446426    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
446427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446428    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
446429    +   H11  =     0.17501563716249 * S_AcceptedCmpTotal  +    -0.36554114449053 *
446430    +        S_Age  +    -0.38580134783102 * S_Frq  +    -0.21908382657217 *
446431    +        S_Income  +    -0.07407502089271 * S_Kidhome
446432    +          +     0.12840196100631 * S_Mnt  +     0.03929964535457 *
446433    +        S_MntFishProducts  +    -0.07747223779114 * S_MntFruits
446434    +          +     0.06367041786619 * S_MntGoldProds  +     0.97858536127159 *
446435    +        S_MntMeatProducts  +     -0.2631541253916 * S_MntSweetProducts
446436    +          +    -0.21009967468315 * S_MntWines  +     0.01772965748746 *
446437    +        S_MonthsAsCustomer  +     0.43689279156654 * S_NumCatalogPurchases
446438    +          +     0.85324794786604 * S_NumDealsPurchases
446439    +          +     0.23632583007911 * S_NumDistPurchases
446440    +          +    -0.63089078988761 * S_NumStorePurchases
446441    +          +    -0.92352748602374 * S_NumWebPurchases
446442    +          +     0.90081938176641 * S_NumWebVisitsMonth
446443    +          +     0.42330049584845 * S_RFMstat  +     0.02105180951094 *
446444    +        S_RMntFrq  +    -0.84474450609256 * S_Recency
446445    +          +     0.18914162652023 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17501563716249 * S_AcceptedCmpTotal + -0.36554114449053 * S_Age 
+ -0.38580134783102 * S_Frq + -0.21908382657217 * S_Income + -0.07407502089271 * S_Kidhome + 
0.12840196100631 * S_Mnt + 0.03929964535457 * S_MntFishProducts + -0.07747223779114 * 
S_MntFruits + 0.06367041786619 * S_MntGoldProds + 0.97858536127159 * S_MntMeatProducts + 
-0.2631541253916 * S_MntSweetProducts + -0.21009967468315 * S_MntWines + 0.01772965748746 * 
S_MonthsAsCustomer + 0.43689279156654 * S_NumCatalogPurchases + 0.85324794786604 * 
S_NumDealsPurchases + 0.23632583007911 * S_NumDistPurchases + -0.63089078988761 * 
S_NumStorePurchases + -0.92352748602374 * S_NumWebPurchases + 0.90081938176641 * 
S_NumWebVisitsMonth + 0.42330049584845 * S_RFMstat + 0.02105180951094 * S_RMntFrq + 
-0.84474450609256 * S_Recency + 0.18914162652023 * S_Teenhome ;
446446    +   H12  =     0.55034639645204 * S_AcceptedCmpTotal  +     0.09306745130673 *
446447    +        S_Age  +    -0.38144414546432 * S_Frq  +     0.39346487803525 *
446448    +        S_Income  +    -0.46092998969912 * S_Kidhome
446449    +          +    -0.21419775022567 * S_Mnt  +     -0.1419038030075 *
446450    +        S_MntFishProducts  +    -0.15086475751383 * S_MntFruits
446451    +          +    -0.10895314995081 * S_MntGoldProds  +     0.54340688178323 *
446452    +        S_MntMeatProducts  +     0.02370277071375 * S_MntSweetProducts
446453    +          +    -0.36083928148144 * S_MntWines  +    -0.09471203372244 *
446454    +        S_MonthsAsCustomer  +     0.35874170593009 * S_NumCatalogPurchases
446455    +          +     0.19685325076814 * S_NumDealsPurchases
446456    +          +     -0.0145000015739 * S_NumDistPurchases
446457    +          +     -0.5790386407956 * S_NumStorePurchases
446458    +          +    -0.36258404984745 * S_NumWebPurchases
446459    +          +     0.85107574614775 * S_NumWebVisitsMonth
446460    +          +     0.00898383307287 * S_RFMstat  +    -0.09672451639577 *
446461    +        S_RMntFrq  +     -0.7907561263466 * S_Recency
446462    +          +    -0.34901055038946 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.55034639645204 * S_AcceptedCmpTotal + 0.09306745130673 * S_Age + 
-0.38144414546432 * S_Frq + 0.39346487803525 * S_Income + -0.46092998969912 * S_Kidhome + 
-0.21419775022567 * S_Mnt + -0.1419038030075 * S_MntFishProducts + -0.15086475751383 * 
S_MntFruits + -0.10895314995081 * S_MntGoldProds + 0.54340688178323 * S_MntMeatProducts + 
0.02370277071375 * S_MntSweetProducts + -0.36083928148144 * S_MntWines + -0.09471203372244 * 
S_MonthsAsCustomer + 0.35874170593009 * S_NumCatalogPurchases + 0.19685325076814 * 
S_NumDealsPurchases + -0.0145000015739 * S_NumDistPurchases + -0.5790386407956 * 
S_NumStorePurchases + -0.36258404984745 * S_NumWebPurchases + 0.85107574614775 * 
S_NumWebVisitsMonth + 0.00898383307287 * S_RFMstat + -0.09672451639577 * S_RMntFrq + 
-0.7907561263466 * S_Recency + -0.34901055038946 * S_Teenhome ;
446463    +   H13  =     0.06080099463512 * S_AcceptedCmpTotal  +    -0.35825472239366 *
446464    +        S_Age  +    -0.01087502010135 * S_Frq  +    -0.29478705368425 *
446465    +        S_Income  +    -0.03273972934545 * S_Kidhome
446466    +          +    -0.13622677356361 * S_Mnt  +     0.18060273292985 *
446467    +        S_MntFishProducts  +     0.11972433239232 * S_MntFruits
446468    +          +    -0.03986660643959 * S_MntGoldProds  +     0.15555612346447 *
446469    +        S_MntMeatProducts  +      0.4343662861634 * S_MntSweetProducts
446470    +          +     0.03013514085559 * S_MntWines  +     0.05644710625745 *
446471    +        S_MonthsAsCustomer  +     -0.2306050975257 * S_NumCatalogPurchases
446472    +          +    -0.17268337796364 * S_NumDealsPurchases
446473    +          +    -0.23588860225052 * S_NumDistPurchases
446474    +          +     0.41380073293559 * S_NumStorePurchases
446475    +          +    -0.28143763726207 * S_NumWebPurchases
446476    +          +    -0.30914618130297 * S_NumWebVisitsMonth
446477    +          +     -0.4714998087492 * S_RFMstat  +    -0.00966743749996 *
446478    +        S_RMntFrq  +     0.81671444530655 * S_Recency
446479    +          +    -0.05979541602822 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06080099463512 * S_AcceptedCmpTotal + -0.35825472239366 * S_Age 
+ -0.01087502010135 * S_Frq + -0.29478705368425 * S_Income + -0.03273972934545 * S_Kidhome + 
-0.13622677356361 * S_Mnt + 0.18060273292985 * S_MntFishProducts + 0.11972433239232 * 
S_MntFruits + -0.03986660643959 * S_MntGoldProds + 0.15555612346447 * S_MntMeatProducts + 
0.4343662861634 * S_MntSweetProducts + 0.03013514085559 * S_MntWines + 0.05644710625745 * 
S_MonthsAsCustomer + -0.2306050975257 * S_NumCatalogPurchases + -0.17268337796364 * 
S_NumDealsPurchases + -0.23588860225052 * S_NumDistPurchases + 0.41380073293559 * 
S_NumStorePurchases + -0.28143763726207 * S_NumWebPurchases + -0.30914618130297 * 
S_NumWebVisitsMonth + -0.4714998087492 * S_RFMstat + -0.00966743749996 * S_RMntFrq + 
0.81671444530655 * S_Recency + -0.05979541602822 * S_Teenhome ;
446480    +   H14  =     0.02236165555251 * S_AcceptedCmpTotal  +     0.05878714073281 *
446481    +        S_Age  +      0.0220418507559 * S_Frq  +    -0.46976280127461 *
446482    +        S_Income  +    -0.06518326597517 * S_Kidhome
446483    +          +     0.01561710446128 * S_Mnt  +    -0.19888119617767 *
446484    +        S_MntFishProducts  +    -0.11099637502315 * S_MntFruits
446485    +          +     -0.1633241343451 * S_MntGoldProds  +    -0.65560791277244 *
446486    +        S_MntMeatProducts  +     0.08426248977242 * S_MntSweetProducts
446487    +          +     0.40538193250283 * S_MntWines  +     0.29709872876156 *
446488    +        S_MonthsAsCustomer  +    -0.64274287388323 * S_NumCatalogPurchases
446489    +          +    -0.46119515763011 * S_NumDealsPurchases
446490    +          +     0.16268822540635 * S_NumDistPurchases
446491    +          +     0.21653483412929 * S_NumStorePurchases
446492    +          +     0.46040401497854 * S_NumWebPurchases
446493    +          +     -0.7361096668674 * S_NumWebVisitsMonth
446494    +          +     0.21120270259957 * S_RFMstat  +    -0.01820419721495 *
446495    +        S_RMntFrq  +     0.80628261349293 * S_Recency
446496    +          +     0.30269385840066 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02236165555251 * S_AcceptedCmpTotal + 0.05878714073281 * S_Age + 
0.0220418507559 * S_Frq + -0.46976280127461 * S_Income + -0.06518326597517 * S_Kidhome + 
0.01561710446128 * S_Mnt + -0.19888119617767 * S_MntFishProducts + -0.11099637502315 * 
S_MntFruits + -0.1633241343451 * S_MntGoldProds + -0.65560791277244 * S_MntMeatProducts + 
0.08426248977242 * S_MntSweetProducts + 0.40538193250283 * S_MntWines + 0.29709872876156 * 
S_MonthsAsCustomer + -0.64274287388323 * S_NumCatalogPurchases + -0.46119515763011 * 
S_NumDealsPurchases + 0.16268822540635 * S_NumDistPurchases + 0.21653483412929 * 
S_NumStorePurchases + 0.46040401497854 * S_NumWebPurchases + -0.7361096668674 * 
S_NumWebVisitsMonth + 0.21120270259957 * S_RFMstat + -0.01820419721495 * S_RMntFrq + 
0.80628261349293 * S_Recency + 0.30269385840066 * S_Teenhome ;
446497    +   H15  =    -0.12213750739956 * S_AcceptedCmpTotal  +     0.11214050296975 *
446498    +        S_Age  +    -0.30158163448762 * S_Frq  +    -0.65785861830444 *
446499    +        S_Income  +     0.55328239552566 * S_Kidhome
446500    +          +    -0.10286828951896 * S_Mnt  +     0.02737244457507 *
446501    +        S_MntFishProducts  +     0.06403371753368 * S_MntFruits
446502    +          +     0.03413466437505 * S_MntGoldProds  +    -0.54204197569301 *
446503    +        S_MntMeatProducts  +     0.05510302269208 * S_MntSweetProducts
446504    +          +     0.19331185653379 * S_MntWines  +    -0.11275583865898 *
446505    +        S_MonthsAsCustomer  +    -0.61166489373672 * S_NumCatalogPurchases
446506    +          +     0.05502131610199 * S_NumDealsPurchases
446507    +          +    -0.03756550292536 * S_NumDistPurchases
446508    +          +    -0.03538043876599 * S_NumStorePurchases
446509    +          +     -0.0907757250737 * S_NumWebPurchases
446510    +          +    -0.70112968521759 * S_NumWebVisitsMonth
446511    +          +    -0.14412513555959 * S_RFMstat  +     0.21884375840225 *
446512    +        S_RMntFrq  +     0.94295210651466 * S_Recency
446513    +          +     0.35991330606304 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12213750739956 * S_AcceptedCmpTotal + 0.11214050296975 * S_Age 
+ -0.30158163448762 * S_Frq + -0.65785861830444 * S_Income + 0.55328239552566 * S_Kidhome + 
-0.10286828951896 * S_Mnt + 0.02737244457507 * S_MntFishProducts + 0.06403371753368 * 
S_MntFruits + 0.03413466437505 * S_MntGoldProds + -0.54204197569301 * S_MntMeatProducts + 
0.05510302269208 * S_MntSweetProducts + 0.19331185653379 * S_MntWines + -0.11275583865898 * 
S_MonthsAsCustomer + -0.61166489373672 * S_NumCatalogPurchases + 0.05502131610199 * 
S_NumDealsPurchases + -0.03756550292536 * S_NumDistPurchases + -0.03538043876599 * 
S_NumStorePurchases + -0.0907757250737 * S_NumWebPurchases + -0.70112968521759 * 
S_NumWebVisitsMonth + -0.14412513555959 * S_RFMstat + 0.21884375840225 * S_RMntFrq + 
0.94295210651466 * S_Recency + 0.35991330606304 * S_Teenhome ;
446514    +   H16  =    -0.36726728824296 * S_AcceptedCmpTotal  +     0.07460925934352 *
446515    +        S_Age  +    -0.43562110547346 * S_Frq  +    -0.43221933529838 *
446516    +        S_Income  +    -0.52750514886673 * S_Kidhome
446517    +          +    -0.26421661734492 * S_Mnt  +     0.14907990887311 *
446518    +        S_MntFishProducts  +     0.04789588439327 * S_MntFruits
446519    +          +    -0.20961586241585 * S_MntGoldProds  +    -0.20758519587985 *
446520    +        S_MntMeatProducts  +    -0.19867933143984 * S_MntSweetProducts
446521    +          +    -0.06534193060612 * S_MntWines  +    -0.23871571634661 *
446522    +        S_MonthsAsCustomer  +    -0.53206950950203 * S_NumCatalogPurchases
446523    +          +    -0.50827570715861 * S_NumDealsPurchases
446524    +          +    -0.47409547329081 * S_NumDistPurchases
446525    +          +     0.18399962481918 * S_NumStorePurchases
446526    +          +     0.02681212324713 * S_NumWebPurchases
446527    +          +    -0.20824959103725 * S_NumWebVisitsMonth
446528    +          +    -0.06029410016837 * S_RFMstat  +    -0.10536519478033 *
446529    +        S_RMntFrq  +     0.04705531474734 * S_Recency
446530    +          +    -0.11408993340011 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.36726728824296 * S_AcceptedCmpTotal + 0.07460925934352 * S_Age 
+ -0.43562110547346 * S_Frq + -0.43221933529838 * S_Income + -0.52750514886673 * S_Kidhome + 
-0.26421661734492 * S_Mnt + 0.14907990887311 * S_MntFishProducts + 0.04789588439327 * 
S_MntFruits + -0.20961586241585 * S_MntGoldProds + -0.20758519587985 * S_MntMeatProducts + 
-0.19867933143984 * S_MntSweetProducts + -0.06534193060612 * S_MntWines + -0.23871571634661 * 
S_MonthsAsCustomer + -0.53206950950203 * S_NumCatalogPurchases + -0.50827570715861 * 
S_NumDealsPurchases + -0.47409547329081 * S_NumDistPurchases + 0.18399962481918 * 
S_NumStorePurchases + 0.02681212324713 * S_NumWebPurchases + -0.20824959103725 * 
S_NumWebVisitsMonth + -0.06029410016837 * S_RFMstat + -0.10536519478033 * S_RMntFrq + 
0.04705531474734 * S_Recency + -0.11408993340011 * S_Teenhome ;
446531    +   H11  = H11  +    -0.77677369001519 * AcceptedCmp10
446532    +          +    -0.37032394781671 * AcceptedCmp20  +    -0.38832722412387 *
446533    +        AcceptedCmp30  +    -0.55638306754435 * AcceptedCmp40
446534    +          +    -0.38440791029959 * AcceptedCmp50  +    -0.16406106118114 *
446535    +        Complain0  +     0.13745408429927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.77677369001519 * AcceptedCmp10 + -0.37032394781671 * 
AcceptedCmp20 + -0.38832722412387 * AcceptedCmp30 + -0.55638306754435 * AcceptedCmp40 + 
-0.38440791029959 * AcceptedCmp50 + -0.16406106118114 * Complain0 + 0.13745408429927 * 
HigherEducationBinary0 ;
446536    +   H12  = H12  +    -0.05148686413458 * AcceptedCmp10
446537    +          +     0.05180152789051 * AcceptedCmp20  +    -0.19662622794776 *
446538    +        AcceptedCmp30  +     -0.1585553643874 * AcceptedCmp40
446539    +          +    -0.27247887239746 * AcceptedCmp50  +     0.04624249285151 *
446540    +        Complain0  +     0.00785440028495 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05148686413458 * AcceptedCmp10 + 0.05180152789051 * 
AcceptedCmp20 + -0.19662622794776 * AcceptedCmp30 + -0.1585553643874 * AcceptedCmp40 + 
-0.27247887239746 * AcceptedCmp50 + 0.04624249285151 * Complain0 + 0.00785440028495 * 
HigherEducationBinary0 ;
446541    +   H13  = H13  +     0.21037041808208 * AcceptedCmp10
446542    +          +     0.06300544912729 * AcceptedCmp20  +      0.2031627989618 *
446543    +        AcceptedCmp30  +    -0.16684085233007 * AcceptedCmp40
446544    +          +      0.0625549638503 * AcceptedCmp50  +     0.08211834732664 *
446545    +        Complain0  +     0.41790682924235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21037041808208 * AcceptedCmp10 + 0.06300544912729 * 
AcceptedCmp20 + 0.2031627989618 * AcceptedCmp30 + -0.16684085233007 * AcceptedCmp40 + 
0.0625549638503 * AcceptedCmp50 + 0.08211834732664 * Complain0 + 0.41790682924235 * 
HigherEducationBinary0 ;
446546    +   H14  = H14  +    -0.22633896297555 * AcceptedCmp10
446547    +          +     0.08566230730475 * AcceptedCmp20  +     0.22438004167873 *
446548    +        AcceptedCmp30  +    -0.34844091963496 * AcceptedCmp40
446549    +          +      0.2256378657623 * AcceptedCmp50  +    -0.04877442051049 *
446550    +        Complain0  +     0.06991776072868 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22633896297555 * AcceptedCmp10 + 0.08566230730475 * 
AcceptedCmp20 + 0.22438004167873 * AcceptedCmp30 + -0.34844091963496 * AcceptedCmp40 + 
0.2256378657623 * AcceptedCmp50 + -0.04877442051049 * Complain0 + 0.06991776072868 * 
HigherEducationBinary0 ;
446551    +   H15  = H15  +     0.41157678374445 * AcceptedCmp10
446552    +          +     0.54458379988837 * AcceptedCmp20  +     0.36562464175733 *
446553    +        AcceptedCmp30  +     0.42967664754272 * AcceptedCmp40
446554    +          +     0.29503069209148 * AcceptedCmp50  +     0.22816514842206 *
446555    +        Complain0  +    -0.21688291139263 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.41157678374445 * AcceptedCmp10 + 0.54458379988837 * 
AcceptedCmp20 + 0.36562464175733 * AcceptedCmp30 + 0.42967664754272 * AcceptedCmp40 + 
0.29503069209148 * AcceptedCmp50 + 0.22816514842206 * Complain0 + -0.21688291139263 * 
HigherEducationBinary0 ;
446556    +   H16  = H16  +     0.19407195798819 * AcceptedCmp10
446557    +          +     0.04247364390054 * AcceptedCmp20  +     0.08274248135062 *
446558    +        AcceptedCmp30  +    -0.03914341230116 * AcceptedCmp40
446559    +          +     0.21624329471544 * AcceptedCmp50  +     0.10868032675538 *
446560    +        Complain0  +     0.53913868676285 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19407195798819 * AcceptedCmp10 + 0.04247364390054 * 
AcceptedCmp20 + 0.08274248135062 * AcceptedCmp30 + -0.03914341230116 * AcceptedCmp40 + 
0.21624329471544 * AcceptedCmp50 + 0.10868032675538 * Complain0 + 0.53913868676285 * 
HigherEducationBinary0 ;
446561    +   H11  = H11  +    -0.10818997830847 * Education2n_Cycle
446562    +          +    -0.06250860766324 * EducationBasic  +       0.082321310702 *
446563    +        EducationGraduation  +     0.02690714866809 * EducationMaster
446564    +          +      0.1401475547652 * Marital_StatusDivorced
446565    +          +     0.09801106519846 * Marital_StatusMarried
446566    +          +    -0.26003432053167 * Marital_StatusSingle
446567    +          +     0.01618123849583 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10818997830847 * Education2n_Cycle + -0.06250860766324 * 
EducationBasic + 0.082321310702 * EducationGraduation + 0.02690714866809 * EducationMaster + 
0.1401475547652 * Marital_StatusDivorced + 0.09801106519846 * Marital_StatusMarried + 
-0.26003432053167 * Marital_StatusSingle + 0.01618123849583 * Marital_StatusTogether ;
446568    +   H12  = H12  +     0.03962548410357 * Education2n_Cycle
446569    +          +    -0.26452735705222 * EducationBasic  +     0.20050085174927 *
446570    +        EducationGraduation  +     -0.0582668884993 * EducationMaster
446571    +          +     0.33965651292585 * Marital_StatusDivorced
446572    +          +    -0.51738607463653 * Marital_StatusMarried
446573    +          +     0.57209809625866 * Marital_StatusSingle
446574    +          +    -0.44546779779432 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03962548410357 * Education2n_Cycle + -0.26452735705222 * 
EducationBasic + 0.20050085174927 * EducationGraduation + -0.0582668884993 * EducationMaster + 
0.33965651292585 * Marital_StatusDivorced + -0.51738607463653 * Marital_StatusMarried + 
0.57209809625866 * Marital_StatusSingle + -0.44546779779432 * Marital_StatusTogether ;
446575    +   H13  = H13  +     0.01128025797292 * Education2n_Cycle
446576    +          +      0.2331829736493 * EducationBasic  +    -0.21365797510985 *
446577    +        EducationGraduation  +     -0.0762564849741 * EducationMaster
446578    +          +     -0.0712692029901 * Marital_StatusDivorced
446579    +          +      0.2989539150548 * Marital_StatusMarried
446580    +          +    -0.07088797938783 * Marital_StatusSingle
446581    +          +     0.16185370186238 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01128025797292 * Education2n_Cycle + 0.2331829736493 * 
EducationBasic + -0.21365797510985 * EducationGraduation + -0.0762564849741 * EducationMaster 
+ -0.0712692029901 * Marital_StatusDivorced + 0.2989539150548 * Marital_StatusMarried + 
-0.07088797938783 * Marital_StatusSingle + 0.16185370186238 * Marital_StatusTogether ;
446582    +   H14  = H14  +     -0.2070379700286 * Education2n_Cycle
446583    +          +    -0.01037898928967 * EducationBasic  +     0.15025928327392 *
446584    +        EducationGraduation  +    -0.01705681126182 * EducationMaster
446585    +          +    -0.06075465978816 * Marital_StatusDivorced
446586    +          +     0.23328087967095 * Marital_StatusMarried
446587    +          +    -0.34401062494093 * Marital_StatusSingle
446588    +          +     0.53078479431088 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.2070379700286 * Education2n_Cycle + -0.01037898928967 * 
EducationBasic + 0.15025928327392 * EducationGraduation + -0.01705681126182 * EducationMaster 
+ -0.06075465978816 * Marital_StatusDivorced + 0.23328087967095 * Marital_StatusMarried + 
-0.34401062494093 * Marital_StatusSingle + 0.53078479431088 * Marital_StatusTogether ;
446589    +   H15  = H15  +     0.02459175230987 * Education2n_Cycle
446590    +          +     -0.4108033280498 * EducationBasic  +     0.20104265551967 *
446591    +        EducationGraduation  +     0.36213037498234 * EducationMaster
446592    +          +    -0.07312045395545 * Marital_StatusDivorced
446593    +          +     1.08247738273721 * Marital_StatusMarried
446594    +          +    -0.68676298741916 * Marital_StatusSingle
446595    +          +     0.62203169255788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.02459175230987 * Education2n_Cycle + -0.4108033280498 * 
EducationBasic + 0.20104265551967 * EducationGraduation + 0.36213037498234 * EducationMaster + 
-0.07312045395545 * Marital_StatusDivorced + 1.08247738273721 * Marital_StatusMarried + 
-0.68676298741916 * Marital_StatusSingle + 0.62203169255788 * Marital_StatusTogether ;
446596    +   H16  = H16  +    -0.18585334310939 * Education2n_Cycle
446597    +          +    -0.23205958818402 * EducationBasic  +    -0.13603377834078 *
446598    +        EducationGraduation  +    -0.11419275271029 * EducationMaster
446599    +          +    -0.20451618892357 * Marital_StatusDivorced
446600    +          +    -0.41145969312049 * Marital_StatusMarried
446601    +          +     0.44568613045702 * Marital_StatusSingle
446602    +          +    -0.24768465153678 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.18585334310939 * Education2n_Cycle + -0.23205958818402 * 
EducationBasic + -0.13603377834078 * EducationGraduation + -0.11419275271029 * EducationMaster 
+ -0.20451618892357 * Marital_StatusDivorced + -0.41145969312049 * Marital_StatusMarried + 
0.44568613045702 * Marital_StatusSingle + -0.24768465153678 * Marital_StatusTogether ;
446603    +   H11  =    -0.04019762461382 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04019762461382 + H11 ;
446604    +   H12  =     0.36549512230095 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36549512230095 + H12 ;
446605    +   H13  =    -1.38204627706606 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38204627706606 + H13 ;
446606    +   H14  =     1.38298399879632 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.38298399879632 + H14 ;
446607    +   H15  =     0.90313152481164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90313152481164 + H15 ;
446608    +   H16  =     -2.1000519329276 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.1000519329276 + H16 ;
446609    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
446610    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
446611    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
446612    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
446613    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
446614    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
446615    +END;
MPRINT(EM_DIAGRAM):   END;
446616    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
446617    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
446618    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
446619    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
446620    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
446621    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
446622    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
446623    +END;
MPRINT(EM_DIAGRAM):   END;
446624    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446625    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
446626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446627    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
446628    +   P_DepVar1  =     1.88165923386255 * H11  +     2.52776524502163 * H12
446629    +          +    -1.77389131292532 * H13  +    -1.81244588070617 * H14
446630    +          +    -2.95309978013668 * H15  +    -2.05211179893121 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.88165923386255 * H11 + 2.52776524502163 * H12 + 
-1.77389131292532 * H13 + -1.81244588070617 * H14 + -2.95309978013668 * H15 + 
-2.05211179893121 * H16 ;
446631    +   P_DepVar1  =    -2.12016790420361 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.12016790420361 + P_DepVar1 ;
446632    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
446633    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
446634    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
446635    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
446636    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
446637    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
446638    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
446639    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
446640    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
446641    +END;
MPRINT(EM_DIAGRAM):   END;
446642    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
446643    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
446644    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
446645    +END;
MPRINT(EM_DIAGRAM):   END;
446646    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
446647    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
446648    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
446649    +END;
MPRINT(EM_DIAGRAM):   END;
446650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446651    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
446652    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446653    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
446654    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
446655    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
446656    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
446657    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
446658    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
446659    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
446660    +END;
MPRINT(EM_DIAGRAM):   END;
446661    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
446662    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
446663    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
446664    +drop
446665    +H11
446666    +H12
446667    +H13
446668    +H14
446669    +H15
446670    +H16
446671    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
446672    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
446673     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
446674     quit;
446675     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
446676     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
446677     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
446678     retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
446679     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
446680     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

446681     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
446682     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446683     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446684     proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
446685     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446686     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

446687     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
446688     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
446689     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
446690     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446691     proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
446692     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

446693     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
446694     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446695     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446696     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
446697     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
446698     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446699     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446700     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
446701     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
446701   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

446702     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

446703     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
446704     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446705     filename _pref
446705   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
446706     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
446707     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
446708    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
446709    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
446710    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
446711    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
446712    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
446713    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
446714     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
446715     quit;
446716     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
446717     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
446718     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
446719     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
446720     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
446721     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446722     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
446723     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446724     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

446725     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
446726     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446727     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446728     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
446729     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
446730     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
446731     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446732     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
446733     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

446734     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
446735     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446736     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446737     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
446738     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
446739     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446740     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

446741     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
446742     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
446742   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

446743     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446744     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
446745     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446746     filename _pref
446746   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
446747     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
446748     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
446749    +
446750    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
446751    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
446751   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
446752    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
446753    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
446754    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
446755    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
446756    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
446757     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
446758     quit;
446759     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
446760     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
446761     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
446762     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
446763     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
446764     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446765     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
446766     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446767     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

446768     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
446769     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446770     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446771     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
446772     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
446773     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
446774     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446775     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
446776     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

446777     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
446778     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446779     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446780     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
446781     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
446782     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446783     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446784     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
446785     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
446785   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

446786     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446787     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
446788     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446789     filename _pref
446789   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
446790     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
446791     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
446792    +
446793    +
446794    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
446795    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
446796    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
446797    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
446798    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
446799    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
446800    +
446801    +
446802    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
446803    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
446804    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
446805    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
446806    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
446807    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
446808    +
446809    +
446810    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
446811    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
446812    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
446813    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
446814    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
446815    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
446816    +
446817    +
446818    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
446819    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
446820    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
446821    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
446822    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
446823    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
446824    +
446825    +
446826    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
446827    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
446828    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
446829    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
446830    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
446831    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
446832    +
446833    +
446834    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
446835    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
446836    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
446837    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
446838    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
446839    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
446840    +
446841    +
446842    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
446843    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
446844    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
446845    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
446846    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
446847    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
446848    +
446849    +
446850    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
446851    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
446852    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
446853    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
446854    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
446855    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
446856    +if
446857    +_FILTERNORM1 not in ( '.')
446858    + and
446859    +_FILTERNORM2 not in ( '.')
446860    + and
446861    +_FILTERNORM3 not in ( '.')
446862    + and
446863    +_FILTERNORM4 not in ( '.')
446864    + and
446865    +_FILTERNORM5 not in ( '.')
446866    + and
446867    +_FILTERNORM6 not in ( '.')
446868    + and
446869    +_FILTERNORM7 not in ( ' ')
446870    + and
446871    +_FILTERNORM8 not in ( ' ')
446872    +and
446873    +( Dt_Customer ne .)
446874    +and ( Income ne . and (Income<=107000))
446875    +and ( Kidhome ne .)
446876    +and ( MntFishProducts ne .)
446877    +and ( MntFruits ne .)
446878    +and ( MntGoldProds ne .)
446879    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
446880    +and ( MntSweetProducts ne .)
446881    +and ( MntWines ne .)
446882    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
446883    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
446884    +and ( NumStorePurchases ne .)
446885    +and ( NumWebPurchases ne .)
446886    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
446887    +and ( Recency ne .)
446888    +and ( Teenhome ne .)
446889    +and ( Year_Birth ne .)
446890    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
446891    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
446892    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
446893    +end;
MPRINT(EM_DIAGRAM):   end;
446894    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
446895    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
446896     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
446897     quit;
446898     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
446899     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
446900     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
446901     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
446902     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
446903     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446904     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
446905     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446906     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

446907     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
446908     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446909     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446910     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
446911     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
446912     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
446913     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446914     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
446915     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

446916     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
446917     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446918     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446919     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
446920     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
446921     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
446922     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

446923     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
446924     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
446924   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

446925     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446926     proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl27_FCMP data=_tempx;
446927     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL27_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL27_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446928     %macro varDept(fcmpdata=,id=);
446929     %global nobs&id scoreFlag&id;
446930     %let scoreFlag&id = 0;
446931     %if &id=1 or ^&fcmpStart %then %do;
446932     proc sort data=&fcmpdata out=_temp&id nodupkey;
446933     by NAME;
446934     where id=&id and LHS in( %let j=1;
446935     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
446936     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
446937     "&var" %let j = %eval(&j+1);
446938     %end;
446939     );
446940     run;
446941     %let dsid = %sysfunc(open(_temp&id));
446942     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
446943     %let dsid = %sysfunc(close(&dsid));
446944     %if &&nobs&id %then %do;
446945     %let scoreFlag&id = 1;
446946     %let fcmpStart = 1;
446947     %end;
446948     %else %let fcmpStart = 0;
446949     %end;
446950     %else %do;
446951     proc sort data=&fcmpdata out=_tempid;
446952     where id=&id;
446953     by LHS;
446954     run;
446955     %let dsid = %sysfunc(open(_tempid));
446956     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
446957     %let dsid = %sysfunc(close(&dsid));
446958     %if ^&&nobs&id %then %do;
446959     proc datasets lib=work nolist;
446960     delete _tempid;
446961     run;
446962     quit;
446963     %end;
446964     %else %do;
446965     data _tempAll;
446966     set %let j=%eval(&id-1);
446967     %do x=1 %to &j;
446968     %if &&nobs&x %then %do;
446969     _temp&x %end;
446970     %end;
446971     ;
446972     run;
446973     proc sql;
446974     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
446974   ! work._tempid p2 where p.name=p2.lhs;
446975     quit;
446976     data _temp&id;
446977     set _temp&id;
446978     where LHS ne '' and NAME ne '' and Node ne '';
446979     run;
446980     proc datasets lib=work nolist;
446981     delete _tempAll;
446982     run;
446983     %let dsid = %sysfunc(open(_temp&id));
446984     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
446985     %let dsid = %sysfunc(close(&dsid));
446986     %if ^&&nobs&id %then %do;
446987     proc datasets lib=work nolist;
446988     delete _temp&id;
446989     run;
446990     quit;
446991     %end;
446992     %else %do;
446993     %let scoreFlag&id = 1;
446994     data _temp&id;
446995     set _temp&id;
446996     where LHS ne NAME and node ne '';
446997     run;
446998     %let dsid = %sysfunc(open(_temp&id));
446999     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
447000     %let dsid = %sysfunc(close(&dsid));
447001     %if ^&&nobs&id %then %do;
447002     proc datasets lib=work nolist;
447003     delete _temp&id;
447004     run;
447005     quit;
447006     %end;
447007     %else %do;
447008     proc sort data=_temp&id nodupkey;
447009     by LHS NAME;
447010     run;
447011     %end;
447012     %end;
447013     %end;
447014     %end;
447015     %mend varDept;
447016     %macro optCode(outdata=fcmpdata);
447017     %global fcmpStart;
447018     %let fcmpStart = 0;
447019     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
447020     %let NumNodes=9;
447021     %do k=1 %to &NumNodes;
447022     %vardept(fcmpdata=&outdata, id=&k);
447023     %end;
447024     %mend optCode;
447025     %optcode(outData=EMWS8.Ensmbl27_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl27_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

447026     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
447027     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
447028     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
447029     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

447030     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
447031     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
447032     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
447033     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

447034     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
447035     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
447035   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

447036     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

447037     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
447038     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
447039     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

447040     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
447041     * Ensmbl27: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Computing metadata for TRAIN data;
447042     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL27_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl27\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl27_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl27_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl27_TRAIN out=WORK.M2JN4D6G noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JN4D6G;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JN4D6G(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JN4D6G;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JN4D6G;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M175UYJQ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M175UYJQ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M175UYJQ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TRUMCH(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M175UYJQ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M175UYJQ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M175UYJQ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M175UYJQ;
MPRINT(EMADVISECOLUMNS):   set WORK.M175UYJQ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl27";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl27";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl27: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl27";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
447362     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
447363     set EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMINFO;
447364     where DATA='Ensmbl27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
447365     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL27_EMINFO.
      WHERE (DATA='Ensmbl27') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

447366     data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl27_EMINFO;
447367     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
447368     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
447369     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
447373     run;
447374     data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMINFO;
447375     set EMWS8.Ensmbl27_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl27_EMINFO WORK.MODELTEMP_INFO;
447376     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

447377     proc sort data = EMWS8.Ensmbl27_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl27_EMINFO NOTHREADS;
447378     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
447379     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

447380     proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural7_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
447381     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
447382     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL7_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

447383     proc sort data = EMWS8.Ensmbl27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
447384     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
447385     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL27_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

447386     data EMWS8.Ensmbl27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl27_EMINFO;
447387     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
447388     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
447389     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL27_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

447390     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
447391     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
447392     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
447393     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL27_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL27_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
