MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.55 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                10.55 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1_P3TE0 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1_P3TE0 new;
MPRINT(EM_DIAGRAM):   run;
2820256    filename emflow
2820256  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural42: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2820257    *------------------------------------------------------------*;
2820258    * AutoNeural42: Scoring DATA data;
2820259    *------------------------------------------------------------*;
2820260    data EMWS8.AutoNeural42_TRAIN
2820261    / view=EMWS8.AutoNeural42_TRAIN
2820262    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural42_TRAIN / view=EMWS8.AutoNeural42_TRAIN ;
2820263    set EMWS8.Meta2_TRAIN
2820264    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
2820265    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas.
2820266   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2820267   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2820268   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2820269   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2820270   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2820271   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2820272   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2820273   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2820274   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2820275   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2820276   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2820277   +LENGTH _WARN_ $4
2820278   +      F_DepVar  $ 12
2820279   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2820280   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2820281   +
2820282   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2820283   +
2820284   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2820285   +
2820286   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2820287   +
2820288   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2820289   +
2820290   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2820291   +
2820292   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2820293   +
2820294   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2820295   +
2820296   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2820297   +
2820298   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2820299   +
2820300   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2820301   +
2820302   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2820303   +
2820304   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2820305   +
2820306   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2820307   +
2820308   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2820309   +
2820310   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2820311   +
2820312   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2820313   +
2820314   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2820315   +
2820316   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2820317   +
2820318   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2820319   +
2820320   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2820321   +
2820322   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2820323   +
2820324   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2820325   +
2820326   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2820327   +
2820328   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2820329   +
2820330   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2820331   +
2820332   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2820333   +
2820334   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2820335   +
2820336   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2820337   +
2820338   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2820339   +
2820340   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2820341   +
2820342   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2820343   +
2820344   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2820345   +
2820346   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2820347   +
2820348   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2820349   +
2820350   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2820351   +
2820352   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2820353   +
2820354   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2820355   +
2820356   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2820357   +
2820358   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2820359   +
2820360   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2820361   +
2820362   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2820363   +
2820364   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2820365   +
2820366   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2820367   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2820368   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2820369   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2820370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2820371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820372   +end;
MPRINT(EM_DIAGRAM):   end;
2820373   +else do;
MPRINT(EM_DIAGRAM):   else do;
2820374   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2820375   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2820376   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2820377   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2820378   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2820379   +   end;
MPRINT(EM_DIAGRAM):   end;
2820380   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2820381   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2820382   +   end;
MPRINT(EM_DIAGRAM):   end;
2820383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2820384   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2820385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2820386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820387   +   end;
MPRINT(EM_DIAGRAM):   end;
2820388   +end;
MPRINT(EM_DIAGRAM):   end;
2820389   +
2820390   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2820391   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2820392   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2820393   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2820394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2820395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820396   +end;
MPRINT(EM_DIAGRAM):   end;
2820397   +else do;
MPRINT(EM_DIAGRAM):   else do;
2820398   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2820399   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2820400   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2820401   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2820402   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2820403   +   end;
MPRINT(EM_DIAGRAM):   end;
2820404   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2820405   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2820406   +   end;
MPRINT(EM_DIAGRAM):   end;
2820407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2820408   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2820409   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2820410   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820411   +   end;
MPRINT(EM_DIAGRAM):   end;
2820412   +end;
MPRINT(EM_DIAGRAM):   end;
2820413   +
2820414   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2820415   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2820416   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2820417   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2820418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2820419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820420   +end;
MPRINT(EM_DIAGRAM):   end;
2820421   +else do;
MPRINT(EM_DIAGRAM):   else do;
2820422   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2820423   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2820424   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2820425   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2820426   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2820427   +   end;
MPRINT(EM_DIAGRAM):   end;
2820428   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2820429   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2820430   +   end;
MPRINT(EM_DIAGRAM):   end;
2820431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2820432   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2820433   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2820434   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820435   +   end;
MPRINT(EM_DIAGRAM):   end;
2820436   +end;
MPRINT(EM_DIAGRAM):   end;
2820437   +
2820438   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2820439   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2820440   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2820441   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2820442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2820443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820444   +end;
MPRINT(EM_DIAGRAM):   end;
2820445   +else do;
MPRINT(EM_DIAGRAM):   else do;
2820446   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2820447   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2820448   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2820449   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2820450   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2820451   +   end;
MPRINT(EM_DIAGRAM):   end;
2820452   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2820453   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2820454   +   end;
MPRINT(EM_DIAGRAM):   end;
2820455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2820456   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2820457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2820458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820459   +   end;
MPRINT(EM_DIAGRAM):   end;
2820460   +end;
MPRINT(EM_DIAGRAM):   end;
2820461   +
2820462   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2820463   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2820464   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2820465   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2820466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2820467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820468   +end;
MPRINT(EM_DIAGRAM):   end;
2820469   +else do;
MPRINT(EM_DIAGRAM):   else do;
2820470   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2820471   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2820472   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2820473   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2820474   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2820475   +   end;
MPRINT(EM_DIAGRAM):   end;
2820476   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2820477   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2820478   +   end;
MPRINT(EM_DIAGRAM):   end;
2820479   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2820480   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2820481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2820482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820483   +   end;
MPRINT(EM_DIAGRAM):   end;
2820484   +end;
MPRINT(EM_DIAGRAM):   end;
2820485   +
2820486   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2820487   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2820488   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2820489   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2820490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2820491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820492   +end;
MPRINT(EM_DIAGRAM):   end;
2820493   +else do;
MPRINT(EM_DIAGRAM):   else do;
2820494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2820495   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2820496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2820497   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2820498   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2820499   +   end;
MPRINT(EM_DIAGRAM):   end;
2820500   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2820501   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2820502   +   end;
MPRINT(EM_DIAGRAM):   end;
2820503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2820504   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2820505   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2820506   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820507   +   end;
MPRINT(EM_DIAGRAM):   end;
2820508   +end;
MPRINT(EM_DIAGRAM):   end;
2820509   +
2820510   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2820511   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2820512   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2820513   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2820514   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2820515   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2820516   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2820517   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2820518   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2820519   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2820520   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2820521   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2820522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2820523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820524   +end;
MPRINT(EM_DIAGRAM):   end;
2820525   +else do;
MPRINT(EM_DIAGRAM):   else do;
2820526   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2820527   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2820528   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2820529   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2820530   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2820531   +   end;
MPRINT(EM_DIAGRAM):   end;
2820532   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2820533   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2820534   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2820535   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2820536   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2820537   +   end;
MPRINT(EM_DIAGRAM):   end;
2820538   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2820539   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2820540   +   end;
MPRINT(EM_DIAGRAM):   end;
2820541   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2820542   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2820543   +   end;
MPRINT(EM_DIAGRAM):   end;
2820544   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2820545   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2820546   +   end;
MPRINT(EM_DIAGRAM):   end;
2820547   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2820548   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2820549   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2820550   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2820551   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2820552   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2820553   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820554   +   end;
MPRINT(EM_DIAGRAM):   end;
2820555   +end;
MPRINT(EM_DIAGRAM):   end;
2820556   +
2820557   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2820558   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2820559   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2820560   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2820561   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2820562   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2820563   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2820564   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2820565   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2820566   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2820567   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2820568   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2820569   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2820570   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2820571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820572   +end;
MPRINT(EM_DIAGRAM):   end;
2820573   +else do;
MPRINT(EM_DIAGRAM):   else do;
2820574   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2820575   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2820576   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2820577   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2820578   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2820579   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2820580   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2820581   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2820582   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2820583   +         end;
MPRINT(EM_DIAGRAM):   end;
2820584   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2820585   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2820586   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2820587   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2820588   +            end;
MPRINT(EM_DIAGRAM):   end;
2820589   +         end;
MPRINT(EM_DIAGRAM):   end;
2820590   +      end;
MPRINT(EM_DIAGRAM):   end;
2820591   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2820592   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2820593   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2820594   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2820595   +         end;
MPRINT(EM_DIAGRAM):   end;
2820596   +      end;
MPRINT(EM_DIAGRAM):   end;
2820597   +   end;
MPRINT(EM_DIAGRAM):   end;
2820598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2820599   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2820600   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2820601   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2820602   +      end;
MPRINT(EM_DIAGRAM):   end;
2820603   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2820604   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2820605   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2820606   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2820607   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2820608   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2820609   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2820610   +         end;
MPRINT(EM_DIAGRAM):   end;
2820611   +      end;
MPRINT(EM_DIAGRAM):   end;
2820612   +   end;
MPRINT(EM_DIAGRAM):   end;
2820613   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2820614   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2820615   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2820616   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2820617   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2820618   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2820619   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820620   +   end;
MPRINT(EM_DIAGRAM):   end;
2820621   +end;
MPRINT(EM_DIAGRAM):   end;
2820622   +
2820623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820624   +*** Checking missing input Interval
2820625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2820626   +
2820627   +IF NMISS(
2820628   +   Income ,
2820629   +   Kidhome ,
2820630   +   MntFishProducts ,
2820631   +   MntFruits ,
2820632   +   MntGoldProds ,
2820633   +   MntMeatProducts ,
2820634   +   MntSweetProducts ,
2820635   +   MntWines ,
2820636   +   NumCatalogPurchases ,
2820637   +   NumDealsPurchases ,
2820638   +   NumStorePurchases ,
2820639   +   NumWebPurchases ,
2820640   +   NumWebVisitsMonth ,
2820641   +   Recency ,
2820642   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2820643   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2820644   +
2820645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2820646   +END;
MPRINT(EM_DIAGRAM):   END;
2820647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820648   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2820649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820650   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2820651   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2820652   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2820653   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2820654   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2820655   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2820656   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2820657   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2820658   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2820659   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2820660   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2820661   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2820662   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2820663   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2820664   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2820665   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2820666   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2820667   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2820668   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2820669   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2820670   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2820671   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2820672   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2820673   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2820674   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2820675   +END;
MPRINT(EM_DIAGRAM):   END;
2820676   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2820677   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2820678   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2820679   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2820680   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2820681   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2820682   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2820683   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2820684   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2820685   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2820686   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2820687   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2820688   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2820689   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2820690   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2820691   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2820692   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2820693   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2820694   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2820695   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2820696   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2820697   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2820698   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2820699   +   ELSE S_NumCatalogPurchases
2820700   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2820701   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2820702   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2820703   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2820704   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2820705   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2820706   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2820707   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2820708   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2820709   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2820710   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2820711   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2820712   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2820713   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2820714   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2820715   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2820716   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2820717   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2820718   +END;
MPRINT(EM_DIAGRAM):   END;
2820719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820720   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2820721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820723   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2820724   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820726   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2820727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820728   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2820729   +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
2820730   +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
2820731   +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
2820732   +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
2820733   +          +     0.13203247258141 * S_MntSweetProducts
2820734   +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
2820735   +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
2820736   +          +     1.48881174203434 * S_NumStorePurchases
2820737   +          +     2.06403591844726 * S_NumWebPurchases
2820738   +          +    -0.09535558759694 * S_NumWebVisitsMonth
2820739   +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
2820740   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome + 
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 * 
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts 
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases + 
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases + 
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth + 
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
2820741   +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
2820742   +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
2820743   +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
2820744   +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
2820745   +          +      0.3852767951223 * S_MntSweetProducts
2820746   +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
2820747   +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
2820748   +          +     0.87686526091024 * S_NumStorePurchases
2820749   +          +     0.48807967312664 * S_NumWebPurchases
2820750   +          +     2.42770807785792 * S_NumWebVisitsMonth
2820751   +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
2820752   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome + 
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 * 
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts + 
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 * 
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 * 
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency + 
-0.38694456406673 * S_Teenhome ;
2820753   +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
2820754   +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
2820755   +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
2820756   +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
2820757   +          +      0.4461192743946 * S_MntSweetProducts
2820758   +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
2820759   +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
2820760   +          +     1.26831094932108 * S_NumStorePurchases
2820761   +          +     0.50819627174451 * S_NumWebPurchases
2820762   +          +      0.5463426309003 * S_NumWebVisitsMonth
2820763   +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
2820764   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome + 
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 * 
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts + 
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 * 
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 * 
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency + 
-0.99155600458731 * S_Teenhome ;
2820765   +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
2820766   +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
2820767   +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
2820768   +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
2820769   +          +     0.73630834236265 * S_MntSweetProducts
2820770   +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
2820771   +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
2820772   +          +     2.08815797619397 * S_NumStorePurchases
2820773   +          +     1.47250122683369 * S_NumWebPurchases
2820774   +          +    -1.95745344341946 * S_NumWebVisitsMonth
2820775   +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
2820776   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome + 
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 * 
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts 
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases + 
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases + 
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth + 
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
2820777   +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
2820778   +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
2820779   +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
2820780   +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
2820781   +          +    -0.23438993753342 * S_MntSweetProducts
2820782   +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
2820783   +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
2820784   +          +    -0.49697408067153 * S_NumStorePurchases
2820785   +          +     0.41091736049576 * S_NumWebPurchases
2820786   +          +     1.61180593172142 * S_NumWebVisitsMonth
2820787   +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
2820788   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome + 
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 * 
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts 
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 * 
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 * 
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency + 
-0.30863432234672 * S_Teenhome ;
2820789   +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
2820790   +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
2820791   +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
2820792   +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
2820793   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 * 
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 + 
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
2820794   +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
2820795   +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
2820796   +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
2820797   +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
2820798   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734 
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 + 
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
2820799   +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
2820800   +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
2820801   +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
2820802   +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
2820803   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 * 
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 + 
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
2820804   +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
2820805   +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
2820806   +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
2820807   +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
2820808   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 * 
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 + 
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
2820809   +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
2820810   +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
2820811   +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
2820812   +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
2820813   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996 
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 + 
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
2820814   +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
2820815   +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
2820816   +        EducationGraduation  +    -0.01483389086199 * EducationMaster
2820817   +          +    -0.14951932081311 * Marital_StatusDivorced
2820818   +          +     0.08343648358981 * Marital_StatusMarried
2820819   +          +    -0.52143432598374 * Marital_StatusSingle
2820820   +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle + 
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation + 
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced + 
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle + 
-0.17799942229122 * Marital_StatusTogether ;
2820821   +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
2820822   +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
2820823   +        EducationGraduation  +    -0.38968023972702 * EducationMaster
2820824   +          +    -0.34495973695408 * Marital_StatusDivorced
2820825   +          +    -0.30910829853532 * Marital_StatusMarried
2820826   +          +     0.14431404541055 * Marital_StatusSingle
2820827   +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle + 
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation + 
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced + 
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle + 
-0.62673029935295 * Marital_StatusTogether ;
2820828   +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
2820829   +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
2820830   +        EducationGraduation  +     0.05582780345024 * EducationMaster
2820831   +          +     0.81191732290197 * Marital_StatusDivorced
2820832   +          +    -2.53108753227171 * Marital_StatusMarried
2820833   +          +     2.21769123178832 * Marital_StatusSingle
2820834   +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle + 
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation + 
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced + 
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle + 
-0.90613443546426 * Marital_StatusTogether ;
2820835   +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
2820836   +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
2820837   +        EducationGraduation  +     0.52527957409681 * EducationMaster
2820838   +          +    -1.26246836163545 * Marital_StatusDivorced
2820839   +          +     0.73147045162506 * Marital_StatusMarried
2820840   +          +     0.04252836823306 * Marital_StatusSingle
2820841   +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle + 
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681 
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 * 
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 * 
Marital_StatusTogether ;
2820842   +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
2820843   +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
2820844   +        EducationGraduation  +      0.0979905405754 * EducationMaster
2820845   +          +    -0.25571808514992 * Marital_StatusDivorced
2820846   +          +     0.20684027342845 * Marital_StatusMarried
2820847   +          +    -0.36983627747986 * Marital_StatusSingle
2820848   +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle + 
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 * 
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 * 
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 * 
Marital_StatusTogether ;
2820849   +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
2820850   +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
2820851   +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
2820852   +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
2820853   +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
2820854   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2820855   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2820856   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2820857   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2820858   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2820859   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2820860   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2820861   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2820862   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2820863   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2820864   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2820865   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2820866   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2820867   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2820868   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2820869   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2820870   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2820871   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2820872   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2820873   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2820874   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2820875   +END;
MPRINT(EM_DIAGRAM):   END;
2820876   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2820877   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2820878   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2820879   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2820880   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2820881   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2820882   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2820883   +END;
MPRINT(EM_DIAGRAM):   END;
2820884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820885   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2820886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820887   +
2820888   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2820889   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2820890   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2820891   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2820892   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2820893   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2820894   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2820895   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2820896   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2820897   +end;
MPRINT(EM_DIAGRAM):   end;
2820898   +else do;
MPRINT(EM_DIAGRAM):   else do;
2820899   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2820900   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2820901   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2820902   +   end;
MPRINT(EM_DIAGRAM):   end;
2820903   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2820904   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2820905   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2820906   +   end;
MPRINT(EM_DIAGRAM):   end;
2820907   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2820908   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2820909   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2820910   +   end;
MPRINT(EM_DIAGRAM):   end;
2820911   +end;
MPRINT(EM_DIAGRAM):   end;
2820912   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2820913   +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
2820914   +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
2820915   +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 + 
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 + 
0.14986282100716 * H1x1_6 ;
2820916   +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
2820917   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2820918   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2820919   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2820920   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2820921   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2820922   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2820923   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2820924   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2820925   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2820926   +END;
MPRINT(EM_DIAGRAM):   END;
2820927   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2820928   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2820929   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2820930   +END;
MPRINT(EM_DIAGRAM):   END;
2820931   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2820932   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2820933   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2820934   +END;
MPRINT(EM_DIAGRAM):   END;
2820935   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2820936   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2820937   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2820938   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2820939   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2820940   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2820941   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2820942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820943   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2820944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2820945   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2820946   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2820947   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2820948   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2820949   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2820950   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2820951   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2820952   +END;
MPRINT(EM_DIAGRAM):   END;
2820953   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2820954   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2820955   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2820956   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2820957    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL42_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2820958    quit;
2820959    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2820960    filename emflow
2820960  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural42: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2820961    *------------------------------------------------------------*;
2820962    * AutoNeural42: Scoring VALIDATE data;
2820963    *------------------------------------------------------------*;
2820964    data EMWS8.AutoNeural42_VALIDATE
2820965    / view=EMWS8.AutoNeural42_VALIDATE
2820966    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural42_VALIDATE / view=EMWS8.AutoNeural42_VALIDATE ;
2820967    set EMWS8.Meta2_VALIDATE
2820968    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
2820969    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas.
2820970   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2820971   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2820972   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2820973   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2820974   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2820975   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2820976   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2820977   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2820978   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2820979   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2820980   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2820981   +LENGTH _WARN_ $4
2820982   +      F_DepVar  $ 12
2820983   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2820984   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2820985   +
2820986   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2820987   +
2820988   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2820989   +
2820990   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2820991   +
2820992   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2820993   +
2820994   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2820995   +
2820996   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2820997   +
2820998   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2820999   +
2821000   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2821001   +
2821002   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2821003   +
2821004   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2821005   +
2821006   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2821007   +
2821008   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2821009   +
2821010   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2821011   +
2821012   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2821013   +
2821014   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2821015   +
2821016   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2821017   +
2821018   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2821019   +
2821020   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2821021   +
2821022   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2821023   +
2821024   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2821025   +
2821026   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2821027   +
2821028   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2821029   +
2821030   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2821031   +
2821032   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2821033   +
2821034   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2821035   +
2821036   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2821037   +
2821038   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2821039   +
2821040   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2821041   +
2821042   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2821043   +
2821044   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2821045   +
2821046   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2821047   +
2821048   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2821049   +
2821050   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2821051   +
2821052   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2821053   +
2821054   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2821055   +
2821056   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2821057   +
2821058   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2821059   +
2821060   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2821061   +
2821062   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2821063   +
2821064   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2821065   +
2821066   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2821067   +
2821068   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2821069   +
2821070   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2821071   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2821072   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2821073   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2821074   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2821075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821076   +end;
MPRINT(EM_DIAGRAM):   end;
2821077   +else do;
MPRINT(EM_DIAGRAM):   else do;
2821078   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2821079   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2821080   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2821081   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2821082   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2821083   +   end;
MPRINT(EM_DIAGRAM):   end;
2821084   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2821085   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2821086   +   end;
MPRINT(EM_DIAGRAM):   end;
2821087   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2821088   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2821089   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2821090   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821091   +   end;
MPRINT(EM_DIAGRAM):   end;
2821092   +end;
MPRINT(EM_DIAGRAM):   end;
2821093   +
2821094   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2821095   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2821096   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2821097   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2821098   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2821099   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821100   +end;
MPRINT(EM_DIAGRAM):   end;
2821101   +else do;
MPRINT(EM_DIAGRAM):   else do;
2821102   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2821103   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2821104   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2821105   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2821106   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2821107   +   end;
MPRINT(EM_DIAGRAM):   end;
2821108   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2821109   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2821110   +   end;
MPRINT(EM_DIAGRAM):   end;
2821111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2821112   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2821113   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2821114   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821115   +   end;
MPRINT(EM_DIAGRAM):   end;
2821116   +end;
MPRINT(EM_DIAGRAM):   end;
2821117   +
2821118   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2821119   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2821120   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2821121   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2821122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2821123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821124   +end;
MPRINT(EM_DIAGRAM):   end;
2821125   +else do;
MPRINT(EM_DIAGRAM):   else do;
2821126   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2821127   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2821128   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2821129   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2821130   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2821131   +   end;
MPRINT(EM_DIAGRAM):   end;
2821132   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2821133   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2821134   +   end;
MPRINT(EM_DIAGRAM):   end;
2821135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2821136   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2821137   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2821138   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821139   +   end;
MPRINT(EM_DIAGRAM):   end;
2821140   +end;
MPRINT(EM_DIAGRAM):   end;
2821141   +
2821142   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2821143   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2821144   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2821145   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2821146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2821147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821148   +end;
MPRINT(EM_DIAGRAM):   end;
2821149   +else do;
MPRINT(EM_DIAGRAM):   else do;
2821150   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2821151   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2821152   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2821153   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2821154   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2821155   +   end;
MPRINT(EM_DIAGRAM):   end;
2821156   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2821157   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2821158   +   end;
MPRINT(EM_DIAGRAM):   end;
2821159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2821160   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2821161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2821162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821163   +   end;
MPRINT(EM_DIAGRAM):   end;
2821164   +end;
MPRINT(EM_DIAGRAM):   end;
2821165   +
2821166   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2821167   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2821168   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2821169   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2821170   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2821171   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821172   +end;
MPRINT(EM_DIAGRAM):   end;
2821173   +else do;
MPRINT(EM_DIAGRAM):   else do;
2821174   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2821175   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2821176   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2821177   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2821178   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2821179   +   end;
MPRINT(EM_DIAGRAM):   end;
2821180   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2821181   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2821182   +   end;
MPRINT(EM_DIAGRAM):   end;
2821183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2821184   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2821185   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2821186   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821187   +   end;
MPRINT(EM_DIAGRAM):   end;
2821188   +end;
MPRINT(EM_DIAGRAM):   end;
2821189   +
2821190   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2821191   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2821192   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2821193   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2821194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2821195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821196   +end;
MPRINT(EM_DIAGRAM):   end;
2821197   +else do;
MPRINT(EM_DIAGRAM):   else do;
2821198   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2821199   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2821200   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2821201   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2821202   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2821203   +   end;
MPRINT(EM_DIAGRAM):   end;
2821204   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2821205   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2821206   +   end;
MPRINT(EM_DIAGRAM):   end;
2821207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2821208   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2821209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2821210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821211   +   end;
MPRINT(EM_DIAGRAM):   end;
2821212   +end;
MPRINT(EM_DIAGRAM):   end;
2821213   +
2821214   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2821215   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2821216   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2821217   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2821218   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2821219   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2821220   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2821221   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2821222   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2821223   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2821224   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2821225   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2821226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2821227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821228   +end;
MPRINT(EM_DIAGRAM):   end;
2821229   +else do;
MPRINT(EM_DIAGRAM):   else do;
2821230   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2821231   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2821232   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2821233   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2821234   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2821235   +   end;
MPRINT(EM_DIAGRAM):   end;
2821236   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2821237   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2821238   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2821239   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2821240   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2821241   +   end;
MPRINT(EM_DIAGRAM):   end;
2821242   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2821243   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2821244   +   end;
MPRINT(EM_DIAGRAM):   end;
2821245   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2821246   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2821247   +   end;
MPRINT(EM_DIAGRAM):   end;
2821248   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2821249   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2821250   +   end;
MPRINT(EM_DIAGRAM):   end;
2821251   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2821252   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2821253   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2821254   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2821255   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2821256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2821257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821258   +   end;
MPRINT(EM_DIAGRAM):   end;
2821259   +end;
MPRINT(EM_DIAGRAM):   end;
2821260   +
2821261   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2821262   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2821263   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2821264   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2821265   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2821266   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2821267   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2821268   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2821269   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2821270   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2821271   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2821272   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2821273   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2821274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2821275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821276   +end;
MPRINT(EM_DIAGRAM):   end;
2821277   +else do;
MPRINT(EM_DIAGRAM):   else do;
2821278   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2821279   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2821280   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2821281   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2821282   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2821283   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2821284   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2821285   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2821286   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2821287   +         end;
MPRINT(EM_DIAGRAM):   end;
2821288   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2821289   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2821290   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2821291   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2821292   +            end;
MPRINT(EM_DIAGRAM):   end;
2821293   +         end;
MPRINT(EM_DIAGRAM):   end;
2821294   +      end;
MPRINT(EM_DIAGRAM):   end;
2821295   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2821296   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2821297   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2821298   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2821299   +         end;
MPRINT(EM_DIAGRAM):   end;
2821300   +      end;
MPRINT(EM_DIAGRAM):   end;
2821301   +   end;
MPRINT(EM_DIAGRAM):   end;
2821302   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2821303   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2821304   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2821305   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2821306   +      end;
MPRINT(EM_DIAGRAM):   end;
2821307   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2821308   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2821309   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2821310   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2821311   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2821312   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2821313   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2821314   +         end;
MPRINT(EM_DIAGRAM):   end;
2821315   +      end;
MPRINT(EM_DIAGRAM):   end;
2821316   +   end;
MPRINT(EM_DIAGRAM):   end;
2821317   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2821318   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2821319   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2821320   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2821321   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2821322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2821323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821324   +   end;
MPRINT(EM_DIAGRAM):   end;
2821325   +end;
MPRINT(EM_DIAGRAM):   end;
2821326   +
2821327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821328   +*** Checking missing input Interval
2821329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2821330   +
2821331   +IF NMISS(
2821332   +   Income ,
2821333   +   Kidhome ,
2821334   +   MntFishProducts ,
2821335   +   MntFruits ,
2821336   +   MntGoldProds ,
2821337   +   MntMeatProducts ,
2821338   +   MntSweetProducts ,
2821339   +   MntWines ,
2821340   +   NumCatalogPurchases ,
2821341   +   NumDealsPurchases ,
2821342   +   NumStorePurchases ,
2821343   +   NumWebPurchases ,
2821344   +   NumWebVisitsMonth ,
2821345   +   Recency ,
2821346   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2821347   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2821348   +
2821349   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2821350   +END;
MPRINT(EM_DIAGRAM):   END;
2821351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821352   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2821353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821354   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2821355   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2821356   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2821357   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2821358   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2821359   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2821360   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2821361   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2821362   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2821363   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2821364   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2821365   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2821366   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2821367   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2821368   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2821369   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2821370   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2821371   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2821372   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2821373   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2821374   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2821375   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2821376   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2821377   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2821378   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2821379   +END;
MPRINT(EM_DIAGRAM):   END;
2821380   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2821381   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2821382   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2821383   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2821384   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2821385   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2821386   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2821387   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2821388   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2821389   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2821390   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2821391   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2821392   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2821393   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2821394   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2821395   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2821396   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2821397   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2821398   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2821399   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2821400   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2821401   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2821402   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2821403   +   ELSE S_NumCatalogPurchases
2821404   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2821405   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2821406   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2821407   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2821408   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2821409   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2821410   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2821411   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2821412   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2821413   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2821414   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2821415   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2821416   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2821417   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2821418   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2821419   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2821420   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2821421   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2821422   +END;
MPRINT(EM_DIAGRAM):   END;
2821423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821424   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2821425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821427   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2821428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821430   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2821431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821432   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2821433   +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
2821434   +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
2821435   +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
2821436   +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
2821437   +          +     0.13203247258141 * S_MntSweetProducts
2821438   +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
2821439   +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
2821440   +          +     1.48881174203434 * S_NumStorePurchases
2821441   +          +     2.06403591844726 * S_NumWebPurchases
2821442   +          +    -0.09535558759694 * S_NumWebVisitsMonth
2821443   +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
2821444   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome + 
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 * 
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts 
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases + 
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases + 
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth + 
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
2821445   +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
2821446   +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
2821447   +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
2821448   +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
2821449   +          +      0.3852767951223 * S_MntSweetProducts
2821450   +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
2821451   +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
2821452   +          +     0.87686526091024 * S_NumStorePurchases
2821453   +          +     0.48807967312664 * S_NumWebPurchases
2821454   +          +     2.42770807785792 * S_NumWebVisitsMonth
2821455   +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
2821456   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome + 
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 * 
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts + 
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 * 
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 * 
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency + 
-0.38694456406673 * S_Teenhome ;
2821457   +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
2821458   +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
2821459   +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
2821460   +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
2821461   +          +      0.4461192743946 * S_MntSweetProducts
2821462   +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
2821463   +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
2821464   +          +     1.26831094932108 * S_NumStorePurchases
2821465   +          +     0.50819627174451 * S_NumWebPurchases
2821466   +          +      0.5463426309003 * S_NumWebVisitsMonth
2821467   +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
2821468   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome + 
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 * 
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts + 
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 * 
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 * 
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency + 
-0.99155600458731 * S_Teenhome ;
2821469   +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
2821470   +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
2821471   +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
2821472   +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
2821473   +          +     0.73630834236265 * S_MntSweetProducts
2821474   +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
2821475   +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
2821476   +          +     2.08815797619397 * S_NumStorePurchases
2821477   +          +     1.47250122683369 * S_NumWebPurchases
2821478   +          +    -1.95745344341946 * S_NumWebVisitsMonth
2821479   +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
2821480   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome + 
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 * 
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts 
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases + 
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases + 
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth + 
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
2821481   +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
2821482   +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
2821483   +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
2821484   +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
2821485   +          +    -0.23438993753342 * S_MntSweetProducts
2821486   +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
2821487   +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
2821488   +          +    -0.49697408067153 * S_NumStorePurchases
2821489   +          +     0.41091736049576 * S_NumWebPurchases
2821490   +          +     1.61180593172142 * S_NumWebVisitsMonth
2821491   +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
2821492   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome + 
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 * 
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts 
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 * 
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 * 
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency + 
-0.30863432234672 * S_Teenhome ;
2821493   +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
2821494   +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
2821495   +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
2821496   +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
2821497   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 * 
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 + 
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
2821498   +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
2821499   +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
2821500   +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
2821501   +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
2821502   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734 
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 + 
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
2821503   +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
2821504   +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
2821505   +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
2821506   +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
2821507   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 * 
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 + 
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
2821508   +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
2821509   +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
2821510   +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
2821511   +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
2821512   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 * 
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 + 
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
2821513   +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
2821514   +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
2821515   +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
2821516   +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
2821517   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996 
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 + 
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
2821518   +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
2821519   +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
2821520   +        EducationGraduation  +    -0.01483389086199 * EducationMaster
2821521   +          +    -0.14951932081311 * Marital_StatusDivorced
2821522   +          +     0.08343648358981 * Marital_StatusMarried
2821523   +          +    -0.52143432598374 * Marital_StatusSingle
2821524   +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle + 
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation + 
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced + 
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle + 
-0.17799942229122 * Marital_StatusTogether ;
2821525   +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
2821526   +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
2821527   +        EducationGraduation  +    -0.38968023972702 * EducationMaster
2821528   +          +    -0.34495973695408 * Marital_StatusDivorced
2821529   +          +    -0.30910829853532 * Marital_StatusMarried
2821530   +          +     0.14431404541055 * Marital_StatusSingle
2821531   +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle + 
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation + 
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced + 
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle + 
-0.62673029935295 * Marital_StatusTogether ;
2821532   +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
2821533   +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
2821534   +        EducationGraduation  +     0.05582780345024 * EducationMaster
2821535   +          +     0.81191732290197 * Marital_StatusDivorced
2821536   +          +    -2.53108753227171 * Marital_StatusMarried
2821537   +          +     2.21769123178832 * Marital_StatusSingle
2821538   +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle + 
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation + 
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced + 
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle + 
-0.90613443546426 * Marital_StatusTogether ;
2821539   +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
2821540   +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
2821541   +        EducationGraduation  +     0.52527957409681 * EducationMaster
2821542   +          +    -1.26246836163545 * Marital_StatusDivorced
2821543   +          +     0.73147045162506 * Marital_StatusMarried
2821544   +          +     0.04252836823306 * Marital_StatusSingle
2821545   +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle + 
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681 
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 * 
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 * 
Marital_StatusTogether ;
2821546   +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
2821547   +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
2821548   +        EducationGraduation  +      0.0979905405754 * EducationMaster
2821549   +          +    -0.25571808514992 * Marital_StatusDivorced
2821550   +          +     0.20684027342845 * Marital_StatusMarried
2821551   +          +    -0.36983627747986 * Marital_StatusSingle
2821552   +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle + 
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 * 
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 * 
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 * 
Marital_StatusTogether ;
2821553   +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
2821554   +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
2821555   +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
2821556   +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
2821557   +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
2821558   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2821559   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2821560   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2821561   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2821562   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2821563   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2821564   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2821565   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2821566   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2821567   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2821568   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2821569   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2821570   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2821571   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2821572   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2821573   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2821574   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2821575   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2821576   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2821577   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2821578   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2821579   +END;
MPRINT(EM_DIAGRAM):   END;
2821580   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2821581   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2821582   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2821583   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2821584   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2821585   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2821586   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2821587   +END;
MPRINT(EM_DIAGRAM):   END;
2821588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821589   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2821590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821591   +
2821592   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2821593   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2821594   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2821595   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2821596   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2821597   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2821598   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2821599   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2821600   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2821601   +end;
MPRINT(EM_DIAGRAM):   end;
2821602   +else do;
MPRINT(EM_DIAGRAM):   else do;
2821603   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2821604   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2821605   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2821606   +   end;
MPRINT(EM_DIAGRAM):   end;
2821607   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2821608   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2821609   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2821610   +   end;
MPRINT(EM_DIAGRAM):   end;
2821611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2821612   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2821613   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2821614   +   end;
MPRINT(EM_DIAGRAM):   end;
2821615   +end;
MPRINT(EM_DIAGRAM):   end;
2821616   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2821617   +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
2821618   +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
2821619   +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 + 
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 + 
0.14986282100716 * H1x1_6 ;
2821620   +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
2821621   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2821622   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2821623   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2821624   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2821625   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2821626   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2821627   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2821628   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2821629   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2821630   +END;
MPRINT(EM_DIAGRAM):   END;
2821631   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2821632   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2821633   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2821634   +END;
MPRINT(EM_DIAGRAM):   END;
2821635   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2821636   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2821637   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2821638   +END;
MPRINT(EM_DIAGRAM):   END;
2821639   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2821640   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2821641   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2821642   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2821643   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2821644   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2821645   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2821646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821647   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2821648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2821649   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2821650   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2821651   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2821652   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2821653   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2821654   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2821655   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2821656   +END;
MPRINT(EM_DIAGRAM):   END;
2821657   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2821658   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2821659   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2821660   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2821661    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL42_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2821662    quit;
2821663    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2821664    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2821665    * AutoNeural42: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural42: Computing metadata for TRAIN data;
2821666    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL42_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural42_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural42_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural42_TRAIN out=WORK.M38ZBPLA 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38ZBPLA;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M38ZBPLA(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38ZBPLA;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M38ZBPLA;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M07UVXBI NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07UVXBI;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M07UVXBI;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2TNO4TI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M07UVXBI;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07UVXBI;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M07UVXBI;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07UVXBI;
MPRINT(EMADVISECOLUMNS):   set WORK.M07UVXBI;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural42_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural42";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural42: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2821978    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2821979    set EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural42_EMINFO;
2821980    where DATA='AutoNeural42' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural42' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
2821981    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
      WHERE (DATA='AutoNeural42') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2821982    data EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural42_EMINFO;
2821983    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2821984    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2821985    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL42_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2821989    run;
2821990    data EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural42_EMINFO;
2821991    set EMWS8.AutoNeural42_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural42_EMINFO WORK.MODELTEMP_INFO;
2821992    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL42_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2821993    proc sort data = EMWS8.AutoNeural42_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural42_EMINFO NOTHREADS;
2821994    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2821995    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL42_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2821996    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2821997    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2821998    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2821999    proc sort data = EMWS8.AutoNeural42_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural42_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2822000    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2822001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2822002    data EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural42_EMINFO;
2822003    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2822004    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2822005    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL42_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2822006    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2822007    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2822008    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2822009    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.AUTONEURAL42_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL42_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
