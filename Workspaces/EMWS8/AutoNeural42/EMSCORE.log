MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2MFD9TH 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2MFD9TH new;
MPRINT(EM_DIAGRAM):   run;
479947     filename emflow
479947   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural42: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
479948     *------------------------------------------------------------*;
479949     * AutoNeural42: Scoring DATA data;
479950     *------------------------------------------------------------*;
479951     data EMWS8.AutoNeural42_TRAIN
479952     / view=EMWS8.AutoNeural42_TRAIN
479953     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural42_TRAIN / view=EMWS8.AutoNeural42_TRAIN ;
479954     set EMWS8.Meta2_TRAIN
479955     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
479956     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas.
479957    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
479958    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
479959    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
479960    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
479961    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
479962    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
479963    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
479964    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
479965    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
479966    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
479967    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
479968    +LENGTH _WARN_ $4
479969    +      F_DepVar  $ 12
479970    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
479971    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
479972    +
479973    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
479974    +
479975    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
479976    +
479977    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
479978    +
479979    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
479980    +
479981    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
479982    +
479983    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
479984    +
479985    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
479986    +
479987    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
479988    +
479989    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
479990    +
479991    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
479992    +
479993    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
479994    +
479995    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
479996    +
479997    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
479998    +
479999    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
480000    +
480001    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
480002    +
480003    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
480004    +
480005    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
480006    +
480007    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
480008    +
480009    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
480010    +
480011    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
480012    +
480013    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
480014    +
480015    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
480016    +
480017    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
480018    +
480019    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
480020    +
480021    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
480022    +
480023    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
480024    +
480025    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
480026    +
480027    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
480028    +
480029    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
480030    +
480031    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
480032    +
480033    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
480034    +
480035    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
480036    +
480037    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
480038    +
480039    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
480040    +
480041    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
480042    +
480043    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
480044    +
480045    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
480046    +
480047    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
480048    +
480049    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
480050    +
480051    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
480052    +
480053    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
480054    +
480055    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
480056    +
480057    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
480058    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
480059    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
480060    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
480061    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
480062    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
480063    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
480064    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
480065    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
480066    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
480067    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
480068    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
480069    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
480070    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
480071    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480072    +end;
MPRINT(EM_DIAGRAM):   end;
480073    +else do;
MPRINT(EM_DIAGRAM):   else do;
480074    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
480075    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
480076    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
480077    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
480078    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
480079    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
480080    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
480081    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
480082    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480083    +         end;
MPRINT(EM_DIAGRAM):   end;
480084    +         else do;
MPRINT(EM_DIAGRAM):   else do;
480085    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
480086    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
480087    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480088    +            end;
MPRINT(EM_DIAGRAM):   end;
480089    +         end;
MPRINT(EM_DIAGRAM):   end;
480090    +      end;
MPRINT(EM_DIAGRAM):   end;
480091    +      else do;
MPRINT(EM_DIAGRAM):   else do;
480092    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
480093    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
480094    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480095    +         end;
MPRINT(EM_DIAGRAM):   end;
480096    +      end;
MPRINT(EM_DIAGRAM):   end;
480097    +   end;
MPRINT(EM_DIAGRAM):   end;
480098    +   else do;
MPRINT(EM_DIAGRAM):   else do;
480099    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
480100    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
480101    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480102    +      end;
MPRINT(EM_DIAGRAM):   end;
480103    +      else do;
MPRINT(EM_DIAGRAM):   else do;
480104    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
480105    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
480106    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
480107    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
480108    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
480109    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480110    +         end;
MPRINT(EM_DIAGRAM):   end;
480111    +      end;
MPRINT(EM_DIAGRAM):   end;
480112    +   end;
MPRINT(EM_DIAGRAM):   end;
480113    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
480114    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
480115    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
480116    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
480117    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
480118    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
480119    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480120    +   end;
MPRINT(EM_DIAGRAM):   end;
480121    +end;
MPRINT(EM_DIAGRAM):   end;
480122    +
480123    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480124    +*** Checking missing input Interval
480125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
480126    +
480127    +IF NMISS(
480128    +   AcceptedCmpTotal ,
480129    +   Frq ,
480130    +   Income ,
480131    +   Mnt ,
480132    +   MntGoldProds ,
480133    +   MntMeatProducts ,
480134    +   NumCatalogPurchases ,
480135    +   NumDealsPurchases ,
480136    +   NumWebVisitsMonth ,
480137    +   RFMstat ,
480138    +   Recency ,
480139    +   Teenhome ,
480140    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
480141    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
480142    +
480143    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480144    +END;
MPRINT(EM_DIAGRAM):   END;
480145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480146    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
480147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480148    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480149    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
480150    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
480151    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
480152    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
480153    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
480154    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
480155    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
480156    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
480157    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
480158    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
480159    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
480160    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
480161    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
480162    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
480163    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
480164    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
480165    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
480166    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
480167    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
480168    +END;
MPRINT(EM_DIAGRAM):   END;
480169    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
480170    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
480171    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
480172    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
480173    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
480174    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
480175    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
480176    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
480177    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
480178    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
480179    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
480180    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
480181    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
480182    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
480183    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
480184    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
480185    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
480186    +   ELSE S_NumCatalogPurchases
480187    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
480188    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
480189    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
480190    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
480191    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
480192    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
480193    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
480194    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
480195    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
480196    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
480197    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
480198    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
480199    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
480200    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
480201    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
480202    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
480203    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
480204    +END;
MPRINT(EM_DIAGRAM):   END;
480205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480206    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
480207    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480209    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
480210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480211    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480212    +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
480213    +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
480214    +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
480215    +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
480216    +          +    -12.1201262560598 * S_NumCatalogPurchases
480217    +          +    -7.64265449386917 * S_NumDealsPurchases
480218    +          +     -0.8154661733691 * S_NumWebVisitsMonth
480219    +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
480220    +        S_Recency  +     3.79010135100643 * S_Teenhome
480221    +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 * 
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 * 
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 * 
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 * 
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency + 
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
480222    +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
480223    +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
480224    +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
480225    +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
480226    +          +    -5.64377068696071 * S_NumCatalogPurchases
480227    +          +       1.315880732417 * S_NumDealsPurchases
480228    +          +    -7.12689902819995 * S_NumWebVisitsMonth
480229    +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
480230    +        S_Recency  +     2.42655161118896 * S_Teenhome
480231    +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 * 
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 * 
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 * 
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 * 
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency + 
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
480232    +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
480233    +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
480234    +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
480235    +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
480236    +          +    -7.71653347900468 * S_NumCatalogPurchases
480237    +          +    -2.29382480020793 * S_NumDealsPurchases
480238    +          +    -3.92350308032578 * S_NumWebVisitsMonth
480239    +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
480240    +        S_Recency  +     1.88830044274756 * S_Teenhome
480241    +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 * 
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 * 
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 * 
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 * 
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency + 
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
480242    +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
480243    +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
480244    +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
480245    +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
480246    +          +     0.50178849511862 * S_NumCatalogPurchases
480247    +          +     3.33915340676542 * S_NumDealsPurchases
480248    +          +     2.99171363234904 * S_NumWebVisitsMonth
480249    +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
480250    +        S_Recency  +     1.84778865722952 * S_Teenhome
480251    +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 * 
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 * 
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 * 
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 * 
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency + 
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
480252    +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
480253    +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
480254    +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
480255    +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
480256    +          +    -5.23430097842472 * S_NumCatalogPurchases
480257    +          +    -1.25644862473488 * S_NumDealsPurchases
480258    +          +     -3.0943337340276 * S_NumWebVisitsMonth
480259    +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
480260    +        S_Recency  +     1.52557456336148 * S_Teenhome
480261    +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 * 
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 * 
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 * 
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 * 
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency + 
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
480262    +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
480263    +          +     5.12496303990022 * Marital_StatusMarried
480264    +          +    -7.61364369696186 * Marital_StatusSingle
480265    +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced + 
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle + 
2.78937374370395 * Marital_StatusTogether ;
480266    +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
480267    +          +     7.65332274940308 * Marital_StatusMarried
480268    +          +    -5.13332947688313 * Marital_StatusSingle
480269    +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced + 
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle + 
8.25159601985572 * Marital_StatusTogether ;
480270    +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
480271    +          +     7.95162959069432 * Marital_StatusMarried
480272    +          +    -6.10797604390061 * Marital_StatusSingle
480273    +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced + 
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle + 
2.98577039618027 * Marital_StatusTogether ;
480274    +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
480275    +          +     5.45977621823616 * Marital_StatusMarried
480276    +          +    -10.3527985391218 * Marital_StatusSingle
480277    +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced + 
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle + 
4.66094015963389 * Marital_StatusTogether ;
480278    +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
480279    +          +     8.15909630638185 * Marital_StatusMarried
480280    +          +    -5.88497367282032 * Marital_StatusSingle
480281    +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced + 
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle + 
3.05474303626666 * Marital_StatusTogether ;
480282    +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
480283    +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
480284    +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
480285    +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
480286    +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
480287    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
480288    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
480289    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
480290    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
480291    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
480292    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
480293    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
480294    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
480295    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
480296    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
480297    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
480298    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
480299    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
480300    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
480301    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
480302    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
480303    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
480304    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
480305    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
480306    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
480307    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
480308    +END;
MPRINT(EM_DIAGRAM):   END;
480309    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
480310    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
480311    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
480312    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
480313    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
480314    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
480315    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
480316    +END;
MPRINT(EM_DIAGRAM):   END;
480317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480318    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
480319    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480320    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480321    +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
480322    +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
480323    +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
480324    +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
480325    +          +      0.8747576336553 * S_NumCatalogPurchases
480326    +          +    -0.23551985234916 * S_NumDealsPurchases
480327    +          +     0.83901499225112 * S_NumWebVisitsMonth
480328    +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
480329    +        S_Recency  +    -0.38340703993831 * S_Teenhome
480330    +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 * 
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 * 
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 * 
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 * 
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency + 
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
480331    +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
480332    +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
480333    +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
480334    +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
480335    +          +    -0.99107054453387 * S_NumCatalogPurchases
480336    +          +    -0.68379823410573 * S_NumDealsPurchases
480337    +          +    -1.67939872609259 * S_NumWebVisitsMonth
480338    +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
480339    +        S_Recency  +    -1.65033346710833 * S_Teenhome
480340    +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 * 
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 * 
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 * 
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 * 
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency + 
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
480341    +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
480342    +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
480343    +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
480344    +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
480345    +          +      1.4506330104932 * S_NumCatalogPurchases
480346    +          +     0.20085283861849 * S_NumDealsPurchases
480347    +          +     2.37974383924154 * S_NumWebVisitsMonth
480348    +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
480349    +        S_Recency  +     0.60726269989058 * S_Teenhome
480350    +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 * 
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 * 
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 * 
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 * 
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency + 
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
480351    +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
480352    +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
480353    +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
480354    +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
480355    +          +    -0.79952426911069 * S_NumCatalogPurchases
480356    +          +    -0.70571099772216 * S_NumDealsPurchases
480357    +          +    -0.32158728049114 * S_NumWebVisitsMonth
480358    +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
480359    +        S_Recency  +     2.29389047813725 * S_Teenhome
480360    +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 * 
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 * 
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 * 
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 * 
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency + 
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
480361    +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
480362    +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
480363    +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
480364    +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
480365    +          +    -0.41491605544255 * S_NumCatalogPurchases
480366    +          +     0.49374983047507 * S_NumDealsPurchases
480367    +          +    -1.38692718220359 * S_NumWebVisitsMonth
480368    +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
480369    +        S_Recency  +     1.29605991841828 * S_Teenhome
480370    +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 * 
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 * 
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 * 
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 * 
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency + 
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
480371    +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
480372    +          +    -1.29227303709115 * Marital_StatusMarried
480373    +          +     0.71446782242025 * Marital_StatusSingle
480374    +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced + 
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle + 
0.55295867102727 * Marital_StatusTogether ;
480375    +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
480376    +          +      2.0815223604364 * Marital_StatusMarried
480377    +          +     0.79462013188709 * Marital_StatusSingle
480378    +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced + 
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle + 
0.20668835346022 * Marital_StatusTogether ;
480379    +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
480380    +          +     0.44769683627357 * Marital_StatusMarried
480381    +          +     1.09957357551209 * Marital_StatusSingle
480382    +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced + 
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle + 
0.98246644516303 * Marital_StatusTogether ;
480383    +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
480384    +          +    -0.71096069683657 * Marital_StatusMarried
480385    +          +    -0.46849808497503 * Marital_StatusSingle
480386    +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced + 
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle + 
-0.50186472808298 * Marital_StatusTogether ;
480387    +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
480388    +          +     0.21000014809177 * Marital_StatusMarried
480389    +          +    -1.05959388759825 * Marital_StatusSingle
480390    +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced + 
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle + 
-0.8202251717493 * Marital_StatusTogether ;
480391    +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
480392    +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
480393    +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
480394    +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
480395    +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
480396    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
480397    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
480398    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
480399    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
480400    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
480401    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
480402    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
480403    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
480404    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
480405    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
480406    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
480407    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
480408    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
480409    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
480410    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
480411    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
480412    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
480413    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
480414    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
480415    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
480416    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
480417    +END;
MPRINT(EM_DIAGRAM):   END;
480418    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
480419    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
480420    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
480421    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
480422    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
480423    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
480424    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
480425    +END;
MPRINT(EM_DIAGRAM):   END;
480426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480427    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
480428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480429    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480430    +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
480431    +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
480432    +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 + 
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 + 
-7.94470945127082 * H1x1_6 ;
480433    +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
480434    +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
480435    +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 + 
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 + 
-1.96124154717115 * H1x1_6 ;
480436    +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
480437    +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
480438    +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 + 
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 + 
-5.26174801543685 * H1x1_6 ;
480439    +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
480440    +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
480441    +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 + 
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 + 
-1.34566786751269 * H1x1_6 ;
480442    +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
480443    +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
480444    +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 + 
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 + 
-4.42895004794637 * H1x1_6 ;
480445    +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
480446    +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
480447    +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
480448    +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2 
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 + 
-1.70956044020454 * H1x2_6 ;
480449    +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
480450    +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
480451    +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
480452    +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2 
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 + 
-0.90111756793979 * H1x2_6 ;
480453    +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
480454    +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
480455    +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
480456    +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 * 
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5 
+ 0.83089577154267 * H1x2_6 ;
480457    +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
480458    +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
480459    +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
480460    +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2 
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 + 
-0.21291665093094 * H1x2_6 ;
480461    +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
480462    +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
480463    +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
480464    +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2 
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 + 
0.28627108561279 * H1x2_6 ;
480465    +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
480466    +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
480467    +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
480468    +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
480469    +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
480470    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
480471    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
480472    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
480473    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
480474    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
480475    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
480476    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
480477    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
480478    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
480479    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
480480    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
480481    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
480482    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
480483    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
480484    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
480485    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
480486    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
480487    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
480488    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
480489    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
480490    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
480491    +END;
MPRINT(EM_DIAGRAM):   END;
480492    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
480493    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
480494    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
480495    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
480496    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
480497    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
480498    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
480499    +END;
MPRINT(EM_DIAGRAM):   END;
480500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480501    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
480502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480503    +
480504    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
480505    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
480506    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
480507    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
480508    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
480509    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
480510    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
480511    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
480512    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
480513    +end;
MPRINT(EM_DIAGRAM):   end;
480514    +else do;
MPRINT(EM_DIAGRAM):   else do;
480515    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
480516    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
480517    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
480518    +   end;
MPRINT(EM_DIAGRAM):   end;
480519    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
480520    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
480521    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
480522    +   end;
MPRINT(EM_DIAGRAM):   end;
480523    +   else do;
MPRINT(EM_DIAGRAM):   else do;
480524    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
480525    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
480526    +   end;
MPRINT(EM_DIAGRAM):   end;
480527    +end;
MPRINT(EM_DIAGRAM):   end;
480528    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480529    +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
480530    +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
480531    +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 + 
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 + 
2.70843493957574 * H2x1_6 ;
480532    +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
480533    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
480534    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
480535    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
480536    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
480537    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
480538    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
480539    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
480540    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
480541    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
480542    +END;
MPRINT(EM_DIAGRAM):   END;
480543    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
480544    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
480545    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
480546    +END;
MPRINT(EM_DIAGRAM):   END;
480547    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
480548    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
480549    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
480550    +END;
MPRINT(EM_DIAGRAM):   END;
480551    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
480552    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
480553    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
480554    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
480555    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
480556    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
480557    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
480558    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480559    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
480560    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480561    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
480562    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
480563    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
480564    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
480565    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
480566    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
480567    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
480568    +END;
MPRINT(EM_DIAGRAM):   END;
480569    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
480570    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
480571    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
480572    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
480573     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL42_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
480574     quit;
480575     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
480576     filename emflow
480576   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural42: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
480577     *------------------------------------------------------------*;
480578     * AutoNeural42: Scoring VALIDATE data;
480579     *------------------------------------------------------------*;
480580     data EMWS8.AutoNeural42_VALIDATE
480581     / view=EMWS8.AutoNeural42_VALIDATE
480582     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural42_VALIDATE / view=EMWS8.AutoNeural42_VALIDATE ;
480583     set EMWS8.Meta2_VALIDATE
480584     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
480585     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMFLOWSCORE.sas.
480586    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
480587    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
480588    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
480589    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
480590    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
480591    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
480592    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
480593    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
480594    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
480595    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
480596    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
480597    +LENGTH _WARN_ $4
480598    +      F_DepVar  $ 12
480599    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
480600    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
480601    +
480602    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
480603    +
480604    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
480605    +
480606    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
480607    +
480608    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
480609    +
480610    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
480611    +
480612    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
480613    +
480614    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
480615    +
480616    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
480617    +
480618    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
480619    +
480620    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
480621    +
480622    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
480623    +
480624    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
480625    +
480626    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
480627    +
480628    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
480629    +
480630    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
480631    +
480632    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
480633    +
480634    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
480635    +
480636    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
480637    +
480638    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
480639    +
480640    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
480641    +
480642    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
480643    +
480644    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
480645    +
480646    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
480647    +
480648    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
480649    +
480650    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
480651    +
480652    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
480653    +
480654    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
480655    +
480656    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
480657    +
480658    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
480659    +
480660    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
480661    +
480662    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
480663    +
480664    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
480665    +
480666    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
480667    +
480668    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
480669    +
480670    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
480671    +
480672    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
480673    +
480674    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
480675    +
480676    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
480677    +
480678    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
480679    +
480680    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
480681    +
480682    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
480683    +
480684    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
480685    +
480686    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
480687    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
480688    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
480689    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
480690    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
480691    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
480692    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
480693    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
480694    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
480695    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
480696    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
480697    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
480698    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
480699    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
480700    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480701    +end;
MPRINT(EM_DIAGRAM):   end;
480702    +else do;
MPRINT(EM_DIAGRAM):   else do;
480703    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
480704    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
480705    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
480706    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
480707    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
480708    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
480709    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
480710    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
480711    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480712    +         end;
MPRINT(EM_DIAGRAM):   end;
480713    +         else do;
MPRINT(EM_DIAGRAM):   else do;
480714    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
480715    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
480716    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480717    +            end;
MPRINT(EM_DIAGRAM):   end;
480718    +         end;
MPRINT(EM_DIAGRAM):   end;
480719    +      end;
MPRINT(EM_DIAGRAM):   end;
480720    +      else do;
MPRINT(EM_DIAGRAM):   else do;
480721    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
480722    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
480723    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480724    +         end;
MPRINT(EM_DIAGRAM):   end;
480725    +      end;
MPRINT(EM_DIAGRAM):   end;
480726    +   end;
MPRINT(EM_DIAGRAM):   end;
480727    +   else do;
MPRINT(EM_DIAGRAM):   else do;
480728    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
480729    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
480730    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480731    +      end;
MPRINT(EM_DIAGRAM):   end;
480732    +      else do;
MPRINT(EM_DIAGRAM):   else do;
480733    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
480734    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
480735    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
480736    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
480737    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
480738    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
480739    +         end;
MPRINT(EM_DIAGRAM):   end;
480740    +      end;
MPRINT(EM_DIAGRAM):   end;
480741    +   end;
MPRINT(EM_DIAGRAM):   end;
480742    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
480743    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
480744    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
480745    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
480746    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
480747    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
480748    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480749    +   end;
MPRINT(EM_DIAGRAM):   end;
480750    +end;
MPRINT(EM_DIAGRAM):   end;
480751    +
480752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480753    +*** Checking missing input Interval
480754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
480755    +
480756    +IF NMISS(
480757    +   AcceptedCmpTotal ,
480758    +   Frq ,
480759    +   Income ,
480760    +   Mnt ,
480761    +   MntGoldProds ,
480762    +   MntMeatProducts ,
480763    +   NumCatalogPurchases ,
480764    +   NumDealsPurchases ,
480765    +   NumWebVisitsMonth ,
480766    +   RFMstat ,
480767    +   Recency ,
480768    +   Teenhome ,
480769    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
480770    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
480771    +
480772    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
480773    +END;
MPRINT(EM_DIAGRAM):   END;
480774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480775    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
480776    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480777    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480778    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
480779    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
480780    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
480781    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
480782    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
480783    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
480784    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
480785    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
480786    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
480787    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
480788    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
480789    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
480790    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
480791    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
480792    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
480793    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
480794    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
480795    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
480796    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
480797    +END;
MPRINT(EM_DIAGRAM):   END;
480798    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
480799    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
480800    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
480801    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
480802    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
480803    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
480804    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
480805    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
480806    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
480807    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
480808    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
480809    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
480810    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
480811    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
480812    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
480813    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
480814    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
480815    +   ELSE S_NumCatalogPurchases
480816    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
480817    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
480818    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
480819    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
480820    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
480821    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
480822    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
480823    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
480824    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
480825    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
480826    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
480827    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
480828    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
480829    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
480830    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
480831    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
480832    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
480833    +END;
MPRINT(EM_DIAGRAM):   END;
480834    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480835    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
480836    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480837    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480838    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
480839    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480840    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480841    +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
480842    +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
480843    +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
480844    +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
480845    +          +    -12.1201262560598 * S_NumCatalogPurchases
480846    +          +    -7.64265449386917 * S_NumDealsPurchases
480847    +          +     -0.8154661733691 * S_NumWebVisitsMonth
480848    +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
480849    +        S_Recency  +     3.79010135100643 * S_Teenhome
480850    +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 * 
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 * 
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 * 
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 * 
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency + 
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
480851    +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
480852    +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
480853    +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
480854    +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
480855    +          +    -5.64377068696071 * S_NumCatalogPurchases
480856    +          +       1.315880732417 * S_NumDealsPurchases
480857    +          +    -7.12689902819995 * S_NumWebVisitsMonth
480858    +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
480859    +        S_Recency  +     2.42655161118896 * S_Teenhome
480860    +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 * 
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 * 
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 * 
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 * 
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency + 
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
480861    +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
480862    +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
480863    +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
480864    +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
480865    +          +    -7.71653347900468 * S_NumCatalogPurchases
480866    +          +    -2.29382480020793 * S_NumDealsPurchases
480867    +          +    -3.92350308032578 * S_NumWebVisitsMonth
480868    +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
480869    +        S_Recency  +     1.88830044274756 * S_Teenhome
480870    +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 * 
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 * 
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 * 
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 * 
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency + 
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
480871    +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
480872    +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
480873    +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
480874    +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
480875    +          +     0.50178849511862 * S_NumCatalogPurchases
480876    +          +     3.33915340676542 * S_NumDealsPurchases
480877    +          +     2.99171363234904 * S_NumWebVisitsMonth
480878    +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
480879    +        S_Recency  +     1.84778865722952 * S_Teenhome
480880    +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 * 
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 * 
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 * 
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 * 
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency + 
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
480881    +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
480882    +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
480883    +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
480884    +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
480885    +          +    -5.23430097842472 * S_NumCatalogPurchases
480886    +          +    -1.25644862473488 * S_NumDealsPurchases
480887    +          +     -3.0943337340276 * S_NumWebVisitsMonth
480888    +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
480889    +        S_Recency  +     1.52557456336148 * S_Teenhome
480890    +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 * 
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 * 
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 * 
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 * 
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency + 
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
480891    +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
480892    +          +     5.12496303990022 * Marital_StatusMarried
480893    +          +    -7.61364369696186 * Marital_StatusSingle
480894    +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced + 
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle + 
2.78937374370395 * Marital_StatusTogether ;
480895    +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
480896    +          +     7.65332274940308 * Marital_StatusMarried
480897    +          +    -5.13332947688313 * Marital_StatusSingle
480898    +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced + 
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle + 
8.25159601985572 * Marital_StatusTogether ;
480899    +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
480900    +          +     7.95162959069432 * Marital_StatusMarried
480901    +          +    -6.10797604390061 * Marital_StatusSingle
480902    +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced + 
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle + 
2.98577039618027 * Marital_StatusTogether ;
480903    +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
480904    +          +     5.45977621823616 * Marital_StatusMarried
480905    +          +    -10.3527985391218 * Marital_StatusSingle
480906    +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced + 
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle + 
4.66094015963389 * Marital_StatusTogether ;
480907    +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
480908    +          +     8.15909630638185 * Marital_StatusMarried
480909    +          +    -5.88497367282032 * Marital_StatusSingle
480910    +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced + 
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle + 
3.05474303626666 * Marital_StatusTogether ;
480911    +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
480912    +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
480913    +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
480914    +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
480915    +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
480916    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
480917    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
480918    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
480919    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
480920    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
480921    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
480922    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
480923    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
480924    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
480925    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
480926    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
480927    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
480928    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
480929    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
480930    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
480931    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
480932    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
480933    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
480934    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
480935    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
480936    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
480937    +END;
MPRINT(EM_DIAGRAM):   END;
480938    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
480939    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
480940    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
480941    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
480942    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
480943    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
480944    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
480945    +END;
MPRINT(EM_DIAGRAM):   END;
480946    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480947    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
480948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
480949    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
480950    +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
480951    +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
480952    +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
480953    +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
480954    +          +      0.8747576336553 * S_NumCatalogPurchases
480955    +          +    -0.23551985234916 * S_NumDealsPurchases
480956    +          +     0.83901499225112 * S_NumWebVisitsMonth
480957    +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
480958    +        S_Recency  +    -0.38340703993831 * S_Teenhome
480959    +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 * 
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 * 
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 * 
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 * 
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency + 
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
480960    +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
480961    +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
480962    +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
480963    +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
480964    +          +    -0.99107054453387 * S_NumCatalogPurchases
480965    +          +    -0.68379823410573 * S_NumDealsPurchases
480966    +          +    -1.67939872609259 * S_NumWebVisitsMonth
480967    +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
480968    +        S_Recency  +    -1.65033346710833 * S_Teenhome
480969    +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 * 
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 * 
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 * 
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 * 
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency + 
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
480970    +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
480971    +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
480972    +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
480973    +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
480974    +          +      1.4506330104932 * S_NumCatalogPurchases
480975    +          +     0.20085283861849 * S_NumDealsPurchases
480976    +          +     2.37974383924154 * S_NumWebVisitsMonth
480977    +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
480978    +        S_Recency  +     0.60726269989058 * S_Teenhome
480979    +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 * 
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 * 
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 * 
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 * 
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency + 
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
480980    +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
480981    +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
480982    +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
480983    +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
480984    +          +    -0.79952426911069 * S_NumCatalogPurchases
480985    +          +    -0.70571099772216 * S_NumDealsPurchases
480986    +          +    -0.32158728049114 * S_NumWebVisitsMonth
480987    +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
480988    +        S_Recency  +     2.29389047813725 * S_Teenhome
480989    +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 * 
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 * 
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 * 
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 * 
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency + 
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
480990    +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
480991    +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
480992    +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
480993    +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
480994    +          +    -0.41491605544255 * S_NumCatalogPurchases
480995    +          +     0.49374983047507 * S_NumDealsPurchases
480996    +          +    -1.38692718220359 * S_NumWebVisitsMonth
480997    +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
480998    +        S_Recency  +     1.29605991841828 * S_Teenhome
480999    +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 * 
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 * 
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 * 
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 * 
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency + 
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
481000    +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
481001    +          +    -1.29227303709115 * Marital_StatusMarried
481002    +          +     0.71446782242025 * Marital_StatusSingle
481003    +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced + 
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle + 
0.55295867102727 * Marital_StatusTogether ;
481004    +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
481005    +          +      2.0815223604364 * Marital_StatusMarried
481006    +          +     0.79462013188709 * Marital_StatusSingle
481007    +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced + 
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle + 
0.20668835346022 * Marital_StatusTogether ;
481008    +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
481009    +          +     0.44769683627357 * Marital_StatusMarried
481010    +          +     1.09957357551209 * Marital_StatusSingle
481011    +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced + 
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle + 
0.98246644516303 * Marital_StatusTogether ;
481012    +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
481013    +          +    -0.71096069683657 * Marital_StatusMarried
481014    +          +    -0.46849808497503 * Marital_StatusSingle
481015    +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced + 
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle + 
-0.50186472808298 * Marital_StatusTogether ;
481016    +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
481017    +          +     0.21000014809177 * Marital_StatusMarried
481018    +          +    -1.05959388759825 * Marital_StatusSingle
481019    +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced + 
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle + 
-0.8202251717493 * Marital_StatusTogether ;
481020    +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
481021    +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
481022    +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
481023    +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
481024    +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
481025    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
481026    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
481027    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
481028    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
481029    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
481030    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
481031    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
481032    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
481033    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
481034    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
481035    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
481036    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
481037    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
481038    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
481039    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
481040    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
481041    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
481042    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
481043    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
481044    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
481045    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
481046    +END;
MPRINT(EM_DIAGRAM):   END;
481047    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
481048    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
481049    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
481050    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
481051    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
481052    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
481053    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
481054    +END;
MPRINT(EM_DIAGRAM):   END;
481055    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481056    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
481057    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481058    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
481059    +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
481060    +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
481061    +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 + 
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 + 
-7.94470945127082 * H1x1_6 ;
481062    +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
481063    +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
481064    +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 + 
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 + 
-1.96124154717115 * H1x1_6 ;
481065    +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
481066    +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
481067    +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 + 
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 + 
-5.26174801543685 * H1x1_6 ;
481068    +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
481069    +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
481070    +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 + 
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 + 
-1.34566786751269 * H1x1_6 ;
481071    +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
481072    +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
481073    +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 + 
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 + 
-4.42895004794637 * H1x1_6 ;
481074    +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
481075    +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
481076    +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
481077    +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2 
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 + 
-1.70956044020454 * H1x2_6 ;
481078    +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
481079    +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
481080    +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
481081    +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2 
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 + 
-0.90111756793979 * H1x2_6 ;
481082    +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
481083    +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
481084    +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
481085    +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 * 
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5 
+ 0.83089577154267 * H1x2_6 ;
481086    +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
481087    +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
481088    +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
481089    +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2 
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 + 
-0.21291665093094 * H1x2_6 ;
481090    +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
481091    +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
481092    +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
481093    +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2 
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 + 
0.28627108561279 * H1x2_6 ;
481094    +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
481095    +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
481096    +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
481097    +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
481098    +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
481099    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
481100    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
481101    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
481102    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
481103    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
481104    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
481105    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
481106    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
481107    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
481108    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
481109    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
481110    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
481111    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
481112    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
481113    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
481114    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
481115    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
481116    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
481117    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
481118    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
481119    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
481120    +END;
MPRINT(EM_DIAGRAM):   END;
481121    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
481122    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
481123    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
481124    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
481125    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
481126    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
481127    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
481128    +END;
MPRINT(EM_DIAGRAM):   END;
481129    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481130    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
481131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481132    +
481133    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
481134    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
481135    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
481136    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
481137    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
481138    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
481139    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
481140    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
481141    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
481142    +end;
MPRINT(EM_DIAGRAM):   end;
481143    +else do;
MPRINT(EM_DIAGRAM):   else do;
481144    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
481145    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
481146    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
481147    +   end;
MPRINT(EM_DIAGRAM):   end;
481148    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
481149    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
481150    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
481151    +   end;
MPRINT(EM_DIAGRAM):   end;
481152    +   else do;
MPRINT(EM_DIAGRAM):   else do;
481153    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
481154    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
481155    +   end;
MPRINT(EM_DIAGRAM):   end;
481156    +end;
MPRINT(EM_DIAGRAM):   end;
481157    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
481158    +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
481159    +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
481160    +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 + 
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 + 
2.70843493957574 * H2x1_6 ;
481161    +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
481162    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
481163    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
481164    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
481165    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
481166    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
481167    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
481168    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
481169    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
481170    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
481171    +END;
MPRINT(EM_DIAGRAM):   END;
481172    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
481173    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
481174    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
481175    +END;
MPRINT(EM_DIAGRAM):   END;
481176    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
481177    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
481178    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
481179    +END;
MPRINT(EM_DIAGRAM):   END;
481180    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
481181    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
481182    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
481183    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
481184    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
481185    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
481186    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
481187    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481188    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
481189    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
481190    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
481191    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
481192    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
481193    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
481194    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
481195    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
481196    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
481197    +END;
MPRINT(EM_DIAGRAM):   END;
481198    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
481199    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
481200    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
481201    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
481202     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL42_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
481203     quit;
481204     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
481205     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
481206     * AutoNeural42: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural42: Computing metadata for TRAIN data;
481207     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL42_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural42_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural42_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural42_TRAIN out=WORK.M1_US0VF 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_US0VF;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_US0VF(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_US0VF;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_US0VF;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2YX4X4I NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2YX4X4I;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2YX4X4I;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KZCH94(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2YX4X4I;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2YX4X4I;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2YX4X4I;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2YX4X4I;
MPRINT(EMADVISECOLUMNS):   set WORK.M2YX4X4I;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural42_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural42";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural42";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural42: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
481519     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
481520     set EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural42_EMINFO;
481521     where DATA='AutoNeural42' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural42' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
481522     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
      WHERE (DATA='AutoNeural42') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

481523     data EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural42_EMINFO;
481524     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
481525     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
481526     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL42_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
481530     run;
481531     data EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural42_EMINFO;
481532     set EMWS8.AutoNeural42_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural42_EMINFO WORK.MODELTEMP_INFO;
481533     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL42_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481534     proc sort data = EMWS8.AutoNeural42_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural42_EMINFO NOTHREADS;
481535     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
481536     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL42_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481537     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
481538     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
481539     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481540     proc sort data = EMWS8.AutoNeural42_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural42_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
481541     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
481542     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

481543     data EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural42_EMINFO;
481544     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
481545     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
481546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL42_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

481547     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
481548     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
481549     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
481550     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL42_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL42_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
