MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.13 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
The SAS System

MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.13 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3FPT6CY 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3FPT6CY new;
MPRINT(EM_DIAGRAM):   run;
428904     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
428905     set EMWS8.Neural16_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural16_OUTKEY;
428906     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
428907     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 37 observations read from the data set EMWS8.NEURAL16_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

428908     filename emflow
428908   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural16: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428909     *------------------------------------------------------------*;
428910     * Neural16: Scoring DATA data;
428911     *------------------------------------------------------------*;
428912     data EMWS8.Neural16_TRAIN
428913     / view=EMWS8.Neural16_TRAIN
428914     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural16_TRAIN / view=EMWS8.Neural16_TRAIN ;
428915     set EMWS8.PRINCOMP_TRAIN
428916     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
428917     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas.
428918    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
428919    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
428920    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
428921    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
428922    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
428923    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
428924    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
428925    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
428926    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
428927    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
428928    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
428929    +LENGTH _WARN_ $4
428930    +      F_DepVar  $ 12
428931    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
428932    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
428933    +
428934    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
428935    +
428936    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
428937    +
428938    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
428939    +
428940    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
428941    +
428942    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
428943    +
428944    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
428945    +
428946    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
428947    +
428948    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
428949    +
428950    +      label S_PC_18 = 'Standard: PC_18' ;
MPRINT(EM_DIAGRAM):   label S_PC_18 = 'Standard: PC_18' ;
428951    +
428952    +      label S_PC_19 = 'Standard: PC_19' ;
MPRINT(EM_DIAGRAM):   label S_PC_19 = 'Standard: PC_19' ;
428953    +
428954    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
428955    +
428956    +      label S_PC_20 = 'Standard: PC_20' ;
MPRINT(EM_DIAGRAM):   label S_PC_20 = 'Standard: PC_20' ;
428957    +
428958    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
428959    +
428960    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
428961    +
428962    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
428963    +
428964    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
428965    +
428966    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
428967    +
428968    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
428969    +
428970    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
428971    +
428972    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
428973    +
428974    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
428975    +
428976    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
428977    +
428978    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
428979    +
428980    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
428981    +
428982    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
428983    +
428984    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
428985    +
428986    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
428987    +
428988    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
428989    +
428990    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
428991    +
428992    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
428993    +
428994    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
428995    +
428996    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
428997    +
428998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428999    +*** Checking missing input Interval
429000    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
429001    +
429002    +IF NMISS(
429003    +   PC_1 ,
429004    +   PC_10 ,
429005    +   PC_11 ,
429006    +   PC_12 ,
429007    +   PC_13 ,
429008    +   PC_14 ,
429009    +   PC_15 ,
429010    +   PC_16 ,
429011    +   PC_17 ,
429012    +   PC_18 ,
429013    +   PC_19 ,
429014    +   PC_2 ,
429015    +   PC_20 ,
429016    +   PC_3 ,
429017    +   PC_4 ,
429018    +   PC_5 ,
429019    +   PC_6 ,
429020    +   PC_7 ,
429021    +   PC_8 ,
429022    +   PC_9   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_18 , PC_19 , PC_2 , PC_20 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 ) THEN 
DO;
429023    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
429024    +
429025    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429026    +END;
MPRINT(EM_DIAGRAM):   END;
429027    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429028    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
429029    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429030    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429031    +   S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
429032    +   S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
429033    +   S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
429034    +   S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
429035    +   S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
429036    +   S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
429037    +   S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
429038    +   S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
429039    +   S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
429040    +   S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
429041    +   S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
429042    +   S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
429043    +   S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
429044    +   S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
429045    +   S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
429046    +   S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
429047    +   S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
429048    +   S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
429049    +   S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
429050    +   S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
429051    +END;
MPRINT(EM_DIAGRAM):   END;
429052    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429053    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
429054    +   ELSE S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
429055    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
429056    +   ELSE S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
429057    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
429058    +   ELSE S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
429059    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
429060    +   ELSE S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
429061    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
429062    +   ELSE S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
429063    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
429064    +   ELSE S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
429065    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
429066    +   ELSE S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
429067    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
429068    +   ELSE S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
429069    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
429070    +   ELSE S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
429071    +   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_18 ) THEN S_PC_18 = . ;
429072    +   ELSE S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
429073    +   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_19 ) THEN S_PC_19 = . ;
429074    +   ELSE S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
429075    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
429076    +   ELSE S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
429077    +   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_20 ) THEN S_PC_20 = . ;
429078    +   ELSE S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
429079    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
429080    +   ELSE S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
429081    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
429082    +   ELSE S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
429083    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
429084    +   ELSE S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
429085    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
429086    +   ELSE S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
429087    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
429088    +   ELSE S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
429089    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
429090    +   ELSE S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
429091    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
429092    +   ELSE S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
429093    +END;
MPRINT(EM_DIAGRAM):   END;
429094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429095    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
429096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429097    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429098    +   H11  =    -0.87985529033799 * S_PC_1  +      0.4152785354231 * S_PC_10
429099    +          +     0.16304061845821 * S_PC_11  +    -1.08952456253231 * S_PC_12
429100    +          +    -0.16499878790638 * S_PC_13  +     0.19700943516303 * S_PC_14
429101    +          +     0.53442619963231 * S_PC_15  +      0.0815645407254 * S_PC_16
429102    +          +   6.1455055097511E-6 * S_PC_17  +     0.07812797264138 * S_PC_18
429103    +          +     0.26452881915421 * S_PC_19  +     0.30583304789004 * S_PC_2
429104    +          +    -0.32419603128176 * S_PC_20  +     -0.0833314603569 * S_PC_3
429105    +          +     0.04262550204266 * S_PC_4  +    -0.21735745688106 * S_PC_5
429106    +          +      0.1348067968051 * S_PC_6  +     0.40300328062441 * S_PC_7
429107    +          +     0.07220012227881 * S_PC_8  +     0.02207129291614 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H11 = -0.87985529033799 * S_PC_1 + 0.4152785354231 * S_PC_10 + 
0.16304061845821 * S_PC_11 + -1.08952456253231 * S_PC_12 + -0.16499878790638 * S_PC_13 + 
0.19700943516303 * S_PC_14 + 0.53442619963231 * S_PC_15 + 0.0815645407254 * S_PC_16 + 
6.1455055097511E-6 * S_PC_17 + 0.07812797264138 * S_PC_18 + 0.26452881915421 * S_PC_19 + 
0.30583304789004 * S_PC_2 + -0.32419603128176 * S_PC_20 + -0.0833314603569 * S_PC_3 + 
0.04262550204266 * S_PC_4 + -0.21735745688106 * S_PC_5 + 0.1348067968051 * S_PC_6 + 
0.40300328062441 * S_PC_7 + 0.07220012227881 * S_PC_8 + 0.02207129291614 * S_PC_9 ;
429108    +   H12  =    -0.06239839954804 * S_PC_1  +    -0.09366838465157 * S_PC_10
429109    +          +     0.21674055039123 * S_PC_11  +    -0.68919872418019 * S_PC_12
429110    +          +    -0.51637010014787 * S_PC_13  +     0.43448520498453 * S_PC_14
429111    +          +     0.37791340490797 * S_PC_15  +    -0.19605244792313 * S_PC_16
429112    +          +    -0.49183394762114 * S_PC_17  +    -0.06749843982042 * S_PC_18
429113    +          +    -0.15677101252688 * S_PC_19  +     0.21931506187758 * S_PC_2
429114    +          +    -0.03591136499868 * S_PC_20  +      0.5255916432353 * S_PC_3
429115    +          +     0.15627761072467 * S_PC_4  +    -0.32262529596664 * S_PC_5
429116    +          +    -0.24589578477619 * S_PC_6  +    -0.28063301975163 * S_PC_7
429117    +          +    -0.31136287591008 * S_PC_8  +    -0.35176991649543 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H12 = -0.06239839954804 * S_PC_1 + -0.09366838465157 * S_PC_10 + 
0.21674055039123 * S_PC_11 + -0.68919872418019 * S_PC_12 + -0.51637010014787 * S_PC_13 + 
0.43448520498453 * S_PC_14 + 0.37791340490797 * S_PC_15 + -0.19605244792313 * S_PC_16 + 
-0.49183394762114 * S_PC_17 + -0.06749843982042 * S_PC_18 + -0.15677101252688 * S_PC_19 + 
0.21931506187758 * S_PC_2 + -0.03591136499868 * S_PC_20 + 0.5255916432353 * S_PC_3 + 
0.15627761072467 * S_PC_4 + -0.32262529596664 * S_PC_5 + -0.24589578477619 * S_PC_6 + 
-0.28063301975163 * S_PC_7 + -0.31136287591008 * S_PC_8 + -0.35176991649543 * S_PC_9 ;
429118    +   H13  =     0.37052892991841 * S_PC_1  +      0.1687438946533 * S_PC_10
429119    +          +       0.068099816462 * S_PC_11  +     0.22987344695229 * S_PC_12
429120    +          +    -0.22902963201428 * S_PC_13  +     0.22080646380864 * S_PC_14
429121    +          +     0.37164255702642 * S_PC_15  +    -0.15731845659531 * S_PC_16
429122    +          +     0.29873092498289 * S_PC_17  +      0.1741334918859 * S_PC_18
429123    +          +    -0.47273307030547 * S_PC_19  +     -0.4922299619117 * S_PC_2
429124    +          +     0.22022101683962 * S_PC_20  +    -0.18421049528395 * S_PC_3
429125    +          +    -0.28181283254668 * S_PC_4  +      0.3762263284981 * S_PC_5
429126    +          +      0.1007429976165 * S_PC_6  +     0.06044830530293 * S_PC_7
429127    +          +     0.01172087969661 * S_PC_8  +     0.09245378584311 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H13 = 0.37052892991841 * S_PC_1 + 0.1687438946533 * S_PC_10 + 
0.068099816462 * S_PC_11 + 0.22987344695229 * S_PC_12 + -0.22902963201428 * S_PC_13 + 
0.22080646380864 * S_PC_14 + 0.37164255702642 * S_PC_15 + -0.15731845659531 * S_PC_16 + 
0.29873092498289 * S_PC_17 + 0.1741334918859 * S_PC_18 + -0.47273307030547 * S_PC_19 + 
-0.4922299619117 * S_PC_2 + 0.22022101683962 * S_PC_20 + -0.18421049528395 * S_PC_3 + 
-0.28181283254668 * S_PC_4 + 0.3762263284981 * S_PC_5 + 0.1007429976165 * S_PC_6 + 
0.06044830530293 * S_PC_7 + 0.01172087969661 * S_PC_8 + 0.09245378584311 * S_PC_9 ;
429128    +   H14  =     0.90297640290994 * S_PC_1  +     0.13041948161047 * S_PC_10
429129    +          +    -0.77535837019772 * S_PC_11  +     -0.4424107690377 * S_PC_12
429130    +          +      0.5346610917079 * S_PC_13  +     -0.0701245027896 * S_PC_14
429131    +          +    -0.00018660615555 * S_PC_15  +     0.05343050394459 * S_PC_16
429132    +          +    -0.42739884380956 * S_PC_17  +     0.14491285182751 * S_PC_18
429133    +          +     0.02196339681148 * S_PC_19  +    -0.37840184707797 * S_PC_2
429134    +          +    -0.26449974044339 * S_PC_20  +      0.0580160083302 * S_PC_3
429135    +          +     0.17275625837165 * S_PC_4  +     0.23728001728638 * S_PC_5
429136    +          +    -0.25336545677081 * S_PC_6  +    -0.11879047198835 * S_PC_7
429137    +          +     0.06848057468918 * S_PC_8  +     0.17053256761161 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H14 = 0.90297640290994 * S_PC_1 + 0.13041948161047 * S_PC_10 + 
-0.77535837019772 * S_PC_11 + -0.4424107690377 * S_PC_12 + 0.5346610917079 * S_PC_13 + 
-0.0701245027896 * S_PC_14 + -0.00018660615555 * S_PC_15 + 0.05343050394459 * S_PC_16 + 
-0.42739884380956 * S_PC_17 + 0.14491285182751 * S_PC_18 + 0.02196339681148 * S_PC_19 + 
-0.37840184707797 * S_PC_2 + -0.26449974044339 * S_PC_20 + 0.0580160083302 * S_PC_3 + 
0.17275625837165 * S_PC_4 + 0.23728001728638 * S_PC_5 + -0.25336545677081 * S_PC_6 + 
-0.11879047198835 * S_PC_7 + 0.06848057468918 * S_PC_8 + 0.17053256761161 * S_PC_9 ;
429138    +   H15  =      0.3319456803623 * S_PC_1  +    -0.25135311361426 * S_PC_10
429139    +          +     0.09574430997605 * S_PC_11  +    -0.36351435720739 * S_PC_12
429140    +          +     0.01726694741167 * S_PC_13  +    -0.20185311900782 * S_PC_14
429141    +          +    -0.10881397718959 * S_PC_15  +    -0.11026903256573 * S_PC_16
429142    +          +    -0.21891970158533 * S_PC_17  +     0.27773436101815 * S_PC_18
429143    +          +    -0.12362685539569 * S_PC_19  +     0.63984488191459 * S_PC_2
429144    +          +     -0.2844463126829 * S_PC_20  +     0.35355643835888 * S_PC_3
429145    +          +    -0.16184446366215 * S_PC_4  +     0.09427477587857 * S_PC_5
429146    +          +    -0.17568709507984 * S_PC_6  +     0.12650152831378 * S_PC_7
429147    +          +    -0.10817882174405 * S_PC_8  +     0.33635078131267 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H15 = 0.3319456803623 * S_PC_1 + -0.25135311361426 * S_PC_10 + 
0.09574430997605 * S_PC_11 + -0.36351435720739 * S_PC_12 + 0.01726694741167 * S_PC_13 + 
-0.20185311900782 * S_PC_14 + -0.10881397718959 * S_PC_15 + -0.11026903256573 * S_PC_16 + 
-0.21891970158533 * S_PC_17 + 0.27773436101815 * S_PC_18 + -0.12362685539569 * S_PC_19 + 
0.63984488191459 * S_PC_2 + -0.2844463126829 * S_PC_20 + 0.35355643835888 * S_PC_3 + 
-0.16184446366215 * S_PC_4 + 0.09427477587857 * S_PC_5 + -0.17568709507984 * S_PC_6 + 
0.12650152831378 * S_PC_7 + -0.10817882174405 * S_PC_8 + 0.33635078131267 * S_PC_9 ;
429148    +   H11  =    -0.63710174373913 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.63710174373913 + H11 ;
429149    +   H12  =      0.8457781571662 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.8457781571662 + H12 ;
429150    +   H13  =     0.28261520959472 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.28261520959472 + H13 ;
429151    +   H14  =    -1.04295478102168 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.04295478102168 + H14 ;
429152    +   H15  =      0.8730078251022 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.8730078251022 + H15 ;
429153    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
429154    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
429155    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
429156    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
429157    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
429158    +END;
MPRINT(EM_DIAGRAM):   END;
429159    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429160    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
429161    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
429162    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
429163    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
429164    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
429165    +END;
MPRINT(EM_DIAGRAM):   END;
429166    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429167    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
429168    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429169    +
429170    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
429171    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
429172    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
429173    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
429174    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
429175    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429176    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
429177    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
429178    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
429179    +end;
MPRINT(EM_DIAGRAM):   end;
429180    +else do;
MPRINT(EM_DIAGRAM):   else do;
429181    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
429182    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
429183    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
429184    +   end;
MPRINT(EM_DIAGRAM):   end;
429185    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
429186    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
429187    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
429188    +   end;
MPRINT(EM_DIAGRAM):   end;
429189    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429190    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
429191    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
429192    +   end;
MPRINT(EM_DIAGRAM):   end;
429193    +end;
MPRINT(EM_DIAGRAM):   end;
429194    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429195    +   P_DepVar1  =    -1.62512633780867 * H11  +    -2.22884014235958 * H12
429196    +          +     0.56589376280567 * H13  +     1.68131825229002 * H14
429197    +          +    -0.46219982424784 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.62512633780867 * H11 + -2.22884014235958 * H12 + 
0.56589376280567 * H13 + 1.68131825229002 * H14 + -0.46219982424784 * H15 ;
429198    +   P_DepVar1  =    -1.78280840151976 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.78280840151976 + P_DepVar1 ;
429199    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
429200    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
429201    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429202    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
429203    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
429204    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
429205    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
429206    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
429207    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
429208    +END;
MPRINT(EM_DIAGRAM):   END;
429209    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429210    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
429211    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
429212    +END;
MPRINT(EM_DIAGRAM):   END;
429213    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
429214    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
429215    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
429216    +END;
MPRINT(EM_DIAGRAM):   END;
429217    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
429218    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
429219    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
429220    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
429221    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
429222    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
429223    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
429224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429225    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
429226    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429227    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
429228    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
429229    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
429230    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
429231    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
429232    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
429233    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
429234    +END;
MPRINT(EM_DIAGRAM):   END;
429235    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
429236    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
429237    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
429238    +drop
429239    +H11
429240    +H12
429241    +H13
429242    +H14
429243    +H15
429244    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
429245    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
429246     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL16_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
429247     quit;
429248     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
429249     filename emflow
429249   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural16: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
429250     *------------------------------------------------------------*;
429251     * Neural16: Scoring VALIDATE data;
429252     *------------------------------------------------------------*;
429253     data EMWS8.Neural16_VALIDATE
429254     / view=EMWS8.Neural16_VALIDATE
429255     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural16_VALIDATE / view=EMWS8.Neural16_VALIDATE ;
429256     set EMWS8.PRINCOMP_VALIDATE
429257     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
429258     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas.
429259    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
429260    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
429261    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
429262    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
429263    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
429264    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
429265    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
429266    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
429267    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
429268    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
429269    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
429270    +LENGTH _WARN_ $4
429271    +      F_DepVar  $ 12
429272    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
429273    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
429274    +
429275    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
429276    +
429277    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
429278    +
429279    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
429280    +
429281    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
429282    +
429283    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
429284    +
429285    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
429286    +
429287    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
429288    +
429289    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
429290    +
429291    +      label S_PC_18 = 'Standard: PC_18' ;
MPRINT(EM_DIAGRAM):   label S_PC_18 = 'Standard: PC_18' ;
429292    +
429293    +      label S_PC_19 = 'Standard: PC_19' ;
MPRINT(EM_DIAGRAM):   label S_PC_19 = 'Standard: PC_19' ;
429294    +
429295    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
429296    +
429297    +      label S_PC_20 = 'Standard: PC_20' ;
MPRINT(EM_DIAGRAM):   label S_PC_20 = 'Standard: PC_20' ;
429298    +
429299    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
429300    +
429301    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
429302    +
429303    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
429304    +
429305    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
429306    +
429307    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
429308    +
429309    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
429310    +
429311    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
429312    +
429313    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
429314    +
429315    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
429316    +
429317    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
429318    +
429319    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
429320    +
429321    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
429322    +
429323    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
429324    +
429325    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
429326    +
429327    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
429328    +
429329    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
429330    +
429331    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
429332    +
429333    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
429334    +
429335    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
429336    +
429337    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
429338    +
429339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429340    +*** Checking missing input Interval
429341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
429342    +
429343    +IF NMISS(
429344    +   PC_1 ,
429345    +   PC_10 ,
429346    +   PC_11 ,
429347    +   PC_12 ,
429348    +   PC_13 ,
429349    +   PC_14 ,
429350    +   PC_15 ,
429351    +   PC_16 ,
429352    +   PC_17 ,
429353    +   PC_18 ,
429354    +   PC_19 ,
429355    +   PC_2 ,
429356    +   PC_20 ,
429357    +   PC_3 ,
429358    +   PC_4 ,
429359    +   PC_5 ,
429360    +   PC_6 ,
429361    +   PC_7 ,
429362    +   PC_8 ,
429363    +   PC_9   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_18 , PC_19 , PC_2 , PC_20 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 ) THEN 
DO;
429364    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
429365    +
429366    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429367    +END;
MPRINT(EM_DIAGRAM):   END;
429368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429369    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
429370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429371    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429372    +   S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
429373    +   S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
429374    +   S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
429375    +   S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
429376    +   S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
429377    +   S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
429378    +   S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
429379    +   S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
429380    +   S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
429381    +   S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
429382    +   S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
429383    +   S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
429384    +   S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
429385    +   S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
429386    +   S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
429387    +   S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
429388    +   S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
429389    +   S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
429390    +   S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
429391    +   S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
429392    +END;
MPRINT(EM_DIAGRAM):   END;
429393    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429394    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
429395    +   ELSE S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
429396    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
429397    +   ELSE S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
429398    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
429399    +   ELSE S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
429400    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
429401    +   ELSE S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
429402    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
429403    +   ELSE S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
429404    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
429405    +   ELSE S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
429406    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
429407    +   ELSE S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
429408    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
429409    +   ELSE S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
429410    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
429411    +   ELSE S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
429412    +   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_18 ) THEN S_PC_18 = . ;
429413    +   ELSE S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
429414    +   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_19 ) THEN S_PC_19 = . ;
429415    +   ELSE S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
429416    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
429417    +   ELSE S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
429418    +   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_20 ) THEN S_PC_20 = . ;
429419    +   ELSE S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
429420    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
429421    +   ELSE S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
429422    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
429423    +   ELSE S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
429424    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
429425    +   ELSE S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
429426    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
429427    +   ELSE S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
429428    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
429429    +   ELSE S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
429430    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
429431    +   ELSE S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
429432    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
429433    +   ELSE S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
429434    +END;
MPRINT(EM_DIAGRAM):   END;
429435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429436    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
429437    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429438    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429439    +   H11  =    -0.87985529033799 * S_PC_1  +      0.4152785354231 * S_PC_10
429440    +          +     0.16304061845821 * S_PC_11  +    -1.08952456253231 * S_PC_12
429441    +          +    -0.16499878790638 * S_PC_13  +     0.19700943516303 * S_PC_14
429442    +          +     0.53442619963231 * S_PC_15  +      0.0815645407254 * S_PC_16
429443    +          +   6.1455055097511E-6 * S_PC_17  +     0.07812797264138 * S_PC_18
429444    +          +     0.26452881915421 * S_PC_19  +     0.30583304789004 * S_PC_2
429445    +          +    -0.32419603128176 * S_PC_20  +     -0.0833314603569 * S_PC_3
429446    +          +     0.04262550204266 * S_PC_4  +    -0.21735745688106 * S_PC_5
429447    +          +      0.1348067968051 * S_PC_6  +     0.40300328062441 * S_PC_7
429448    +          +     0.07220012227881 * S_PC_8  +     0.02207129291614 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H11 = -0.87985529033799 * S_PC_1 + 0.4152785354231 * S_PC_10 + 
0.16304061845821 * S_PC_11 + -1.08952456253231 * S_PC_12 + -0.16499878790638 * S_PC_13 + 
0.19700943516303 * S_PC_14 + 0.53442619963231 * S_PC_15 + 0.0815645407254 * S_PC_16 + 
6.1455055097511E-6 * S_PC_17 + 0.07812797264138 * S_PC_18 + 0.26452881915421 * S_PC_19 + 
0.30583304789004 * S_PC_2 + -0.32419603128176 * S_PC_20 + -0.0833314603569 * S_PC_3 + 
0.04262550204266 * S_PC_4 + -0.21735745688106 * S_PC_5 + 0.1348067968051 * S_PC_6 + 
0.40300328062441 * S_PC_7 + 0.07220012227881 * S_PC_8 + 0.02207129291614 * S_PC_9 ;
429449    +   H12  =    -0.06239839954804 * S_PC_1  +    -0.09366838465157 * S_PC_10
429450    +          +     0.21674055039123 * S_PC_11  +    -0.68919872418019 * S_PC_12
429451    +          +    -0.51637010014787 * S_PC_13  +     0.43448520498453 * S_PC_14
429452    +          +     0.37791340490797 * S_PC_15  +    -0.19605244792313 * S_PC_16
429453    +          +    -0.49183394762114 * S_PC_17  +    -0.06749843982042 * S_PC_18
429454    +          +    -0.15677101252688 * S_PC_19  +     0.21931506187758 * S_PC_2
429455    +          +    -0.03591136499868 * S_PC_20  +      0.5255916432353 * S_PC_3
429456    +          +     0.15627761072467 * S_PC_4  +    -0.32262529596664 * S_PC_5
429457    +          +    -0.24589578477619 * S_PC_6  +    -0.28063301975163 * S_PC_7
429458    +          +    -0.31136287591008 * S_PC_8  +    -0.35176991649543 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H12 = -0.06239839954804 * S_PC_1 + -0.09366838465157 * S_PC_10 + 
0.21674055039123 * S_PC_11 + -0.68919872418019 * S_PC_12 + -0.51637010014787 * S_PC_13 + 
0.43448520498453 * S_PC_14 + 0.37791340490797 * S_PC_15 + -0.19605244792313 * S_PC_16 + 
-0.49183394762114 * S_PC_17 + -0.06749843982042 * S_PC_18 + -0.15677101252688 * S_PC_19 + 
0.21931506187758 * S_PC_2 + -0.03591136499868 * S_PC_20 + 0.5255916432353 * S_PC_3 + 
0.15627761072467 * S_PC_4 + -0.32262529596664 * S_PC_5 + -0.24589578477619 * S_PC_6 + 
-0.28063301975163 * S_PC_7 + -0.31136287591008 * S_PC_8 + -0.35176991649543 * S_PC_9 ;
429459    +   H13  =     0.37052892991841 * S_PC_1  +      0.1687438946533 * S_PC_10
429460    +          +       0.068099816462 * S_PC_11  +     0.22987344695229 * S_PC_12
429461    +          +    -0.22902963201428 * S_PC_13  +     0.22080646380864 * S_PC_14
429462    +          +     0.37164255702642 * S_PC_15  +    -0.15731845659531 * S_PC_16
429463    +          +     0.29873092498289 * S_PC_17  +      0.1741334918859 * S_PC_18
429464    +          +    -0.47273307030547 * S_PC_19  +     -0.4922299619117 * S_PC_2
429465    +          +     0.22022101683962 * S_PC_20  +    -0.18421049528395 * S_PC_3
429466    +          +    -0.28181283254668 * S_PC_4  +      0.3762263284981 * S_PC_5
429467    +          +      0.1007429976165 * S_PC_6  +     0.06044830530293 * S_PC_7
429468    +          +     0.01172087969661 * S_PC_8  +     0.09245378584311 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H13 = 0.37052892991841 * S_PC_1 + 0.1687438946533 * S_PC_10 + 
0.068099816462 * S_PC_11 + 0.22987344695229 * S_PC_12 + -0.22902963201428 * S_PC_13 + 
0.22080646380864 * S_PC_14 + 0.37164255702642 * S_PC_15 + -0.15731845659531 * S_PC_16 + 
0.29873092498289 * S_PC_17 + 0.1741334918859 * S_PC_18 + -0.47273307030547 * S_PC_19 + 
-0.4922299619117 * S_PC_2 + 0.22022101683962 * S_PC_20 + -0.18421049528395 * S_PC_3 + 
-0.28181283254668 * S_PC_4 + 0.3762263284981 * S_PC_5 + 0.1007429976165 * S_PC_6 + 
0.06044830530293 * S_PC_7 + 0.01172087969661 * S_PC_8 + 0.09245378584311 * S_PC_9 ;
429469    +   H14  =     0.90297640290994 * S_PC_1  +     0.13041948161047 * S_PC_10
429470    +          +    -0.77535837019772 * S_PC_11  +     -0.4424107690377 * S_PC_12
429471    +          +      0.5346610917079 * S_PC_13  +     -0.0701245027896 * S_PC_14
429472    +          +    -0.00018660615555 * S_PC_15  +     0.05343050394459 * S_PC_16
429473    +          +    -0.42739884380956 * S_PC_17  +     0.14491285182751 * S_PC_18
429474    +          +     0.02196339681148 * S_PC_19  +    -0.37840184707797 * S_PC_2
429475    +          +    -0.26449974044339 * S_PC_20  +      0.0580160083302 * S_PC_3
429476    +          +     0.17275625837165 * S_PC_4  +     0.23728001728638 * S_PC_5
429477    +          +    -0.25336545677081 * S_PC_6  +    -0.11879047198835 * S_PC_7
429478    +          +     0.06848057468918 * S_PC_8  +     0.17053256761161 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H14 = 0.90297640290994 * S_PC_1 + 0.13041948161047 * S_PC_10 + 
-0.77535837019772 * S_PC_11 + -0.4424107690377 * S_PC_12 + 0.5346610917079 * S_PC_13 + 
-0.0701245027896 * S_PC_14 + -0.00018660615555 * S_PC_15 + 0.05343050394459 * S_PC_16 + 
-0.42739884380956 * S_PC_17 + 0.14491285182751 * S_PC_18 + 0.02196339681148 * S_PC_19 + 
-0.37840184707797 * S_PC_2 + -0.26449974044339 * S_PC_20 + 0.0580160083302 * S_PC_3 + 
0.17275625837165 * S_PC_4 + 0.23728001728638 * S_PC_5 + -0.25336545677081 * S_PC_6 + 
-0.11879047198835 * S_PC_7 + 0.06848057468918 * S_PC_8 + 0.17053256761161 * S_PC_9 ;
429479    +   H15  =      0.3319456803623 * S_PC_1  +    -0.25135311361426 * S_PC_10
429480    +          +     0.09574430997605 * S_PC_11  +    -0.36351435720739 * S_PC_12
429481    +          +     0.01726694741167 * S_PC_13  +    -0.20185311900782 * S_PC_14
429482    +          +    -0.10881397718959 * S_PC_15  +    -0.11026903256573 * S_PC_16
429483    +          +    -0.21891970158533 * S_PC_17  +     0.27773436101815 * S_PC_18
429484    +          +    -0.12362685539569 * S_PC_19  +     0.63984488191459 * S_PC_2
429485    +          +     -0.2844463126829 * S_PC_20  +     0.35355643835888 * S_PC_3
429486    +          +    -0.16184446366215 * S_PC_4  +     0.09427477587857 * S_PC_5
429487    +          +    -0.17568709507984 * S_PC_6  +     0.12650152831378 * S_PC_7
429488    +          +    -0.10817882174405 * S_PC_8  +     0.33635078131267 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H15 = 0.3319456803623 * S_PC_1 + -0.25135311361426 * S_PC_10 + 
0.09574430997605 * S_PC_11 + -0.36351435720739 * S_PC_12 + 0.01726694741167 * S_PC_13 + 
-0.20185311900782 * S_PC_14 + -0.10881397718959 * S_PC_15 + -0.11026903256573 * S_PC_16 + 
-0.21891970158533 * S_PC_17 + 0.27773436101815 * S_PC_18 + -0.12362685539569 * S_PC_19 + 
0.63984488191459 * S_PC_2 + -0.2844463126829 * S_PC_20 + 0.35355643835888 * S_PC_3 + 
-0.16184446366215 * S_PC_4 + 0.09427477587857 * S_PC_5 + -0.17568709507984 * S_PC_6 + 
0.12650152831378 * S_PC_7 + -0.10817882174405 * S_PC_8 + 0.33635078131267 * S_PC_9 ;
429489    +   H11  =    -0.63710174373913 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.63710174373913 + H11 ;
429490    +   H12  =      0.8457781571662 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.8457781571662 + H12 ;
429491    +   H13  =     0.28261520959472 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.28261520959472 + H13 ;
429492    +   H14  =    -1.04295478102168 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.04295478102168 + H14 ;
429493    +   H15  =      0.8730078251022 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.8730078251022 + H15 ;
429494    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
429495    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
429496    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
429497    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
429498    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
429499    +END;
MPRINT(EM_DIAGRAM):   END;
429500    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429501    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
429502    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
429503    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
429504    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
429505    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
429506    +END;
MPRINT(EM_DIAGRAM):   END;
429507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429508    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
429509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429510    +
429511    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
429512    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
429513    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
429514    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
429515    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
429516    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429517    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
429518    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
429519    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
429520    +end;
MPRINT(EM_DIAGRAM):   end;
429521    +else do;
MPRINT(EM_DIAGRAM):   else do;
429522    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
429523    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
429524    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
429525    +   end;
MPRINT(EM_DIAGRAM):   end;
429526    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
429527    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
429528    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
429529    +   end;
MPRINT(EM_DIAGRAM):   end;
429530    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429531    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
429532    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
429533    +   end;
MPRINT(EM_DIAGRAM):   end;
429534    +end;
MPRINT(EM_DIAGRAM):   end;
429535    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429536    +   P_DepVar1  =    -1.62512633780867 * H11  +    -2.22884014235958 * H12
429537    +          +     0.56589376280567 * H13  +     1.68131825229002 * H14
429538    +          +    -0.46219982424784 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.62512633780867 * H11 + -2.22884014235958 * H12 + 
0.56589376280567 * H13 + 1.68131825229002 * H14 + -0.46219982424784 * H15 ;
429539    +   P_DepVar1  =    -1.78280840151976 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.78280840151976 + P_DepVar1 ;
429540    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
429541    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
429542    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429543    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
429544    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
429545    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
429546    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
429547    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
429548    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
429549    +END;
MPRINT(EM_DIAGRAM):   END;
429550    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429551    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
429552    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
429553    +END;
MPRINT(EM_DIAGRAM):   END;
429554    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
429555    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
429556    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
429557    +END;
MPRINT(EM_DIAGRAM):   END;
429558    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
429559    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
429560    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
429561    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
429562    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
429563    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
429564    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
429565    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429566    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
429567    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429568    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
429569    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
429570    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
429571    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
429572    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
429573    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
429574    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
429575    +END;
MPRINT(EM_DIAGRAM):   END;
429576    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
429577    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
429578    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
429579    +drop
429580    +H11
429581    +H12
429582    +H13
429583    +H14
429584    +H15
429585    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
429586    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
429587     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL16_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
429588     quit;
429589     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
429590     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
429591     * Neural16: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural16: Computing metadata for TRAIN data;
429592     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL16_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural16\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural16_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural16_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural16_TRAIN out=WORK.M0LNV1ID noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LNV1ID;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LNV1ID(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LNV1ID;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LNV1ID;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2D55XS2 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D55XS2;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D55XS2;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38DGHZM(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D55XS2;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D55XS2;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D55XS2;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2D55XS2;
MPRINT(EMADVISECOLUMNS):   set WORK.M2D55XS2;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural16_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural16";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural16";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural16: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
429904     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
429905     set EMWS8.Neural16_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural16_EMINFO;
429906     where DATA='Neural16' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural16' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
429907     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL16_EMINFO.
      WHERE (DATA='Neural16') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

429908     data EMWS8.Neural16_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural16_EMINFO;
429909     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
429910     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
429911     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL16_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
429915     run;
429916     data EMWS8.Neural16_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural16_EMINFO;
429917     set EMWS8.Neural16_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural16_EMINFO WORK.MODELTEMP_INFO;
429918     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL16_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL16_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

429919     proc sort data = EMWS8.Neural16_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural16_EMINFO NOTHREADS;
429920     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
429921     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL16_EMINFO.
NOTE: The data set EMWS8.NEURAL16_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

429922     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
429923     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
429924     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

429925     proc sort data = EMWS8.Neural16_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural16_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
429926     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
429927     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL16_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

429928     data EMWS8.Neural16_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural16_EMINFO;
429929     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
429930     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
429931     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL16_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

429932     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
429933     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
429934     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
429935     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL16_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL16_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
