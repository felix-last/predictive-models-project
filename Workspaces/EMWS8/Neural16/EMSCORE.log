MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.26 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.26 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0Y0LK1J 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0Y0LK1J new;
MPRINT(EM_DIAGRAM):   run;
697025     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
697026     set EMWS8.Neural16_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural16_OUTKEY;
697027     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
697028     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 35 observations read from the data set EMWS8.NEURAL16_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

697029     filename emflow
697029   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural16: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
697030     *------------------------------------------------------------*;
697031     * Neural16: Scoring DATA data;
697032     *------------------------------------------------------------*;
697033     data EMWS8.Neural16_TRAIN
697034     / view=EMWS8.Neural16_TRAIN
697035     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural16_TRAIN / view=EMWS8.Neural16_TRAIN ;
697036     set EMWS8.PRINCOMP_TRAIN
697037     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
697038     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas.
697039    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
697040    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
697041    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
697042    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
697043    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
697044    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
697045    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
697046    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
697047    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
697048    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
697049    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
697050    +LENGTH _WARN_ $4
697051    +      F_DepVar  $ 12
697052    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
697053    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
697054    +
697055    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
697056    +
697057    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
697058    +
697059    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
697060    +
697061    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
697062    +
697063    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
697064    +
697065    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
697066    +
697067    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
697068    +
697069    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
697070    +
697071    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
697072    +
697073    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
697074    +
697075    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
697076    +
697077    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
697078    +
697079    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
697080    +
697081    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
697082    +
697083    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
697084    +
697085    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
697086    +
697087    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
697088    +
697089    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
697090    +
697091    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
697092    +
697093    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
697094    +
697095    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
697096    +
697097    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
697098    +
697099    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
697100    +
697101    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
697102    +
697103    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
697104    +
697105    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
697106    +
697107    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
697108    +
697109    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
697110    +
697111    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
697112    +
697113    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
697114    +
697115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697116    +*** Checking missing input Interval
697117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
697118    +
697119    +IF NMISS(
697120    +   PC_1 ,
697121    +   PC_10 ,
697122    +   PC_11 ,
697123    +   PC_12 ,
697124    +   PC_13 ,
697125    +   PC_14 ,
697126    +   PC_15 ,
697127    +   PC_16 ,
697128    +   PC_17 ,
697129    +   PC_2 ,
697130    +   PC_3 ,
697131    +   PC_4 ,
697132    +   PC_5 ,
697133    +   PC_6 ,
697134    +   PC_7 ,
697135    +   PC_8 ,
697136    +   PC_9 ,
697137    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
697138    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
697139    +
697140    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
697141    +END;
MPRINT(EM_DIAGRAM):   END;
697142    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697143    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
697144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697145    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697146    +   S_PC_1  = -3.5843560363112E-15 +     0.29892710740321 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.5843560363112E-15 + 0.29892710740321 * PC_1 ;
697147    +   S_PC_10  = -6.2658190129358E-15 +     0.82174710410461 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.2658190129358E-15 + 0.82174710410461 * PC_10 ;
697148    +   S_PC_11  =  5.2827852337662E-15 +     0.85633436658082 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 5.2827852337662E-15 + 0.85633436658082 * PC_11 ;
697149    +   S_PC_12  = -4.1238610853835E-15 +     0.88809669446626 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -4.1238610853835E-15 + 0.88809669446626 * PC_12 ;
697150    +   S_PC_13  =  1.5294467014806E-15 +     0.89679439630496 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.5294467014806E-15 + 0.89679439630496 * PC_13 ;
697151    +   S_PC_14  = -6.2595704915953E-15 +     0.90338385596507 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.2595704915953E-15 + 0.90338385596507 * PC_14 ;
697152    +   S_PC_15  = -5.5154137020119E-16 +     0.92995263572302 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -5.5154137020119E-16 + 0.92995263572302 * PC_15 ;
697153    +   S_PC_16  = -2.6453177008422E-15 +      0.9512169845353 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.6453177008422E-15 + 0.9512169845353 * PC_16 ;
697154    +   S_PC_17  =   3.641923430911E-15 +     0.99885948412688 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 3.641923430911E-15 + 0.99885948412688 * PC_17 ;
697155    +   S_PC_2  =  6.4913163867762E-15 +      0.5437297154044 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4913163867762E-15 + 0.5437297154044 * PC_2 ;
697156    +   S_PC_3  =  2.2868642839817E-15 +     0.55367105026453 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2868642839817E-15 + 0.55367105026453 * PC_3 ;
697157    +   S_PC_4  = -4.0268214595882E-15 +     0.63693441603523 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -4.0268214595882E-15 + 0.63693441603523 * PC_4 ;
697158    +   S_PC_5  = -4.7373321816097E-15 +     0.66668512927319 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.7373321816097E-15 + 0.66668512927319 * PC_5 ;
697159    +   S_PC_6  =  1.5652933820513E-15 +     0.70536143636182 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5652933820513E-15 + 0.70536143636182 * PC_6 ;
697160    +   S_PC_7  =  3.7827428793697E-16 +     0.74929815039837 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.7827428793697E-16 + 0.74929815039837 * PC_7 ;
697161    +   S_PC_8  = -2.4158031671174E-15 +     0.77165002143369 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.4158031671174E-15 + 0.77165002143369 * PC_8 ;
697162    +   S_PC_9  = -4.0982774857475E-15 +       0.808303499885 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -4.0982774857475E-15 + 0.808303499885 * PC_9 ;
697163    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
697164    +END;
MPRINT(EM_DIAGRAM):   END;
697165    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697166    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
697167    +   ELSE S_PC_1  = -3.5843560363112E-15 +     0.29892710740321 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.5843560363112E-15 + 0.29892710740321 * PC_1 ;
697168    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
697169    +   ELSE S_PC_10  = -6.2658190129358E-15 +     0.82174710410461 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.2658190129358E-15 + 0.82174710410461 * PC_10 ;
697170    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
697171    +   ELSE S_PC_11  =  5.2827852337662E-15 +     0.85633436658082 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 5.2827852337662E-15 + 0.85633436658082 * PC_11 ;
697172    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
697173    +   ELSE S_PC_12  = -4.1238610853835E-15 +     0.88809669446626 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -4.1238610853835E-15 + 0.88809669446626 * PC_12 ;
697174    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
697175    +   ELSE S_PC_13  =  1.5294467014806E-15 +     0.89679439630496 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.5294467014806E-15 + 0.89679439630496 * PC_13 ;
697176    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
697177    +   ELSE S_PC_14  = -6.2595704915953E-15 +     0.90338385596507 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.2595704915953E-15 + 0.90338385596507 * PC_14 ;
697178    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
697179    +   ELSE S_PC_15  = -5.5154137020119E-16 +     0.92995263572302 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -5.5154137020119E-16 + 0.92995263572302 * PC_15 ;
697180    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
697181    +   ELSE S_PC_16  = -2.6453177008422E-15 +      0.9512169845353 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.6453177008422E-15 + 0.9512169845353 * PC_16 ;
697182    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
697183    +   ELSE S_PC_17  =   3.641923430911E-15 +     0.99885948412688 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 3.641923430911E-15 + 0.99885948412688 * PC_17 ;
697184    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
697185    +   ELSE S_PC_2  =  6.4913163867762E-15 +      0.5437297154044 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4913163867762E-15 + 0.5437297154044 * PC_2 ;
697186    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
697187    +   ELSE S_PC_3  =  2.2868642839817E-15 +     0.55367105026453 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2868642839817E-15 + 0.55367105026453 * PC_3 ;
697188    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
697189    +   ELSE S_PC_4  = -4.0268214595882E-15 +     0.63693441603523 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -4.0268214595882E-15 + 0.63693441603523 * PC_4 ;
697190    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
697191    +   ELSE S_PC_5  = -4.7373321816097E-15 +     0.66668512927319 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.7373321816097E-15 + 0.66668512927319 * PC_5 ;
697192    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
697193    +   ELSE S_PC_6  =  1.5652933820513E-15 +     0.70536143636182 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5652933820513E-15 + 0.70536143636182 * PC_6 ;
697194    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
697195    +   ELSE S_PC_7  =  3.7827428793697E-16 +     0.74929815039837 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.7827428793697E-16 + 0.74929815039837 * PC_7 ;
697196    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
697197    +   ELSE S_PC_8  = -2.4158031671174E-15 +     0.77165002143369 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.4158031671174E-15 + 0.77165002143369 * PC_8 ;
697198    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
697199    +   ELSE S_PC_9  = -4.0982774857475E-15 +       0.808303499885 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -4.0982774857475E-15 + 0.808303499885 * PC_9 ;
697200    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
697201    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
697202    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
697203    +END;
MPRINT(EM_DIAGRAM):   END;
697204    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697205    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
697206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697207    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697208    +   H11  =     0.64917498634892 * S_PC_1  +    -0.11542518686923 * S_PC_10
697209    +          +     0.24789006281492 * S_PC_11  +     0.29029859048219 * S_PC_12
697210    +          +    -0.55860346522398 * S_PC_13  +     0.54359630746099 * S_PC_14
697211    +          +    -0.19601034247455 * S_PC_15  +     0.10789324573687 * S_PC_16
697212    +          +    -0.23559438156009 * S_PC_17  +    -0.26112594215329 * S_PC_2
697213    +          +    -0.05861616774393 * S_PC_3  +     0.13176125146685 * S_PC_4
697214    +          +    -0.32389209403293 * S_PC_5  +     0.06668081446802 * S_PC_6
697215    +          +     0.10687794315293 * S_PC_7  +     0.36804397754071 * S_PC_8
697216    +          +      0.5318152129643 * S_PC_9  +     0.46123908390889 *
697217    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.64917498634892 * S_PC_1 + -0.11542518686923 * S_PC_10 + 
0.24789006281492 * S_PC_11 + 0.29029859048219 * S_PC_12 + -0.55860346522398 * S_PC_13 + 
0.54359630746099 * S_PC_14 + -0.19601034247455 * S_PC_15 + 0.10789324573687 * S_PC_16 + 
-0.23559438156009 * S_PC_17 + -0.26112594215329 * S_PC_2 + -0.05861616774393 * S_PC_3 + 
0.13176125146685 * S_PC_4 + -0.32389209403293 * S_PC_5 + 0.06668081446802 * S_PC_6 + 
0.10687794315293 * S_PC_7 + 0.36804397754071 * S_PC_8 + 0.5318152129643 * S_PC_9 + 
0.46123908390889 * S_Year_Birth ;
697218    +   H12  =    -0.01801213626812 * S_PC_1  +     -0.2043873131352 * S_PC_10
697219    +          +     0.22634530500659 * S_PC_11  +      0.3082120092065 * S_PC_12
697220    +          +    -0.24845701925273 * S_PC_13  +     0.10913661031841 * S_PC_14
697221    +          +     0.07872049610669 * S_PC_15  +    -0.01772186757041 * S_PC_16
697222    +          +     0.50309876372506 * S_PC_17  +      0.0334286731814 * S_PC_2
697223    +          +    -0.22577856013151 * S_PC_3  +    -0.14899658751542 * S_PC_4
697224    +          +    -0.20131940000977 * S_PC_5  +     0.30905670035888 * S_PC_6
697225    +          +     0.27760266803506 * S_PC_7  +     0.49508176088642 * S_PC_8
697226    +          +     0.02416700614161 * S_PC_9  +     0.01961564164037 *
697227    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.01801213626812 * S_PC_1 + -0.2043873131352 * S_PC_10 + 
0.22634530500659 * S_PC_11 + 0.3082120092065 * S_PC_12 + -0.24845701925273 * S_PC_13 + 
0.10913661031841 * S_PC_14 + 0.07872049610669 * S_PC_15 + -0.01772186757041 * S_PC_16 + 
0.50309876372506 * S_PC_17 + 0.0334286731814 * S_PC_2 + -0.22577856013151 * S_PC_3 + 
-0.14899658751542 * S_PC_4 + -0.20131940000977 * S_PC_5 + 0.30905670035888 * S_PC_6 + 
0.27760266803506 * S_PC_7 + 0.49508176088642 * S_PC_8 + 0.02416700614161 * S_PC_9 + 
0.01961564164037 * S_Year_Birth ;
697228    +   H13  =    -0.32462544631852 * S_PC_1  +     0.60993570444644 * S_PC_10
697229    +          +     -0.3652943408382 * S_PC_11  +     -0.3514775281027 * S_PC_12
697230    +          +     0.91822527281221 * S_PC_13  +    -0.32876201496528 * S_PC_14
697231    +          +     0.45513294250288 * S_PC_15  +    -0.18540211347927 * S_PC_16
697232    +          +     0.29366041990964 * S_PC_17  +     0.33764635211366 * S_PC_2
697233    +          +    -0.09097395445066 * S_PC_3  +     0.13719908951988 * S_PC_4
697234    +          +     0.22703460715896 * S_PC_5  +      -0.170019235519 * S_PC_6
697235    +          +     0.21135981208747 * S_PC_7  +     0.03503879697227 * S_PC_8
697236    +          +     0.12751213936223 * S_PC_9  +     0.14125995298539 *
697237    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.32462544631852 * S_PC_1 + 0.60993570444644 * S_PC_10 + 
-0.3652943408382 * S_PC_11 + -0.3514775281027 * S_PC_12 + 0.91822527281221 * S_PC_13 + 
-0.32876201496528 * S_PC_14 + 0.45513294250288 * S_PC_15 + -0.18540211347927 * S_PC_16 + 
0.29366041990964 * S_PC_17 + 0.33764635211366 * S_PC_2 + -0.09097395445066 * S_PC_3 + 
0.13719908951988 * S_PC_4 + 0.22703460715896 * S_PC_5 + -0.170019235519 * S_PC_6 + 
0.21135981208747 * S_PC_7 + 0.03503879697227 * S_PC_8 + 0.12751213936223 * S_PC_9 + 
0.14125995298539 * S_Year_Birth ;
697238    +   H14  =    -0.88644905388941 * S_PC_1  +     0.11946463876825 * S_PC_10
697239    +          +     0.20700553386505 * S_PC_11  +     0.24426124990122 * S_PC_12
697240    +          +    -0.29204136607957 * S_PC_13  +     0.29253451421205 * S_PC_14
697241    +          +     0.09583889495069 * S_PC_15  +     0.08393526308586 * S_PC_16
697242    +          +     -0.1382524970935 * S_PC_17  +    -0.77151881971786 * S_PC_2
697243    +          +    -0.63302889267132 * S_PC_3  +     0.98515158315972 * S_PC_4
697244    +          +    -0.26847098635021 * S_PC_5  +    -0.37537538399943 * S_PC_6
697245    +          +     0.28730733138223 * S_PC_7  +     0.60783744480259 * S_PC_8
697246    +          +     0.26786199050734 * S_PC_9  +    -0.12348475922953 *
697247    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.88644905388941 * S_PC_1 + 0.11946463876825 * S_PC_10 + 
0.20700553386505 * S_PC_11 + 0.24426124990122 * S_PC_12 + -0.29204136607957 * S_PC_13 + 
0.29253451421205 * S_PC_14 + 0.09583889495069 * S_PC_15 + 0.08393526308586 * S_PC_16 + 
-0.1382524970935 * S_PC_17 + -0.77151881971786 * S_PC_2 + -0.63302889267132 * S_PC_3 + 
0.98515158315972 * S_PC_4 + -0.26847098635021 * S_PC_5 + -0.37537538399943 * S_PC_6 + 
0.28730733138223 * S_PC_7 + 0.60783744480259 * S_PC_8 + 0.26786199050734 * S_PC_9 + 
-0.12348475922953 * S_Year_Birth ;
697248    +   H15  =     1.04025741702379 * S_PC_1  +    -0.37094641060303 * S_PC_10
697249    +          +    -0.28614666270019 * S_PC_11  +    -0.42824232140855 * S_PC_12
697250    +          +     -0.3133983107983 * S_PC_13  +    -0.11984699072712 * S_PC_14
697251    +          +     0.03677712851734 * S_PC_15  +      0.0269831970411 * S_PC_16
697252    +          +     0.24557112569993 * S_PC_17  +    -0.18797666621001 * S_PC_2
697253    +          +     0.29958293056896 * S_PC_3  +    -0.22470684397488 * S_PC_4
697254    +          +     0.04580208795813 * S_PC_5  +     0.19624354198997 * S_PC_6
697255    +          +    -0.01223221841943 * S_PC_7  +    -0.12295109489073 * S_PC_8
697256    +          +     0.39210110562341 * S_PC_9  +    -0.04264256894107 *
697257    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 1.04025741702379 * S_PC_1 + -0.37094641060303 * S_PC_10 + 
-0.28614666270019 * S_PC_11 + -0.42824232140855 * S_PC_12 + -0.3133983107983 * S_PC_13 + 
-0.11984699072712 * S_PC_14 + 0.03677712851734 * S_PC_15 + 0.0269831970411 * S_PC_16 + 
0.24557112569993 * S_PC_17 + -0.18797666621001 * S_PC_2 + 0.29958293056896 * S_PC_3 + 
-0.22470684397488 * S_PC_4 + 0.04580208795813 * S_PC_5 + 0.19624354198997 * S_PC_6 + 
-0.01223221841943 * S_PC_7 + -0.12295109489073 * S_PC_8 + 0.39210110562341 * S_PC_9 + 
-0.04264256894107 * S_Year_Birth ;
697258    +   H11  =    -0.58201165596022 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.58201165596022 + H11 ;
697259    +   H12  =    -1.05981403552709 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.05981403552709 + H12 ;
697260    +   H13  =    -0.58494097725461 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.58494097725461 + H13 ;
697261    +   H14  =    -0.98625097571698 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.98625097571698 + H14 ;
697262    +   H15  =    -1.85258286090269 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.85258286090269 + H15 ;
697263    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
697264    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
697265    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
697266    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
697267    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
697268    +END;
MPRINT(EM_DIAGRAM):   END;
697269    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697270    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
697271    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
697272    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
697273    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
697274    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
697275    +END;
MPRINT(EM_DIAGRAM):   END;
697276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697277    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
697278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697279    +
697280    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
697281    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
697282    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
697283    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
697284    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
697285    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
697286    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
697287    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
697288    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
697289    +end;
MPRINT(EM_DIAGRAM):   end;
697290    +else do;
MPRINT(EM_DIAGRAM):   else do;
697291    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
697292    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
697293    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
697294    +   end;
MPRINT(EM_DIAGRAM):   end;
697295    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
697296    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
697297    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
697298    +   end;
MPRINT(EM_DIAGRAM):   end;
697299    +   else do;
MPRINT(EM_DIAGRAM):   else do;
697300    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
697301    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
697302    +   end;
MPRINT(EM_DIAGRAM):   end;
697303    +end;
MPRINT(EM_DIAGRAM):   end;
697304    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697305    +   P_DepVar1  =     1.22863049133923 * H11  +     0.28699946905127 * H12
697306    +          +    -2.51725413522976 * H13  +     1.82433485707779 * H14
697307    +          +     2.87826463194671 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22863049133923 * H11 + 0.28699946905127 * H12 + 
-2.51725413522976 * H13 + 1.82433485707779 * H14 + 2.87826463194671 * H15 ;
697308    +   P_DepVar1  =     -1.1116551400942 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.1116551400942 + P_DepVar1 ;
697309    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
697310    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
697311    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
697312    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
697313    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
697314    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
697315    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
697316    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
697317    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
697318    +END;
MPRINT(EM_DIAGRAM):   END;
697319    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697320    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
697321    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
697322    +END;
MPRINT(EM_DIAGRAM):   END;
697323    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
697324    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
697325    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
697326    +END;
MPRINT(EM_DIAGRAM):   END;
697327    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
697328    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
697329    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
697330    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
697331    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
697332    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
697333    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
697334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697335    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
697336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697337    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
697338    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
697339    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
697340    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
697341    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
697342    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
697343    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
697344    +END;
MPRINT(EM_DIAGRAM):   END;
697345    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
697346    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
697347    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
697348    +drop
697349    +H11
697350    +H12
697351    +H13
697352    +H14
697353    +H15
697354    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
697355    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
697356     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL16_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
697357     quit;
697358     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
697359     filename emflow
697359   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural16: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
697360     *------------------------------------------------------------*;
697361     * Neural16: Scoring VALIDATE data;
697362     *------------------------------------------------------------*;
697363     data EMWS8.Neural16_VALIDATE
697364     / view=EMWS8.Neural16_VALIDATE
697365     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural16_VALIDATE / view=EMWS8.Neural16_VALIDATE ;
697366     set EMWS8.PRINCOMP_VALIDATE
697367     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
697368     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural16\EMFLOWSCORE.sas.
697369    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
697370    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
697371    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
697372    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
697373    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
697374    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
697375    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
697376    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
697377    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
697378    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
697379    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
697380    +LENGTH _WARN_ $4
697381    +      F_DepVar  $ 12
697382    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
697383    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
697384    +
697385    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
697386    +
697387    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
697388    +
697389    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
697390    +
697391    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
697392    +
697393    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
697394    +
697395    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
697396    +
697397    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
697398    +
697399    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
697400    +
697401    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
697402    +
697403    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
697404    +
697405    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
697406    +
697407    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
697408    +
697409    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
697410    +
697411    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
697412    +
697413    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
697414    +
697415    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
697416    +
697417    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
697418    +
697419    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
697420    +
697421    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
697422    +
697423    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
697424    +
697425    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
697426    +
697427    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
697428    +
697429    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
697430    +
697431    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
697432    +
697433    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
697434    +
697435    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
697436    +
697437    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
697438    +
697439    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
697440    +
697441    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
697442    +
697443    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
697444    +
697445    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697446    +*** Checking missing input Interval
697447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
697448    +
697449    +IF NMISS(
697450    +   PC_1 ,
697451    +   PC_10 ,
697452    +   PC_11 ,
697453    +   PC_12 ,
697454    +   PC_13 ,
697455    +   PC_14 ,
697456    +   PC_15 ,
697457    +   PC_16 ,
697458    +   PC_17 ,
697459    +   PC_2 ,
697460    +   PC_3 ,
697461    +   PC_4 ,
697462    +   PC_5 ,
697463    +   PC_6 ,
697464    +   PC_7 ,
697465    +   PC_8 ,
697466    +   PC_9 ,
697467    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
697468    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
697469    +
697470    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
697471    +END;
MPRINT(EM_DIAGRAM):   END;
697472    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697473    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
697474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697475    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697476    +   S_PC_1  = -3.5843560363112E-15 +     0.29892710740321 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.5843560363112E-15 + 0.29892710740321 * PC_1 ;
697477    +   S_PC_10  = -6.2658190129358E-15 +     0.82174710410461 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.2658190129358E-15 + 0.82174710410461 * PC_10 ;
697478    +   S_PC_11  =  5.2827852337662E-15 +     0.85633436658082 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 5.2827852337662E-15 + 0.85633436658082 * PC_11 ;
697479    +   S_PC_12  = -4.1238610853835E-15 +     0.88809669446626 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -4.1238610853835E-15 + 0.88809669446626 * PC_12 ;
697480    +   S_PC_13  =  1.5294467014806E-15 +     0.89679439630496 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.5294467014806E-15 + 0.89679439630496 * PC_13 ;
697481    +   S_PC_14  = -6.2595704915953E-15 +     0.90338385596507 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.2595704915953E-15 + 0.90338385596507 * PC_14 ;
697482    +   S_PC_15  = -5.5154137020119E-16 +     0.92995263572302 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -5.5154137020119E-16 + 0.92995263572302 * PC_15 ;
697483    +   S_PC_16  = -2.6453177008422E-15 +      0.9512169845353 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.6453177008422E-15 + 0.9512169845353 * PC_16 ;
697484    +   S_PC_17  =   3.641923430911E-15 +     0.99885948412688 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 3.641923430911E-15 + 0.99885948412688 * PC_17 ;
697485    +   S_PC_2  =  6.4913163867762E-15 +      0.5437297154044 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4913163867762E-15 + 0.5437297154044 * PC_2 ;
697486    +   S_PC_3  =  2.2868642839817E-15 +     0.55367105026453 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2868642839817E-15 + 0.55367105026453 * PC_3 ;
697487    +   S_PC_4  = -4.0268214595882E-15 +     0.63693441603523 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -4.0268214595882E-15 + 0.63693441603523 * PC_4 ;
697488    +   S_PC_5  = -4.7373321816097E-15 +     0.66668512927319 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.7373321816097E-15 + 0.66668512927319 * PC_5 ;
697489    +   S_PC_6  =  1.5652933820513E-15 +     0.70536143636182 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5652933820513E-15 + 0.70536143636182 * PC_6 ;
697490    +   S_PC_7  =  3.7827428793697E-16 +     0.74929815039837 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.7827428793697E-16 + 0.74929815039837 * PC_7 ;
697491    +   S_PC_8  = -2.4158031671174E-15 +     0.77165002143369 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.4158031671174E-15 + 0.77165002143369 * PC_8 ;
697492    +   S_PC_9  = -4.0982774857475E-15 +       0.808303499885 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -4.0982774857475E-15 + 0.808303499885 * PC_9 ;
697493    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
697494    +END;
MPRINT(EM_DIAGRAM):   END;
697495    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697496    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
697497    +   ELSE S_PC_1  = -3.5843560363112E-15 +     0.29892710740321 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.5843560363112E-15 + 0.29892710740321 * PC_1 ;
697498    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
697499    +   ELSE S_PC_10  = -6.2658190129358E-15 +     0.82174710410461 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.2658190129358E-15 + 0.82174710410461 * PC_10 ;
697500    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
697501    +   ELSE S_PC_11  =  5.2827852337662E-15 +     0.85633436658082 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 5.2827852337662E-15 + 0.85633436658082 * PC_11 ;
697502    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
697503    +   ELSE S_PC_12  = -4.1238610853835E-15 +     0.88809669446626 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -4.1238610853835E-15 + 0.88809669446626 * PC_12 ;
697504    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
697505    +   ELSE S_PC_13  =  1.5294467014806E-15 +     0.89679439630496 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.5294467014806E-15 + 0.89679439630496 * PC_13 ;
697506    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
697507    +   ELSE S_PC_14  = -6.2595704915953E-15 +     0.90338385596507 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.2595704915953E-15 + 0.90338385596507 * PC_14 ;
697508    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
697509    +   ELSE S_PC_15  = -5.5154137020119E-16 +     0.92995263572302 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -5.5154137020119E-16 + 0.92995263572302 * PC_15 ;
697510    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
697511    +   ELSE S_PC_16  = -2.6453177008422E-15 +      0.9512169845353 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.6453177008422E-15 + 0.9512169845353 * PC_16 ;
697512    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
697513    +   ELSE S_PC_17  =   3.641923430911E-15 +     0.99885948412688 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 3.641923430911E-15 + 0.99885948412688 * PC_17 ;
697514    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
697515    +   ELSE S_PC_2  =  6.4913163867762E-15 +      0.5437297154044 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4913163867762E-15 + 0.5437297154044 * PC_2 ;
697516    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
697517    +   ELSE S_PC_3  =  2.2868642839817E-15 +     0.55367105026453 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2868642839817E-15 + 0.55367105026453 * PC_3 ;
697518    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
697519    +   ELSE S_PC_4  = -4.0268214595882E-15 +     0.63693441603523 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -4.0268214595882E-15 + 0.63693441603523 * PC_4 ;
697520    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
697521    +   ELSE S_PC_5  = -4.7373321816097E-15 +     0.66668512927319 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.7373321816097E-15 + 0.66668512927319 * PC_5 ;
697522    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
697523    +   ELSE S_PC_6  =  1.5652933820513E-15 +     0.70536143636182 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5652933820513E-15 + 0.70536143636182 * PC_6 ;
697524    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
697525    +   ELSE S_PC_7  =  3.7827428793697E-16 +     0.74929815039837 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.7827428793697E-16 + 0.74929815039837 * PC_7 ;
697526    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
697527    +   ELSE S_PC_8  = -2.4158031671174E-15 +     0.77165002143369 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.4158031671174E-15 + 0.77165002143369 * PC_8 ;
697528    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
697529    +   ELSE S_PC_9  = -4.0982774857475E-15 +       0.808303499885 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -4.0982774857475E-15 + 0.808303499885 * PC_9 ;
697530    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
697531    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
697532    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
697533    +END;
MPRINT(EM_DIAGRAM):   END;
697534    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697535    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
697536    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697537    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697538    +   H11  =     0.64917498634892 * S_PC_1  +    -0.11542518686923 * S_PC_10
697539    +          +     0.24789006281492 * S_PC_11  +     0.29029859048219 * S_PC_12
697540    +          +    -0.55860346522398 * S_PC_13  +     0.54359630746099 * S_PC_14
697541    +          +    -0.19601034247455 * S_PC_15  +     0.10789324573687 * S_PC_16
697542    +          +    -0.23559438156009 * S_PC_17  +    -0.26112594215329 * S_PC_2
697543    +          +    -0.05861616774393 * S_PC_3  +     0.13176125146685 * S_PC_4
697544    +          +    -0.32389209403293 * S_PC_5  +     0.06668081446802 * S_PC_6
697545    +          +     0.10687794315293 * S_PC_7  +     0.36804397754071 * S_PC_8
697546    +          +      0.5318152129643 * S_PC_9  +     0.46123908390889 *
697547    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.64917498634892 * S_PC_1 + -0.11542518686923 * S_PC_10 + 
0.24789006281492 * S_PC_11 + 0.29029859048219 * S_PC_12 + -0.55860346522398 * S_PC_13 + 
0.54359630746099 * S_PC_14 + -0.19601034247455 * S_PC_15 + 0.10789324573687 * S_PC_16 + 
-0.23559438156009 * S_PC_17 + -0.26112594215329 * S_PC_2 + -0.05861616774393 * S_PC_3 + 
0.13176125146685 * S_PC_4 + -0.32389209403293 * S_PC_5 + 0.06668081446802 * S_PC_6 + 
0.10687794315293 * S_PC_7 + 0.36804397754071 * S_PC_8 + 0.5318152129643 * S_PC_9 + 
0.46123908390889 * S_Year_Birth ;
697548    +   H12  =    -0.01801213626812 * S_PC_1  +     -0.2043873131352 * S_PC_10
697549    +          +     0.22634530500659 * S_PC_11  +      0.3082120092065 * S_PC_12
697550    +          +    -0.24845701925273 * S_PC_13  +     0.10913661031841 * S_PC_14
697551    +          +     0.07872049610669 * S_PC_15  +    -0.01772186757041 * S_PC_16
697552    +          +     0.50309876372506 * S_PC_17  +      0.0334286731814 * S_PC_2
697553    +          +    -0.22577856013151 * S_PC_3  +    -0.14899658751542 * S_PC_4
697554    +          +    -0.20131940000977 * S_PC_5  +     0.30905670035888 * S_PC_6
697555    +          +     0.27760266803506 * S_PC_7  +     0.49508176088642 * S_PC_8
697556    +          +     0.02416700614161 * S_PC_9  +     0.01961564164037 *
697557    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.01801213626812 * S_PC_1 + -0.2043873131352 * S_PC_10 + 
0.22634530500659 * S_PC_11 + 0.3082120092065 * S_PC_12 + -0.24845701925273 * S_PC_13 + 
0.10913661031841 * S_PC_14 + 0.07872049610669 * S_PC_15 + -0.01772186757041 * S_PC_16 + 
0.50309876372506 * S_PC_17 + 0.0334286731814 * S_PC_2 + -0.22577856013151 * S_PC_3 + 
-0.14899658751542 * S_PC_4 + -0.20131940000977 * S_PC_5 + 0.30905670035888 * S_PC_6 + 
0.27760266803506 * S_PC_7 + 0.49508176088642 * S_PC_8 + 0.02416700614161 * S_PC_9 + 
0.01961564164037 * S_Year_Birth ;
697558    +   H13  =    -0.32462544631852 * S_PC_1  +     0.60993570444644 * S_PC_10
697559    +          +     -0.3652943408382 * S_PC_11  +     -0.3514775281027 * S_PC_12
697560    +          +     0.91822527281221 * S_PC_13  +    -0.32876201496528 * S_PC_14
697561    +          +     0.45513294250288 * S_PC_15  +    -0.18540211347927 * S_PC_16
697562    +          +     0.29366041990964 * S_PC_17  +     0.33764635211366 * S_PC_2
697563    +          +    -0.09097395445066 * S_PC_3  +     0.13719908951988 * S_PC_4
697564    +          +     0.22703460715896 * S_PC_5  +      -0.170019235519 * S_PC_6
697565    +          +     0.21135981208747 * S_PC_7  +     0.03503879697227 * S_PC_8
697566    +          +     0.12751213936223 * S_PC_9  +     0.14125995298539 *
697567    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.32462544631852 * S_PC_1 + 0.60993570444644 * S_PC_10 + 
-0.3652943408382 * S_PC_11 + -0.3514775281027 * S_PC_12 + 0.91822527281221 * S_PC_13 + 
-0.32876201496528 * S_PC_14 + 0.45513294250288 * S_PC_15 + -0.18540211347927 * S_PC_16 + 
0.29366041990964 * S_PC_17 + 0.33764635211366 * S_PC_2 + -0.09097395445066 * S_PC_3 + 
0.13719908951988 * S_PC_4 + 0.22703460715896 * S_PC_5 + -0.170019235519 * S_PC_6 + 
0.21135981208747 * S_PC_7 + 0.03503879697227 * S_PC_8 + 0.12751213936223 * S_PC_9 + 
0.14125995298539 * S_Year_Birth ;
697568    +   H14  =    -0.88644905388941 * S_PC_1  +     0.11946463876825 * S_PC_10
697569    +          +     0.20700553386505 * S_PC_11  +     0.24426124990122 * S_PC_12
697570    +          +    -0.29204136607957 * S_PC_13  +     0.29253451421205 * S_PC_14
697571    +          +     0.09583889495069 * S_PC_15  +     0.08393526308586 * S_PC_16
697572    +          +     -0.1382524970935 * S_PC_17  +    -0.77151881971786 * S_PC_2
697573    +          +    -0.63302889267132 * S_PC_3  +     0.98515158315972 * S_PC_4
697574    +          +    -0.26847098635021 * S_PC_5  +    -0.37537538399943 * S_PC_6
697575    +          +     0.28730733138223 * S_PC_7  +     0.60783744480259 * S_PC_8
697576    +          +     0.26786199050734 * S_PC_9  +    -0.12348475922953 *
697577    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.88644905388941 * S_PC_1 + 0.11946463876825 * S_PC_10 + 
0.20700553386505 * S_PC_11 + 0.24426124990122 * S_PC_12 + -0.29204136607957 * S_PC_13 + 
0.29253451421205 * S_PC_14 + 0.09583889495069 * S_PC_15 + 0.08393526308586 * S_PC_16 + 
-0.1382524970935 * S_PC_17 + -0.77151881971786 * S_PC_2 + -0.63302889267132 * S_PC_3 + 
0.98515158315972 * S_PC_4 + -0.26847098635021 * S_PC_5 + -0.37537538399943 * S_PC_6 + 
0.28730733138223 * S_PC_7 + 0.60783744480259 * S_PC_8 + 0.26786199050734 * S_PC_9 + 
-0.12348475922953 * S_Year_Birth ;
697578    +   H15  =     1.04025741702379 * S_PC_1  +    -0.37094641060303 * S_PC_10
697579    +          +    -0.28614666270019 * S_PC_11  +    -0.42824232140855 * S_PC_12
697580    +          +     -0.3133983107983 * S_PC_13  +    -0.11984699072712 * S_PC_14
697581    +          +     0.03677712851734 * S_PC_15  +      0.0269831970411 * S_PC_16
697582    +          +     0.24557112569993 * S_PC_17  +    -0.18797666621001 * S_PC_2
697583    +          +     0.29958293056896 * S_PC_3  +    -0.22470684397488 * S_PC_4
697584    +          +     0.04580208795813 * S_PC_5  +     0.19624354198997 * S_PC_6
697585    +          +    -0.01223221841943 * S_PC_7  +    -0.12295109489073 * S_PC_8
697586    +          +     0.39210110562341 * S_PC_9  +    -0.04264256894107 *
697587    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 1.04025741702379 * S_PC_1 + -0.37094641060303 * S_PC_10 + 
-0.28614666270019 * S_PC_11 + -0.42824232140855 * S_PC_12 + -0.3133983107983 * S_PC_13 + 
-0.11984699072712 * S_PC_14 + 0.03677712851734 * S_PC_15 + 0.0269831970411 * S_PC_16 + 
0.24557112569993 * S_PC_17 + -0.18797666621001 * S_PC_2 + 0.29958293056896 * S_PC_3 + 
-0.22470684397488 * S_PC_4 + 0.04580208795813 * S_PC_5 + 0.19624354198997 * S_PC_6 + 
-0.01223221841943 * S_PC_7 + -0.12295109489073 * S_PC_8 + 0.39210110562341 * S_PC_9 + 
-0.04264256894107 * S_Year_Birth ;
697588    +   H11  =    -0.58201165596022 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.58201165596022 + H11 ;
697589    +   H12  =    -1.05981403552709 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.05981403552709 + H12 ;
697590    +   H13  =    -0.58494097725461 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.58494097725461 + H13 ;
697591    +   H14  =    -0.98625097571698 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.98625097571698 + H14 ;
697592    +   H15  =    -1.85258286090269 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.85258286090269 + H15 ;
697593    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
697594    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
697595    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
697596    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
697597    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
697598    +END;
MPRINT(EM_DIAGRAM):   END;
697599    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697600    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
697601    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
697602    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
697603    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
697604    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
697605    +END;
MPRINT(EM_DIAGRAM):   END;
697606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697607    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
697608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697609    +
697610    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
697611    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
697612    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
697613    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
697614    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
697615    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
697616    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
697617    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
697618    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
697619    +end;
MPRINT(EM_DIAGRAM):   end;
697620    +else do;
MPRINT(EM_DIAGRAM):   else do;
697621    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
697622    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
697623    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
697624    +   end;
MPRINT(EM_DIAGRAM):   end;
697625    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
697626    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
697627    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
697628    +   end;
MPRINT(EM_DIAGRAM):   end;
697629    +   else do;
MPRINT(EM_DIAGRAM):   else do;
697630    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
697631    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
697632    +   end;
MPRINT(EM_DIAGRAM):   end;
697633    +end;
MPRINT(EM_DIAGRAM):   end;
697634    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697635    +   P_DepVar1  =     1.22863049133923 * H11  +     0.28699946905127 * H12
697636    +          +    -2.51725413522976 * H13  +     1.82433485707779 * H14
697637    +          +     2.87826463194671 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22863049133923 * H11 + 0.28699946905127 * H12 + 
-2.51725413522976 * H13 + 1.82433485707779 * H14 + 2.87826463194671 * H15 ;
697638    +   P_DepVar1  =     -1.1116551400942 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.1116551400942 + P_DepVar1 ;
697639    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
697640    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
697641    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
697642    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
697643    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
697644    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
697645    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
697646    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
697647    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
697648    +END;
MPRINT(EM_DIAGRAM):   END;
697649    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697650    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
697651    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
697652    +END;
MPRINT(EM_DIAGRAM):   END;
697653    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
697654    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
697655    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
697656    +END;
MPRINT(EM_DIAGRAM):   END;
697657    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
697658    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
697659    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
697660    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
697661    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
697662    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
697663    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
697664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697665    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
697666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697667    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
697668    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
697669    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
697670    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
697671    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
697672    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
697673    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
697674    +END;
MPRINT(EM_DIAGRAM):   END;
697675    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
697676    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
697677    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
697678    +drop
697679    +H11
697680    +H12
697681    +H13
697682    +H14
697683    +H15
697684    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
697685    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
697686     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL16_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
697687     quit;
697688     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
697689     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
697690     * Neural16: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural16: Computing metadata for TRAIN data;
697691     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL16_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural16\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural16_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural16_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural16_TRAIN out=WORK.M1TLVQRN noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TLVQRN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TLVQRN(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TLVQRN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TLVQRN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2FYJV__ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FYJV__;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FYJV__;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12L_W3B(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FYJV__;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FYJV__;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FYJV__;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FYJV__;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FYJV__;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural16_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural16";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural16";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural16";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural16: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
698003     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
698004     set EMWS8.Neural16_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural16_EMINFO;
698005     where DATA='Neural16' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural16' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
698006     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL16_EMINFO.
      WHERE (DATA='Neural16') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

698007     data EMWS8.Neural16_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural16_EMINFO;
698008     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
698009     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
698010     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL16_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
698014     run;
698015     data EMWS8.Neural16_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural16_EMINFO;
698016     set EMWS8.Neural16_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural16_EMINFO WORK.MODELTEMP_INFO;
698017     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL16_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL16_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

698018     proc sort data = EMWS8.Neural16_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural16_EMINFO NOTHREADS;
698019     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
698020     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL16_EMINFO.
NOTE: The data set EMWS8.NEURAL16_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

698021     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
698022     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
698023     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

698024     proc sort data = EMWS8.Neural16_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural16_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
698025     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
698026     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL16_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

698027     data EMWS8.Neural16_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural16_EMINFO;
698028     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
698029     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
698030     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL16_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

698031     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
698032     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
698033     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
698034     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL16_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL16_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
