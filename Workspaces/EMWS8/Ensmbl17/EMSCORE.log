MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2PF3X1M 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl17\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2PF3X1M new;
MPRINT(EM_DIAGRAM):   run;
1421565    filename emflow
1421565  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring REG3_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421566    *------------------------------------------------------------*;
1421567    * Ensmbl17: Scoring REG3_TRAIN data;
1421568    *------------------------------------------------------------*;
1421569    data EMWS8.Ensmbl17_TRAIN
1421570    / view=EMWS8.Ensmbl17_TRAIN
1421571    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl17_TRAIN / view=EMWS8.Ensmbl17_TRAIN ;
1421572    set EMWS8.Reg3_TRAIN
1421573    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_TRAIN ;
1421574    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl17\EMFLOWSCORE.sas.
1421575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421576   +* Ensmbl17: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Combine model for DepVar;
1421577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421578   +* Ensmbl17: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring Code of model 1 of 5;
1421579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421580   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421581   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1421582   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1421583   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1421584   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421585   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421586   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1421587   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1421588   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1421589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421590   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421591   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1421592   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1421593   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1421594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421595   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421596   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1421597   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1421598   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1421599   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421600   +
1421601   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1421602   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1421602  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1421603   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1421604   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1421605   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1421606   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1421607   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1421608   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421609   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1421610   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1421611   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1421612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421613   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421614   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1421615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421616   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1421617   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1421618   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1421619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421620   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1421621   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1421622   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1421623   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421624   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421625   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1421626   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1421627   +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
1421628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421629   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1421630   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1421631   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1421632   +
1421633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421634   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1421635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421636   +LABEL GRP_AcceptedCmp5 =
1421637   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1421638   +
1421639   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1421640   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1421641   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1421642   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1421643   +end;
MPRINT(EM_DIAGRAM):   end;
1421644   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1421645   +if (_UFORMAT eq '0'
1421646   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1421647   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1421648   +end;
MPRINT(EM_DIAGRAM):   end;
1421649   +else
1421650   +if (_UFORMAT eq '1'
1421651   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1421652   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1421653   +end;
MPRINT(EM_DIAGRAM):   end;
1421654   +else do;
MPRINT(EM_DIAGRAM):   else do;
1421655   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1421656   +end;
MPRINT(EM_DIAGRAM):   end;
1421657   +end;
MPRINT(EM_DIAGRAM):   end;
1421658   +
1421659   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421660   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1421661   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421662   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1421663   +
1421664   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1421665   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1421666   +end;
MPRINT(EM_DIAGRAM):   end;
1421667   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1421668   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1421669   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1421670   +end;
MPRINT(EM_DIAGRAM):   end;
1421671   +else
1421672   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1421673   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1421674   +end;
MPRINT(EM_DIAGRAM):   end;
1421675   +else
1421676   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1421677   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1421678   +end;
MPRINT(EM_DIAGRAM):   end;
1421679   +else
1421680   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1421681   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1421682   +end;
MPRINT(EM_DIAGRAM):   end;
1421683   +end;
MPRINT(EM_DIAGRAM):   end;
1421684   +
1421685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421686   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1421687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421688   +LABEL GRP_Income =
1421689   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1421690   +
1421691   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1421692   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1421693   +end;
MPRINT(EM_DIAGRAM):   end;
1421694   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1421695   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1421696   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1421697   +end;
MPRINT(EM_DIAGRAM):   end;
1421698   +else
1421699   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1421700   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1421701   +end;
MPRINT(EM_DIAGRAM):   end;
1421702   +else
1421703   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1421704   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1421705   +end;
MPRINT(EM_DIAGRAM):   end;
1421706   +else
1421707   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1421708   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1421709   +end;
MPRINT(EM_DIAGRAM):   end;
1421710   +end;
MPRINT(EM_DIAGRAM):   end;
1421711   +
1421712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421713   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1421714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421715   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1421716   +
1421717   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1421718   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1421719   +end;
MPRINT(EM_DIAGRAM):   end;
1421720   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1421721   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1421722   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1421723   +end;
MPRINT(EM_DIAGRAM):   end;
1421724   +else
1421725   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1421726   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1421727   +end;
MPRINT(EM_DIAGRAM):   end;
1421728   +else
1421729   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1421730   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1421731   +end;
MPRINT(EM_DIAGRAM):   end;
1421732   +else
1421733   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1421734   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1421735   +end;
MPRINT(EM_DIAGRAM):   end;
1421736   +end;
MPRINT(EM_DIAGRAM):   end;
1421737   +
1421738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421739   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1421740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421741   +LABEL GRP_MntFishProducts =
1421742   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1421743   +
1421744   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1421745   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1421746   +end;
MPRINT(EM_DIAGRAM):   end;
1421747   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1421748   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1421749   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1421750   +end;
MPRINT(EM_DIAGRAM):   end;
1421751   +else
1421752   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1421753   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1421754   +end;
MPRINT(EM_DIAGRAM):   end;
1421755   +else
1421756   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1421757   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1421758   +end;
MPRINT(EM_DIAGRAM):   end;
1421759   +else
1421760   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1421761   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1421762   +end;
MPRINT(EM_DIAGRAM):   end;
1421763   +end;
MPRINT(EM_DIAGRAM):   end;
1421764   +
1421765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421766   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1421767   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421768   +LABEL GRP_MntGoldProds =
1421769   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1421770   +
1421771   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1421772   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1421773   +end;
MPRINT(EM_DIAGRAM):   end;
1421774   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1421775   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1421776   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1421777   +end;
MPRINT(EM_DIAGRAM):   end;
1421778   +else
1421779   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1421780   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1421781   +end;
MPRINT(EM_DIAGRAM):   end;
1421782   +else
1421783   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1421784   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1421785   +end;
MPRINT(EM_DIAGRAM):   end;
1421786   +else
1421787   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1421788   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1421789   +end;
MPRINT(EM_DIAGRAM):   end;
1421790   +end;
MPRINT(EM_DIAGRAM):   end;
1421791   +
1421792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421793   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1421794   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421795   +LABEL GRP_MntMeatProducts =
1421796   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1421797   +
1421798   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1421799   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1421800   +end;
MPRINT(EM_DIAGRAM):   end;
1421801   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1421802   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1421803   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1421804   +end;
MPRINT(EM_DIAGRAM):   end;
1421805   +else
1421806   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1421807   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1421808   +end;
MPRINT(EM_DIAGRAM):   end;
1421809   +else
1421810   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1421811   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1421812   +end;
MPRINT(EM_DIAGRAM):   end;
1421813   +else
1421814   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1421815   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1421816   +end;
MPRINT(EM_DIAGRAM):   end;
1421817   +end;
MPRINT(EM_DIAGRAM):   end;
1421818   +
1421819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421820   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1421821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421822   +LABEL GRP_MntWines =
1421823   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1421824   +
1421825   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1421826   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1421827   +end;
MPRINT(EM_DIAGRAM):   end;
1421828   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1421829   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1421830   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1421831   +end;
MPRINT(EM_DIAGRAM):   end;
1421832   +else
1421833   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1421834   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1421835   +end;
MPRINT(EM_DIAGRAM):   end;
1421836   +else
1421837   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1421838   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1421839   +end;
MPRINT(EM_DIAGRAM):   end;
1421840   +else
1421841   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1421842   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1421843   +end;
MPRINT(EM_DIAGRAM):   end;
1421844   +end;
MPRINT(EM_DIAGRAM):   end;
1421845   +
1421846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421847   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1421848   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421849   +LABEL GRP_NumCatalogPurchases =
1421850   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1421851   +
1421852   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1421853   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1421854   +end;
MPRINT(EM_DIAGRAM):   end;
1421855   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1421856   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1421857   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1421858   +end;
MPRINT(EM_DIAGRAM):   end;
1421859   +else
1421860   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1421861   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1421862   +end;
MPRINT(EM_DIAGRAM):   end;
1421863   +else
1421864   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1421865   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1421866   +end;
MPRINT(EM_DIAGRAM):   end;
1421867   +else
1421868   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1421869   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1421870   +end;
MPRINT(EM_DIAGRAM):   end;
1421871   +end;
MPRINT(EM_DIAGRAM):   end;
1421872   +
1421873   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421874   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1421875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421876   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1421877   +
1421878   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1421879   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1421880   +end;
MPRINT(EM_DIAGRAM):   end;
1421881   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1421882   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1421883   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1421884   +end;
MPRINT(EM_DIAGRAM):   end;
1421885   +else
1421886   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1421887   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1421888   +end;
MPRINT(EM_DIAGRAM):   end;
1421889   +else
1421890   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1421891   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1421892   +end;
MPRINT(EM_DIAGRAM):   end;
1421893   +else
1421894   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1421895   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1421896   +end;
MPRINT(EM_DIAGRAM):   end;
1421897   +end;
MPRINT(EM_DIAGRAM):   end;
1421898   +
1421899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421900   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1421901   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421902   +LABEL GRP_NumWebPurchases =
1421903   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1421904   +
1421905   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1421906   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1421907   +end;
MPRINT(EM_DIAGRAM):   end;
1421908   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1421909   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1421910   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1421911   +end;
MPRINT(EM_DIAGRAM):   end;
1421912   +else
1421913   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1421914   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1421915   +end;
MPRINT(EM_DIAGRAM):   end;
1421916   +else
1421917   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1421918   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1421919   +end;
MPRINT(EM_DIAGRAM):   end;
1421920   +else
1421921   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1421922   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1421923   +end;
MPRINT(EM_DIAGRAM):   end;
1421924   +end;
MPRINT(EM_DIAGRAM):   end;
1421925   +
1421926   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421927   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1421928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421929   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1421930   +
1421931   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1421932   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1421933   +end;
MPRINT(EM_DIAGRAM):   end;
1421934   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1421935   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1421936   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1421937   +end;
MPRINT(EM_DIAGRAM):   end;
1421938   +else
1421939   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1421940   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1421941   +end;
MPRINT(EM_DIAGRAM):   end;
1421942   +else
1421943   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1421944   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1421945   +end;
MPRINT(EM_DIAGRAM):   end;
1421946   +else
1421947   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1421948   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1421949   +end;
MPRINT(EM_DIAGRAM):   end;
1421950   +end;
MPRINT(EM_DIAGRAM):   end;
1421951   +
1421952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421953   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1421954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421955   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1421956   +
1421957   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1421958   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1421959   +end;
MPRINT(EM_DIAGRAM):   end;
1421960   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1421961   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1421962   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1421963   +end;
MPRINT(EM_DIAGRAM):   end;
1421964   +else
1421965   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1421966   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1421967   +end;
MPRINT(EM_DIAGRAM):   end;
1421968   +else
1421969   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1421970   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1421971   +end;
MPRINT(EM_DIAGRAM):   end;
1421972   +else
1421973   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1421974   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1421975   +end;
MPRINT(EM_DIAGRAM):   end;
1421976   +end;
MPRINT(EM_DIAGRAM):   end;
1421977   +
1421978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421979   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1421980   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1421981   +LABEL GRP_Recency =
1421982   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1421983   +
1421984   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1421985   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1421986   +end;
MPRINT(EM_DIAGRAM):   end;
1421987   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1421988   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1421989   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1421990   +end;
MPRINT(EM_DIAGRAM):   end;
1421991   +else
1421992   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1421993   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1421994   +end;
MPRINT(EM_DIAGRAM):   end;
1421995   +else
1421996   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1421997   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1421998   +end;
MPRINT(EM_DIAGRAM):   end;
1421999   +else
1422000   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1422001   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1422002   +end;
MPRINT(EM_DIAGRAM):   end;
1422003   +end;
MPRINT(EM_DIAGRAM):   end;
1422004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1422005   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1422006   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1422007   +* NODE: Reg3;
MPRINT(EM_DIAGRAM):   * NODE: Reg3;
1422008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1422009   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1422010   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1422011   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1422012   +
1422013   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1422014   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1422015   +
1422016   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1422017   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1422018   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1422019   +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
1422020   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1422021   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1422022   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1422023   +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
1422024   +
1422025   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1422026   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1422027   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1422028   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1422029   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1422030   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422031   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1422032   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1422033   +end;
MPRINT(EM_DIAGRAM):   end;
1422034   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422035   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1422036   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1422037   +   end;
MPRINT(EM_DIAGRAM):   end;
1422038   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1422039   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1422040   +   end;
MPRINT(EM_DIAGRAM):   end;
1422041   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422042   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1422043   +   end;
MPRINT(EM_DIAGRAM):   end;
1422044   +end;
MPRINT(EM_DIAGRAM):   end;
1422045   +
1422046   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1422047   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1422048   +
1422049   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1422050   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1422051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422053   +end;
MPRINT(EM_DIAGRAM):   end;
1422054   +
1422055   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1422056   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1422057   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1422058   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1422059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422061   +end;
MPRINT(EM_DIAGRAM):   end;
1422062   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422064   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1422065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422066   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1422067   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1422068   +   end;
MPRINT(EM_DIAGRAM):   end;
1422069   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1422070   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1422071   +   end;
MPRINT(EM_DIAGRAM):   end;
1422072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422073   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1422074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422076   +   end;
MPRINT(EM_DIAGRAM):   end;
1422077   +end;
MPRINT(EM_DIAGRAM):   end;
1422078   +
1422079   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1422080   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1422081   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1422082   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1422083   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1422084   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1422085   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422086   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422087   +end;
MPRINT(EM_DIAGRAM):   end;
1422088   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422089   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422090   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1422091   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422092   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1422093   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1422094   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1422095   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1422096   +   end;
MPRINT(EM_DIAGRAM):   end;
1422097   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1422098   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1422099   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1422100   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1422101   +   end;
MPRINT(EM_DIAGRAM):   end;
1422102   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422103   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1422104   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1422105   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1422106   +   end;
MPRINT(EM_DIAGRAM):   end;
1422107   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422108   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1422109   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1422110   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1422111   +   end;
MPRINT(EM_DIAGRAM):   end;
1422112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422113   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1422114   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1422115   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1422116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422118   +   end;
MPRINT(EM_DIAGRAM):   end;
1422119   +end;
MPRINT(EM_DIAGRAM):   end;
1422120   +
1422121   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1422122   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1422123   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1422124   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1422125   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1422126   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1422127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422129   +end;
MPRINT(EM_DIAGRAM):   end;
1422130   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422132   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1422133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422134   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1422135   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1422136   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1422137   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1422138   +   end;
MPRINT(EM_DIAGRAM):   end;
1422139   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422140   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1422141   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1422142   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1422143   +   end;
MPRINT(EM_DIAGRAM):   end;
1422144   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1422145   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1422146   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1422147   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1422148   +   end;
MPRINT(EM_DIAGRAM):   end;
1422149   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422150   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1422151   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1422152   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1422153   +   end;
MPRINT(EM_DIAGRAM):   end;
1422154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422155   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1422156   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1422157   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1422158   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422159   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422160   +   end;
MPRINT(EM_DIAGRAM):   end;
1422161   +end;
MPRINT(EM_DIAGRAM):   end;
1422162   +
1422163   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1422164   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1422165   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1422166   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1422167   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1422168   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1422169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422171   +end;
MPRINT(EM_DIAGRAM):   end;
1422172   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422173   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422174   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1422175   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422176   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1422177   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1422178   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1422179   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1422180   +   end;
MPRINT(EM_DIAGRAM):   end;
1422181   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1422182   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1422183   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1422184   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1422185   +   end;
MPRINT(EM_DIAGRAM):   end;
1422186   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422187   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1422188   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1422189   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1422190   +   end;
MPRINT(EM_DIAGRAM):   end;
1422191   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422192   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1422193   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1422194   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1422195   +   end;
MPRINT(EM_DIAGRAM):   end;
1422196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422197   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1422198   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1422199   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1422200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422202   +   end;
MPRINT(EM_DIAGRAM):   end;
1422203   +end;
MPRINT(EM_DIAGRAM):   end;
1422204   +
1422205   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1422206   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1422207   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1422208   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1422209   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1422210   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1422211   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422212   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422213   +end;
MPRINT(EM_DIAGRAM):   end;
1422214   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422215   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422216   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1422217   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422218   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1422219   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1422220   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1422221   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1422222   +   end;
MPRINT(EM_DIAGRAM):   end;
1422223   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422224   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1422225   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1422226   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1422227   +   end;
MPRINT(EM_DIAGRAM):   end;
1422228   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1422229   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1422230   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1422231   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1422232   +   end;
MPRINT(EM_DIAGRAM):   end;
1422233   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422234   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1422235   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1422236   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1422237   +   end;
MPRINT(EM_DIAGRAM):   end;
1422238   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422239   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1422240   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1422241   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1422242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422244   +   end;
MPRINT(EM_DIAGRAM):   end;
1422245   +end;
MPRINT(EM_DIAGRAM):   end;
1422246   +
1422247   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1422248   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1422249   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1422250   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1422251   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1422252   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1422253   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422254   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422255   +end;
MPRINT(EM_DIAGRAM):   end;
1422256   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422257   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422258   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1422259   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422260   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1422261   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1422262   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1422263   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1422264   +   end;
MPRINT(EM_DIAGRAM):   end;
1422265   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1422266   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1422267   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1422268   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1422269   +   end;
MPRINT(EM_DIAGRAM):   end;
1422270   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422271   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1422272   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1422273   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1422274   +   end;
MPRINT(EM_DIAGRAM):   end;
1422275   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422276   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1422277   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1422278   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1422279   +   end;
MPRINT(EM_DIAGRAM):   end;
1422280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422281   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1422282   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1422283   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1422284   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422285   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422286   +   end;
MPRINT(EM_DIAGRAM):   end;
1422287   +end;
MPRINT(EM_DIAGRAM):   end;
1422288   +
1422289   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1422290   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1422291   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1422292   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1422293   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1422294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422296   +end;
MPRINT(EM_DIAGRAM):   end;
1422297   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422298   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422299   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1422300   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422301   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1422302   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1422303   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1422304   +   end;
MPRINT(EM_DIAGRAM):   end;
1422305   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1422306   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1422307   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1422308   +   end;
MPRINT(EM_DIAGRAM):   end;
1422309   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422310   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1422311   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1422312   +   end;
MPRINT(EM_DIAGRAM):   end;
1422313   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422314   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1422315   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1422316   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422317   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422318   +   end;
MPRINT(EM_DIAGRAM):   end;
1422319   +end;
MPRINT(EM_DIAGRAM):   end;
1422320   +
1422321   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1422322   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1422323   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1422324   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1422325   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1422326   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1422327   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422328   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422329   +end;
MPRINT(EM_DIAGRAM):   end;
1422330   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422331   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422332   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1422333   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422334   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1422335   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1422336   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1422337   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1422338   +   end;
MPRINT(EM_DIAGRAM):   end;
1422339   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422340   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1422341   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1422342   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1422343   +   end;
MPRINT(EM_DIAGRAM):   end;
1422344   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422345   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1422346   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1422347   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1422348   +   end;
MPRINT(EM_DIAGRAM):   end;
1422349   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1422350   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1422351   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1422352   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1422353   +   end;
MPRINT(EM_DIAGRAM):   end;
1422354   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422355   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1422356   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1422357   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1422358   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422359   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422360   +   end;
MPRINT(EM_DIAGRAM):   end;
1422361   +end;
MPRINT(EM_DIAGRAM):   end;
1422362   +
1422363   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1422364   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1422365   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1422366   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1422367   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1422368   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1422369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422371   +end;
MPRINT(EM_DIAGRAM):   end;
1422372   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422373   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422374   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1422375   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422376   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1422377   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1422378   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1422379   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1422380   +   end;
MPRINT(EM_DIAGRAM):   end;
1422381   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1422382   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1422383   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1422384   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1422385   +   end;
MPRINT(EM_DIAGRAM):   end;
1422386   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422387   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1422388   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1422389   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1422390   +   end;
MPRINT(EM_DIAGRAM):   end;
1422391   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422392   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1422393   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1422394   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1422395   +   end;
MPRINT(EM_DIAGRAM):   end;
1422396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422397   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1422398   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1422399   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1422400   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422401   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422402   +   end;
MPRINT(EM_DIAGRAM):   end;
1422403   +end;
MPRINT(EM_DIAGRAM):   end;
1422404   +
1422405   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1422406   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1422407   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1422408   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1422409   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1422410   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1422411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422413   +end;
MPRINT(EM_DIAGRAM):   end;
1422414   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422415   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422416   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1422417   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422418   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1422419   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1422420   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1422421   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1422422   +   end;
MPRINT(EM_DIAGRAM):   end;
1422423   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422424   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1422425   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1422426   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1422427   +   end;
MPRINT(EM_DIAGRAM):   end;
1422428   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1422429   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1422430   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1422431   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1422432   +   end;
MPRINT(EM_DIAGRAM):   end;
1422433   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422434   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1422435   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1422436   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1422437   +   end;
MPRINT(EM_DIAGRAM):   end;
1422438   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422439   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1422440   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1422441   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1422442   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422443   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422444   +   end;
MPRINT(EM_DIAGRAM):   end;
1422445   +end;
MPRINT(EM_DIAGRAM):   end;
1422446   +
1422447   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1422448   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1422449   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1422450   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1422451   +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
1422452   +end;
MPRINT(EM_DIAGRAM):   end;
1422453   +
1422454   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1422455   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1422456   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1422457   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1422458   +
1422459   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1422460   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1422461   +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
1422462   +
1422463   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1422464   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1422465   +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
1422466   +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
1422467   +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
1422468   +
1422469   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1422470   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1422471   +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
1422472   +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
1422473   +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
1422474   +
1422475   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1422476   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1422477   +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
1422478   +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
1422479   +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
1422480   +
1422481   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1422482   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1422483   +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
1422484   +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
1422485   +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
1422486   +
1422487   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1422488   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1422489   +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
1422490   +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
1422491   +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
1422492   +
1422493   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1422494   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1422495   +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
1422496   +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
1422497   +
1422498   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1422499   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1422500   +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
1422501   +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
1422502   +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
1422503   +
1422504   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1422505   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1422506   +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
1422507   +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
1422508   +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
1422509   +
1422510   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1422511   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1422512   +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
1422513   +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
1422514   +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
1422515   +
1422516   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1422517   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1422518   +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
1422519   +
1422520   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1422521   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1422522   +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
1422523   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1422524   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1422525   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1422526   +end;
MPRINT(EM_DIAGRAM):   end;
1422527   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1422528   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1422529   +
1422530   +REG3DR1:
1422531   +
1422532   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
1422533   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1422534   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1422535   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1422536   +end;
MPRINT(EM_DIAGRAM):   end;
1422537   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422538   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1422539   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1422540   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1422541   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1422542   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1422543   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1422544   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1422545   +   end;
MPRINT(EM_DIAGRAM):   end;
1422546   +end;
MPRINT(EM_DIAGRAM):   end;
1422547   +
1422548   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1422549   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1422550   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1422551   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1422552   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1422553   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1422554   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1422555   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1422556   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1422557   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1422558   +end;
MPRINT(EM_DIAGRAM):   end;
1422559   +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
1422560   +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
1422561   +
1422562   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1422563   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1422564   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1422565   +* Renaming variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg3;
1422566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1422567   +* Renaming Posterior variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg3;
1422568   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1422569   +drop Reg3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar1;
1422570   +Reg3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar1 = P_DepVar1;
1422571   +drop Reg3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar0;
1422572   +Reg3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar0 = P_DepVar0;
1422573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1422574   +* Renaming _WARN_ variable for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg3;
1422575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1422576   +length Reg3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg3_WARN_ $4;
1422577   +drop Reg3_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg3_WARN_;
1422578   +Reg3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg3_WARN_ = _WARN_;
1422579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1422580   +* Ensmbl17: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring Code of model 2 of 5;
1422581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1422582   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1422583   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1422584   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1422585   +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
1422586   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1422587   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1422588   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1422589   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1422590   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1422591   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1422592   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1422593   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1422594   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1422595   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1422596   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1422597   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1422598   +LENGTH _WARN_ $4
1422599   +      F_DepVar  $ 12
1422600   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1422601   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1422602   +
1422603   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1422604   +
1422605   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1422606   +
1422607   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1422608   +
1422609   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1422610   +
1422611   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1422612   +
1422613   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1422614   +
1422615   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1422616   +
1422617   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1422618   +
1422619   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1422620   +
1422621   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1422622   +
1422623   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1422624   +
1422625   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1422626   +
1422627   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1422628   +
1422629   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1422630   +
1422631   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1422632   +
1422633   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1422634   +
1422635   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1422636   +
1422637   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1422638   +
1422639   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1422640   +
1422641   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1422642   +
1422643   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1422644   +
1422645   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1422646   +
1422647   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1422648   +
1422649   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1422650   +
1422651   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1422652   +
1422653   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1422654   +
1422655   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1422656   +
1422657   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1422658   +
1422659   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1422660   +
1422661   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1422662   +
1422663   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1422664   +
1422665   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1422666   +
1422667   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1422668   +
1422669   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1422670   +
1422671   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1422672   +
1422673   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1422674   +
1422675   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1422676   +
1422677   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1422678   +
1422679   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1422680   +
1422681   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1422682   +
1422683   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1422684   +
1422685   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1422686   +
1422687   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1422688   +
1422689   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1422690   +
1422691   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1422692   +
1422693   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1422694   +
1422695   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1422696   +
1422697   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1422698   +
1422699   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1422700   +
1422701   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1422702   +
1422703   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1422704   +
1422705   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1422706   +
1422707   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1422708   +
1422709   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1422710   +
1422711   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1422712   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1422713   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1422714   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1422715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422717   +end;
MPRINT(EM_DIAGRAM):   end;
1422718   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422719   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422720   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1422721   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422722   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1422723   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1422724   +   end;
MPRINT(EM_DIAGRAM):   end;
1422725   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1422726   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1422727   +   end;
MPRINT(EM_DIAGRAM):   end;
1422728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422729   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1422730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422732   +   end;
MPRINT(EM_DIAGRAM):   end;
1422733   +end;
MPRINT(EM_DIAGRAM):   end;
1422734   +
1422735   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1422736   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1422737   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1422738   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1422739   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1422740   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1422741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422743   +end;
MPRINT(EM_DIAGRAM):   end;
1422744   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422745   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422746   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1422747   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422748   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1422749   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1422750   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1422751   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1422752   +   end;
MPRINT(EM_DIAGRAM):   end;
1422753   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1422754   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1422755   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1422756   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1422757   +   end;
MPRINT(EM_DIAGRAM):   end;
1422758   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422759   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1422760   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1422761   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1422762   +   end;
MPRINT(EM_DIAGRAM):   end;
1422763   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422764   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1422765   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1422766   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1422767   +   end;
MPRINT(EM_DIAGRAM):   end;
1422768   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422769   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1422770   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1422771   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1422772   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422773   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422774   +   end;
MPRINT(EM_DIAGRAM):   end;
1422775   +end;
MPRINT(EM_DIAGRAM):   end;
1422776   +
1422777   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1422778   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1422779   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1422780   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1422781   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1422782   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1422783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422785   +end;
MPRINT(EM_DIAGRAM):   end;
1422786   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422787   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422788   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1422789   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422790   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1422791   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1422792   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1422793   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1422794   +   end;
MPRINT(EM_DIAGRAM):   end;
1422795   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422796   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1422797   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1422798   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1422799   +   end;
MPRINT(EM_DIAGRAM):   end;
1422800   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1422801   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1422802   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1422803   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1422804   +   end;
MPRINT(EM_DIAGRAM):   end;
1422805   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422806   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1422807   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1422808   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1422809   +   end;
MPRINT(EM_DIAGRAM):   end;
1422810   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422811   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1422812   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1422813   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1422814   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422815   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422816   +   end;
MPRINT(EM_DIAGRAM):   end;
1422817   +end;
MPRINT(EM_DIAGRAM):   end;
1422818   +
1422819   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1422820   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1422821   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1422822   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1422823   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1422824   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1422825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422827   +end;
MPRINT(EM_DIAGRAM):   end;
1422828   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422829   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422830   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1422831   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422832   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1422833   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1422834   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1422835   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1422836   +   end;
MPRINT(EM_DIAGRAM):   end;
1422837   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1422838   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1422839   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1422840   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1422841   +   end;
MPRINT(EM_DIAGRAM):   end;
1422842   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422843   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1422844   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1422845   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1422846   +   end;
MPRINT(EM_DIAGRAM):   end;
1422847   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422848   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1422849   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1422850   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1422851   +   end;
MPRINT(EM_DIAGRAM):   end;
1422852   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422853   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1422854   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1422855   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1422856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422858   +   end;
MPRINT(EM_DIAGRAM):   end;
1422859   +end;
MPRINT(EM_DIAGRAM):   end;
1422860   +
1422861   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1422862   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1422863   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1422864   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1422865   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1422866   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1422867   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422869   +end;
MPRINT(EM_DIAGRAM):   end;
1422870   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422871   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422872   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1422873   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422874   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1422875   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1422876   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1422877   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1422878   +   end;
MPRINT(EM_DIAGRAM):   end;
1422879   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1422880   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1422881   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1422882   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1422883   +   end;
MPRINT(EM_DIAGRAM):   end;
1422884   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422885   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1422886   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1422887   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1422888   +   end;
MPRINT(EM_DIAGRAM):   end;
1422889   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422890   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1422891   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1422892   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1422893   +   end;
MPRINT(EM_DIAGRAM):   end;
1422894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422895   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1422896   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1422897   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1422898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422900   +   end;
MPRINT(EM_DIAGRAM):   end;
1422901   +end;
MPRINT(EM_DIAGRAM):   end;
1422902   +
1422903   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1422904   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1422905   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1422906   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1422907   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1422908   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1422909   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422911   +end;
MPRINT(EM_DIAGRAM):   end;
1422912   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422913   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422914   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1422915   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422916   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1422917   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1422918   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1422919   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1422920   +   end;
MPRINT(EM_DIAGRAM):   end;
1422921   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422922   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1422923   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1422924   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1422925   +   end;
MPRINT(EM_DIAGRAM):   end;
1422926   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1422927   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1422928   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1422929   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1422930   +   end;
MPRINT(EM_DIAGRAM):   end;
1422931   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422932   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1422933   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1422934   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1422935   +   end;
MPRINT(EM_DIAGRAM):   end;
1422936   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422937   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1422938   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1422939   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1422940   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422941   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422942   +   end;
MPRINT(EM_DIAGRAM):   end;
1422943   +end;
MPRINT(EM_DIAGRAM):   end;
1422944   +
1422945   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1422946   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1422947   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1422948   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1422949   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1422950   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1422951   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422952   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422953   +end;
MPRINT(EM_DIAGRAM):   end;
1422954   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422955   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422956   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1422957   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1422958   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1422959   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1422960   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1422961   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1422962   +   end;
MPRINT(EM_DIAGRAM):   end;
1422963   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1422964   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1422965   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1422966   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1422967   +   end;
MPRINT(EM_DIAGRAM):   end;
1422968   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1422969   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1422970   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1422971   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1422972   +   end;
MPRINT(EM_DIAGRAM):   end;
1422973   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1422974   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1422975   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1422976   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1422977   +   end;
MPRINT(EM_DIAGRAM):   end;
1422978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1422979   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1422980   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1422981   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1422982   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1422983   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422984   +   end;
MPRINT(EM_DIAGRAM):   end;
1422985   +end;
MPRINT(EM_DIAGRAM):   end;
1422986   +
1422987   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1422988   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1422989   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1422990   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1422991   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1422992   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1422993   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1422994   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1422995   +end;
MPRINT(EM_DIAGRAM):   end;
1422996   +else do;
MPRINT(EM_DIAGRAM):   else do;
1422997   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1422998   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1422999   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423000   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1423001   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1423002   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1423003   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1423004   +   end;
MPRINT(EM_DIAGRAM):   end;
1423005   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1423006   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1423007   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1423008   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1423009   +   end;
MPRINT(EM_DIAGRAM):   end;
1423010   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423011   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1423012   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1423013   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1423014   +   end;
MPRINT(EM_DIAGRAM):   end;
1423015   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423016   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1423017   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1423018   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1423019   +   end;
MPRINT(EM_DIAGRAM):   end;
1423020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423021   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1423022   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1423023   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1423024   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423025   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423026   +   end;
MPRINT(EM_DIAGRAM):   end;
1423027   +end;
MPRINT(EM_DIAGRAM):   end;
1423028   +
1423029   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1423030   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1423031   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1423032   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1423033   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1423034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423036   +end;
MPRINT(EM_DIAGRAM):   end;
1423037   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423038   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423039   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1423040   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423041   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1423042   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1423043   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1423044   +   end;
MPRINT(EM_DIAGRAM):   end;
1423045   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1423046   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1423047   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1423048   +   end;
MPRINT(EM_DIAGRAM):   end;
1423049   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423050   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1423051   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1423052   +   end;
MPRINT(EM_DIAGRAM):   end;
1423053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423054   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1423055   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1423056   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423057   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423058   +   end;
MPRINT(EM_DIAGRAM):   end;
1423059   +end;
MPRINT(EM_DIAGRAM):   end;
1423060   +
1423061   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1423062   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1423063   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1423064   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1423065   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1423066   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1423067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423069   +end;
MPRINT(EM_DIAGRAM):   end;
1423070   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423071   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423072   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1423073   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423074   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1423075   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1423076   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1423077   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1423078   +   end;
MPRINT(EM_DIAGRAM):   end;
1423079   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423080   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1423081   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1423082   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1423083   +   end;
MPRINT(EM_DIAGRAM):   end;
1423084   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423085   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1423086   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1423087   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1423088   +   end;
MPRINT(EM_DIAGRAM):   end;
1423089   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1423090   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1423091   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1423092   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1423093   +   end;
MPRINT(EM_DIAGRAM):   end;
1423094   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423095   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1423096   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1423097   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1423098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423100   +   end;
MPRINT(EM_DIAGRAM):   end;
1423101   +end;
MPRINT(EM_DIAGRAM):   end;
1423102   +
1423103   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1423104   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1423105   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1423106   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1423107   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1423108   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1423109   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423110   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423111   +end;
MPRINT(EM_DIAGRAM):   end;
1423112   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423113   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423114   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1423115   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423116   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1423117   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1423118   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1423119   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1423120   +   end;
MPRINT(EM_DIAGRAM):   end;
1423121   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1423122   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1423123   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1423124   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1423125   +   end;
MPRINT(EM_DIAGRAM):   end;
1423126   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423127   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1423128   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1423129   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1423130   +   end;
MPRINT(EM_DIAGRAM):   end;
1423131   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423132   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1423133   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1423134   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1423135   +   end;
MPRINT(EM_DIAGRAM):   end;
1423136   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423137   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1423138   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1423139   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1423140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423142   +   end;
MPRINT(EM_DIAGRAM):   end;
1423143   +end;
MPRINT(EM_DIAGRAM):   end;
1423144   +
1423145   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1423146   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1423147   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1423148   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1423149   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1423150   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1423151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423153   +end;
MPRINT(EM_DIAGRAM):   end;
1423154   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423156   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1423157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423158   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1423159   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1423160   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1423161   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1423162   +   end;
MPRINT(EM_DIAGRAM):   end;
1423163   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1423164   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1423165   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1423166   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1423167   +   end;
MPRINT(EM_DIAGRAM):   end;
1423168   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1423169   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1423170   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1423171   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1423172   +   end;
MPRINT(EM_DIAGRAM):   end;
1423173   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423174   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1423175   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1423176   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1423177   +   end;
MPRINT(EM_DIAGRAM):   end;
1423178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423179   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1423180   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1423181   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1423182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423184   +   end;
MPRINT(EM_DIAGRAM):   end;
1423185   +end;
MPRINT(EM_DIAGRAM):   end;
1423186   +
1423187   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1423188   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1423189   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1423190   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1423191   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1423192   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1423193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423195   +end;
MPRINT(EM_DIAGRAM):   end;
1423196   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423197   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423198   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1423199   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423200   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1423201   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1423202   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1423203   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1423204   +   end;
MPRINT(EM_DIAGRAM):   end;
1423205   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1423206   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1423207   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1423208   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1423209   +   end;
MPRINT(EM_DIAGRAM):   end;
1423210   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423211   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1423212   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1423213   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1423214   +   end;
MPRINT(EM_DIAGRAM):   end;
1423215   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423216   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1423217   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1423218   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1423219   +   end;
MPRINT(EM_DIAGRAM):   end;
1423220   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423221   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1423222   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1423223   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1423224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423226   +   end;
MPRINT(EM_DIAGRAM):   end;
1423227   +end;
MPRINT(EM_DIAGRAM):   end;
1423228   +
1423229   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1423230   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1423231   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1423232   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1423233   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1423234   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1423235   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423236   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423237   +end;
MPRINT(EM_DIAGRAM):   end;
1423238   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423239   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423240   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1423241   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423242   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1423243   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1423244   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1423245   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1423246   +   end;
MPRINT(EM_DIAGRAM):   end;
1423247   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423248   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1423249   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1423250   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1423251   +   end;
MPRINT(EM_DIAGRAM):   end;
1423252   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1423253   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1423254   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1423255   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1423256   +   end;
MPRINT(EM_DIAGRAM):   end;
1423257   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423258   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1423259   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1423260   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1423261   +   end;
MPRINT(EM_DIAGRAM):   end;
1423262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423263   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1423264   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1423265   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1423266   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423267   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423268   +   end;
MPRINT(EM_DIAGRAM):   end;
1423269   +end;
MPRINT(EM_DIAGRAM):   end;
1423270   +
1423271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423272   +*** Checking missing input Interval
1423273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1423274   +
1423275   +IF NMISS(
1423276   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1423277   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1423278   +
1423279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423280   +END;
MPRINT(EM_DIAGRAM):   END;
1423281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423282   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1423283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423284   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1423285   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1423286   +END;
MPRINT(EM_DIAGRAM):   END;
1423287   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1423288   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1423289   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1423290   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1423291   +END;
MPRINT(EM_DIAGRAM):   END;
1423292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423293   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1423294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423296   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1423297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423298   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1423299   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1423300   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1423301   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1423302   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1423303   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1423304   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1423305   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1423306   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1423307   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1423308   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1423309   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1423310   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1423311   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1423312   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1423313   +          +    -0.04697385312971 * GRP_MntFishProducts3
1423314   +          +     0.05477300056491 * GRP_MntFishProducts4
1423315   +          +    -0.21182877070793 * GRP_MntGoldProds2
1423316   +          +    -0.06202001203906 * GRP_MntGoldProds3
1423317   +          +    -0.23297283739715 * GRP_MntGoldProds4
1423318   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1423319   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1423320   +          +     0.01711044358319 * GRP_MntMeatProducts4
1423321   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1423322   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1423323   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1423324   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1423325   +          +     0.11565917560156 * GRP_NumDistPurchases2
1423326   +          +      0.1678532898895 * GRP_NumDistPurchases3
1423327   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1423328   +          +     0.09970745707934 * GRP_NumWebPurchases2
1423329   +          +     0.02961221360107 * GRP_NumWebPurchases3
1423330   +          +     0.02261054892411 * GRP_NumWebPurchases4
1423331   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1423332   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1423333   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1423334   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1423335   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1423336   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 * 
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 * 
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 + 
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 + 
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 + 
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 + 
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 + 
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 + 
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741 
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 * 
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 * 
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 * 
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 * 
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 * 
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 + 
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 * 
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 + 
-0.07522056103469 * GRP_Recency4 ;
1423337   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1423338   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1423339   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1423340   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1423341   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1423342   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1423343   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1423344   +          +     0.26645530981311 * GRP_MntFishProducts3
1423345   +          +    -0.17631072283513 * GRP_MntFishProducts4
1423346   +          +    -0.35439521021691 * GRP_MntGoldProds2
1423347   +          +     0.11419663880206 * GRP_MntGoldProds3
1423348   +          +     0.07288749113866 * GRP_MntGoldProds4
1423349   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1423350   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1423351   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1423352   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1423353   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1423354   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1423355   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1423356   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1423357   +          +     0.10139595392447 * GRP_NumDistPurchases3
1423358   +          +     0.05251891244468 * GRP_NumDistPurchases4
1423359   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1423360   +          +      0.0263831646971 * GRP_NumWebPurchases3
1423361   +          +     0.26495059708503 * GRP_NumWebPurchases4
1423362   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1423363   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1423364   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1423365   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1423366   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1423367   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 * 
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 * 
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 + 
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 + 
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 + 
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 + 
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 + 
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 + 
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123 
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 * 
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 * 
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 * 
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 * 
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 * 
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 + 
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 * 
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 + 
-0.4970729472837 * GRP_Recency4 ;
1423368   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1423369   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1423370   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1423371   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1423372   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1423373   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1423374   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1423375   +          +     0.02714802509094 * GRP_MntFishProducts3
1423376   +          +     0.27119078554613 * GRP_MntFishProducts4
1423377   +          +     0.19322428614339 * GRP_MntGoldProds2
1423378   +          +     0.34778546410632 * GRP_MntGoldProds3
1423379   +          +    -0.06570146779096 * GRP_MntGoldProds4
1423380   +          +     0.44935275650977 * GRP_MntMeatProducts2
1423381   +          +     0.00805794344265 * GRP_MntMeatProducts3
1423382   +          +     0.02445782833023 * GRP_MntMeatProducts4
1423383   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1423384   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1423385   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1423386   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1423387   +          +     0.03481806823908 * GRP_NumDistPurchases2
1423388   +          +      0.0546202479864 * GRP_NumDistPurchases3
1423389   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1423390   +          +     0.28307550964921 * GRP_NumWebPurchases2
1423391   +          +     0.31503543231591 * GRP_NumWebPurchases3
1423392   +          +     0.24817135719308 * GRP_NumWebPurchases4
1423393   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1423394   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1423395   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1423396   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1423397   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1423398   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 * 
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 * 
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 + 
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 + 
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 + 
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 + 
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 + 
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 + 
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 + 
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 * 
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 * 
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 * 
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 * 
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 * 
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 + 
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 * 
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 + 
0.05823801065489 * GRP_Recency4 ;
1423399   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1423400   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1423401   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1423402   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1423403   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1423404   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1423405   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1423406   +          +    -0.08997232581072 * GRP_MntFishProducts3
1423407   +          +    -0.05669599356928 * GRP_MntFishProducts4
1423408   +          +      0.2199150131909 * GRP_MntGoldProds2
1423409   +          +     0.05584571259838 * GRP_MntGoldProds3
1423410   +          +    -0.13160142309505 * GRP_MntGoldProds4
1423411   +          +      0.2539849640816 * GRP_MntMeatProducts2
1423412   +          +     0.29448191059312 * GRP_MntMeatProducts3
1423413   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1423414   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1423415   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1423416   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1423417   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1423418   +          +     0.38206153529506 * GRP_NumDistPurchases2
1423419   +          +     0.08642998303162 * GRP_NumDistPurchases3
1423420   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1423421   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1423422   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1423423   +          +     0.23030028338396 * GRP_NumWebPurchases4
1423424   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1423425   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1423426   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1423427   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1423428   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1423429   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 * 
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 * 
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 + 
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 + 
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 + 
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 + 
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816 
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 * 
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 + 
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 + 
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 + 
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 + 
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 + 
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062 
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 + 
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 * 
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1423430   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1423431   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1423432   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1423433   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1423434   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1423435   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1423436   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1423437   +          +    -0.04439366722112 * GRP_MntFishProducts3
1423438   +          +    -0.22939355735301 * GRP_MntFishProducts4
1423439   +          +    -0.00367144103801 * GRP_MntGoldProds2
1423440   +          +      -0.033315128385 * GRP_MntGoldProds3
1423441   +          +     0.10655545066126 * GRP_MntGoldProds4
1423442   +          +     0.04927093675686 * GRP_MntMeatProducts2
1423443   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1423444   +          +     0.29394273234417 * GRP_MntMeatProducts4
1423445   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1423446   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1423447   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1423448   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1423449   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1423450   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1423451   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1423452   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1423453   +          +     0.37113277513001 * GRP_NumWebPurchases3
1423454   +          +     0.05720653023952 * GRP_NumWebPurchases4
1423455   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1423456   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1423457   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1423458   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1423459   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1423460   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 * 
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 * 
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 + 
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 + 
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 + 
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 + 
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686 
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 * 
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 + 
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 + 
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 + 
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 + 
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 + 
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842 
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 + 
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 * 
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1423461   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1423462   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1423463   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1423464   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1423465   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1423466   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1423467   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1423468   +          +     0.04340555393469 * GRP_MntFishProducts3
1423469   +          +    -0.20048219926361 * GRP_MntFishProducts4
1423470   +          +     0.16101452165456 * GRP_MntGoldProds2
1423471   +          +    -0.04467647211336 * GRP_MntGoldProds3
1423472   +          +     0.32142013598241 * GRP_MntGoldProds4
1423473   +          +     0.29741565154233 * GRP_MntMeatProducts2
1423474   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1423475   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1423476   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1423477   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1423478   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1423479   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1423480   +          +     0.36107050137299 * GRP_NumDistPurchases2
1423481   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1423482   +          +     0.10557004956787 * GRP_NumDistPurchases4
1423483   +          +     0.04608069099876 * GRP_NumWebPurchases2
1423484   +          +     0.15561947954396 * GRP_NumWebPurchases3
1423485   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1423486   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1423487   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1423488   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1423489   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1423490   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1423491   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 * 
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 * 
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 + 
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 + 
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 + 
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 + 
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 + 
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 + 
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 + 
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 * 
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 * 
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 * 
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 * 
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 * 
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 + 
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 * 
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 + 
-0.0282277663071 * GRP_Recency4 ;
1423492   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1423493   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1423494   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1423495   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1423496   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1423497   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1423498   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1423499   +          +    -0.20032703571491 * GRP_MntFishProducts3
1423500   +          +    -0.08348811352746 * GRP_MntFishProducts4
1423501   +          +    -0.00744131870881 * GRP_MntGoldProds2
1423502   +          +    -0.27347309859096 * GRP_MntGoldProds3
1423503   +          +    -0.04458870469416 * GRP_MntGoldProds4
1423504   +          +     0.17538261434498 * GRP_MntMeatProducts2
1423505   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1423506   +          +     0.03113249898233 * GRP_MntMeatProducts4
1423507   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1423508   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1423509   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1423510   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1423511   +          +     0.20540014620209 * GRP_NumDistPurchases2
1423512   +          +     0.17744784873298 * GRP_NumDistPurchases3
1423513   +          +      -0.003486430833 * GRP_NumDistPurchases4
1423514   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1423515   +          +     0.07245829152192 * GRP_NumWebPurchases3
1423516   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1423517   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1423518   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1423519   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1423520   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1423521   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1423522   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 * 
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 * 
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 + 
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 + 
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 + 
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 + 
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 + 
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 + 
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 + 
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 * 
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 * 
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 * 
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 * 
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 * 
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 + 
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 * 
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 + 
-0.0157357289132 * GRP_Recency4 ;
1423523   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1423524   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1423525   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1423526   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1423527   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1423528   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1423529   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1423530   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1423531   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1423532   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1423533   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1423534   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1423535   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1423536   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1423537   +END;
MPRINT(EM_DIAGRAM):   END;
1423538   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1423539   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1423540   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1423541   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1423542   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1423543   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1423544   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1423545   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1423546   +END;
MPRINT(EM_DIAGRAM):   END;
1423547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423548   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1423549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423550   +
1423551   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1423552   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1423553   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1423554   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1423555   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1423556   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423557   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1423558   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1423559   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1423560   +end;
MPRINT(EM_DIAGRAM):   end;
1423561   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423562   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1423563   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1423564   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1423565   +   end;
MPRINT(EM_DIAGRAM):   end;
1423566   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1423567   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1423568   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1423569   +   end;
MPRINT(EM_DIAGRAM):   end;
1423570   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423571   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1423572   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1423573   +   end;
MPRINT(EM_DIAGRAM):   end;
1423574   +end;
MPRINT(EM_DIAGRAM):   end;
1423575   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1423576   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1423577   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1423578   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1423579   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 + 
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746 
* H16 + -0.29329090231091 * H17 ;
1423580   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1423581   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1423582   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1423583   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1423584   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1423585   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1423586   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1423587   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1423588   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1423589   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1423590   +END;
MPRINT(EM_DIAGRAM):   END;
1423591   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1423592   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1423593   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1423594   +END;
MPRINT(EM_DIAGRAM):   END;
1423595   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1423596   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1423597   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1423598   +END;
MPRINT(EM_DIAGRAM):   END;
1423599   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1423600   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1423601   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1423602   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1423603   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1423604   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1423605   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1423606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423607   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1423608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1423609   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1423610   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1423611   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1423612   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1423613   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1423614   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1423615   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1423616   +END;
MPRINT(EM_DIAGRAM):   END;
1423617   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1423618   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1423619   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1423620   +drop
1423621   +H11
1423622   +H12
1423623   +H13
1423624   +H14
1423625   +H15
1423626   +H16
1423627   +H17
1423628   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1423629   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1423630   +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
1423631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1423632   +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
1423633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1423634   +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
1423635   +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
1423636   +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
1423637   +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
1423638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1423639   +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
1423640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1423641   +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
1423642   +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
1423643   +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
1423644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1423645   +* Ensmbl17: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring Code of model 3 of 5;
1423646   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1423647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1423648   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1423649   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1423650   +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
1423651   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1423652   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1423653   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1423654   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1423655   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1423656   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1423657   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1423658   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1423659   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1423660   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1423661   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1423662   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1423663   +LENGTH _WARN_ $4
1423664   +      F_DepVar  $ 12
1423665   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1423666   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1423667   +
1423668   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1423669   +
1423670   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1423671   +
1423672   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1423673   +
1423674   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1423675   +
1423676   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1423677   +
1423678   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1423679   +
1423680   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1423681   +
1423682   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1423683   +
1423684   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1423685   +
1423686   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1423687   +
1423688   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1423689   +
1423690   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1423691   +
1423692   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1423693   +
1423694   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1423695   +
1423696   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1423697   +
1423698   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1423699   +
1423700   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1423701   +
1423702   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1423703   +
1423704   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1423705   +
1423706   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1423707   +
1423708   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1423709   +
1423710   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1423711   +
1423712   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1423713   +
1423714   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1423715   +
1423716   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1423717   +
1423718   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1423719   +
1423720   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1423721   +
1423722   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1423723   +
1423724   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1423725   +
1423726   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1423727   +
1423728   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1423729   +
1423730   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1423731   +
1423732   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1423733   +
1423734   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1423735   +
1423736   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1423737   +
1423738   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1423739   +
1423740   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1423741   +
1423742   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1423743   +
1423744   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1423745   +
1423746   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1423747   +
1423748   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1423749   +
1423750   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1423751   +
1423752   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1423753   +
1423754   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1423755   +
1423756   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1423757   +
1423758   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1423759   +
1423760   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1423761   +
1423762   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1423763   +
1423764   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1423765   +
1423766   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1423767   +
1423768   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1423769   +
1423770   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1423771   +
1423772   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1423773   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1423774   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1423775   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1423776   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423777   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423778   +end;
MPRINT(EM_DIAGRAM):   end;
1423779   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423780   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423781   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1423782   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423783   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1423784   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1423785   +   end;
MPRINT(EM_DIAGRAM):   end;
1423786   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1423787   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1423788   +   end;
MPRINT(EM_DIAGRAM):   end;
1423789   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423790   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1423791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423793   +   end;
MPRINT(EM_DIAGRAM):   end;
1423794   +end;
MPRINT(EM_DIAGRAM):   end;
1423795   +
1423796   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1423797   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1423798   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1423799   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1423800   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1423801   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1423802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423804   +end;
MPRINT(EM_DIAGRAM):   end;
1423805   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423806   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423807   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1423808   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423809   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1423810   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1423811   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1423812   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1423813   +   end;
MPRINT(EM_DIAGRAM):   end;
1423814   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1423815   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1423816   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1423817   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1423818   +   end;
MPRINT(EM_DIAGRAM):   end;
1423819   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423820   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1423821   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1423822   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1423823   +   end;
MPRINT(EM_DIAGRAM):   end;
1423824   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423825   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1423826   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1423827   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1423828   +   end;
MPRINT(EM_DIAGRAM):   end;
1423829   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423830   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1423831   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1423832   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1423833   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423834   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423835   +   end;
MPRINT(EM_DIAGRAM):   end;
1423836   +end;
MPRINT(EM_DIAGRAM):   end;
1423837   +
1423838   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1423839   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1423840   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1423841   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1423842   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1423843   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1423844   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423845   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423846   +end;
MPRINT(EM_DIAGRAM):   end;
1423847   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423848   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423849   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1423850   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423851   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1423852   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1423853   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1423854   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1423855   +   end;
MPRINT(EM_DIAGRAM):   end;
1423856   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423857   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1423858   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1423859   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1423860   +   end;
MPRINT(EM_DIAGRAM):   end;
1423861   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1423862   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1423863   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1423864   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1423865   +   end;
MPRINT(EM_DIAGRAM):   end;
1423866   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423867   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1423868   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1423869   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1423870   +   end;
MPRINT(EM_DIAGRAM):   end;
1423871   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423872   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1423873   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1423874   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1423875   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423876   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423877   +   end;
MPRINT(EM_DIAGRAM):   end;
1423878   +end;
MPRINT(EM_DIAGRAM):   end;
1423879   +
1423880   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1423881   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1423882   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1423883   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1423884   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1423885   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1423886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423888   +end;
MPRINT(EM_DIAGRAM):   end;
1423889   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423890   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423891   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1423892   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423893   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1423894   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1423895   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1423896   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1423897   +   end;
MPRINT(EM_DIAGRAM):   end;
1423898   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1423899   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1423900   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1423901   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1423902   +   end;
MPRINT(EM_DIAGRAM):   end;
1423903   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423904   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1423905   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1423906   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1423907   +   end;
MPRINT(EM_DIAGRAM):   end;
1423908   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423909   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1423910   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1423911   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1423912   +   end;
MPRINT(EM_DIAGRAM):   end;
1423913   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423914   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1423915   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1423916   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1423917   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423918   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423919   +   end;
MPRINT(EM_DIAGRAM):   end;
1423920   +end;
MPRINT(EM_DIAGRAM):   end;
1423921   +
1423922   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1423923   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1423924   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1423925   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1423926   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1423927   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1423928   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423929   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423930   +end;
MPRINT(EM_DIAGRAM):   end;
1423931   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423932   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423933   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1423934   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423935   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1423936   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1423937   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1423938   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1423939   +   end;
MPRINT(EM_DIAGRAM):   end;
1423940   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1423941   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1423942   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1423943   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1423944   +   end;
MPRINT(EM_DIAGRAM):   end;
1423945   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423946   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1423947   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1423948   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1423949   +   end;
MPRINT(EM_DIAGRAM):   end;
1423950   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423951   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1423952   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1423953   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1423954   +   end;
MPRINT(EM_DIAGRAM):   end;
1423955   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423956   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1423957   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1423958   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1423959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1423960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423961   +   end;
MPRINT(EM_DIAGRAM):   end;
1423962   +end;
MPRINT(EM_DIAGRAM):   end;
1423963   +
1423964   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1423965   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1423966   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1423967   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1423968   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1423969   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1423970   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1423971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1423972   +end;
MPRINT(EM_DIAGRAM):   end;
1423973   +else do;
MPRINT(EM_DIAGRAM):   else do;
1423974   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1423975   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1423976   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1423977   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1423978   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1423979   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1423980   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1423981   +   end;
MPRINT(EM_DIAGRAM):   end;
1423982   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1423983   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1423984   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1423985   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1423986   +   end;
MPRINT(EM_DIAGRAM):   end;
1423987   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1423988   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1423989   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1423990   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1423991   +   end;
MPRINT(EM_DIAGRAM):   end;
1423992   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1423993   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1423994   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1423995   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1423996   +   end;
MPRINT(EM_DIAGRAM):   end;
1423997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1423998   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1423999   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1424000   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1424001   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424002   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424003   +   end;
MPRINT(EM_DIAGRAM):   end;
1424004   +end;
MPRINT(EM_DIAGRAM):   end;
1424005   +
1424006   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1424007   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1424008   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1424009   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1424010   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1424011   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1424012   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424013   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424014   +end;
MPRINT(EM_DIAGRAM):   end;
1424015   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424016   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424017   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1424018   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424019   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1424020   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1424021   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1424022   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1424023   +   end;
MPRINT(EM_DIAGRAM):   end;
1424024   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424025   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1424026   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1424027   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1424028   +   end;
MPRINT(EM_DIAGRAM):   end;
1424029   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1424030   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1424031   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1424032   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1424033   +   end;
MPRINT(EM_DIAGRAM):   end;
1424034   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424035   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1424036   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1424037   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1424038   +   end;
MPRINT(EM_DIAGRAM):   end;
1424039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424040   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1424041   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1424042   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1424043   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424044   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424045   +   end;
MPRINT(EM_DIAGRAM):   end;
1424046   +end;
MPRINT(EM_DIAGRAM):   end;
1424047   +
1424048   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1424049   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1424050   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1424051   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1424052   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1424053   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1424054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424056   +end;
MPRINT(EM_DIAGRAM):   end;
1424057   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424059   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1424060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424061   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1424062   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1424063   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1424064   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1424065   +   end;
MPRINT(EM_DIAGRAM):   end;
1424066   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1424067   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1424068   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1424069   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1424070   +   end;
MPRINT(EM_DIAGRAM):   end;
1424071   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424072   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1424073   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1424074   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1424075   +   end;
MPRINT(EM_DIAGRAM):   end;
1424076   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424077   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1424078   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1424079   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1424080   +   end;
MPRINT(EM_DIAGRAM):   end;
1424081   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424082   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1424083   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1424084   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1424085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424087   +   end;
MPRINT(EM_DIAGRAM):   end;
1424088   +end;
MPRINT(EM_DIAGRAM):   end;
1424089   +
1424090   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1424091   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1424092   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1424093   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1424094   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1424095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424097   +end;
MPRINT(EM_DIAGRAM):   end;
1424098   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424099   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424100   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1424101   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424102   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1424103   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1424104   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1424105   +   end;
MPRINT(EM_DIAGRAM):   end;
1424106   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1424107   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1424108   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1424109   +   end;
MPRINT(EM_DIAGRAM):   end;
1424110   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424111   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1424112   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1424113   +   end;
MPRINT(EM_DIAGRAM):   end;
1424114   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424115   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1424116   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1424117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424119   +   end;
MPRINT(EM_DIAGRAM):   end;
1424120   +end;
MPRINT(EM_DIAGRAM):   end;
1424121   +
1424122   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1424123   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1424124   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1424125   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1424126   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1424127   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1424128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424130   +end;
MPRINT(EM_DIAGRAM):   end;
1424131   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424133   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1424134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424135   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1424136   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1424137   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1424138   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1424139   +   end;
MPRINT(EM_DIAGRAM):   end;
1424140   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424141   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1424142   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1424143   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1424144   +   end;
MPRINT(EM_DIAGRAM):   end;
1424145   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424146   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1424147   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1424148   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1424149   +   end;
MPRINT(EM_DIAGRAM):   end;
1424150   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1424151   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1424152   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1424153   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1424154   +   end;
MPRINT(EM_DIAGRAM):   end;
1424155   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424156   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1424157   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1424158   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1424159   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424160   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424161   +   end;
MPRINT(EM_DIAGRAM):   end;
1424162   +end;
MPRINT(EM_DIAGRAM):   end;
1424163   +
1424164   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1424165   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1424166   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1424167   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1424168   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1424169   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1424170   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424171   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424172   +end;
MPRINT(EM_DIAGRAM):   end;
1424173   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424174   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424175   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1424176   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424177   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1424178   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1424179   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1424180   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1424181   +   end;
MPRINT(EM_DIAGRAM):   end;
1424182   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1424183   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1424184   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1424185   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1424186   +   end;
MPRINT(EM_DIAGRAM):   end;
1424187   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424188   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1424189   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1424190   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1424191   +   end;
MPRINT(EM_DIAGRAM):   end;
1424192   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424193   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1424194   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1424195   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1424196   +   end;
MPRINT(EM_DIAGRAM):   end;
1424197   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424198   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1424199   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1424200   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1424201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424203   +   end;
MPRINT(EM_DIAGRAM):   end;
1424204   +end;
MPRINT(EM_DIAGRAM):   end;
1424205   +
1424206   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1424207   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1424208   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1424209   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1424210   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1424211   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1424212   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424214   +end;
MPRINT(EM_DIAGRAM):   end;
1424215   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424216   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424217   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1424218   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424219   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1424220   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1424221   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1424222   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1424223   +   end;
MPRINT(EM_DIAGRAM):   end;
1424224   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1424225   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1424226   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1424227   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1424228   +   end;
MPRINT(EM_DIAGRAM):   end;
1424229   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1424230   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1424231   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1424232   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1424233   +   end;
MPRINT(EM_DIAGRAM):   end;
1424234   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424235   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1424236   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1424237   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1424238   +   end;
MPRINT(EM_DIAGRAM):   end;
1424239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424240   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1424241   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1424242   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1424243   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424244   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424245   +   end;
MPRINT(EM_DIAGRAM):   end;
1424246   +end;
MPRINT(EM_DIAGRAM):   end;
1424247   +
1424248   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1424249   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1424250   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1424251   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1424252   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1424253   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1424254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424256   +end;
MPRINT(EM_DIAGRAM):   end;
1424257   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424258   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424259   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1424260   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424261   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1424262   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1424263   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1424264   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1424265   +   end;
MPRINT(EM_DIAGRAM):   end;
1424266   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1424267   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1424268   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1424269   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1424270   +   end;
MPRINT(EM_DIAGRAM):   end;
1424271   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424272   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1424273   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1424274   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1424275   +   end;
MPRINT(EM_DIAGRAM):   end;
1424276   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424277   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1424278   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1424279   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1424280   +   end;
MPRINT(EM_DIAGRAM):   end;
1424281   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424282   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1424283   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1424284   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1424285   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424286   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424287   +   end;
MPRINT(EM_DIAGRAM):   end;
1424288   +end;
MPRINT(EM_DIAGRAM):   end;
1424289   +
1424290   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1424291   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1424292   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1424293   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1424294   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1424295   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1424296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424298   +end;
MPRINT(EM_DIAGRAM):   end;
1424299   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424301   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1424302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424303   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1424304   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1424305   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1424306   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1424307   +   end;
MPRINT(EM_DIAGRAM):   end;
1424308   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424309   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1424310   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1424311   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1424312   +   end;
MPRINT(EM_DIAGRAM):   end;
1424313   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1424314   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1424315   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1424316   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1424317   +   end;
MPRINT(EM_DIAGRAM):   end;
1424318   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424319   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1424320   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1424321   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1424322   +   end;
MPRINT(EM_DIAGRAM):   end;
1424323   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424324   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1424325   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1424326   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1424327   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424328   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424329   +   end;
MPRINT(EM_DIAGRAM):   end;
1424330   +end;
MPRINT(EM_DIAGRAM):   end;
1424331   +
1424332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424333   +*** Checking missing input Interval
1424334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1424335   +
1424336   +IF NMISS(
1424337   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1424338   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1424339   +
1424340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424341   +END;
MPRINT(EM_DIAGRAM):   END;
1424342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424343   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1424344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424345   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1424346   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1424347   +END;
MPRINT(EM_DIAGRAM):   END;
1424348   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1424349   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1424350   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1424351   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1424352   +END;
MPRINT(EM_DIAGRAM):   END;
1424353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424354   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1424355   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424357   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1424358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424359   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1424360   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1424361   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1424362   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1424363   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1424364   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1424365   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1424366   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1424367   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1424368   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1424369   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1424370   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1424371   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1424372   +          +     0.03411739869638 * GRP_MntFishProducts3
1424373   +          +      -0.083693402353 * GRP_MntFishProducts4
1424374   +          +     -0.1318128730187 * GRP_MntGoldProds2
1424375   +          +     -0.0614737729382 * GRP_MntGoldProds3
1424376   +          +    -0.00372986687449 * GRP_MntGoldProds4
1424377   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1424378   +          +     0.01519664718127 * GRP_MntMeatProducts3
1424379   +          +     0.29997111548812 * GRP_MntMeatProducts4
1424380   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1424381   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1424382   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1424383   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1424384   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1424385   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1424386   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1424387   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1424388   +          +     0.02966820025811 * GRP_NumWebPurchases3
1424389   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1424390   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1424391   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1424392   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1424393   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1424394   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1424395   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 * 
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 * 
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 + 
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 + 
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 + 
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 + 
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 + 
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 + 
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 * 
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 * 
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 * 
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 * 
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 * 
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 * 
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 + 
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 * 
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 + 
-0.15382569411658 * GRP_Recency4 ;
1424396   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1424397   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1424398   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1424399   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1424400   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1424401   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1424402   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1424403   +          +     0.00842475350903 * GRP_MntFishProducts3
1424404   +          +     -0.1623103908885 * GRP_MntFishProducts4
1424405   +          +    -0.23845524931139 * GRP_MntGoldProds2
1424406   +          +    -0.07128567155438 * GRP_MntGoldProds3
1424407   +          +     0.25778887379163 * GRP_MntGoldProds4
1424408   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1424409   +          +     0.06269922653052 * GRP_MntMeatProducts3
1424410   +          +      0.2587215409794 * GRP_MntMeatProducts4
1424411   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1424412   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1424413   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1424414   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1424415   +          +     0.12374838743082 * GRP_NumDistPurchases2
1424416   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1424417   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1424418   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1424419   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1424420   +          +     0.09237237622553 * GRP_NumWebPurchases4
1424421   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1424422   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1424423   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1424424   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1424425   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1424426   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 * 
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 * 
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 + 
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 + 
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 + 
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 + 
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 + 
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 + 
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476 
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 * 
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 * 
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 * 
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 * 
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 * 
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 + 
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 * 
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 + 
0.00206593904485 * GRP_Recency4 ;
1424427   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1424428   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1424429   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1424430   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1424431   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1424432   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1424433   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1424434   +          +    -0.07078012229572 * GRP_MntFishProducts3
1424435   +          +    -0.14569186671189 * GRP_MntFishProducts4
1424436   +          +     0.14963390032413 * GRP_MntGoldProds2
1424437   +          +    -0.11869917970226 * GRP_MntGoldProds3
1424438   +          +     0.25943105626615 * GRP_MntGoldProds4
1424439   +          +     0.36609689271233 * GRP_MntMeatProducts2
1424440   +          +     0.10969864655073 * GRP_MntMeatProducts3
1424441   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1424442   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1424443   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1424444   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1424445   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1424446   +          +     0.08068432649382 * GRP_NumDistPurchases2
1424447   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1424448   +          +     0.26738740475822 * GRP_NumDistPurchases4
1424449   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1424450   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1424451   +          +     0.01349113315351 * GRP_NumWebPurchases4
1424452   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1424453   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1424454   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1424455   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1424456   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1424457   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 * 
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 * 
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 + 
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 + 
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 + 
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 + 
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 + 
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 + 
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 + 
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 * 
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 * 
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 * 
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 * 
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 * 
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 + 
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 * 
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 + 
0.28490847560375 * GRP_Recency4 ;
1424458   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1424459   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1424460   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1424461   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1424462   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1424463   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1424464   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1424465   +          +    -0.18334484867808 * GRP_MntFishProducts3
1424466   +          +     0.13484477561766 * GRP_MntFishProducts4
1424467   +          +    -0.05145913380692 * GRP_MntGoldProds2
1424468   +          +     0.04459987080173 * GRP_MntGoldProds3
1424469   +          +     0.01539767655772 * GRP_MntGoldProds4
1424470   +          +     0.26537148543352 * GRP_MntMeatProducts2
1424471   +          +     0.22913678530176 * GRP_MntMeatProducts3
1424472   +          +     0.21262490658374 * GRP_MntMeatProducts4
1424473   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1424474   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1424475   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1424476   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1424477   +          +     0.09224372228857 * GRP_NumDistPurchases2
1424478   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1424479   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1424480   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1424481   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1424482   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1424483   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1424484   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1424485   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1424486   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1424487   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1424488   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 * 
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 * 
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 + 
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 + 
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 + 
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 + 
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352 
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 * 
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 + 
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 + 
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 + 
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 + 
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 + 
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827 
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 + 
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 * 
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1424489   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1424490   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1424491   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1424492   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1424493   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1424494   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1424495   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1424496   +          +    -0.08952948139975 * GRP_MntFishProducts3
1424497   +          +     0.15338133379465 * GRP_MntFishProducts4
1424498   +          +     0.04821845492824 * GRP_MntGoldProds2
1424499   +          +     0.20117781904284 * GRP_MntGoldProds3
1424500   +          +     0.13013396690778 * GRP_MntGoldProds4
1424501   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1424502   +          +     0.03161017721112 * GRP_MntMeatProducts3
1424503   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1424504   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1424505   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1424506   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1424507   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1424508   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1424509   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1424510   +          +      0.0473480026433 * GRP_NumDistPurchases4
1424511   +          +     0.03132883547053 * GRP_NumWebPurchases2
1424512   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1424513   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1424514   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1424515   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1424516   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1424517   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1424518   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1424519   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 * 
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 * 
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 + 
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 + 
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 + 
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 + 
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 + 
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 + 
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786 
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 * 
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 * 
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 * 
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 * 
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 * 
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 + 
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 * 
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 + 
-0.28363324780869 * GRP_Recency4 ;
1424520   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1424521   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1424522   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1424523   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1424524   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1424525   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1424526   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1424527   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1424528   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1424529   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1424530   +END;
MPRINT(EM_DIAGRAM):   END;
1424531   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1424532   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1424533   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1424534   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1424535   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1424536   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1424537   +END;
MPRINT(EM_DIAGRAM):   END;
1424538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424539   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1424540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424541   +
1424542   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1424543   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1424544   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1424545   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1424546   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1424547   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424548   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1424549   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1424550   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1424551   +end;
MPRINT(EM_DIAGRAM):   end;
1424552   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424553   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1424554   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1424555   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1424556   +   end;
MPRINT(EM_DIAGRAM):   end;
1424557   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1424558   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1424559   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1424560   +   end;
MPRINT(EM_DIAGRAM):   end;
1424561   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424562   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1424563   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1424564   +   end;
MPRINT(EM_DIAGRAM):   end;
1424565   +end;
MPRINT(EM_DIAGRAM):   end;
1424566   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1424567   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1424568   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1424569   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 + 
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1424570   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1424571   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1424572   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1424573   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1424574   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1424575   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1424576   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1424577   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1424578   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1424579   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1424580   +END;
MPRINT(EM_DIAGRAM):   END;
1424581   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1424582   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1424583   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1424584   +END;
MPRINT(EM_DIAGRAM):   END;
1424585   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1424586   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1424587   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1424588   +END;
MPRINT(EM_DIAGRAM):   END;
1424589   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1424590   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1424591   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1424592   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1424593   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1424594   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1424595   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1424596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424597   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1424598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1424599   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1424600   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1424601   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1424602   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1424603   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1424604   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1424605   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1424606   +END;
MPRINT(EM_DIAGRAM):   END;
1424607   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1424608   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1424609   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1424610   +drop
1424611   +H11
1424612   +H12
1424613   +H13
1424614   +H14
1424615   +H15
1424616   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1424617   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1424618   +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
1424619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1424620   +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
1424621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1424622   +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
1424623   +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
1424624   +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
1424625   +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
1424626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1424627   +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
1424628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1424629   +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
1424630   +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
1424631   +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
1424632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1424633   +* Ensmbl17: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring Code of model 4 of 5;
1424634   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1424635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1424636   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1424637   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1424638   +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
1424639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1424640   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1424641   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1424642   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1424643   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1424644   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1424645   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1424646   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1424647   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1424648   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1424649   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1424650   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1424651   +LENGTH _WARN_ $4
1424652   +      F_DepVar  $ 12
1424653   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1424654   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1424655   +
1424656   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1424657   +
1424658   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1424659   +
1424660   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1424661   +
1424662   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1424663   +
1424664   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1424665   +
1424666   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1424667   +
1424668   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1424669   +
1424670   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1424671   +
1424672   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1424673   +
1424674   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1424675   +
1424676   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1424677   +
1424678   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1424679   +
1424680   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1424681   +
1424682   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1424683   +
1424684   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1424685   +
1424686   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1424687   +
1424688   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1424689   +
1424690   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1424691   +
1424692   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1424693   +
1424694   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1424695   +
1424696   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1424697   +
1424698   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1424699   +
1424700   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1424701   +
1424702   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1424703   +
1424704   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1424705   +
1424706   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1424707   +
1424708   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1424709   +
1424710   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1424711   +
1424712   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1424713   +
1424714   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1424715   +
1424716   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1424717   +
1424718   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1424719   +
1424720   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1424721   +
1424722   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1424723   +
1424724   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1424725   +
1424726   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1424727   +
1424728   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1424729   +
1424730   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1424731   +
1424732   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1424733   +
1424734   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1424735   +
1424736   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1424737   +
1424738   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1424739   +
1424740   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1424741   +
1424742   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1424743   +
1424744   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1424745   +
1424746   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1424747   +
1424748   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1424749   +
1424750   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1424751   +
1424752   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1424753   +
1424754   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1424755   +
1424756   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1424757   +
1424758   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1424759   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1424760   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1424761   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1424762   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424763   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424764   +end;
MPRINT(EM_DIAGRAM):   end;
1424765   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424766   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424767   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1424768   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424769   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1424770   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1424771   +   end;
MPRINT(EM_DIAGRAM):   end;
1424772   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1424773   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1424774   +   end;
MPRINT(EM_DIAGRAM):   end;
1424775   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424776   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1424777   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424778   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424779   +   end;
MPRINT(EM_DIAGRAM):   end;
1424780   +end;
MPRINT(EM_DIAGRAM):   end;
1424781   +
1424782   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1424783   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1424784   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1424785   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1424786   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1424787   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1424788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424790   +end;
MPRINT(EM_DIAGRAM):   end;
1424791   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424793   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1424794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424795   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1424796   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1424797   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1424798   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1424799   +   end;
MPRINT(EM_DIAGRAM):   end;
1424800   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1424801   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1424802   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1424803   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1424804   +   end;
MPRINT(EM_DIAGRAM):   end;
1424805   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424806   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1424807   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1424808   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1424809   +   end;
MPRINT(EM_DIAGRAM):   end;
1424810   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424811   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1424812   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1424813   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1424814   +   end;
MPRINT(EM_DIAGRAM):   end;
1424815   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424816   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1424817   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1424818   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1424819   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424820   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424821   +   end;
MPRINT(EM_DIAGRAM):   end;
1424822   +end;
MPRINT(EM_DIAGRAM):   end;
1424823   +
1424824   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1424825   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1424826   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1424827   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1424828   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1424829   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1424830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424832   +end;
MPRINT(EM_DIAGRAM):   end;
1424833   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424834   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424835   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1424836   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424837   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1424838   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1424839   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1424840   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1424841   +   end;
MPRINT(EM_DIAGRAM):   end;
1424842   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424843   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1424844   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1424845   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1424846   +   end;
MPRINT(EM_DIAGRAM):   end;
1424847   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1424848   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1424849   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1424850   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1424851   +   end;
MPRINT(EM_DIAGRAM):   end;
1424852   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424853   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1424854   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1424855   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1424856   +   end;
MPRINT(EM_DIAGRAM):   end;
1424857   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424858   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1424859   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1424860   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1424861   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424862   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424863   +   end;
MPRINT(EM_DIAGRAM):   end;
1424864   +end;
MPRINT(EM_DIAGRAM):   end;
1424865   +
1424866   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1424867   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1424868   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1424869   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1424870   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1424871   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1424872   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424873   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424874   +end;
MPRINT(EM_DIAGRAM):   end;
1424875   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424876   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424877   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1424878   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424879   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1424880   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1424881   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1424882   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1424883   +   end;
MPRINT(EM_DIAGRAM):   end;
1424884   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1424885   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1424886   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1424887   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1424888   +   end;
MPRINT(EM_DIAGRAM):   end;
1424889   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424890   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1424891   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1424892   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1424893   +   end;
MPRINT(EM_DIAGRAM):   end;
1424894   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424895   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1424896   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1424897   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1424898   +   end;
MPRINT(EM_DIAGRAM):   end;
1424899   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424900   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1424901   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1424902   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1424903   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424904   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424905   +   end;
MPRINT(EM_DIAGRAM):   end;
1424906   +end;
MPRINT(EM_DIAGRAM):   end;
1424907   +
1424908   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1424909   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1424910   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1424911   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1424912   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1424913   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1424914   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424915   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424916   +end;
MPRINT(EM_DIAGRAM):   end;
1424917   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424918   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424919   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1424920   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424921   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1424922   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1424923   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1424924   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1424925   +   end;
MPRINT(EM_DIAGRAM):   end;
1424926   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1424927   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1424928   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1424929   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1424930   +   end;
MPRINT(EM_DIAGRAM):   end;
1424931   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424932   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1424933   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1424934   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1424935   +   end;
MPRINT(EM_DIAGRAM):   end;
1424936   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424937   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1424938   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1424939   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1424940   +   end;
MPRINT(EM_DIAGRAM):   end;
1424941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424942   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1424943   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1424944   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1424945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424947   +   end;
MPRINT(EM_DIAGRAM):   end;
1424948   +end;
MPRINT(EM_DIAGRAM):   end;
1424949   +
1424950   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1424951   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1424952   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1424953   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1424954   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1424955   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1424956   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424957   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424958   +end;
MPRINT(EM_DIAGRAM):   end;
1424959   +else do;
MPRINT(EM_DIAGRAM):   else do;
1424960   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1424961   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1424962   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1424963   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1424964   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1424965   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1424966   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1424967   +   end;
MPRINT(EM_DIAGRAM):   end;
1424968   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1424969   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1424970   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1424971   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1424972   +   end;
MPRINT(EM_DIAGRAM):   end;
1424973   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1424974   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1424975   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1424976   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1424977   +   end;
MPRINT(EM_DIAGRAM):   end;
1424978   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1424979   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1424980   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1424981   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1424982   +   end;
MPRINT(EM_DIAGRAM):   end;
1424983   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1424984   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1424985   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1424986   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1424987   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1424988   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1424989   +   end;
MPRINT(EM_DIAGRAM):   end;
1424990   +end;
MPRINT(EM_DIAGRAM):   end;
1424991   +
1424992   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1424993   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1424994   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1424995   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1424996   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1424997   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1424998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1424999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425000   +end;
MPRINT(EM_DIAGRAM):   end;
1425001   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425002   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425003   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1425004   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425005   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1425006   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1425007   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1425008   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1425009   +   end;
MPRINT(EM_DIAGRAM):   end;
1425010   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425011   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1425012   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1425013   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1425014   +   end;
MPRINT(EM_DIAGRAM):   end;
1425015   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425016   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1425017   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1425018   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1425019   +   end;
MPRINT(EM_DIAGRAM):   end;
1425020   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425021   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1425022   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1425023   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1425024   +   end;
MPRINT(EM_DIAGRAM):   end;
1425025   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425026   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1425027   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1425028   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1425029   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425030   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425031   +   end;
MPRINT(EM_DIAGRAM):   end;
1425032   +end;
MPRINT(EM_DIAGRAM):   end;
1425033   +
1425034   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1425035   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1425036   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1425037   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1425038   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1425039   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1425040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425042   +end;
MPRINT(EM_DIAGRAM):   end;
1425043   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425045   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1425046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425047   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1425048   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1425049   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1425050   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1425051   +   end;
MPRINT(EM_DIAGRAM):   end;
1425052   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425053   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1425054   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1425055   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1425056   +   end;
MPRINT(EM_DIAGRAM):   end;
1425057   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425058   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1425059   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1425060   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1425061   +   end;
MPRINT(EM_DIAGRAM):   end;
1425062   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425063   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1425064   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1425065   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1425066   +   end;
MPRINT(EM_DIAGRAM):   end;
1425067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425068   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1425069   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1425070   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1425071   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425072   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425073   +   end;
MPRINT(EM_DIAGRAM):   end;
1425074   +end;
MPRINT(EM_DIAGRAM):   end;
1425075   +
1425076   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1425077   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1425078   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1425079   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1425080   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1425081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425083   +end;
MPRINT(EM_DIAGRAM):   end;
1425084   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425085   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425086   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1425087   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425088   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1425089   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1425090   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1425091   +   end;
MPRINT(EM_DIAGRAM):   end;
1425092   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425093   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1425094   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1425095   +   end;
MPRINT(EM_DIAGRAM):   end;
1425096   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425097   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1425098   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1425099   +   end;
MPRINT(EM_DIAGRAM):   end;
1425100   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425101   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1425102   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1425103   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425104   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425105   +   end;
MPRINT(EM_DIAGRAM):   end;
1425106   +end;
MPRINT(EM_DIAGRAM):   end;
1425107   +
1425108   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1425109   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1425110   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1425111   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1425112   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1425113   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1425114   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425115   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425116   +end;
MPRINT(EM_DIAGRAM):   end;
1425117   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425118   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425119   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1425120   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425121   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1425122   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1425123   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1425124   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1425125   +   end;
MPRINT(EM_DIAGRAM):   end;
1425126   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425127   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1425128   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1425129   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1425130   +   end;
MPRINT(EM_DIAGRAM):   end;
1425131   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425132   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1425133   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1425134   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1425135   +   end;
MPRINT(EM_DIAGRAM):   end;
1425136   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1425137   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1425138   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1425139   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1425140   +   end;
MPRINT(EM_DIAGRAM):   end;
1425141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425142   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1425143   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1425144   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1425145   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425146   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425147   +   end;
MPRINT(EM_DIAGRAM):   end;
1425148   +end;
MPRINT(EM_DIAGRAM):   end;
1425149   +
1425150   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1425151   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1425152   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1425153   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1425154   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1425155   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1425156   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425157   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425158   +end;
MPRINT(EM_DIAGRAM):   end;
1425159   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425160   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425161   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1425162   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425163   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1425164   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1425165   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1425166   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1425167   +   end;
MPRINT(EM_DIAGRAM):   end;
1425168   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425169   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1425170   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1425171   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1425172   +   end;
MPRINT(EM_DIAGRAM):   end;
1425173   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425174   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1425175   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1425176   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1425177   +   end;
MPRINT(EM_DIAGRAM):   end;
1425178   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425179   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1425180   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1425181   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1425182   +   end;
MPRINT(EM_DIAGRAM):   end;
1425183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425184   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1425185   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1425186   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1425187   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425188   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425189   +   end;
MPRINT(EM_DIAGRAM):   end;
1425190   +end;
MPRINT(EM_DIAGRAM):   end;
1425191   +
1425192   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1425193   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1425194   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1425195   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1425196   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1425197   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1425198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425200   +end;
MPRINT(EM_DIAGRAM):   end;
1425201   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425202   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425203   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1425204   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425205   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1425206   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1425207   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1425208   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1425209   +   end;
MPRINT(EM_DIAGRAM):   end;
1425210   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1425211   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1425212   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1425213   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1425214   +   end;
MPRINT(EM_DIAGRAM):   end;
1425215   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425216   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1425217   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1425218   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1425219   +   end;
MPRINT(EM_DIAGRAM):   end;
1425220   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425221   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1425222   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1425223   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1425224   +   end;
MPRINT(EM_DIAGRAM):   end;
1425225   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425226   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1425227   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1425228   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1425229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425231   +   end;
MPRINT(EM_DIAGRAM):   end;
1425232   +end;
MPRINT(EM_DIAGRAM):   end;
1425233   +
1425234   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1425235   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1425236   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1425237   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1425238   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1425239   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1425240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425242   +end;
MPRINT(EM_DIAGRAM):   end;
1425243   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425244   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425245   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1425246   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425247   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1425248   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1425249   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1425250   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1425251   +   end;
MPRINT(EM_DIAGRAM):   end;
1425252   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425253   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1425254   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1425255   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1425256   +   end;
MPRINT(EM_DIAGRAM):   end;
1425257   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425258   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1425259   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1425260   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1425261   +   end;
MPRINT(EM_DIAGRAM):   end;
1425262   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425263   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1425264   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1425265   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1425266   +   end;
MPRINT(EM_DIAGRAM):   end;
1425267   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425268   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1425269   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1425270   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1425271   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425272   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425273   +   end;
MPRINT(EM_DIAGRAM):   end;
1425274   +end;
MPRINT(EM_DIAGRAM):   end;
1425275   +
1425276   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1425277   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1425278   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1425279   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1425280   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1425281   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1425282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425284   +end;
MPRINT(EM_DIAGRAM):   end;
1425285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425287   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1425288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425289   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1425290   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1425291   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1425292   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1425293   +   end;
MPRINT(EM_DIAGRAM):   end;
1425294   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425295   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1425296   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1425297   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1425298   +   end;
MPRINT(EM_DIAGRAM):   end;
1425299   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1425300   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1425301   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1425302   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1425303   +   end;
MPRINT(EM_DIAGRAM):   end;
1425304   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425305   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1425306   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1425307   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1425308   +   end;
MPRINT(EM_DIAGRAM):   end;
1425309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425310   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1425311   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1425312   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1425313   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425314   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425315   +   end;
MPRINT(EM_DIAGRAM):   end;
1425316   +end;
MPRINT(EM_DIAGRAM):   end;
1425317   +
1425318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425319   +*** Checking missing input Interval
1425320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1425321   +
1425322   +IF NMISS(
1425323   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1425324   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1425325   +
1425326   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425327   +END;
MPRINT(EM_DIAGRAM):   END;
1425328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425329   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1425330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425331   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1425332   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1425333   +END;
MPRINT(EM_DIAGRAM):   END;
1425334   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1425335   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1425336   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1425337   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1425338   +END;
MPRINT(EM_DIAGRAM):   END;
1425339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425340   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1425341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425343   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1425344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425345   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1425346   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1425347   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1425348   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1425349   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1425350   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1425351   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1425352   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1425353   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1425354   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1425355   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1425356   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1425357   +          +    -0.14978605827752 * GRP_MntFishProducts3
1425358   +          +     0.22642470616542 * GRP_MntFishProducts4
1425359   +          +     0.07604404821672 * GRP_MntGoldProds2
1425360   +          +     0.04745212568332 * GRP_MntGoldProds3
1425361   +          +    -0.10028215217028 * GRP_MntGoldProds4
1425362   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1425363   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1425364   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1425365   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1425366   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1425367   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1425368   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1425369   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1425370   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1425371   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1425372   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1425373   +          +     0.24754701690398 * GRP_NumWebPurchases3
1425374   +          +     0.01530465573539 * GRP_NumWebPurchases4
1425375   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1425376   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1425377   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1425378   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1425379   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1425380   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 * 
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 * 
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 + 
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 + 
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 + 
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 + 
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 + 
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 + 
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786 
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 * 
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 * 
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 * 
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 * 
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 * 
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 + 
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 * 
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 + 
-0.44624012521308 * GRP_Recency4 ;
1425381   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1425382   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1425383   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1425384   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1425385   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1425386   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1425387   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1425388   +          +    -0.12626287803422 * GRP_MntFishProducts3
1425389   +          +    -0.42885022606866 * GRP_MntFishProducts4
1425390   +          +    -0.08312331608509 * GRP_MntGoldProds2
1425391   +          +    -0.20061238652989 * GRP_MntGoldProds3
1425392   +          +      0.2540651659901 * GRP_MntGoldProds4
1425393   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1425394   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1425395   +          +     0.40616704937625 * GRP_MntMeatProducts4
1425396   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1425397   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1425398   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1425399   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1425400   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1425401   +          +     0.10966715611059 * GRP_NumDistPurchases3
1425402   +          +      -0.043035493739 * GRP_NumDistPurchases4
1425403   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1425404   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1425405   +          +     0.26936545488609 * GRP_NumWebPurchases4
1425406   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1425407   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1425408   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1425409   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1425410   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1425411   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 * 
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 * 
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 + 
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 + 
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 + 
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 + 
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 + 
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 + 
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895 
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 * 
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 * 
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 * 
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 * 
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 * 
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 + 
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 * 
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 + 
-0.0454148085012 * GRP_Recency4 ;
1425412   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1425413   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1425414   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1425415   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1425416   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1425417   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1425418   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1425419   +          +     0.07001619920815 * GRP_MntFishProducts3
1425420   +          +     0.07735498521359 * GRP_MntFishProducts4
1425421   +          +    -0.15884098938162 * GRP_MntGoldProds2
1425422   +          +    -0.27657428867783 * GRP_MntGoldProds3
1425423   +          +     -0.1812542301124 * GRP_MntGoldProds4
1425424   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1425425   +          +     0.00010942539908 * GRP_MntMeatProducts3
1425426   +          +     0.03587382246671 * GRP_MntMeatProducts4
1425427   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1425428   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1425429   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1425430   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1425431   +          +      -0.481887498986 * GRP_NumDistPurchases2
1425432   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1425433   +          +     0.21760620991618 * GRP_NumDistPurchases4
1425434   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1425435   +          +     0.06245025753157 * GRP_NumWebPurchases3
1425436   +          +     0.11312469123111 * GRP_NumWebPurchases4
1425437   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1425438   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1425439   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1425440   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1425441   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1425442   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 * 
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 * 
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 + 
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 + 
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 + 
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 + 
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 + 
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 + 
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 * 
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 * 
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 * 
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 * 
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 * 
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 * 
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 + 
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 * 
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 + 
-0.30003743891847 * GRP_Recency4 ;
1425443   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1425444   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1425445   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1425446   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1425447   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1425448   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1425449   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1425450   +          +     0.33369645018356 * GRP_MntFishProducts3
1425451   +          +     0.08427214551103 * GRP_MntFishProducts4
1425452   +          +    -0.36187933889617 * GRP_MntGoldProds2
1425453   +          +      0.1522584097588 * GRP_MntGoldProds3
1425454   +          +    -0.18069803129722 * GRP_MntGoldProds4
1425455   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1425456   +          +     0.00511939388608 * GRP_MntMeatProducts3
1425457   +          +      0.0518722466688 * GRP_MntMeatProducts4
1425458   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1425459   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1425460   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1425461   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1425462   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1425463   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1425464   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1425465   +          +      0.0024401108853 * GRP_NumWebPurchases2
1425466   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1425467   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1425468   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1425469   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1425470   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1425471   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1425472   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1425473   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 * 
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 * 
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 + 
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 + 
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 + 
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 + 
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 + 
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 + 
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068 
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 * 
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 * 
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 * 
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 * 
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 * 
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 + 
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 * 
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 + 
0.19384397786172 * GRP_Recency4 ;
1425474   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1425475   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1425476   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1425477   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1425478   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1425479   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1425480   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1425481   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1425482   +END;
MPRINT(EM_DIAGRAM):   END;
1425483   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1425484   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1425485   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1425486   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1425487   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1425488   +END;
MPRINT(EM_DIAGRAM):   END;
1425489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425490   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1425491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425492   +
1425493   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1425494   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1425495   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1425496   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1425497   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1425498   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425499   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1425500   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1425501   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1425502   +end;
MPRINT(EM_DIAGRAM):   end;
1425503   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425504   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1425505   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1425506   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1425507   +   end;
MPRINT(EM_DIAGRAM):   end;
1425508   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1425509   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1425510   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1425511   +   end;
MPRINT(EM_DIAGRAM):   end;
1425512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425513   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1425514   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1425515   +   end;
MPRINT(EM_DIAGRAM):   end;
1425516   +end;
MPRINT(EM_DIAGRAM):   end;
1425517   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1425518   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1425519   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 + 
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1425520   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1425521   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1425522   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1425523   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1425524   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1425525   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1425526   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1425527   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1425528   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1425529   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1425530   +END;
MPRINT(EM_DIAGRAM):   END;
1425531   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1425532   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1425533   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1425534   +END;
MPRINT(EM_DIAGRAM):   END;
1425535   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1425536   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1425537   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1425538   +END;
MPRINT(EM_DIAGRAM):   END;
1425539   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1425540   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1425541   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1425542   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1425543   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1425544   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1425545   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1425546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425547   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1425548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1425549   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1425550   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1425551   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1425552   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1425553   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1425554   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1425555   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1425556   +END;
MPRINT(EM_DIAGRAM):   END;
1425557   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1425558   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1425559   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1425560   +drop
1425561   +H11
1425562   +H12
1425563   +H13
1425564   +H14
1425565   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1425566   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1425567   +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
1425568   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1425569   +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
1425570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1425571   +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
1425572   +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
1425573   +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
1425574   +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
1425575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1425576   +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
1425577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1425578   +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
1425579   +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
1425580   +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
1425581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1425582   +* Ensmbl17: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring Code of model 5 of 5;
1425583   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1425584   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1425585   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1425586   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1425587   +* NODE: Reg7;
MPRINT(EM_DIAGRAM):   * NODE: Reg7;
1425588   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1425589   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1425590   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1425591   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1425592   +
1425593   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1425594   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1425595   +
1425596   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1425597   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1425598   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1425599   +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
1425600   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1425601   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1425602   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1425603   +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
1425604   +
1425605   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1425606   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1425607   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1425608   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1425609   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1425610   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425611   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1425612   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1425613   +end;
MPRINT(EM_DIAGRAM):   end;
1425614   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425615   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1425616   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1425617   +   end;
MPRINT(EM_DIAGRAM):   end;
1425618   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1425619   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1425620   +   end;
MPRINT(EM_DIAGRAM):   end;
1425621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425622   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1425623   +   end;
MPRINT(EM_DIAGRAM):   end;
1425624   +end;
MPRINT(EM_DIAGRAM):   end;
1425625   +
1425626   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1425627   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1425628   +
1425629   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1425630   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1425631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425633   +end;
MPRINT(EM_DIAGRAM):   end;
1425634   +
1425635   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1425636   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1425637   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1425638   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1425639   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425641   +end;
MPRINT(EM_DIAGRAM):   end;
1425642   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425643   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425644   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1425645   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425646   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1425647   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1425648   +   end;
MPRINT(EM_DIAGRAM):   end;
1425649   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1425650   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1425651   +   end;
MPRINT(EM_DIAGRAM):   end;
1425652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425653   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1425654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425656   +   end;
MPRINT(EM_DIAGRAM):   end;
1425657   +end;
MPRINT(EM_DIAGRAM):   end;
1425658   +
1425659   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1425660   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1425661   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1425662   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1425663   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1425664   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1425665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425667   +end;
MPRINT(EM_DIAGRAM):   end;
1425668   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425669   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425670   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1425671   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425672   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1425673   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1425674   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1425675   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1425676   +   end;
MPRINT(EM_DIAGRAM):   end;
1425677   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1425678   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1425679   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1425680   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1425681   +   end;
MPRINT(EM_DIAGRAM):   end;
1425682   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425683   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1425684   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1425685   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1425686   +   end;
MPRINT(EM_DIAGRAM):   end;
1425687   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425688   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1425689   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1425690   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1425691   +   end;
MPRINT(EM_DIAGRAM):   end;
1425692   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425693   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1425694   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1425695   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1425696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425698   +   end;
MPRINT(EM_DIAGRAM):   end;
1425699   +end;
MPRINT(EM_DIAGRAM):   end;
1425700   +
1425701   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1425702   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1425703   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1425704   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1425705   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1425706   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1425707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425709   +end;
MPRINT(EM_DIAGRAM):   end;
1425710   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425711   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425712   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1425713   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425714   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1425715   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1425716   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1425717   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1425718   +   end;
MPRINT(EM_DIAGRAM):   end;
1425719   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425720   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1425721   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1425722   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1425723   +   end;
MPRINT(EM_DIAGRAM):   end;
1425724   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1425725   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1425726   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1425727   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1425728   +   end;
MPRINT(EM_DIAGRAM):   end;
1425729   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425730   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1425731   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1425732   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1425733   +   end;
MPRINT(EM_DIAGRAM):   end;
1425734   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425735   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1425736   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1425737   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1425738   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425739   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425740   +   end;
MPRINT(EM_DIAGRAM):   end;
1425741   +end;
MPRINT(EM_DIAGRAM):   end;
1425742   +
1425743   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1425744   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1425745   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1425746   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1425747   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1425748   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1425749   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425750   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425751   +end;
MPRINT(EM_DIAGRAM):   end;
1425752   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425753   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425754   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1425755   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425756   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1425757   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1425758   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1425759   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1425760   +   end;
MPRINT(EM_DIAGRAM):   end;
1425761   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425762   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1425763   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1425764   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1425765   +   end;
MPRINT(EM_DIAGRAM):   end;
1425766   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425767   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1425768   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1425769   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1425770   +   end;
MPRINT(EM_DIAGRAM):   end;
1425771   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425772   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1425773   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1425774   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1425775   +   end;
MPRINT(EM_DIAGRAM):   end;
1425776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425777   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1425778   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1425779   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1425780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425782   +   end;
MPRINT(EM_DIAGRAM):   end;
1425783   +end;
MPRINT(EM_DIAGRAM):   end;
1425784   +
1425785   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1425786   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1425787   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1425788   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1425789   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1425790   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1425791   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425792   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425793   +end;
MPRINT(EM_DIAGRAM):   end;
1425794   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425795   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425796   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1425797   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425798   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1425799   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1425800   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1425801   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1425802   +   end;
MPRINT(EM_DIAGRAM):   end;
1425803   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425804   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1425805   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1425806   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1425807   +   end;
MPRINT(EM_DIAGRAM):   end;
1425808   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425809   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1425810   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1425811   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1425812   +   end;
MPRINT(EM_DIAGRAM):   end;
1425813   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425814   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1425815   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1425816   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1425817   +   end;
MPRINT(EM_DIAGRAM):   end;
1425818   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425819   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1425820   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1425821   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1425822   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425823   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425824   +   end;
MPRINT(EM_DIAGRAM):   end;
1425825   +end;
MPRINT(EM_DIAGRAM):   end;
1425826   +
1425827   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1425828   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1425829   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1425830   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1425831   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1425832   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1425833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425835   +end;
MPRINT(EM_DIAGRAM):   end;
1425836   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425837   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425838   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1425839   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425840   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1425841   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1425842   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1425843   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1425844   +   end;
MPRINT(EM_DIAGRAM):   end;
1425845   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425846   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1425847   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1425848   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1425849   +   end;
MPRINT(EM_DIAGRAM):   end;
1425850   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425851   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1425852   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1425853   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1425854   +   end;
MPRINT(EM_DIAGRAM):   end;
1425855   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425856   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1425857   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1425858   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1425859   +   end;
MPRINT(EM_DIAGRAM):   end;
1425860   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425861   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1425862   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1425863   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1425864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425866   +   end;
MPRINT(EM_DIAGRAM):   end;
1425867   +end;
MPRINT(EM_DIAGRAM):   end;
1425868   +
1425869   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1425870   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1425871   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1425872   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1425873   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1425874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425876   +end;
MPRINT(EM_DIAGRAM):   end;
1425877   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425878   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425879   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1425880   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425881   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1425882   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1425883   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1425884   +   end;
MPRINT(EM_DIAGRAM):   end;
1425885   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425886   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1425887   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1425888   +   end;
MPRINT(EM_DIAGRAM):   end;
1425889   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425890   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1425891   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1425892   +   end;
MPRINT(EM_DIAGRAM):   end;
1425893   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425894   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1425895   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1425896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425898   +   end;
MPRINT(EM_DIAGRAM):   end;
1425899   +end;
MPRINT(EM_DIAGRAM):   end;
1425900   +
1425901   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1425902   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1425903   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1425904   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1425905   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1425906   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1425907   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425908   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425909   +end;
MPRINT(EM_DIAGRAM):   end;
1425910   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425911   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425912   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1425913   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425914   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1425915   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1425916   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1425917   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1425918   +   end;
MPRINT(EM_DIAGRAM):   end;
1425919   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425920   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1425921   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1425922   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1425923   +   end;
MPRINT(EM_DIAGRAM):   end;
1425924   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425925   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1425926   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1425927   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1425928   +   end;
MPRINT(EM_DIAGRAM):   end;
1425929   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1425930   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1425931   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1425932   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1425933   +   end;
MPRINT(EM_DIAGRAM):   end;
1425934   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425935   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1425936   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1425937   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1425938   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425939   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425940   +   end;
MPRINT(EM_DIAGRAM):   end;
1425941   +end;
MPRINT(EM_DIAGRAM):   end;
1425942   +
1425943   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1425944   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1425945   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1425946   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1425947   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1425948   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1425949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425951   +end;
MPRINT(EM_DIAGRAM):   end;
1425952   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425953   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425954   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1425955   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425956   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1425957   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1425958   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1425959   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1425960   +   end;
MPRINT(EM_DIAGRAM):   end;
1425961   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1425962   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1425963   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1425964   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1425965   +   end;
MPRINT(EM_DIAGRAM):   end;
1425966   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1425967   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1425968   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1425969   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1425970   +   end;
MPRINT(EM_DIAGRAM):   end;
1425971   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1425972   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1425973   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1425974   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1425975   +   end;
MPRINT(EM_DIAGRAM):   end;
1425976   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1425977   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1425978   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1425979   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1425980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1425981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425982   +   end;
MPRINT(EM_DIAGRAM):   end;
1425983   +end;
MPRINT(EM_DIAGRAM):   end;
1425984   +
1425985   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1425986   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1425987   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1425988   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1425989   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1425990   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1425991   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1425992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1425993   +end;
MPRINT(EM_DIAGRAM):   end;
1425994   +else do;
MPRINT(EM_DIAGRAM):   else do;
1425995   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1425996   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1425997   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1425998   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1425999   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1426000   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1426001   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1426002   +   end;
MPRINT(EM_DIAGRAM):   end;
1426003   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1426004   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1426005   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1426006   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1426007   +   end;
MPRINT(EM_DIAGRAM):   end;
1426008   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1426009   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1426010   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1426011   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1426012   +   end;
MPRINT(EM_DIAGRAM):   end;
1426013   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1426014   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1426015   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1426016   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1426017   +   end;
MPRINT(EM_DIAGRAM):   end;
1426018   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1426019   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1426020   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1426021   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1426022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1426023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426024   +   end;
MPRINT(EM_DIAGRAM):   end;
1426025   +end;
MPRINT(EM_DIAGRAM):   end;
1426026   +
1426027   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1426028   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1426029   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1426030   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1426031   +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
1426032   +end;
MPRINT(EM_DIAGRAM):   end;
1426033   +
1426034   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1426035   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1426036   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1426037   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1426038   +
1426039   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1426040   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1426041   +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
1426042   +
1426043   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1426044   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1426045   +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
1426046   +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
1426047   +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
1426048   +
1426049   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1426050   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1426051   +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
1426052   +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
1426053   +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
1426054   +
1426055   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1426056   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1426057   +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
1426058   +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
1426059   +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
1426060   +
1426061   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1426062   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1426063   +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
1426064   +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
1426065   +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
1426066   +
1426067   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1426068   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1426069   +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
1426070   +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
1426071   +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
1426072   +
1426073   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1426074   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1426075   +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
1426076   +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
1426077   +
1426078   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1426079   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1426080   +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
1426081   +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
1426082   +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
1426083   +
1426084   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1426085   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1426086   +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
1426087   +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
1426088   +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
1426089   +
1426090   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1426091   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1426092   +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
1426093   +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
1426094   +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
1426095   +
1426096   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1426097   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1426098   +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
1426099   +
1426100   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1426101   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1426102   +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
1426103   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1426104   +
1426105   +REG7DR1:
1426106   +
1426107   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
1426108   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1426109   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1426110   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1426111   +end;
MPRINT(EM_DIAGRAM):   end;
1426112   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426113   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1426114   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1426115   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1426116   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1426117   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1426118   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1426119   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1426120   +   end;
MPRINT(EM_DIAGRAM):   end;
1426121   +end;
MPRINT(EM_DIAGRAM):   end;
1426122   +
1426123   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1426124   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1426125   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1426126   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1426127   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1426128   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1426129   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1426130   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1426131   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1426132   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1426133   +end;
MPRINT(EM_DIAGRAM):   end;
1426134   +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
1426135   +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
1426136   +
1426137   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1426138   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1426139   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1426140   +* Renaming variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg7;
1426141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426142   +* Renaming Posterior variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg7;
1426143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426144   +drop Reg7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar1;
1426145   +Reg7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar1 = P_DepVar1;
1426146   +drop Reg7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar0;
1426147   +Reg7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar0 = P_DepVar0;
1426148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426149   +* Renaming _WARN_ variable for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg7;
1426150   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426151   +length Reg7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg7_WARN_ $4;
1426152   +drop Reg7_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg7_WARN_;
1426153   +Reg7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg7_WARN_ = _WARN_;
1426154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426155   +* Ensmbl17: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Average Posteriors of 5 models;
1426156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426157   +P_DepVar1 = (
1426158   +Reg3_P_DepVar1 +
1426159   +Neural18_P_DepVar1 +
1426160   +Neural22_P_DepVar1 +
1426161   +Neural21_P_DepVar1 +
1426162   +Reg7_P_DepVar1
1426163   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg3_P_DepVar1 + Neural18_P_DepVar1 + Neural22_P_DepVar1 + 
Neural21_P_DepVar1 + Reg7_P_DepVar1 )/5;
1426164   +P_DepVar0 = (
1426165   +Reg3_P_DepVar0 +
1426166   +Neural18_P_DepVar0 +
1426167   +Neural22_P_DepVar0 +
1426168   +Neural21_P_DepVar0 +
1426169   +Reg7_P_DepVar0
1426170   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg3_P_DepVar0 + Neural18_P_DepVar0 + Neural22_P_DepVar0 + 
Neural21_P_DepVar0 + Reg7_P_DepVar0 )/5;
1426171   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426172   +* Ensmbl17: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Computing Classification Vars;
1426173   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426174   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1426175   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1426176   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1426177   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1426178   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1426179   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1426180   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1426181   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1426182   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1426183   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1426184   +end;
MPRINT(EM_DIAGRAM):   end;
1426185   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1426186   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1426187   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1426188   +end;
MPRINT(EM_DIAGRAM):   end;
1426189   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1426190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426191   +* Ensmbl17: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Producing Unformatted variable;
1426192   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426193   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1426194   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1426195   +else
1426196   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1426197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426198   +* Ensmbl17: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Computing _WARN_ Variable;
1426199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426200   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1426201   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1426202   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1426203   +if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1426204   +if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1426205   +if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1426206   +if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1426207   +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1426207  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1426208   +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1426208  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1426209   +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1426209  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1426210   +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1426210  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1426211   +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1426211  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1426212   +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1426212  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1426213   +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1426213  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1426214   +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1426214  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1426215   +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1426215  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1426216   +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1426216  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1426217   +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1426217  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1426218   +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1426218  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1426219   +if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1426220   +if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1426221   +if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1426222   +if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1426223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426224   +* Ensmbl17: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Computing Residual Vars;
1426225   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426226   +if
1426227   +F_DepVar NE '1'
1426228   +AND F_DepVar NE '0'
1426229   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1426230   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1426231   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1426232   +end;
MPRINT(EM_DIAGRAM):   end;
1426233   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426234   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1426235   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1426236   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1426237   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1426238   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1426239   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1426240   +END;
MPRINT(EM_DIAGRAM):   END;
1426241   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1426242    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL17_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG3_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1426243    quit;
1426244    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1426245    filename emflow
1426245  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl17\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring REG3_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426246    *------------------------------------------------------------*;
1426247    * Ensmbl17: Scoring REG3_VALIDATE data;
1426248    *------------------------------------------------------------*;
1426249    data EMWS8.Ensmbl17_VALIDATE
1426250    / view=EMWS8.Ensmbl17_VALIDATE
1426251    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl17_VALIDATE / view=EMWS8.Ensmbl17_VALIDATE ;
1426252    set EMWS8.Reg3_VALIDATE
1426253    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_VALIDATE ;
1426254    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl17\EMFLOWSCORE.sas.
1426255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426256   +* Ensmbl17: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Combine model for DepVar;
1426257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426258   +* Ensmbl17: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring Code of model 1 of 5;
1426259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426261   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1426262   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1426263   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1426264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426266   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1426267   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1426268   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1426269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426271   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1426272   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1426273   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1426274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426276   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1426277   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1426278   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1426279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426280   +
1426281   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1426282   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1426282  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1426283   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1426284   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1426285   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1426286   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1426287   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1426288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426289   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1426290   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1426291   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1426292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426294   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1426295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426296   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1426297   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1426298   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1426299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426300   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1426301   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1426302   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1426303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426305   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1426306   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1426307   +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
1426308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426309   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1426310   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1426311   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1426312   +
1426313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426314   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1426315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426316   +LABEL GRP_AcceptedCmp5 =
1426317   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1426318   +
1426319   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1426320   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1426321   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1426322   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1426323   +end;
MPRINT(EM_DIAGRAM):   end;
1426324   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1426325   +if (_UFORMAT eq '0'
1426326   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1426327   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1426328   +end;
MPRINT(EM_DIAGRAM):   end;
1426329   +else
1426330   +if (_UFORMAT eq '1'
1426331   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1426332   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1426333   +end;
MPRINT(EM_DIAGRAM):   end;
1426334   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426335   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1426336   +end;
MPRINT(EM_DIAGRAM):   end;
1426337   +end;
MPRINT(EM_DIAGRAM):   end;
1426338   +
1426339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426340   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1426341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426342   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1426343   +
1426344   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1426345   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1426346   +end;
MPRINT(EM_DIAGRAM):   end;
1426347   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1426348   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1426349   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1426350   +end;
MPRINT(EM_DIAGRAM):   end;
1426351   +else
1426352   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1426353   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1426354   +end;
MPRINT(EM_DIAGRAM):   end;
1426355   +else
1426356   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1426357   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1426358   +end;
MPRINT(EM_DIAGRAM):   end;
1426359   +else
1426360   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1426361   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1426362   +end;
MPRINT(EM_DIAGRAM):   end;
1426363   +end;
MPRINT(EM_DIAGRAM):   end;
1426364   +
1426365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426366   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1426367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426368   +LABEL GRP_Income =
1426369   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1426370   +
1426371   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1426372   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1426373   +end;
MPRINT(EM_DIAGRAM):   end;
1426374   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1426375   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1426376   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1426377   +end;
MPRINT(EM_DIAGRAM):   end;
1426378   +else
1426379   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1426380   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1426381   +end;
MPRINT(EM_DIAGRAM):   end;
1426382   +else
1426383   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1426384   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1426385   +end;
MPRINT(EM_DIAGRAM):   end;
1426386   +else
1426387   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1426388   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1426389   +end;
MPRINT(EM_DIAGRAM):   end;
1426390   +end;
MPRINT(EM_DIAGRAM):   end;
1426391   +
1426392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426393   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1426394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426395   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1426396   +
1426397   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1426398   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1426399   +end;
MPRINT(EM_DIAGRAM):   end;
1426400   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1426401   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1426402   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1426403   +end;
MPRINT(EM_DIAGRAM):   end;
1426404   +else
1426405   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1426406   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1426407   +end;
MPRINT(EM_DIAGRAM):   end;
1426408   +else
1426409   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1426410   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1426411   +end;
MPRINT(EM_DIAGRAM):   end;
1426412   +else
1426413   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1426414   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1426415   +end;
MPRINT(EM_DIAGRAM):   end;
1426416   +end;
MPRINT(EM_DIAGRAM):   end;
1426417   +
1426418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426419   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1426420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426421   +LABEL GRP_MntFishProducts =
1426422   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1426423   +
1426424   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1426425   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1426426   +end;
MPRINT(EM_DIAGRAM):   end;
1426427   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1426428   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1426429   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1426430   +end;
MPRINT(EM_DIAGRAM):   end;
1426431   +else
1426432   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1426433   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1426434   +end;
MPRINT(EM_DIAGRAM):   end;
1426435   +else
1426436   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1426437   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1426438   +end;
MPRINT(EM_DIAGRAM):   end;
1426439   +else
1426440   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1426441   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1426442   +end;
MPRINT(EM_DIAGRAM):   end;
1426443   +end;
MPRINT(EM_DIAGRAM):   end;
1426444   +
1426445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426446   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1426447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426448   +LABEL GRP_MntGoldProds =
1426449   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1426450   +
1426451   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1426452   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1426453   +end;
MPRINT(EM_DIAGRAM):   end;
1426454   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1426455   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1426456   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1426457   +end;
MPRINT(EM_DIAGRAM):   end;
1426458   +else
1426459   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1426460   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1426461   +end;
MPRINT(EM_DIAGRAM):   end;
1426462   +else
1426463   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1426464   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1426465   +end;
MPRINT(EM_DIAGRAM):   end;
1426466   +else
1426467   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1426468   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1426469   +end;
MPRINT(EM_DIAGRAM):   end;
1426470   +end;
MPRINT(EM_DIAGRAM):   end;
1426471   +
1426472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426473   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1426474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426475   +LABEL GRP_MntMeatProducts =
1426476   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1426477   +
1426478   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1426479   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1426480   +end;
MPRINT(EM_DIAGRAM):   end;
1426481   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1426482   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1426483   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1426484   +end;
MPRINT(EM_DIAGRAM):   end;
1426485   +else
1426486   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1426487   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1426488   +end;
MPRINT(EM_DIAGRAM):   end;
1426489   +else
1426490   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1426491   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1426492   +end;
MPRINT(EM_DIAGRAM):   end;
1426493   +else
1426494   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1426495   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1426496   +end;
MPRINT(EM_DIAGRAM):   end;
1426497   +end;
MPRINT(EM_DIAGRAM):   end;
1426498   +
1426499   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426500   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1426501   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426502   +LABEL GRP_MntWines =
1426503   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1426504   +
1426505   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1426506   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1426507   +end;
MPRINT(EM_DIAGRAM):   end;
1426508   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1426509   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1426510   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1426511   +end;
MPRINT(EM_DIAGRAM):   end;
1426512   +else
1426513   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1426514   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1426515   +end;
MPRINT(EM_DIAGRAM):   end;
1426516   +else
1426517   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1426518   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1426519   +end;
MPRINT(EM_DIAGRAM):   end;
1426520   +else
1426521   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1426522   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1426523   +end;
MPRINT(EM_DIAGRAM):   end;
1426524   +end;
MPRINT(EM_DIAGRAM):   end;
1426525   +
1426526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426527   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1426528   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426529   +LABEL GRP_NumCatalogPurchases =
1426530   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1426531   +
1426532   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1426533   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1426534   +end;
MPRINT(EM_DIAGRAM):   end;
1426535   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1426536   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1426537   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1426538   +end;
MPRINT(EM_DIAGRAM):   end;
1426539   +else
1426540   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1426541   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1426542   +end;
MPRINT(EM_DIAGRAM):   end;
1426543   +else
1426544   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1426545   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1426546   +end;
MPRINT(EM_DIAGRAM):   end;
1426547   +else
1426548   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1426549   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1426550   +end;
MPRINT(EM_DIAGRAM):   end;
1426551   +end;
MPRINT(EM_DIAGRAM):   end;
1426552   +
1426553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426554   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1426555   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426556   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1426557   +
1426558   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1426559   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1426560   +end;
MPRINT(EM_DIAGRAM):   end;
1426561   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1426562   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1426563   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1426564   +end;
MPRINT(EM_DIAGRAM):   end;
1426565   +else
1426566   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1426567   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1426568   +end;
MPRINT(EM_DIAGRAM):   end;
1426569   +else
1426570   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1426571   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1426572   +end;
MPRINT(EM_DIAGRAM):   end;
1426573   +else
1426574   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1426575   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1426576   +end;
MPRINT(EM_DIAGRAM):   end;
1426577   +end;
MPRINT(EM_DIAGRAM):   end;
1426578   +
1426579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426580   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1426581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426582   +LABEL GRP_NumWebPurchases =
1426583   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1426584   +
1426585   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1426586   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1426587   +end;
MPRINT(EM_DIAGRAM):   end;
1426588   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1426589   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1426590   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1426591   +end;
MPRINT(EM_DIAGRAM):   end;
1426592   +else
1426593   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1426594   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1426595   +end;
MPRINT(EM_DIAGRAM):   end;
1426596   +else
1426597   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1426598   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1426599   +end;
MPRINT(EM_DIAGRAM):   end;
1426600   +else
1426601   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1426602   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1426603   +end;
MPRINT(EM_DIAGRAM):   end;
1426604   +end;
MPRINT(EM_DIAGRAM):   end;
1426605   +
1426606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426607   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1426608   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426609   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1426610   +
1426611   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1426612   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1426613   +end;
MPRINT(EM_DIAGRAM):   end;
1426614   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1426615   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1426616   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1426617   +end;
MPRINT(EM_DIAGRAM):   end;
1426618   +else
1426619   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1426620   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1426621   +end;
MPRINT(EM_DIAGRAM):   end;
1426622   +else
1426623   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1426624   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1426625   +end;
MPRINT(EM_DIAGRAM):   end;
1426626   +else
1426627   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1426628   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1426629   +end;
MPRINT(EM_DIAGRAM):   end;
1426630   +end;
MPRINT(EM_DIAGRAM):   end;
1426631   +
1426632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426633   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1426634   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426635   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1426636   +
1426637   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1426638   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1426639   +end;
MPRINT(EM_DIAGRAM):   end;
1426640   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1426641   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1426642   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1426643   +end;
MPRINT(EM_DIAGRAM):   end;
1426644   +else
1426645   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1426646   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1426647   +end;
MPRINT(EM_DIAGRAM):   end;
1426648   +else
1426649   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1426650   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1426651   +end;
MPRINT(EM_DIAGRAM):   end;
1426652   +else
1426653   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1426654   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1426655   +end;
MPRINT(EM_DIAGRAM):   end;
1426656   +end;
MPRINT(EM_DIAGRAM):   end;
1426657   +
1426658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426659   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1426660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426661   +LABEL GRP_Recency =
1426662   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1426663   +
1426664   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1426665   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1426666   +end;
MPRINT(EM_DIAGRAM):   end;
1426667   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1426668   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1426669   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1426670   +end;
MPRINT(EM_DIAGRAM):   end;
1426671   +else
1426672   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1426673   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1426674   +end;
MPRINT(EM_DIAGRAM):   end;
1426675   +else
1426676   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1426677   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1426678   +end;
MPRINT(EM_DIAGRAM):   end;
1426679   +else
1426680   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1426681   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1426682   +end;
MPRINT(EM_DIAGRAM):   end;
1426683   +end;
MPRINT(EM_DIAGRAM):   end;
1426684   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426685   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1426686   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1426687   +* NODE: Reg3;
MPRINT(EM_DIAGRAM):   * NODE: Reg3;
1426688   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1426689   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1426690   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1426691   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1426692   +
1426693   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1426694   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1426695   +
1426696   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1426697   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1426698   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1426699   +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
1426700   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1426701   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1426702   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1426703   +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
1426704   +
1426705   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1426706   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1426707   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1426708   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1426709   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1426710   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1426711   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1426712   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1426713   +end;
MPRINT(EM_DIAGRAM):   end;
1426714   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426715   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1426716   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1426717   +   end;
MPRINT(EM_DIAGRAM):   end;
1426718   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1426719   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1426720   +   end;
MPRINT(EM_DIAGRAM):   end;
1426721   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1426722   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1426723   +   end;
MPRINT(EM_DIAGRAM):   end;
1426724   +end;
MPRINT(EM_DIAGRAM):   end;
1426725   +
1426726   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1426727   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1426728   +
1426729   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1426730   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1426731   +   substr(_warn_,1,1) = 'M';
The SAS System

MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1426732   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426733   +end;
MPRINT(EM_DIAGRAM):   end;
1426734   +
1426735   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1426736   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1426737   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1426738   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1426739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1426740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426741   +end;
MPRINT(EM_DIAGRAM):   end;
1426742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1426744   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1426745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1426746   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1426747   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1426748   +   end;
MPRINT(EM_DIAGRAM):   end;
1426749   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1426750   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1426751   +   end;
MPRINT(EM_DIAGRAM):   end;
1426752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1426753   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1426754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1426755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426756   +   end;
MPRINT(EM_DIAGRAM):   end;
1426757   +end;
MPRINT(EM_DIAGRAM):   end;
1426758   +
1426759   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1426760   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1426761   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1426762   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1426763   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1426764   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1426765   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1426766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426767   +end;
MPRINT(EM_DIAGRAM):   end;
1426768   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426769   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1426770   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1426771   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1426772   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1426773   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1426774   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1426775   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1426776   +   end;
MPRINT(EM_DIAGRAM):   end;
1426777   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1426778   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1426779   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1426780   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1426781   +   end;
MPRINT(EM_DIAGRAM):   end;
1426782   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1426783   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1426784   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1426785   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1426786   +   end;
MPRINT(EM_DIAGRAM):   end;
1426787   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1426788   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1426789   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1426790   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1426791   +   end;
MPRINT(EM_DIAGRAM):   end;
1426792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1426793   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1426794   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1426795   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1426796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1426797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426798   +   end;
MPRINT(EM_DIAGRAM):   end;
1426799   +end;
MPRINT(EM_DIAGRAM):   end;
1426800   +
1426801   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1426802   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1426803   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1426804   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1426805   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1426806   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1426807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1426808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426809   +end;
MPRINT(EM_DIAGRAM):   end;
1426810   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426811   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1426812   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1426813   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1426814   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1426815   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1426816   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1426817   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1426818   +   end;
MPRINT(EM_DIAGRAM):   end;
1426819   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1426820   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1426821   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1426822   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1426823   +   end;
MPRINT(EM_DIAGRAM):   end;
1426824   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1426825   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1426826   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1426827   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1426828   +   end;
MPRINT(EM_DIAGRAM):   end;
1426829   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1426830   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1426831   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1426832   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1426833   +   end;
MPRINT(EM_DIAGRAM):   end;
1426834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1426835   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1426836   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1426837   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1426838   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1426839   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426840   +   end;
MPRINT(EM_DIAGRAM):   end;
1426841   +end;
MPRINT(EM_DIAGRAM):   end;
1426842   +
1426843   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1426844   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1426845   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1426846   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1426847   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1426848   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1426849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1426850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426851   +end;
MPRINT(EM_DIAGRAM):   end;
1426852   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1426854   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1426855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1426856   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1426857   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1426858   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1426859   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1426860   +   end;
MPRINT(EM_DIAGRAM):   end;
1426861   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1426862   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1426863   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1426864   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1426865   +   end;
MPRINT(EM_DIAGRAM):   end;
1426866   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1426867   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1426868   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1426869   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1426870   +   end;
MPRINT(EM_DIAGRAM):   end;
1426871   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1426872   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1426873   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1426874   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1426875   +   end;
MPRINT(EM_DIAGRAM):   end;
1426876   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1426877   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1426878   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1426879   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1426880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1426881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426882   +   end;
MPRINT(EM_DIAGRAM):   end;
1426883   +end;
MPRINT(EM_DIAGRAM):   end;
1426884   +
1426885   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1426886   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1426887   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1426888   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1426889   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1426890   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1426891   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1426892   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426893   +end;
MPRINT(EM_DIAGRAM):   end;
1426894   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426895   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1426896   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1426897   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1426898   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1426899   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1426900   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1426901   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1426902   +   end;
MPRINT(EM_DIAGRAM):   end;
1426903   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1426904   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1426905   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1426906   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1426907   +   end;
MPRINT(EM_DIAGRAM):   end;
1426908   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1426909   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1426910   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1426911   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1426912   +   end;
MPRINT(EM_DIAGRAM):   end;
1426913   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1426914   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1426915   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1426916   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1426917   +   end;
MPRINT(EM_DIAGRAM):   end;
1426918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1426919   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1426920   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1426921   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1426922   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1426923   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426924   +   end;
MPRINT(EM_DIAGRAM):   end;
1426925   +end;
MPRINT(EM_DIAGRAM):   end;
1426926   +
1426927   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1426928   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1426929   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1426930   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1426931   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1426932   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1426933   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1426934   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426935   +end;
MPRINT(EM_DIAGRAM):   end;
1426936   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426937   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1426938   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1426939   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1426940   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1426941   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1426942   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1426943   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1426944   +   end;
MPRINT(EM_DIAGRAM):   end;
1426945   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1426946   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1426947   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1426948   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1426949   +   end;
MPRINT(EM_DIAGRAM):   end;
1426950   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1426951   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1426952   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1426953   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1426954   +   end;
MPRINT(EM_DIAGRAM):   end;
1426955   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1426956   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1426957   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1426958   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1426959   +   end;
MPRINT(EM_DIAGRAM):   end;
1426960   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1426961   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1426962   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1426963   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1426964   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1426965   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426966   +   end;
MPRINT(EM_DIAGRAM):   end;
1426967   +end;
MPRINT(EM_DIAGRAM):   end;
1426968   +
1426969   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1426970   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1426971   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1426972   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1426973   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1426974   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1426975   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426976   +end;
MPRINT(EM_DIAGRAM):   end;
1426977   +else do;
MPRINT(EM_DIAGRAM):   else do;
1426978   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1426979   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1426980   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1426981   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1426982   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1426983   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1426984   +   end;
MPRINT(EM_DIAGRAM):   end;
1426985   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1426986   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1426987   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1426988   +   end;
MPRINT(EM_DIAGRAM):   end;
1426989   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1426990   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1426991   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1426992   +   end;
MPRINT(EM_DIAGRAM):   end;
1426993   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1426994   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1426995   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1426996   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1426997   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1426998   +   end;
MPRINT(EM_DIAGRAM):   end;
1426999   +end;
MPRINT(EM_DIAGRAM):   end;
1427000   +
1427001   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1427002   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1427003   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1427004   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1427005   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1427006   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1427007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427009   +end;
MPRINT(EM_DIAGRAM):   end;
1427010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427012   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1427013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427014   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1427015   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1427016   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1427017   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1427018   +   end;
MPRINT(EM_DIAGRAM):   end;
1427019   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427020   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1427021   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1427022   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1427023   +   end;
MPRINT(EM_DIAGRAM):   end;
1427024   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427025   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1427026   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1427027   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1427028   +   end;
MPRINT(EM_DIAGRAM):   end;
1427029   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1427030   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1427031   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1427032   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1427033   +   end;
MPRINT(EM_DIAGRAM):   end;
1427034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427035   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1427036   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1427037   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1427038   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427039   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427040   +   end;
MPRINT(EM_DIAGRAM):   end;
1427041   +end;
MPRINT(EM_DIAGRAM):   end;
1427042   +
1427043   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1427044   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1427045   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1427046   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1427047   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1427048   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1427049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427051   +end;
MPRINT(EM_DIAGRAM):   end;
1427052   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427054   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1427055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427056   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1427057   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1427058   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1427059   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1427060   +   end;
MPRINT(EM_DIAGRAM):   end;
1427061   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1427062   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1427063   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1427064   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1427065   +   end;
MPRINT(EM_DIAGRAM):   end;
1427066   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427067   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1427068   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1427069   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1427070   +   end;
MPRINT(EM_DIAGRAM):   end;
1427071   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427072   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1427073   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1427074   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1427075   +   end;
MPRINT(EM_DIAGRAM):   end;
1427076   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427077   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1427078   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1427079   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1427080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427082   +   end;
MPRINT(EM_DIAGRAM):   end;
1427083   +end;
MPRINT(EM_DIAGRAM):   end;
1427084   +
1427085   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1427086   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1427087   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1427088   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1427089   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1427090   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1427091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427093   +end;
MPRINT(EM_DIAGRAM):   end;
1427094   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427095   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427096   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1427097   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427098   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1427099   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1427100   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1427101   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1427102   +   end;
MPRINT(EM_DIAGRAM):   end;
1427103   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427104   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1427105   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1427106   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1427107   +   end;
MPRINT(EM_DIAGRAM):   end;
1427108   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1427109   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1427110   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1427111   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1427112   +   end;
MPRINT(EM_DIAGRAM):   end;
1427113   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427114   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1427115   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1427116   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1427117   +   end;
MPRINT(EM_DIAGRAM):   end;
1427118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427119   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1427120   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1427121   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1427122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427124   +   end;
MPRINT(EM_DIAGRAM):   end;
1427125   +end;
MPRINT(EM_DIAGRAM):   end;
1427126   +
1427127   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1427128   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1427129   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1427130   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1427131   +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
1427132   +end;
MPRINT(EM_DIAGRAM):   end;
1427133   +
1427134   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1427135   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1427136   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1427137   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1427138   +
1427139   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1427140   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1427141   +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
1427142   +
1427143   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1427144   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1427145   +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
1427146   +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
1427147   +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
1427148   +
1427149   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1427150   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1427151   +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
1427152   +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
1427153   +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
1427154   +
1427155   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1427156   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1427157   +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
1427158   +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
1427159   +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
1427160   +
1427161   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1427162   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1427163   +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
1427164   +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
1427165   +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
1427166   +
1427167   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1427168   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1427169   +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
1427170   +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
1427171   +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
1427172   +
1427173   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1427174   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1427175   +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
1427176   +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
1427177   +
1427178   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1427179   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1427180   +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
1427181   +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
1427182   +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
1427183   +
1427184   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1427185   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1427186   +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
1427187   +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
1427188   +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
1427189   +
1427190   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1427191   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1427192   +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
1427193   +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
1427194   +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
1427195   +
1427196   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1427197   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1427198   +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
1427199   +
1427200   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1427201   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1427202   +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
1427203   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1427204   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1427205   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1427206   +end;
MPRINT(EM_DIAGRAM):   end;
1427207   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1427208   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1427209   +
1427210   +REG3DR1:
1427211   +
1427212   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
1427213   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1427214   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1427215   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1427216   +end;
MPRINT(EM_DIAGRAM):   end;
1427217   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427218   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1427219   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1427220   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1427221   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1427222   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1427223   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1427224   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1427225   +   end;
MPRINT(EM_DIAGRAM):   end;
1427226   +end;
MPRINT(EM_DIAGRAM):   end;
1427227   +
1427228   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1427229   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1427230   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1427231   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1427232   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1427233   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1427234   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1427235   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1427236   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1427237   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1427238   +end;
MPRINT(EM_DIAGRAM):   end;
1427239   +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
1427240   +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
1427241   +
1427242   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1427243   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1427244   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1427245   +* Renaming variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg3;
1427246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1427247   +* Renaming Posterior variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg3;
1427248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1427249   +drop Reg3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar1;
1427250   +Reg3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar1 = P_DepVar1;
1427251   +drop Reg3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar0;
1427252   +Reg3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar0 = P_DepVar0;
1427253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1427254   +* Renaming _WARN_ variable for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg3;
1427255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1427256   +length Reg3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg3_WARN_ $4;
1427257   +drop Reg3_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg3_WARN_;
1427258   +Reg3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg3_WARN_ = _WARN_;
1427259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1427260   +* Ensmbl17: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring Code of model 2 of 5;
1427261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1427262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1427263   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1427264   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1427265   +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
1427266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1427267   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1427268   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1427269   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1427270   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1427271   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1427272   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1427273   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1427274   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1427275   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1427276   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1427277   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1427278   +LENGTH _WARN_ $4
1427279   +      F_DepVar  $ 12
1427280   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1427281   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1427282   +
1427283   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1427284   +
1427285   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1427286   +
1427287   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1427288   +
1427289   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1427290   +
1427291   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1427292   +
1427293   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1427294   +
1427295   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1427296   +
1427297   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1427298   +
1427299   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1427300   +
1427301   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1427302   +
1427303   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1427304   +
1427305   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1427306   +
1427307   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1427308   +
1427309   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1427310   +
1427311   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1427312   +
1427313   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1427314   +
1427315   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1427316   +
1427317   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1427318   +
1427319   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1427320   +
1427321   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1427322   +
1427323   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1427324   +
1427325   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1427326   +
1427327   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1427328   +
1427329   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1427330   +
1427331   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1427332   +
1427333   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1427334   +
1427335   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1427336   +
1427337   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1427338   +
1427339   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1427340   +
1427341   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1427342   +
1427343   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1427344   +
1427345   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1427346   +
1427347   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1427348   +
1427349   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1427350   +
1427351   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1427352   +
1427353   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1427354   +
1427355   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1427356   +
1427357   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1427358   +
1427359   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1427360   +
1427361   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1427362   +
1427363   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1427364   +
1427365   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1427366   +
1427367   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1427368   +
1427369   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1427370   +
1427371   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1427372   +
1427373   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1427374   +
1427375   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1427376   +
1427377   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1427378   +
1427379   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1427380   +
1427381   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1427382   +
1427383   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1427384   +
1427385   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1427386   +
1427387   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1427388   +
1427389   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1427390   +
1427391   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1427392   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1427393   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1427394   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1427395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427397   +end;
MPRINT(EM_DIAGRAM):   end;
1427398   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427399   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427400   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1427401   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427402   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1427403   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1427404   +   end;
MPRINT(EM_DIAGRAM):   end;
1427405   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1427406   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1427407   +   end;
MPRINT(EM_DIAGRAM):   end;
1427408   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427409   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1427410   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427411   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427412   +   end;
MPRINT(EM_DIAGRAM):   end;
1427413   +end;
MPRINT(EM_DIAGRAM):   end;
1427414   +
1427415   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1427416   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1427417   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1427418   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1427419   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1427420   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1427421   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427422   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427423   +end;
MPRINT(EM_DIAGRAM):   end;
1427424   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427425   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427426   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1427427   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427428   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1427429   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1427430   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1427431   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1427432   +   end;
MPRINT(EM_DIAGRAM):   end;
1427433   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1427434   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1427435   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1427436   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1427437   +   end;
MPRINT(EM_DIAGRAM):   end;
1427438   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427439   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1427440   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1427441   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1427442   +   end;
MPRINT(EM_DIAGRAM):   end;
1427443   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427444   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1427445   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1427446   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1427447   +   end;
MPRINT(EM_DIAGRAM):   end;
1427448   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427449   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1427450   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1427451   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1427452   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427453   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427454   +   end;
MPRINT(EM_DIAGRAM):   end;
1427455   +end;
MPRINT(EM_DIAGRAM):   end;
1427456   +
1427457   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1427458   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1427459   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1427460   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1427461   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1427462   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1427463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427465   +end;
MPRINT(EM_DIAGRAM):   end;
1427466   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427467   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427468   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1427469   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427470   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1427471   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1427472   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1427473   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1427474   +   end;
MPRINT(EM_DIAGRAM):   end;
1427475   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427476   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1427477   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1427478   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1427479   +   end;
MPRINT(EM_DIAGRAM):   end;
1427480   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1427481   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1427482   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1427483   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1427484   +   end;
MPRINT(EM_DIAGRAM):   end;
1427485   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427486   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1427487   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1427488   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1427489   +   end;
MPRINT(EM_DIAGRAM):   end;
1427490   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427491   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1427492   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1427493   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1427494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427496   +   end;
MPRINT(EM_DIAGRAM):   end;
1427497   +end;
MPRINT(EM_DIAGRAM):   end;
1427498   +
1427499   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1427500   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1427501   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1427502   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1427503   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1427504   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1427505   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427506   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427507   +end;
MPRINT(EM_DIAGRAM):   end;
1427508   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427509   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427510   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1427511   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427512   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1427513   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1427514   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1427515   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1427516   +   end;
MPRINT(EM_DIAGRAM):   end;
1427517   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1427518   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1427519   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1427520   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1427521   +   end;
MPRINT(EM_DIAGRAM):   end;
1427522   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427523   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1427524   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1427525   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1427526   +   end;
MPRINT(EM_DIAGRAM):   end;
1427527   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427528   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1427529   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1427530   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1427531   +   end;
MPRINT(EM_DIAGRAM):   end;
1427532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427533   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1427534   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1427535   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1427536   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427537   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427538   +   end;
MPRINT(EM_DIAGRAM):   end;
1427539   +end;
MPRINT(EM_DIAGRAM):   end;
1427540   +
1427541   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1427542   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1427543   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1427544   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1427545   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1427546   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1427547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427549   +end;
MPRINT(EM_DIAGRAM):   end;
1427550   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427551   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427552   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1427553   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427554   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1427555   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1427556   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1427557   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1427558   +   end;
MPRINT(EM_DIAGRAM):   end;
1427559   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1427560   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1427561   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1427562   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1427563   +   end;
MPRINT(EM_DIAGRAM):   end;
1427564   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427565   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1427566   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1427567   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1427568   +   end;
MPRINT(EM_DIAGRAM):   end;
1427569   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427570   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1427571   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1427572   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1427573   +   end;
MPRINT(EM_DIAGRAM):   end;
1427574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427575   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1427576   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1427577   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1427578   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427579   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427580   +   end;
MPRINT(EM_DIAGRAM):   end;
1427581   +end;
MPRINT(EM_DIAGRAM):   end;
1427582   +
1427583   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1427584   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1427585   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1427586   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1427587   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1427588   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1427589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427591   +end;
MPRINT(EM_DIAGRAM):   end;
1427592   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427593   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427594   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1427595   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427596   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1427597   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1427598   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1427599   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1427600   +   end;
MPRINT(EM_DIAGRAM):   end;
1427601   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427602   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1427603   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1427604   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1427605   +   end;
MPRINT(EM_DIAGRAM):   end;
1427606   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1427607   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1427608   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1427609   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1427610   +   end;
MPRINT(EM_DIAGRAM):   end;
1427611   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427612   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1427613   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1427614   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1427615   +   end;
MPRINT(EM_DIAGRAM):   end;
1427616   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427617   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1427618   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1427619   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1427620   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427621   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427622   +   end;
MPRINT(EM_DIAGRAM):   end;
1427623   +end;
MPRINT(EM_DIAGRAM):   end;
1427624   +
1427625   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1427626   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1427627   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1427628   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1427629   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1427630   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1427631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427633   +end;
MPRINT(EM_DIAGRAM):   end;
1427634   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427635   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427636   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1427637   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427638   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1427639   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1427640   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1427641   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1427642   +   end;
MPRINT(EM_DIAGRAM):   end;
1427643   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427644   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1427645   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1427646   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1427647   +   end;
MPRINT(EM_DIAGRAM):   end;
1427648   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1427649   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1427650   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1427651   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1427652   +   end;
MPRINT(EM_DIAGRAM):   end;
1427653   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427654   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1427655   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1427656   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1427657   +   end;
MPRINT(EM_DIAGRAM):   end;
1427658   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427659   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1427660   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1427661   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1427662   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427663   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427664   +   end;
MPRINT(EM_DIAGRAM):   end;
1427665   +end;
MPRINT(EM_DIAGRAM):   end;
1427666   +
1427667   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1427668   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1427669   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1427670   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1427671   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1427672   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1427673   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427674   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427675   +end;
MPRINT(EM_DIAGRAM):   end;
1427676   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427677   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427678   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1427679   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427680   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1427681   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1427682   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1427683   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1427684   +   end;
MPRINT(EM_DIAGRAM):   end;
1427685   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1427686   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1427687   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1427688   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1427689   +   end;
MPRINT(EM_DIAGRAM):   end;
1427690   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427691   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1427692   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1427693   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1427694   +   end;
MPRINT(EM_DIAGRAM):   end;
1427695   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427696   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1427697   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1427698   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1427699   +   end;
MPRINT(EM_DIAGRAM):   end;
1427700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427701   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1427702   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1427703   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1427704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427706   +   end;
MPRINT(EM_DIAGRAM):   end;
1427707   +end;
MPRINT(EM_DIAGRAM):   end;
1427708   +
1427709   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1427710   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1427711   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1427712   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1427713   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1427714   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427715   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427716   +end;
MPRINT(EM_DIAGRAM):   end;
1427717   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427718   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427719   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1427720   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427721   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1427722   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1427723   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1427724   +   end;
MPRINT(EM_DIAGRAM):   end;
1427725   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1427726   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1427727   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1427728   +   end;
MPRINT(EM_DIAGRAM):   end;
1427729   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427730   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1427731   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1427732   +   end;
MPRINT(EM_DIAGRAM):   end;
1427733   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427734   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1427735   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1427736   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427737   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427738   +   end;
MPRINT(EM_DIAGRAM):   end;
1427739   +end;
MPRINT(EM_DIAGRAM):   end;
1427740   +
1427741   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1427742   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1427743   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1427744   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1427745   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1427746   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1427747   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427749   +end;
MPRINT(EM_DIAGRAM):   end;
1427750   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427751   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427752   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1427753   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427754   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1427755   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1427756   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1427757   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1427758   +   end;
MPRINT(EM_DIAGRAM):   end;
1427759   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427760   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1427761   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1427762   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1427763   +   end;
MPRINT(EM_DIAGRAM):   end;
1427764   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427765   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1427766   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1427767   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1427768   +   end;
MPRINT(EM_DIAGRAM):   end;
1427769   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1427770   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1427771   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1427772   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1427773   +   end;
MPRINT(EM_DIAGRAM):   end;
1427774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427775   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1427776   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1427777   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1427778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427780   +   end;
MPRINT(EM_DIAGRAM):   end;
1427781   +end;
MPRINT(EM_DIAGRAM):   end;
1427782   +
1427783   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1427784   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1427785   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1427786   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1427787   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1427788   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1427789   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427790   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427791   +end;
MPRINT(EM_DIAGRAM):   end;
1427792   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427793   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427794   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1427795   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427796   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1427797   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1427798   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1427799   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1427800   +   end;
MPRINT(EM_DIAGRAM):   end;
1427801   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1427802   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1427803   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1427804   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1427805   +   end;
MPRINT(EM_DIAGRAM):   end;
1427806   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427807   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1427808   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1427809   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1427810   +   end;
MPRINT(EM_DIAGRAM):   end;
1427811   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427812   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1427813   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1427814   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1427815   +   end;
MPRINT(EM_DIAGRAM):   end;
1427816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427817   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1427818   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1427819   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1427820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427822   +   end;
MPRINT(EM_DIAGRAM):   end;
1427823   +end;
MPRINT(EM_DIAGRAM):   end;
1427824   +
1427825   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1427826   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1427827   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1427828   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1427829   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1427830   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1427831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427833   +end;
MPRINT(EM_DIAGRAM):   end;
1427834   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427836   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1427837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427838   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1427839   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1427840   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1427841   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1427842   +   end;
MPRINT(EM_DIAGRAM):   end;
1427843   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1427844   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1427845   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1427846   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1427847   +   end;
MPRINT(EM_DIAGRAM):   end;
1427848   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1427849   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1427850   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1427851   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1427852   +   end;
MPRINT(EM_DIAGRAM):   end;
1427853   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427854   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1427855   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1427856   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1427857   +   end;
MPRINT(EM_DIAGRAM):   end;
1427858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427859   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1427860   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1427861   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1427862   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427863   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427864   +   end;
MPRINT(EM_DIAGRAM):   end;
1427865   +end;
MPRINT(EM_DIAGRAM):   end;
1427866   +
1427867   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1427868   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1427869   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1427870   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1427871   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1427872   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1427873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427875   +end;
MPRINT(EM_DIAGRAM):   end;
1427876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427878   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1427879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427880   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1427881   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1427882   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1427883   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1427884   +   end;
MPRINT(EM_DIAGRAM):   end;
1427885   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1427886   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1427887   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1427888   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1427889   +   end;
MPRINT(EM_DIAGRAM):   end;
1427890   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427891   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1427892   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1427893   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1427894   +   end;
MPRINT(EM_DIAGRAM):   end;
1427895   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427896   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1427897   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1427898   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1427899   +   end;
MPRINT(EM_DIAGRAM):   end;
1427900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427901   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1427902   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1427903   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1427904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427906   +   end;
MPRINT(EM_DIAGRAM):   end;
1427907   +end;
MPRINT(EM_DIAGRAM):   end;
1427908   +
1427909   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1427910   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1427911   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1427912   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1427913   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1427914   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1427915   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1427916   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427917   +end;
MPRINT(EM_DIAGRAM):   end;
1427918   +else do;
MPRINT(EM_DIAGRAM):   else do;
1427919   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1427920   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1427921   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1427922   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1427923   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1427924   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1427925   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1427926   +   end;
MPRINT(EM_DIAGRAM):   end;
1427927   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1427928   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1427929   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1427930   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1427931   +   end;
MPRINT(EM_DIAGRAM):   end;
1427932   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1427933   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1427934   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1427935   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1427936   +   end;
MPRINT(EM_DIAGRAM):   end;
1427937   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1427938   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1427939   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1427940   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1427941   +   end;
MPRINT(EM_DIAGRAM):   end;
1427942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1427943   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1427944   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1427945   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1427946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1427947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427948   +   end;
MPRINT(EM_DIAGRAM):   end;
1427949   +end;
MPRINT(EM_DIAGRAM):   end;
1427950   +
1427951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1427952   +*** Checking missing input Interval
1427953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1427954   +
1427955   +IF NMISS(
1427956   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1427957   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1427958   +
1427959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1427960   +END;
MPRINT(EM_DIAGRAM):   END;
1427961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1427962   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1427963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1427964   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1427965   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1427966   +END;
MPRINT(EM_DIAGRAM):   END;
1427967   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1427968   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1427969   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1427970   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1427971   +END;
MPRINT(EM_DIAGRAM):   END;
1427972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1427973   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1427974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1427975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1427976   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1427977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1427978   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1427979   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1427980   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1427981   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1427982   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1427983   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1427984   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1427985   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1427986   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1427987   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1427988   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1427989   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1427990   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1427991   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1427992   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1427993   +          +    -0.04697385312971 * GRP_MntFishProducts3
1427994   +          +     0.05477300056491 * GRP_MntFishProducts4
1427995   +          +    -0.21182877070793 * GRP_MntGoldProds2
1427996   +          +    -0.06202001203906 * GRP_MntGoldProds3
1427997   +          +    -0.23297283739715 * GRP_MntGoldProds4
1427998   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1427999   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1428000   +          +     0.01711044358319 * GRP_MntMeatProducts4
1428001   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1428002   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1428003   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1428004   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1428005   +          +     0.11565917560156 * GRP_NumDistPurchases2
1428006   +          +      0.1678532898895 * GRP_NumDistPurchases3
1428007   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1428008   +          +     0.09970745707934 * GRP_NumWebPurchases2
1428009   +          +     0.02961221360107 * GRP_NumWebPurchases3
1428010   +          +     0.02261054892411 * GRP_NumWebPurchases4
1428011   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1428012   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1428013   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1428014   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1428015   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1428016   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 * 
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 * 
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 + 
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 + 
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 + 
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 + 
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 + 
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 + 
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741 
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 * 
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 * 
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 * 
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 * 
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 * 
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 + 
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 * 
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 + 
-0.07522056103469 * GRP_Recency4 ;
1428017   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1428018   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1428019   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1428020   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1428021   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1428022   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1428023   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1428024   +          +     0.26645530981311 * GRP_MntFishProducts3
1428025   +          +    -0.17631072283513 * GRP_MntFishProducts4
1428026   +          +    -0.35439521021691 * GRP_MntGoldProds2
1428027   +          +     0.11419663880206 * GRP_MntGoldProds3
1428028   +          +     0.07288749113866 * GRP_MntGoldProds4
1428029   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1428030   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1428031   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1428032   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1428033   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1428034   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1428035   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1428036   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1428037   +          +     0.10139595392447 * GRP_NumDistPurchases3
1428038   +          +     0.05251891244468 * GRP_NumDistPurchases4
1428039   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1428040   +          +      0.0263831646971 * GRP_NumWebPurchases3
1428041   +          +     0.26495059708503 * GRP_NumWebPurchases4
1428042   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1428043   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1428044   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1428045   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1428046   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1428047   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 * 
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 * 
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 + 
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 + 
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 + 
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 + 
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 + 
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 + 
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123 
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 * 
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 * 
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 * 
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 * 
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 * 
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 + 
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 * 
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 + 
-0.4970729472837 * GRP_Recency4 ;
1428048   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1428049   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1428050   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1428051   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1428052   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1428053   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1428054   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1428055   +          +     0.02714802509094 * GRP_MntFishProducts3
1428056   +          +     0.27119078554613 * GRP_MntFishProducts4
1428057   +          +     0.19322428614339 * GRP_MntGoldProds2
1428058   +          +     0.34778546410632 * GRP_MntGoldProds3
1428059   +          +    -0.06570146779096 * GRP_MntGoldProds4
1428060   +          +     0.44935275650977 * GRP_MntMeatProducts2
1428061   +          +     0.00805794344265 * GRP_MntMeatProducts3
1428062   +          +     0.02445782833023 * GRP_MntMeatProducts4
1428063   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1428064   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1428065   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1428066   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1428067   +          +     0.03481806823908 * GRP_NumDistPurchases2
1428068   +          +      0.0546202479864 * GRP_NumDistPurchases3
1428069   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1428070   +          +     0.28307550964921 * GRP_NumWebPurchases2
1428071   +          +     0.31503543231591 * GRP_NumWebPurchases3
1428072   +          +     0.24817135719308 * GRP_NumWebPurchases4
1428073   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1428074   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1428075   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1428076   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1428077   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1428078   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 * 
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 * 
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 + 
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 + 
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 + 
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 + 
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 + 
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 + 
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 + 
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 * 
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 * 
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 * 
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 * 
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 * 
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 + 
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 * 
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 + 
0.05823801065489 * GRP_Recency4 ;
1428079   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1428080   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1428081   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1428082   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1428083   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1428084   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1428085   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1428086   +          +    -0.08997232581072 * GRP_MntFishProducts3
1428087   +          +    -0.05669599356928 * GRP_MntFishProducts4
1428088   +          +      0.2199150131909 * GRP_MntGoldProds2
1428089   +          +     0.05584571259838 * GRP_MntGoldProds3
1428090   +          +    -0.13160142309505 * GRP_MntGoldProds4
1428091   +          +      0.2539849640816 * GRP_MntMeatProducts2
1428092   +          +     0.29448191059312 * GRP_MntMeatProducts3
1428093   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1428094   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1428095   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1428096   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1428097   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1428098   +          +     0.38206153529506 * GRP_NumDistPurchases2
1428099   +          +     0.08642998303162 * GRP_NumDistPurchases3
1428100   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1428101   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1428102   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1428103   +          +     0.23030028338396 * GRP_NumWebPurchases4
1428104   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1428105   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1428106   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1428107   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1428108   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1428109   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 * 
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 * 
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 + 
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 + 
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 + 
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 + 
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816 
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 * 
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 + 
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 + 
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 + 
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 + 
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 + 
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062 
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 + 
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 * 
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1428110   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1428111   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1428112   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1428113   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1428114   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1428115   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1428116   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1428117   +          +    -0.04439366722112 * GRP_MntFishProducts3
1428118   +          +    -0.22939355735301 * GRP_MntFishProducts4
1428119   +          +    -0.00367144103801 * GRP_MntGoldProds2
1428120   +          +      -0.033315128385 * GRP_MntGoldProds3
1428121   +          +     0.10655545066126 * GRP_MntGoldProds4
1428122   +          +     0.04927093675686 * GRP_MntMeatProducts2
1428123   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1428124   +          +     0.29394273234417 * GRP_MntMeatProducts4
1428125   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1428126   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1428127   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1428128   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1428129   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1428130   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1428131   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1428132   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1428133   +          +     0.37113277513001 * GRP_NumWebPurchases3
1428134   +          +     0.05720653023952 * GRP_NumWebPurchases4
1428135   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1428136   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1428137   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1428138   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1428139   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1428140   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 * 
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 * 
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 + 
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 + 
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 + 
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 + 
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686 
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 * 
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 + 
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 + 
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 + 
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 + 
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 + 
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842 
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 + 
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 * 
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1428141   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1428142   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1428143   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1428144   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1428145   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1428146   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1428147   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1428148   +          +     0.04340555393469 * GRP_MntFishProducts3
1428149   +          +    -0.20048219926361 * GRP_MntFishProducts4
1428150   +          +     0.16101452165456 * GRP_MntGoldProds2
1428151   +          +    -0.04467647211336 * GRP_MntGoldProds3
1428152   +          +     0.32142013598241 * GRP_MntGoldProds4
1428153   +          +     0.29741565154233 * GRP_MntMeatProducts2
1428154   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1428155   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1428156   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1428157   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1428158   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1428159   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1428160   +          +     0.36107050137299 * GRP_NumDistPurchases2
1428161   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1428162   +          +     0.10557004956787 * GRP_NumDistPurchases4
1428163   +          +     0.04608069099876 * GRP_NumWebPurchases2
1428164   +          +     0.15561947954396 * GRP_NumWebPurchases3
1428165   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1428166   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1428167   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1428168   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1428169   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1428170   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1428171   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 * 
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 * 
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 + 
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 + 
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 + 
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 + 
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 + 
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 + 
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 + 
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 * 
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 * 
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 * 
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 * 
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 * 
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 + 
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 * 
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 + 
-0.0282277663071 * GRP_Recency4 ;
1428172   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1428173   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1428174   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1428175   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1428176   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1428177   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1428178   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1428179   +          +    -0.20032703571491 * GRP_MntFishProducts3
1428180   +          +    -0.08348811352746 * GRP_MntFishProducts4
1428181   +          +    -0.00744131870881 * GRP_MntGoldProds2
1428182   +          +    -0.27347309859096 * GRP_MntGoldProds3
1428183   +          +    -0.04458870469416 * GRP_MntGoldProds4
1428184   +          +     0.17538261434498 * GRP_MntMeatProducts2
1428185   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1428186   +          +     0.03113249898233 * GRP_MntMeatProducts4
1428187   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1428188   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1428189   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1428190   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1428191   +          +     0.20540014620209 * GRP_NumDistPurchases2
1428192   +          +     0.17744784873298 * GRP_NumDistPurchases3
1428193   +          +      -0.003486430833 * GRP_NumDistPurchases4
1428194   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1428195   +          +     0.07245829152192 * GRP_NumWebPurchases3
1428196   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1428197   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1428198   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1428199   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1428200   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1428201   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1428202   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 * 
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 * 
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 + 
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 + 
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 + 
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 + 
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 + 
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 + 
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 + 
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 * 
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 * 
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 * 
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 * 
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 * 
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 + 
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 * 
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 + 
-0.0157357289132 * GRP_Recency4 ;
1428203   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1428204   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1428205   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1428206   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1428207   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1428208   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1428209   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1428210   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1428211   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1428212   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1428213   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1428214   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1428215   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1428216   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1428217   +END;
MPRINT(EM_DIAGRAM):   END;
1428218   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1428219   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1428220   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1428221   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1428222   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1428223   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1428224   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1428225   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1428226   +END;
MPRINT(EM_DIAGRAM):   END;
1428227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1428228   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1428229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1428230   +
1428231   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1428232   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1428233   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1428234   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1428235   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1428236   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428237   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1428238   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1428239   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1428240   +end;
MPRINT(EM_DIAGRAM):   end;
1428241   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428242   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1428243   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1428244   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1428245   +   end;
MPRINT(EM_DIAGRAM):   end;
1428246   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1428247   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1428248   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1428249   +   end;
MPRINT(EM_DIAGRAM):   end;
1428250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428251   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1428252   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1428253   +   end;
MPRINT(EM_DIAGRAM):   end;
1428254   +end;
MPRINT(EM_DIAGRAM):   end;
1428255   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1428256   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1428257   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1428258   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1428259   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 + 
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746 
* H16 + -0.29329090231091 * H17 ;
1428260   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1428261   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1428262   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1428263   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1428264   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1428265   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1428266   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1428267   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1428268   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1428269   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1428270   +END;
MPRINT(EM_DIAGRAM):   END;
1428271   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1428272   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1428273   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1428274   +END;
MPRINT(EM_DIAGRAM):   END;
1428275   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1428276   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1428277   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1428278   +END;
MPRINT(EM_DIAGRAM):   END;
1428279   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1428280   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1428281   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1428282   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1428283   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1428284   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1428285   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1428286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1428287   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1428288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1428289   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1428290   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1428291   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1428292   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1428293   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1428294   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1428295   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1428296   +END;
MPRINT(EM_DIAGRAM):   END;
1428297   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1428298   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1428299   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1428300   +drop
1428301   +H11
1428302   +H12
1428303   +H13
1428304   +H14
1428305   +H15
1428306   +H16
1428307   +H17
1428308   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1428309   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1428310   +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
1428311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1428312   +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
1428313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1428314   +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
1428315   +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
1428316   +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
1428317   +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
1428318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1428319   +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
1428320   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1428321   +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
1428322   +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
1428323   +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
1428324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1428325   +* Ensmbl17: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring Code of model 3 of 5;
1428326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1428327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1428328   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1428329   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1428330   +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
1428331   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1428332   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1428333   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1428334   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1428335   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1428336   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1428337   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1428338   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1428339   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1428340   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1428341   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1428342   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1428343   +LENGTH _WARN_ $4
1428344   +      F_DepVar  $ 12
1428345   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1428346   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1428347   +
1428348   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1428349   +
1428350   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1428351   +
1428352   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1428353   +
1428354   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1428355   +
1428356   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1428357   +
1428358   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1428359   +
1428360   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1428361   +
1428362   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1428363   +
1428364   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1428365   +
1428366   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1428367   +
1428368   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1428369   +
1428370   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1428371   +
1428372   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1428373   +
1428374   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1428375   +
1428376   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1428377   +
1428378   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1428379   +
1428380   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1428381   +
1428382   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1428383   +
1428384   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1428385   +
1428386   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1428387   +
1428388   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1428389   +
1428390   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1428391   +
1428392   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1428393   +
1428394   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1428395   +
1428396   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1428397   +
1428398   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1428399   +
1428400   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1428401   +
1428402   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1428403   +
1428404   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1428405   +
1428406   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1428407   +
1428408   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1428409   +
1428410   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1428411   +
1428412   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1428413   +
1428414   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1428415   +
1428416   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1428417   +
1428418   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1428419   +
1428420   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1428421   +
1428422   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1428423   +
1428424   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1428425   +
1428426   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1428427   +
1428428   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1428429   +
1428430   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1428431   +
1428432   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1428433   +
1428434   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1428435   +
1428436   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1428437   +
1428438   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1428439   +
1428440   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1428441   +
1428442   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1428443   +
1428444   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1428445   +
1428446   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1428447   +
1428448   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1428449   +
1428450   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1428451   +
1428452   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1428453   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1428454   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1428455   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1428456   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428457   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428458   +end;
MPRINT(EM_DIAGRAM):   end;
1428459   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428460   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428461   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1428462   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428463   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1428464   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1428465   +   end;
MPRINT(EM_DIAGRAM):   end;
1428466   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1428467   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1428468   +   end;
MPRINT(EM_DIAGRAM):   end;
1428469   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428470   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1428471   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428472   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428473   +   end;
MPRINT(EM_DIAGRAM):   end;
1428474   +end;
MPRINT(EM_DIAGRAM):   end;
1428475   +
1428476   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1428477   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1428478   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1428479   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1428480   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1428481   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1428482   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428484   +end;
MPRINT(EM_DIAGRAM):   end;
1428485   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428486   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428487   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1428488   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428489   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1428490   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1428491   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1428492   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1428493   +   end;
MPRINT(EM_DIAGRAM):   end;
1428494   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1428495   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1428496   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1428497   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1428498   +   end;
MPRINT(EM_DIAGRAM):   end;
1428499   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428500   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1428501   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1428502   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1428503   +   end;
MPRINT(EM_DIAGRAM):   end;
1428504   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428505   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1428506   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1428507   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1428508   +   end;
MPRINT(EM_DIAGRAM):   end;
1428509   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428510   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1428511   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1428512   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1428513   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428514   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428515   +   end;
MPRINT(EM_DIAGRAM):   end;
1428516   +end;
MPRINT(EM_DIAGRAM):   end;
1428517   +
1428518   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1428519   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1428520   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1428521   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1428522   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1428523   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1428524   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428526   +end;
MPRINT(EM_DIAGRAM):   end;
1428527   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428528   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428529   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1428530   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428531   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1428532   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1428533   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1428534   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1428535   +   end;
MPRINT(EM_DIAGRAM):   end;
1428536   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428537   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1428538   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1428539   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1428540   +   end;
MPRINT(EM_DIAGRAM):   end;
1428541   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1428542   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1428543   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1428544   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1428545   +   end;
MPRINT(EM_DIAGRAM):   end;
1428546   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428547   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1428548   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1428549   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1428550   +   end;
MPRINT(EM_DIAGRAM):   end;
1428551   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428552   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1428553   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1428554   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1428555   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428556   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428557   +   end;
MPRINT(EM_DIAGRAM):   end;
1428558   +end;
MPRINT(EM_DIAGRAM):   end;
1428559   +
1428560   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1428561   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1428562   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1428563   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1428564   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1428565   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1428566   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428567   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428568   +end;
MPRINT(EM_DIAGRAM):   end;
1428569   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428570   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428571   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1428572   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428573   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1428574   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1428575   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1428576   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1428577   +   end;
MPRINT(EM_DIAGRAM):   end;
1428578   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1428579   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1428580   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1428581   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1428582   +   end;
MPRINT(EM_DIAGRAM):   end;
1428583   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428584   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1428585   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1428586   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1428587   +   end;
MPRINT(EM_DIAGRAM):   end;
1428588   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428589   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1428590   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1428591   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1428592   +   end;
MPRINT(EM_DIAGRAM):   end;
1428593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428594   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1428595   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1428596   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1428597   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428598   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428599   +   end;
MPRINT(EM_DIAGRAM):   end;
1428600   +end;
MPRINT(EM_DIAGRAM):   end;
1428601   +
1428602   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1428603   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1428604   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1428605   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1428606   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1428607   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1428608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428610   +end;
MPRINT(EM_DIAGRAM):   end;
1428611   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428613   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1428614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428615   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1428616   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1428617   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1428618   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1428619   +   end;
MPRINT(EM_DIAGRAM):   end;
1428620   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1428621   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1428622   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1428623   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1428624   +   end;
MPRINT(EM_DIAGRAM):   end;
1428625   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428626   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1428627   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1428628   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1428629   +   end;
MPRINT(EM_DIAGRAM):   end;
1428630   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428631   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1428632   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1428633   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1428634   +   end;
MPRINT(EM_DIAGRAM):   end;
1428635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428636   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1428637   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1428638   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1428639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428641   +   end;
MPRINT(EM_DIAGRAM):   end;
1428642   +end;
MPRINT(EM_DIAGRAM):   end;
1428643   +
1428644   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1428645   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1428646   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1428647   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1428648   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1428649   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1428650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428652   +end;
MPRINT(EM_DIAGRAM):   end;
1428653   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428655   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1428656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428657   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1428658   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1428659   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1428660   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1428661   +   end;
MPRINT(EM_DIAGRAM):   end;
1428662   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428663   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1428664   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1428665   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1428666   +   end;
MPRINT(EM_DIAGRAM):   end;
1428667   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1428668   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1428669   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1428670   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1428671   +   end;
MPRINT(EM_DIAGRAM):   end;
1428672   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428673   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1428674   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1428675   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1428676   +   end;
MPRINT(EM_DIAGRAM):   end;
1428677   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428678   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1428679   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1428680   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1428681   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428682   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428683   +   end;
MPRINT(EM_DIAGRAM):   end;
1428684   +end;
MPRINT(EM_DIAGRAM):   end;
1428685   +
1428686   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1428687   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1428688   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1428689   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1428690   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1428691   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1428692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428694   +end;
MPRINT(EM_DIAGRAM):   end;
1428695   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428697   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1428698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428699   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1428700   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1428701   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1428702   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1428703   +   end;
MPRINT(EM_DIAGRAM):   end;
1428704   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428705   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1428706   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1428707   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1428708   +   end;
MPRINT(EM_DIAGRAM):   end;
1428709   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1428710   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1428711   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1428712   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1428713   +   end;
MPRINT(EM_DIAGRAM):   end;
1428714   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428715   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1428716   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1428717   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1428718   +   end;
MPRINT(EM_DIAGRAM):   end;
1428719   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428720   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1428721   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1428722   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1428723   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428724   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428725   +   end;
MPRINT(EM_DIAGRAM):   end;
1428726   +end;
MPRINT(EM_DIAGRAM):   end;
1428727   +
1428728   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1428729   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1428730   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1428731   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1428732   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1428733   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1428734   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428736   +end;
MPRINT(EM_DIAGRAM):   end;
1428737   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428738   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428739   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1428740   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428741   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1428742   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1428743   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1428744   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1428745   +   end;
MPRINT(EM_DIAGRAM):   end;
1428746   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1428747   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1428748   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1428749   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1428750   +   end;
MPRINT(EM_DIAGRAM):   end;
1428751   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428752   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1428753   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1428754   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1428755   +   end;
MPRINT(EM_DIAGRAM):   end;
1428756   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428757   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1428758   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1428759   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1428760   +   end;
MPRINT(EM_DIAGRAM):   end;
1428761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428762   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1428763   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1428764   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1428765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428767   +   end;
MPRINT(EM_DIAGRAM):   end;
1428768   +end;
MPRINT(EM_DIAGRAM):   end;
1428769   +
1428770   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1428771   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1428772   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1428773   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1428774   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1428775   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428776   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428777   +end;
MPRINT(EM_DIAGRAM):   end;
1428778   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428779   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428780   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1428781   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428782   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1428783   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1428784   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1428785   +   end;
MPRINT(EM_DIAGRAM):   end;
1428786   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1428787   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1428788   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1428789   +   end;
MPRINT(EM_DIAGRAM):   end;
1428790   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428791   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1428792   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1428793   +   end;
MPRINT(EM_DIAGRAM):   end;
1428794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428795   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1428796   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1428797   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428798   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428799   +   end;
MPRINT(EM_DIAGRAM):   end;
1428800   +end;
MPRINT(EM_DIAGRAM):   end;
1428801   +
1428802   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1428803   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1428804   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1428805   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1428806   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1428807   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1428808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428810   +end;
MPRINT(EM_DIAGRAM):   end;
1428811   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428812   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428813   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1428814   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428815   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1428816   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1428817   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1428818   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1428819   +   end;
MPRINT(EM_DIAGRAM):   end;
1428820   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428821   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1428822   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1428823   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1428824   +   end;
MPRINT(EM_DIAGRAM):   end;
1428825   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428826   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1428827   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1428828   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1428829   +   end;
MPRINT(EM_DIAGRAM):   end;
1428830   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1428831   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1428832   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1428833   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1428834   +   end;
MPRINT(EM_DIAGRAM):   end;
1428835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428836   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1428837   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1428838   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1428839   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428840   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428841   +   end;
MPRINT(EM_DIAGRAM):   end;
1428842   +end;
MPRINT(EM_DIAGRAM):   end;
1428843   +
1428844   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1428845   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1428846   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1428847   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1428848   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1428849   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1428850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428852   +end;
MPRINT(EM_DIAGRAM):   end;
1428853   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428854   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428855   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1428856   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428857   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1428858   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1428859   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1428860   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1428861   +   end;
MPRINT(EM_DIAGRAM):   end;
1428862   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1428863   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1428864   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1428865   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1428866   +   end;
MPRINT(EM_DIAGRAM):   end;
1428867   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428868   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1428869   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1428870   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1428871   +   end;
MPRINT(EM_DIAGRAM):   end;
1428872   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428873   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1428874   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1428875   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1428876   +   end;
MPRINT(EM_DIAGRAM):   end;
1428877   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428878   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1428879   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1428880   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1428881   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428882   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428883   +   end;
MPRINT(EM_DIAGRAM):   end;
1428884   +end;
MPRINT(EM_DIAGRAM):   end;
1428885   +
1428886   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1428887   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1428888   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1428889   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1428890   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1428891   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1428892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428894   +end;
MPRINT(EM_DIAGRAM):   end;
1428895   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428896   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428897   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1428898   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428899   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1428900   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1428901   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1428902   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1428903   +   end;
MPRINT(EM_DIAGRAM):   end;
1428904   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1428905   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1428906   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1428907   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1428908   +   end;
MPRINT(EM_DIAGRAM):   end;
1428909   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1428910   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1428911   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1428912   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1428913   +   end;
MPRINT(EM_DIAGRAM):   end;
1428914   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428915   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1428916   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1428917   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1428918   +   end;
MPRINT(EM_DIAGRAM):   end;
1428919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428920   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1428921   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1428922   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1428923   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428924   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428925   +   end;
MPRINT(EM_DIAGRAM):   end;
1428926   +end;
MPRINT(EM_DIAGRAM):   end;
1428927   +
1428928   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1428929   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1428930   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1428931   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1428932   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1428933   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1428934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428936   +end;
MPRINT(EM_DIAGRAM):   end;
1428937   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428939   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1428940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428941   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1428942   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1428943   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1428944   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1428945   +   end;
MPRINT(EM_DIAGRAM):   end;
1428946   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1428947   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1428948   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1428949   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1428950   +   end;
MPRINT(EM_DIAGRAM):   end;
1428951   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428952   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1428953   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1428954   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1428955   +   end;
MPRINT(EM_DIAGRAM):   end;
1428956   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428957   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1428958   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1428959   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1428960   +   end;
MPRINT(EM_DIAGRAM):   end;
1428961   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1428962   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1428963   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1428964   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1428965   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1428966   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428967   +   end;
MPRINT(EM_DIAGRAM):   end;
1428968   +end;
MPRINT(EM_DIAGRAM):   end;
1428969   +
1428970   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1428971   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1428972   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1428973   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1428974   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1428975   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1428976   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1428977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1428978   +end;
MPRINT(EM_DIAGRAM):   end;
1428979   +else do;
MPRINT(EM_DIAGRAM):   else do;
1428980   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1428981   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1428982   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1428983   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1428984   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1428985   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1428986   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1428987   +   end;
MPRINT(EM_DIAGRAM):   end;
1428988   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1428989   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1428990   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1428991   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1428992   +   end;
MPRINT(EM_DIAGRAM):   end;
1428993   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1428994   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1428995   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1428996   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1428997   +   end;
MPRINT(EM_DIAGRAM):   end;
1428998   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1428999   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1429000   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1429001   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1429002   +   end;
MPRINT(EM_DIAGRAM):   end;
1429003   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429004   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1429005   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1429006   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1429007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429009   +   end;
MPRINT(EM_DIAGRAM):   end;
1429010   +end;
MPRINT(EM_DIAGRAM):   end;
1429011   +
1429012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429013   +*** Checking missing input Interval
1429014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1429015   +
1429016   +IF NMISS(
1429017   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1429018   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1429019   +
1429020   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429021   +END;
MPRINT(EM_DIAGRAM):   END;
1429022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429023   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1429024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429025   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1429026   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1429027   +END;
MPRINT(EM_DIAGRAM):   END;
1429028   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1429029   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1429030   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1429031   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1429032   +END;
MPRINT(EM_DIAGRAM):   END;
1429033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429034   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1429035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429037   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1429038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429039   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1429040   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1429041   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1429042   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1429043   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1429044   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1429045   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1429046   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1429047   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1429048   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1429049   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1429050   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1429051   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1429052   +          +     0.03411739869638 * GRP_MntFishProducts3
1429053   +          +      -0.083693402353 * GRP_MntFishProducts4
1429054   +          +     -0.1318128730187 * GRP_MntGoldProds2
1429055   +          +     -0.0614737729382 * GRP_MntGoldProds3
1429056   +          +    -0.00372986687449 * GRP_MntGoldProds4
1429057   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1429058   +          +     0.01519664718127 * GRP_MntMeatProducts3
1429059   +          +     0.29997111548812 * GRP_MntMeatProducts4
1429060   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1429061   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1429062   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1429063   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1429064   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1429065   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1429066   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1429067   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1429068   +          +     0.02966820025811 * GRP_NumWebPurchases3
1429069   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1429070   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1429071   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1429072   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1429073   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1429074   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1429075   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 * 
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 * 
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 + 
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 + 
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 + 
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 + 
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 + 
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 + 
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 * 
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 * 
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 * 
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 * 
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 * 
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 * 
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 + 
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 * 
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 + 
-0.15382569411658 * GRP_Recency4 ;
1429076   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1429077   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1429078   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1429079   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1429080   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1429081   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1429082   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1429083   +          +     0.00842475350903 * GRP_MntFishProducts3
1429084   +          +     -0.1623103908885 * GRP_MntFishProducts4
1429085   +          +    -0.23845524931139 * GRP_MntGoldProds2
1429086   +          +    -0.07128567155438 * GRP_MntGoldProds3
1429087   +          +     0.25778887379163 * GRP_MntGoldProds4
1429088   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1429089   +          +     0.06269922653052 * GRP_MntMeatProducts3
1429090   +          +      0.2587215409794 * GRP_MntMeatProducts4
1429091   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1429092   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1429093   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1429094   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1429095   +          +     0.12374838743082 * GRP_NumDistPurchases2
1429096   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1429097   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1429098   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1429099   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1429100   +          +     0.09237237622553 * GRP_NumWebPurchases4
1429101   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1429102   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1429103   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1429104   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1429105   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1429106   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 * 
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 * 
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 + 
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 + 
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 + 
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 + 
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 + 
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 + 
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476 
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 * 
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 * 
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 * 
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 * 
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 * 
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 + 
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 * 
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 + 
0.00206593904485 * GRP_Recency4 ;
1429107   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1429108   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1429109   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1429110   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1429111   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1429112   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1429113   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1429114   +          +    -0.07078012229572 * GRP_MntFishProducts3
1429115   +          +    -0.14569186671189 * GRP_MntFishProducts4
1429116   +          +     0.14963390032413 * GRP_MntGoldProds2
1429117   +          +    -0.11869917970226 * GRP_MntGoldProds3
1429118   +          +     0.25943105626615 * GRP_MntGoldProds4
1429119   +          +     0.36609689271233 * GRP_MntMeatProducts2
1429120   +          +     0.10969864655073 * GRP_MntMeatProducts3
1429121   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1429122   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1429123   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1429124   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1429125   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1429126   +          +     0.08068432649382 * GRP_NumDistPurchases2
1429127   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1429128   +          +     0.26738740475822 * GRP_NumDistPurchases4
1429129   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1429130   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1429131   +          +     0.01349113315351 * GRP_NumWebPurchases4
1429132   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1429133   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1429134   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1429135   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1429136   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1429137   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 * 
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 * 
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 + 
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 + 
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 + 
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 + 
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 + 
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 + 
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 + 
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 * 
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 * 
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 * 
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 * 
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 * 
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 + 
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 * 
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 + 
0.28490847560375 * GRP_Recency4 ;
1429138   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1429139   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1429140   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1429141   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1429142   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1429143   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1429144   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1429145   +          +    -0.18334484867808 * GRP_MntFishProducts3
1429146   +          +     0.13484477561766 * GRP_MntFishProducts4
1429147   +          +    -0.05145913380692 * GRP_MntGoldProds2
1429148   +          +     0.04459987080173 * GRP_MntGoldProds3
1429149   +          +     0.01539767655772 * GRP_MntGoldProds4
1429150   +          +     0.26537148543352 * GRP_MntMeatProducts2
1429151   +          +     0.22913678530176 * GRP_MntMeatProducts3
1429152   +          +     0.21262490658374 * GRP_MntMeatProducts4
1429153   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1429154   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1429155   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1429156   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1429157   +          +     0.09224372228857 * GRP_NumDistPurchases2
1429158   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1429159   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1429160   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1429161   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1429162   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1429163   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1429164   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1429165   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1429166   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1429167   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1429168   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 * 
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 * 
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 + 
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 + 
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 + 
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 + 
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352 
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 * 
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 + 
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 + 
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 + 
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 + 
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 + 
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827 
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 + 
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 * 
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1429169   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1429170   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1429171   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1429172   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1429173   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1429174   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1429175   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1429176   +          +    -0.08952948139975 * GRP_MntFishProducts3
1429177   +          +     0.15338133379465 * GRP_MntFishProducts4
1429178   +          +     0.04821845492824 * GRP_MntGoldProds2
1429179   +          +     0.20117781904284 * GRP_MntGoldProds3
1429180   +          +     0.13013396690778 * GRP_MntGoldProds4
1429181   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1429182   +          +     0.03161017721112 * GRP_MntMeatProducts3
1429183   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1429184   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1429185   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1429186   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1429187   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1429188   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1429189   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1429190   +          +      0.0473480026433 * GRP_NumDistPurchases4
1429191   +          +     0.03132883547053 * GRP_NumWebPurchases2
1429192   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1429193   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1429194   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1429195   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1429196   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1429197   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1429198   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1429199   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 * 
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 * 
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 + 
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 + 
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 + 
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 + 
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 + 
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 + 
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786 
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 * 
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 * 
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 * 
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 * 
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 * 
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 + 
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 * 
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 + 
-0.28363324780869 * GRP_Recency4 ;
1429200   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1429201   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1429202   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1429203   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1429204   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1429205   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1429206   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1429207   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1429208   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1429209   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1429210   +END;
MPRINT(EM_DIAGRAM):   END;
1429211   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1429212   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1429213   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1429214   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1429215   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1429216   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1429217   +END;
MPRINT(EM_DIAGRAM):   END;
1429218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429219   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1429220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429221   +
1429222   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1429223   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1429224   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1429225   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1429226   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1429227   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429228   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1429229   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1429230   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1429231   +end;
MPRINT(EM_DIAGRAM):   end;
1429232   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429233   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1429234   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1429235   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1429236   +   end;
MPRINT(EM_DIAGRAM):   end;
1429237   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1429238   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1429239   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1429240   +   end;
MPRINT(EM_DIAGRAM):   end;
1429241   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429242   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1429243   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1429244   +   end;
MPRINT(EM_DIAGRAM):   end;
1429245   +end;
MPRINT(EM_DIAGRAM):   end;
1429246   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1429247   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1429248   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1429249   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 + 
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1429250   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1429251   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1429252   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1429253   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1429254   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1429255   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1429256   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1429257   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1429258   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1429259   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1429260   +END;
MPRINT(EM_DIAGRAM):   END;
1429261   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1429262   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1429263   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1429264   +END;
MPRINT(EM_DIAGRAM):   END;
1429265   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1429266   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1429267   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1429268   +END;
MPRINT(EM_DIAGRAM):   END;
1429269   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1429270   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1429271   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1429272   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1429273   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1429274   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1429275   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1429276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429277   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1429278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429279   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1429280   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1429281   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1429282   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1429283   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1429284   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1429285   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1429286   +END;
MPRINT(EM_DIAGRAM):   END;
1429287   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1429288   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1429289   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1429290   +drop
1429291   +H11
1429292   +H12
1429293   +H13
1429294   +H14
1429295   +H15
1429296   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1429297   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1429298   +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
1429299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1429300   +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
1429301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1429302   +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
1429303   +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
1429304   +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
1429305   +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
1429306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1429307   +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
1429308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1429309   +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
1429310   +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
1429311   +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
1429312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1429313   +* Ensmbl17: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring Code of model 4 of 5;
1429314   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1429315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1429316   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1429317   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1429318   +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
1429319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1429320   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1429321   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1429322   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1429323   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1429324   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1429325   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1429326   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1429327   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1429328   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1429329   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1429330   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1429331   +LENGTH _WARN_ $4
1429332   +      F_DepVar  $ 12
1429333   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1429334   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1429335   +
1429336   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1429337   +
1429338   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1429339   +
1429340   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1429341   +
1429342   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1429343   +
1429344   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1429345   +
1429346   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1429347   +
1429348   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1429349   +
1429350   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1429351   +
1429352   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1429353   +
1429354   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1429355   +
1429356   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1429357   +
1429358   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1429359   +
1429360   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1429361   +
1429362   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1429363   +
1429364   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1429365   +
1429366   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1429367   +
1429368   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1429369   +
1429370   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1429371   +
1429372   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1429373   +
1429374   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1429375   +
1429376   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1429377   +
1429378   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1429379   +
1429380   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1429381   +
1429382   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1429383   +
1429384   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1429385   +
1429386   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1429387   +
1429388   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1429389   +
1429390   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1429391   +
1429392   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1429393   +
1429394   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1429395   +
1429396   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1429397   +
1429398   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1429399   +
1429400   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1429401   +
1429402   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1429403   +
1429404   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1429405   +
1429406   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1429407   +
1429408   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1429409   +
1429410   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1429411   +
1429412   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1429413   +
1429414   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1429415   +
1429416   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1429417   +
1429418   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1429419   +
1429420   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1429421   +
1429422   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1429423   +
1429424   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1429425   +
1429426   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1429427   +
1429428   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1429429   +
1429430   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1429431   +
1429432   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1429433   +
1429434   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1429435   +
1429436   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1429437   +
1429438   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1429439   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1429440   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1429441   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1429442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429444   +end;
MPRINT(EM_DIAGRAM):   end;
1429445   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429446   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429447   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1429448   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429449   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1429450   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1429451   +   end;
MPRINT(EM_DIAGRAM):   end;
1429452   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1429453   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1429454   +   end;
MPRINT(EM_DIAGRAM):   end;
1429455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429456   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1429457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429459   +   end;
MPRINT(EM_DIAGRAM):   end;
1429460   +end;
MPRINT(EM_DIAGRAM):   end;
1429461   +
1429462   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1429463   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1429464   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1429465   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1429466   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1429467   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1429468   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429469   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429470   +end;
MPRINT(EM_DIAGRAM):   end;
1429471   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429472   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429473   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1429474   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429475   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1429476   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1429477   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1429478   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1429479   +   end;
MPRINT(EM_DIAGRAM):   end;
1429480   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1429481   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1429482   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1429483   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1429484   +   end;
MPRINT(EM_DIAGRAM):   end;
1429485   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429486   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1429487   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1429488   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1429489   +   end;
MPRINT(EM_DIAGRAM):   end;
1429490   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429491   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1429492   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1429493   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1429494   +   end;
MPRINT(EM_DIAGRAM):   end;
1429495   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429496   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1429497   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1429498   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1429499   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429500   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429501   +   end;
MPRINT(EM_DIAGRAM):   end;
1429502   +end;
MPRINT(EM_DIAGRAM):   end;
1429503   +
1429504   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1429505   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1429506   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1429507   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1429508   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1429509   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1429510   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429511   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429512   +end;
MPRINT(EM_DIAGRAM):   end;
1429513   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429514   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429515   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1429516   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429517   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1429518   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1429519   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1429520   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1429521   +   end;
MPRINT(EM_DIAGRAM):   end;
1429522   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429523   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1429524   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1429525   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1429526   +   end;
MPRINT(EM_DIAGRAM):   end;
1429527   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1429528   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1429529   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1429530   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1429531   +   end;
MPRINT(EM_DIAGRAM):   end;
1429532   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429533   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1429534   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1429535   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1429536   +   end;
MPRINT(EM_DIAGRAM):   end;
1429537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429538   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1429539   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1429540   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1429541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429543   +   end;
MPRINT(EM_DIAGRAM):   end;
1429544   +end;
MPRINT(EM_DIAGRAM):   end;
1429545   +
1429546   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1429547   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1429548   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1429549   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1429550   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1429551   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1429552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429554   +end;
MPRINT(EM_DIAGRAM):   end;
1429555   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429556   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429557   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1429558   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429559   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1429560   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1429561   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1429562   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1429563   +   end;
MPRINT(EM_DIAGRAM):   end;
1429564   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1429565   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1429566   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1429567   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1429568   +   end;
MPRINT(EM_DIAGRAM):   end;
1429569   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429570   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1429571   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1429572   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1429573   +   end;
MPRINT(EM_DIAGRAM):   end;
1429574   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429575   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1429576   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1429577   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1429578   +   end;
MPRINT(EM_DIAGRAM):   end;
1429579   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429580   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1429581   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1429582   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1429583   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429584   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429585   +   end;
MPRINT(EM_DIAGRAM):   end;
1429586   +end;
MPRINT(EM_DIAGRAM):   end;
1429587   +
1429588   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1429589   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1429590   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1429591   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1429592   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1429593   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1429594   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429595   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429596   +end;
MPRINT(EM_DIAGRAM):   end;
1429597   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429598   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429599   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1429600   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429601   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1429602   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1429603   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1429604   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1429605   +   end;
MPRINT(EM_DIAGRAM):   end;
1429606   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1429607   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1429608   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1429609   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1429610   +   end;
MPRINT(EM_DIAGRAM):   end;
1429611   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429612   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1429613   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1429614   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1429615   +   end;
MPRINT(EM_DIAGRAM):   end;
1429616   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429617   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1429618   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1429619   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1429620   +   end;
MPRINT(EM_DIAGRAM):   end;
1429621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429622   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1429623   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1429624   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1429625   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429626   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429627   +   end;
MPRINT(EM_DIAGRAM):   end;
1429628   +end;
MPRINT(EM_DIAGRAM):   end;
1429629   +
1429630   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1429631   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1429632   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1429633   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1429634   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1429635   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1429636   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429638   +end;
MPRINT(EM_DIAGRAM):   end;
1429639   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429640   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429641   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1429642   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429643   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1429644   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1429645   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1429646   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1429647   +   end;
MPRINT(EM_DIAGRAM):   end;
1429648   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429649   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1429650   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1429651   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1429652   +   end;
MPRINT(EM_DIAGRAM):   end;
1429653   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1429654   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1429655   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1429656   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1429657   +   end;
MPRINT(EM_DIAGRAM):   end;
1429658   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429659   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1429660   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1429661   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1429662   +   end;
MPRINT(EM_DIAGRAM):   end;
1429663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429664   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1429665   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1429666   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1429667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429669   +   end;
MPRINT(EM_DIAGRAM):   end;
1429670   +end;
MPRINT(EM_DIAGRAM):   end;
1429671   +
1429672   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1429673   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1429674   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1429675   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1429676   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1429677   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1429678   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429679   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429680   +end;
MPRINT(EM_DIAGRAM):   end;
1429681   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429682   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429683   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1429684   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429685   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1429686   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1429687   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1429688   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1429689   +   end;
MPRINT(EM_DIAGRAM):   end;
1429690   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429691   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1429692   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1429693   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1429694   +   end;
MPRINT(EM_DIAGRAM):   end;
1429695   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1429696   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1429697   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1429698   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1429699   +   end;
MPRINT(EM_DIAGRAM):   end;
1429700   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429701   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1429702   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1429703   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1429704   +   end;
MPRINT(EM_DIAGRAM):   end;
1429705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429706   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1429707   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1429708   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1429709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429711   +   end;
MPRINT(EM_DIAGRAM):   end;
1429712   +end;
MPRINT(EM_DIAGRAM):   end;
1429713   +
1429714   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1429715   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1429716   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1429717   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1429718   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1429719   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1429720   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429721   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429722   +end;
MPRINT(EM_DIAGRAM):   end;
1429723   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429724   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429725   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1429726   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429727   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1429728   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1429729   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1429730   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1429731   +   end;
MPRINT(EM_DIAGRAM):   end;
1429732   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1429733   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1429734   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1429735   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1429736   +   end;
MPRINT(EM_DIAGRAM):   end;
1429737   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429738   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1429739   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1429740   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1429741   +   end;
MPRINT(EM_DIAGRAM):   end;
1429742   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429743   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1429744   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1429745   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1429746   +   end;
MPRINT(EM_DIAGRAM):   end;
1429747   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429748   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1429749   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1429750   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1429751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429753   +   end;
MPRINT(EM_DIAGRAM):   end;
1429754   +end;
MPRINT(EM_DIAGRAM):   end;
1429755   +
1429756   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1429757   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1429758   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1429759   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1429760   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1429761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429763   +end;
MPRINT(EM_DIAGRAM):   end;
1429764   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429765   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429766   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1429767   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429768   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1429769   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1429770   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1429771   +   end;
MPRINT(EM_DIAGRAM):   end;
1429772   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1429773   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1429774   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1429775   +   end;
MPRINT(EM_DIAGRAM):   end;
1429776   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429777   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1429778   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1429779   +   end;
MPRINT(EM_DIAGRAM):   end;
1429780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429781   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1429782   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1429783   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429784   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429785   +   end;
MPRINT(EM_DIAGRAM):   end;
1429786   +end;
MPRINT(EM_DIAGRAM):   end;
1429787   +
1429788   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1429789   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1429790   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1429791   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1429792   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1429793   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1429794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429796   +end;
MPRINT(EM_DIAGRAM):   end;
1429797   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429798   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429799   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1429800   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429801   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1429802   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1429803   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1429804   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1429805   +   end;
MPRINT(EM_DIAGRAM):   end;
1429806   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429807   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1429808   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1429809   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1429810   +   end;
MPRINT(EM_DIAGRAM):   end;
1429811   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429812   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1429813   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1429814   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1429815   +   end;
MPRINT(EM_DIAGRAM):   end;
1429816   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1429817   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1429818   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1429819   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1429820   +   end;
MPRINT(EM_DIAGRAM):   end;
1429821   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429822   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1429823   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1429824   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1429825   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429826   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429827   +   end;
MPRINT(EM_DIAGRAM):   end;
1429828   +end;
MPRINT(EM_DIAGRAM):   end;
1429829   +
1429830   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1429831   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1429832   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1429833   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1429834   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1429835   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1429836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429838   +end;
MPRINT(EM_DIAGRAM):   end;
1429839   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429840   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429841   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1429842   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429843   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1429844   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1429845   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1429846   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1429847   +   end;
MPRINT(EM_DIAGRAM):   end;
1429848   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1429849   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1429850   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1429851   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1429852   +   end;
MPRINT(EM_DIAGRAM):   end;
1429853   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429854   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1429855   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1429856   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1429857   +   end;
MPRINT(EM_DIAGRAM):   end;
1429858   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429859   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1429860   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1429861   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1429862   +   end;
MPRINT(EM_DIAGRAM):   end;
1429863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429864   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1429865   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1429866   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1429867   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429868   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429869   +   end;
MPRINT(EM_DIAGRAM):   end;
1429870   +end;
MPRINT(EM_DIAGRAM):   end;
1429871   +
1429872   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1429873   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1429874   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1429875   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1429876   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1429877   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1429878   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429879   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429880   +end;
MPRINT(EM_DIAGRAM):   end;
1429881   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429882   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429883   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1429884   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429885   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1429886   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1429887   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1429888   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1429889   +   end;
MPRINT(EM_DIAGRAM):   end;
1429890   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1429891   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1429892   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1429893   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1429894   +   end;
MPRINT(EM_DIAGRAM):   end;
1429895   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1429896   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1429897   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1429898   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1429899   +   end;
MPRINT(EM_DIAGRAM):   end;
1429900   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429901   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1429902   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1429903   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1429904   +   end;
MPRINT(EM_DIAGRAM):   end;
1429905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429906   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1429907   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1429908   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1429909   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429910   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429911   +   end;
MPRINT(EM_DIAGRAM):   end;
1429912   +end;
MPRINT(EM_DIAGRAM):   end;
1429913   +
1429914   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1429915   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1429916   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1429917   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1429918   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1429919   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1429920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429922   +end;
MPRINT(EM_DIAGRAM):   end;
1429923   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429925   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1429926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429927   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1429928   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1429929   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1429930   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1429931   +   end;
MPRINT(EM_DIAGRAM):   end;
1429932   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1429933   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1429934   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1429935   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1429936   +   end;
MPRINT(EM_DIAGRAM):   end;
1429937   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429938   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1429939   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1429940   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1429941   +   end;
MPRINT(EM_DIAGRAM):   end;
1429942   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429943   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1429944   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1429945   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1429946   +   end;
MPRINT(EM_DIAGRAM):   end;
1429947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429948   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1429949   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1429950   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1429951   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429952   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429953   +   end;
MPRINT(EM_DIAGRAM):   end;
1429954   +end;
MPRINT(EM_DIAGRAM):   end;
1429955   +
1429956   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1429957   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1429958   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1429959   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1429960   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1429961   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1429962   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1429963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429964   +end;
MPRINT(EM_DIAGRAM):   end;
1429965   +else do;
MPRINT(EM_DIAGRAM):   else do;
1429966   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1429967   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1429968   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1429969   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1429970   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1429971   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1429972   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1429973   +   end;
MPRINT(EM_DIAGRAM):   end;
1429974   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1429975   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1429976   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1429977   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1429978   +   end;
MPRINT(EM_DIAGRAM):   end;
1429979   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1429980   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1429981   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1429982   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1429983   +   end;
MPRINT(EM_DIAGRAM):   end;
1429984   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1429985   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1429986   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1429987   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1429988   +   end;
MPRINT(EM_DIAGRAM):   end;
1429989   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1429990   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1429991   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1429992   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1429993   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1429994   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1429995   +   end;
MPRINT(EM_DIAGRAM):   end;
1429996   +end;
MPRINT(EM_DIAGRAM):   end;
1429997   +
1429998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1429999   +*** Checking missing input Interval
1430000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1430001   +
1430002   +IF NMISS(
1430003   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1430004   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1430005   +
1430006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430007   +END;
MPRINT(EM_DIAGRAM):   END;
1430008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1430009   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1430010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1430011   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1430012   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1430013   +END;
MPRINT(EM_DIAGRAM):   END;
1430014   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1430015   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1430016   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1430017   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1430018   +END;
MPRINT(EM_DIAGRAM):   END;
1430019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1430020   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1430021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1430022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1430023   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1430024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1430025   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1430026   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1430027   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1430028   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1430029   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1430030   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1430031   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1430032   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1430033   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1430034   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1430035   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1430036   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1430037   +          +    -0.14978605827752 * GRP_MntFishProducts3
1430038   +          +     0.22642470616542 * GRP_MntFishProducts4
1430039   +          +     0.07604404821672 * GRP_MntGoldProds2
1430040   +          +     0.04745212568332 * GRP_MntGoldProds3
1430041   +          +    -0.10028215217028 * GRP_MntGoldProds4
1430042   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1430043   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1430044   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1430045   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1430046   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1430047   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1430048   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1430049   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1430050   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1430051   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1430052   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1430053   +          +     0.24754701690398 * GRP_NumWebPurchases3
1430054   +          +     0.01530465573539 * GRP_NumWebPurchases4
1430055   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1430056   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1430057   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1430058   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1430059   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1430060   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 * 
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 * 
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 + 
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 + 
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 + 
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 + 
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 + 
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 + 
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786 
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 * 
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 * 
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 * 
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 * 
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 * 
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 + 
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 * 
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 + 
-0.44624012521308 * GRP_Recency4 ;
1430061   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1430062   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1430063   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1430064   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1430065   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1430066   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1430067   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1430068   +          +    -0.12626287803422 * GRP_MntFishProducts3
1430069   +          +    -0.42885022606866 * GRP_MntFishProducts4
1430070   +          +    -0.08312331608509 * GRP_MntGoldProds2
1430071   +          +    -0.20061238652989 * GRP_MntGoldProds3
1430072   +          +      0.2540651659901 * GRP_MntGoldProds4
1430073   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1430074   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1430075   +          +     0.40616704937625 * GRP_MntMeatProducts4
1430076   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1430077   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1430078   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1430079   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1430080   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1430081   +          +     0.10966715611059 * GRP_NumDistPurchases3
1430082   +          +      -0.043035493739 * GRP_NumDistPurchases4
1430083   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1430084   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1430085   +          +     0.26936545488609 * GRP_NumWebPurchases4
1430086   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1430087   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1430088   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1430089   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1430090   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1430091   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 * 
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 * 
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 + 
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 + 
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 + 
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 + 
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 + 
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 + 
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895 
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 * 
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 * 
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 * 
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 * 
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 * 
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 + 
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 * 
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 + 
-0.0454148085012 * GRP_Recency4 ;
1430092   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1430093   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1430094   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1430095   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1430096   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1430097   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1430098   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1430099   +          +     0.07001619920815 * GRP_MntFishProducts3
1430100   +          +     0.07735498521359 * GRP_MntFishProducts4
1430101   +          +    -0.15884098938162 * GRP_MntGoldProds2
1430102   +          +    -0.27657428867783 * GRP_MntGoldProds3
1430103   +          +     -0.1812542301124 * GRP_MntGoldProds4
1430104   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1430105   +          +     0.00010942539908 * GRP_MntMeatProducts3
1430106   +          +     0.03587382246671 * GRP_MntMeatProducts4
1430107   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1430108   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1430109   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1430110   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1430111   +          +      -0.481887498986 * GRP_NumDistPurchases2
1430112   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1430113   +          +     0.21760620991618 * GRP_NumDistPurchases4
1430114   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1430115   +          +     0.06245025753157 * GRP_NumWebPurchases3
1430116   +          +     0.11312469123111 * GRP_NumWebPurchases4
1430117   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1430118   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1430119   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1430120   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1430121   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1430122   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 * 
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 * 
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 + 
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 + 
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 + 
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 + 
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 + 
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 + 
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 * 
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 * 
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 * 
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 * 
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 * 
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 * 
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 + 
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 * 
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 + 
-0.30003743891847 * GRP_Recency4 ;
1430123   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1430124   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1430125   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1430126   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1430127   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1430128   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1430129   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1430130   +          +     0.33369645018356 * GRP_MntFishProducts3
1430131   +          +     0.08427214551103 * GRP_MntFishProducts4
1430132   +          +    -0.36187933889617 * GRP_MntGoldProds2
1430133   +          +      0.1522584097588 * GRP_MntGoldProds3
1430134   +          +    -0.18069803129722 * GRP_MntGoldProds4
1430135   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1430136   +          +     0.00511939388608 * GRP_MntMeatProducts3
1430137   +          +      0.0518722466688 * GRP_MntMeatProducts4
1430138   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1430139   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1430140   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1430141   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1430142   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1430143   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1430144   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1430145   +          +      0.0024401108853 * GRP_NumWebPurchases2
1430146   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1430147   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1430148   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1430149   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1430150   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1430151   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1430152   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1430153   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 * 
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 * 
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 + 
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 + 
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 + 
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 + 
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 + 
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 + 
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068 
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 * 
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 * 
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 * 
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 * 
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 * 
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 + 
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 * 
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 + 
0.19384397786172 * GRP_Recency4 ;
1430154   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1430155   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1430156   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1430157   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1430158   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1430159   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1430160   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1430161   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1430162   +END;
MPRINT(EM_DIAGRAM):   END;
1430163   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1430164   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1430165   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1430166   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1430167   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1430168   +END;
MPRINT(EM_DIAGRAM):   END;
1430169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1430170   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1430171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1430172   +
1430173   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1430174   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1430175   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1430176   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1430177   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1430178   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430179   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1430180   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1430181   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1430182   +end;
MPRINT(EM_DIAGRAM):   end;
1430183   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430184   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1430185   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1430186   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1430187   +   end;
MPRINT(EM_DIAGRAM):   end;
1430188   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1430189   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1430190   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1430191   +   end;
MPRINT(EM_DIAGRAM):   end;
1430192   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430193   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1430194   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1430195   +   end;
MPRINT(EM_DIAGRAM):   end;
1430196   +end;
MPRINT(EM_DIAGRAM):   end;
1430197   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1430198   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1430199   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 + 
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1430200   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1430201   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1430202   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1430203   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1430204   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1430205   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1430206   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1430207   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1430208   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1430209   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1430210   +END;
MPRINT(EM_DIAGRAM):   END;
1430211   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1430212   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1430213   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1430214   +END;
MPRINT(EM_DIAGRAM):   END;
1430215   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1430216   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1430217   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1430218   +END;
MPRINT(EM_DIAGRAM):   END;
1430219   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1430220   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1430221   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1430222   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1430223   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1430224   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1430225   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1430226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1430227   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1430228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1430229   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1430230   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1430231   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1430232   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1430233   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1430234   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1430235   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1430236   +END;
MPRINT(EM_DIAGRAM):   END;
1430237   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1430238   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1430239   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1430240   +drop
1430241   +H11
1430242   +H12
1430243   +H13
1430244   +H14
1430245   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1430246   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1430247   +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
1430248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430249   +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
1430250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430251   +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
1430252   +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
1430253   +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
1430254   +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
1430255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430256   +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
1430257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430258   +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
1430259   +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
1430260   +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
1430261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430262   +* Ensmbl17: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Scoring Code of model 5 of 5;
1430263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430265   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1430266   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1430267   +* NODE: Reg7;
MPRINT(EM_DIAGRAM):   * NODE: Reg7;
1430268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430269   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1430270   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1430271   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1430272   +
1430273   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1430274   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1430275   +
1430276   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1430277   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1430278   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1430279   +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
1430280   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1430281   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1430282   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1430283   +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
1430284   +
1430285   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1430286   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1430287   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1430288   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1430289   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1430290   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430291   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1430292   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1430293   +end;
MPRINT(EM_DIAGRAM):   end;
1430294   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430295   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1430296   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1430297   +   end;
MPRINT(EM_DIAGRAM):   end;
1430298   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1430299   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1430300   +   end;
MPRINT(EM_DIAGRAM):   end;
1430301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430302   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1430303   +   end;
MPRINT(EM_DIAGRAM):   end;
1430304   +end;
MPRINT(EM_DIAGRAM):   end;
1430305   +
1430306   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1430307   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1430308   +
1430309   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1430310   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1430311   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430312   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430313   +end;
MPRINT(EM_DIAGRAM):   end;
1430314   +
1430315   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1430316   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1430317   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1430318   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1430319   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430320   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430321   +end;
MPRINT(EM_DIAGRAM):   end;
1430322   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430323   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1430324   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1430325   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430326   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1430327   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1430328   +   end;
MPRINT(EM_DIAGRAM):   end;
1430329   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1430330   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1430331   +   end;
MPRINT(EM_DIAGRAM):   end;
1430332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430333   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1430334   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1430335   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430336   +   end;
MPRINT(EM_DIAGRAM):   end;
1430337   +end;
MPRINT(EM_DIAGRAM):   end;
1430338   +
1430339   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1430340   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1430341   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1430342   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1430343   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1430344   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1430345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430347   +end;
MPRINT(EM_DIAGRAM):   end;
1430348   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1430350   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1430351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430352   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1430353   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1430354   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1430355   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1430356   +   end;
MPRINT(EM_DIAGRAM):   end;
1430357   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1430358   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1430359   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1430360   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1430361   +   end;
MPRINT(EM_DIAGRAM):   end;
1430362   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1430363   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1430364   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1430365   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1430366   +   end;
MPRINT(EM_DIAGRAM):   end;
1430367   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1430368   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1430369   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1430370   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1430371   +   end;
MPRINT(EM_DIAGRAM):   end;
1430372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430373   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1430374   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1430375   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1430376   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1430377   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430378   +   end;
MPRINT(EM_DIAGRAM):   end;
1430379   +end;
MPRINT(EM_DIAGRAM):   end;
1430380   +
1430381   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1430382   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1430383   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1430384   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1430385   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1430386   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1430387   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430388   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430389   +end;
MPRINT(EM_DIAGRAM):   end;
1430390   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430391   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1430392   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1430393   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430394   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1430395   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1430396   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1430397   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1430398   +   end;
MPRINT(EM_DIAGRAM):   end;
1430399   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1430400   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1430401   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1430402   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1430403   +   end;
MPRINT(EM_DIAGRAM):   end;
1430404   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1430405   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1430406   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1430407   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1430408   +   end;
MPRINT(EM_DIAGRAM):   end;
1430409   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1430410   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1430411   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1430412   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1430413   +   end;
MPRINT(EM_DIAGRAM):   end;
1430414   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430415   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1430416   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1430417   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1430418   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1430419   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430420   +   end;
MPRINT(EM_DIAGRAM):   end;
1430421   +end;
MPRINT(EM_DIAGRAM):   end;
1430422   +
1430423   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1430424   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1430425   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1430426   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1430427   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1430428   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1430429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430431   +end;
MPRINT(EM_DIAGRAM):   end;
1430432   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1430434   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1430435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430436   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1430437   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1430438   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1430439   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1430440   +   end;
MPRINT(EM_DIAGRAM):   end;
1430441   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1430442   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1430443   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1430444   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1430445   +   end;
MPRINT(EM_DIAGRAM):   end;
1430446   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1430447   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1430448   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1430449   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1430450   +   end;
MPRINT(EM_DIAGRAM):   end;
1430451   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1430452   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1430453   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1430454   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1430455   +   end;
MPRINT(EM_DIAGRAM):   end;
1430456   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430457   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1430458   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1430459   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1430460   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1430461   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430462   +   end;
MPRINT(EM_DIAGRAM):   end;
1430463   +end;
MPRINT(EM_DIAGRAM):   end;
1430464   +
1430465   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1430466   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1430467   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1430468   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1430469   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1430470   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1430471   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430473   +end;
MPRINT(EM_DIAGRAM):   end;
1430474   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430475   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1430476   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1430477   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430478   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1430479   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1430480   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1430481   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1430482   +   end;
MPRINT(EM_DIAGRAM):   end;
1430483   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1430484   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1430485   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1430486   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1430487   +   end;
MPRINT(EM_DIAGRAM):   end;
1430488   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1430489   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1430490   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1430491   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1430492   +   end;
MPRINT(EM_DIAGRAM):   end;
1430493   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1430494   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1430495   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1430496   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1430497   +   end;
MPRINT(EM_DIAGRAM):   end;
1430498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430499   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1430500   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1430501   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1430502   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1430503   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430504   +   end;
MPRINT(EM_DIAGRAM):   end;
1430505   +end;
MPRINT(EM_DIAGRAM):   end;
1430506   +
1430507   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1430508   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1430509   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1430510   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1430511   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1430512   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1430513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430515   +end;
MPRINT(EM_DIAGRAM):   end;
1430516   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430517   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1430518   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1430519   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430520   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1430521   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1430522   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1430523   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1430524   +   end;
MPRINT(EM_DIAGRAM):   end;
1430525   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1430526   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1430527   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1430528   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1430529   +   end;
MPRINT(EM_DIAGRAM):   end;
1430530   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1430531   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1430532   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1430533   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1430534   +   end;
MPRINT(EM_DIAGRAM):   end;
1430535   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1430536   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1430537   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1430538   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1430539   +   end;
MPRINT(EM_DIAGRAM):   end;
1430540   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430541   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1430542   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1430543   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1430544   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1430545   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430546   +   end;
MPRINT(EM_DIAGRAM):   end;
1430547   +end;
MPRINT(EM_DIAGRAM):   end;
1430548   +
1430549   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1430550   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1430551   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1430552   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1430553   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1430554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430556   +end;
MPRINT(EM_DIAGRAM):   end;
1430557   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430558   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1430559   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1430560   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430561   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1430562   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1430563   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1430564   +   end;
MPRINT(EM_DIAGRAM):   end;
1430565   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1430566   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1430567   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1430568   +   end;
MPRINT(EM_DIAGRAM):   end;
1430569   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1430570   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1430571   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1430572   +   end;
MPRINT(EM_DIAGRAM):   end;
1430573   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430574   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1430575   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1430576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1430577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430578   +   end;
MPRINT(EM_DIAGRAM):   end;
1430579   +end;
MPRINT(EM_DIAGRAM):   end;
1430580   +
1430581   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1430582   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1430583   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1430584   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1430585   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1430586   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1430587   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430588   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430589   +end;
MPRINT(EM_DIAGRAM):   end;
1430590   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430591   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1430592   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1430593   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430594   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1430595   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1430596   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1430597   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1430598   +   end;
MPRINT(EM_DIAGRAM):   end;
1430599   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1430600   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1430601   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1430602   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1430603   +   end;
MPRINT(EM_DIAGRAM):   end;
1430604   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1430605   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1430606   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1430607   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1430608   +   end;
MPRINT(EM_DIAGRAM):   end;
1430609   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1430610   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1430611   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1430612   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1430613   +   end;
MPRINT(EM_DIAGRAM):   end;
1430614   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430615   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1430616   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1430617   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1430618   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1430619   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430620   +   end;
MPRINT(EM_DIAGRAM):   end;
1430621   +end;
MPRINT(EM_DIAGRAM):   end;
1430622   +
1430623   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1430624   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1430625   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1430626   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1430627   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1430628   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1430629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430631   +end;
MPRINT(EM_DIAGRAM):   end;
1430632   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430633   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1430634   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1430635   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430636   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1430637   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1430638   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1430639   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1430640   +   end;
MPRINT(EM_DIAGRAM):   end;
1430641   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1430642   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1430643   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1430644   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1430645   +   end;
MPRINT(EM_DIAGRAM):   end;
1430646   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1430647   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1430648   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1430649   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1430650   +   end;
MPRINT(EM_DIAGRAM):   end;
1430651   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1430652   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1430653   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1430654   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1430655   +   end;
MPRINT(EM_DIAGRAM):   end;
1430656   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430657   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1430658   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1430659   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1430660   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1430661   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430662   +   end;
MPRINT(EM_DIAGRAM):   end;
1430663   +end;
MPRINT(EM_DIAGRAM):   end;
1430664   +
1430665   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1430666   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1430667   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1430668   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1430669   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1430670   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1430671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1430672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430673   +end;
MPRINT(EM_DIAGRAM):   end;
1430674   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1430676   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1430677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1430678   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1430679   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1430680   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1430681   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1430682   +   end;
MPRINT(EM_DIAGRAM):   end;
1430683   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1430684   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1430685   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1430686   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1430687   +   end;
MPRINT(EM_DIAGRAM):   end;
1430688   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1430689   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1430690   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1430691   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1430692   +   end;
MPRINT(EM_DIAGRAM):   end;
1430693   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1430694   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1430695   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1430696   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1430697   +   end;
MPRINT(EM_DIAGRAM):   end;
1430698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1430699   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1430700   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1430701   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1430702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1430703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1430704   +   end;
MPRINT(EM_DIAGRAM):   end;
1430705   +end;
MPRINT(EM_DIAGRAM):   end;
1430706   +
1430707   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1430708   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1430709   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1430710   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1430711   +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
1430712   +end;
MPRINT(EM_DIAGRAM):   end;
1430713   +
1430714   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1430715   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1430716   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1430717   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1430718   +
1430719   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1430720   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1430721   +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
1430722   +
1430723   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1430724   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1430725   +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
1430726   +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
1430727   +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
1430728   +
1430729   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1430730   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1430731   +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
1430732   +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
1430733   +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
1430734   +
1430735   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1430736   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1430737   +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
1430738   +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
1430739   +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
1430740   +
1430741   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1430742   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1430743   +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
1430744   +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
1430745   +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
1430746   +
1430747   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1430748   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1430749   +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
1430750   +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
1430751   +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
1430752   +
1430753   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1430754   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1430755   +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
1430756   +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
1430757   +
1430758   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1430759   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1430760   +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
1430761   +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
1430762   +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
1430763   +
1430764   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1430765   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1430766   +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
1430767   +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
1430768   +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
1430769   +
1430770   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1430771   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1430772   +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
1430773   +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
1430774   +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
1430775   +
1430776   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1430777   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1430778   +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
1430779   +
1430780   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1430781   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1430782   +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
1430783   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1430784   +
1430785   +REG7DR1:
1430786   +
1430787   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
1430788   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1430789   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1430790   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1430791   +end;
MPRINT(EM_DIAGRAM):   end;
1430792   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430793   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1430794   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1430795   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1430796   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1430797   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1430798   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1430799   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1430800   +   end;
MPRINT(EM_DIAGRAM):   end;
1430801   +end;
MPRINT(EM_DIAGRAM):   end;
1430802   +
1430803   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1430804   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1430805   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1430806   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1430807   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1430808   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1430809   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1430810   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1430811   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1430812   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1430813   +end;
MPRINT(EM_DIAGRAM):   end;
1430814   +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
1430815   +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
1430816   +
1430817   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1430818   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1430819   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1430820   +* Renaming variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg7;
1430821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430822   +* Renaming Posterior variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg7;
1430823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430824   +drop Reg7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar1;
1430825   +Reg7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar1 = P_DepVar1;
1430826   +drop Reg7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar0;
1430827   +Reg7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar0 = P_DepVar0;
1430828   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430829   +* Renaming _WARN_ variable for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg7;
1430830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430831   +length Reg7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg7_WARN_ $4;
1430832   +drop Reg7_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg7_WARN_;
1430833   +Reg7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg7_WARN_ = _WARN_;
1430834   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430835   +* Ensmbl17: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Average Posteriors of 5 models;
1430836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430837   +P_DepVar1 = (
1430838   +Reg3_P_DepVar1 +
1430839   +Neural18_P_DepVar1 +
1430840   +Neural22_P_DepVar1 +
1430841   +Neural21_P_DepVar1 +
1430842   +Reg7_P_DepVar1
1430843   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg3_P_DepVar1 + Neural18_P_DepVar1 + Neural22_P_DepVar1 + 
Neural21_P_DepVar1 + Reg7_P_DepVar1 )/5;
1430844   +P_DepVar0 = (
1430845   +Reg3_P_DepVar0 +
1430846   +Neural18_P_DepVar0 +
1430847   +Neural22_P_DepVar0 +
1430848   +Neural21_P_DepVar0 +
1430849   +Reg7_P_DepVar0
1430850   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg3_P_DepVar0 + Neural18_P_DepVar0 + Neural22_P_DepVar0 + 
Neural21_P_DepVar0 + Reg7_P_DepVar0 )/5;
1430851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430852   +* Ensmbl17: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Computing Classification Vars;
1430853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430854   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1430855   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1430856   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1430857   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1430858   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1430859   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1430860   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1430861   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1430862   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1430863   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1430864   +end;
MPRINT(EM_DIAGRAM):   end;
1430865   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1430866   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1430867   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1430868   +end;
MPRINT(EM_DIAGRAM):   end;
1430869   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1430870   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430871   +* Ensmbl17: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Producing Unformatted variable;
1430872   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430873   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1430874   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1430875   +else
1430876   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1430877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430878   +* Ensmbl17: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Computing _WARN_ Variable;
1430879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430880   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1430881   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1430882   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1430883   +if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1430884   +if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1430885   +if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1430886   +if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1430887   +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1430887  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1430888   +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1430888  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1430889   +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1430889  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1430890   +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1430890  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1430891   +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1430891  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1430892   +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1430892  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1430893   +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1430893  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1430894   +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1430894  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1430895   +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1430895  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1430896   +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1430896  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1430897   +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1430897  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1430898   +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1430898  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1430899   +if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1430900   +if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1430901   +if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1430902   +if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1430903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430904   +* Ensmbl17: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Computing Residual Vars;
1430905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1430906   +if
1430907   +F_DepVar NE '1'
1430908   +AND F_DepVar NE '0'
1430909   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1430910   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1430911   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1430912   +end;
MPRINT(EM_DIAGRAM):   end;
1430913   +else do;
MPRINT(EM_DIAGRAM):   else do;
1430914   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1430915   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1430916   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1430917   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1430918   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1430919   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1430920   +END;
MPRINT(EM_DIAGRAM):   END;
1430921   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1430922    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL17_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG3_VALIDATE.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1430923    quit;
1430924    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl17_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl17_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl17_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl17_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl17_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1430984    filename _pref
1430984  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas";
1430985    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1430986    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas.
1430987   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1430988   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1430989   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1430990   +
1430991   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1430992   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1430993   +
1430994   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1430995   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1430996   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1430997   +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
1430998   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1430999   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1431000   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1431001   +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
1431002   +
1431003   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1431004   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1431005   +
1431006   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1431007   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1431008   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431009   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431010   +end;
MPRINT(EM_DIAGRAM):   end;
1431011   +
1431012   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1431013   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1431014   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1431015   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1431016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431018   +end;
MPRINT(EM_DIAGRAM):   end;
1431019   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1431021   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1431022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1431023   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1431024   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1431025   +   end;
MPRINT(EM_DIAGRAM):   end;
1431026   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1431027   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1431028   +   end;
MPRINT(EM_DIAGRAM):   end;
1431029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1431030   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1431031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1431032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431033   +   end;
MPRINT(EM_DIAGRAM):   end;
1431034   +end;
MPRINT(EM_DIAGRAM):   end;
1431035   +
1431036   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1431037   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1431038   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1431039   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1431040   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1431041   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1431042   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431043   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431044   +end;
MPRINT(EM_DIAGRAM):   end;
1431045   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431046   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1431047   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1431048   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1431049   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1431050   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1431051   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1431052   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1431053   +   end;
MPRINT(EM_DIAGRAM):   end;
1431054   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1431055   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1431056   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1431057   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1431058   +   end;
MPRINT(EM_DIAGRAM):   end;
1431059   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1431060   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1431061   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1431062   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1431063   +   end;
MPRINT(EM_DIAGRAM):   end;
1431064   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1431065   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1431066   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1431067   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1431068   +   end;
MPRINT(EM_DIAGRAM):   end;
1431069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1431070   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1431071   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1431072   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1431073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1431074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431075   +   end;
MPRINT(EM_DIAGRAM):   end;
1431076   +end;
MPRINT(EM_DIAGRAM):   end;
1431077   +
1431078   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1431079   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1431080   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1431081   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1431082   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1431083   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1431084   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431085   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431086   +end;
MPRINT(EM_DIAGRAM):   end;
1431087   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431088   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1431089   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1431090   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1431091   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1431092   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1431093   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1431094   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1431095   +   end;
MPRINT(EM_DIAGRAM):   end;
1431096   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1431097   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1431098   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1431099   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1431100   +   end;
MPRINT(EM_DIAGRAM):   end;
1431101   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1431102   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1431103   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1431104   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1431105   +   end;
MPRINT(EM_DIAGRAM):   end;
1431106   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1431107   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1431108   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1431109   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1431110   +   end;
MPRINT(EM_DIAGRAM):   end;
1431111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1431112   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1431113   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1431114   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1431115   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1431116   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431117   +   end;
MPRINT(EM_DIAGRAM):   end;
1431118   +end;
MPRINT(EM_DIAGRAM):   end;
1431119   +
1431120   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1431121   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1431122   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1431123   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1431124   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1431125   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1431126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431128   +end;
MPRINT(EM_DIAGRAM):   end;
1431129   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431130   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1431131   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1431132   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1431133   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1431134   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1431135   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1431136   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1431137   +   end;
MPRINT(EM_DIAGRAM):   end;
1431138   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1431139   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1431140   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1431141   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1431142   +   end;
MPRINT(EM_DIAGRAM):   end;
1431143   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1431144   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1431145   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1431146   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1431147   +   end;
MPRINT(EM_DIAGRAM):   end;
1431148   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1431149   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1431150   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1431151   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1431152   +   end;
MPRINT(EM_DIAGRAM):   end;
1431153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1431154   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1431155   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1431156   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1431157   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1431158   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431159   +   end;
MPRINT(EM_DIAGRAM):   end;
1431160   +end;
MPRINT(EM_DIAGRAM):   end;
1431161   +
1431162   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1431163   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1431164   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1431165   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1431166   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1431167   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1431168   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431169   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431170   +end;
MPRINT(EM_DIAGRAM):   end;
1431171   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431172   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1431173   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1431174   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1431175   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1431176   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1431177   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1431178   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1431179   +   end;
MPRINT(EM_DIAGRAM):   end;
1431180   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1431181   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1431182   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1431183   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1431184   +   end;
MPRINT(EM_DIAGRAM):   end;
1431185   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1431186   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1431187   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1431188   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1431189   +   end;
MPRINT(EM_DIAGRAM):   end;
1431190   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1431191   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1431192   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1431193   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1431194   +   end;
MPRINT(EM_DIAGRAM):   end;
1431195   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1431196   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1431197   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1431198   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1431199   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1431200   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431201   +   end;
MPRINT(EM_DIAGRAM):   end;
1431202   +end;
MPRINT(EM_DIAGRAM):   end;
1431203   +
1431204   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1431205   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1431206   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1431207   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1431208   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1431209   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1431210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431212   +end;
MPRINT(EM_DIAGRAM):   end;
1431213   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1431215   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1431216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1431217   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1431218   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1431219   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1431220   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1431221   +   end;
MPRINT(EM_DIAGRAM):   end;
1431222   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1431223   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1431224   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1431225   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1431226   +   end;
MPRINT(EM_DIAGRAM):   end;
1431227   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1431228   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1431229   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1431230   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1431231   +   end;
MPRINT(EM_DIAGRAM):   end;
1431232   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1431233   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1431234   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1431235   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1431236   +   end;
MPRINT(EM_DIAGRAM):   end;
1431237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1431238   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1431239   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1431240   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1431241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1431242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431243   +   end;
MPRINT(EM_DIAGRAM):   end;
1431244   +end;
MPRINT(EM_DIAGRAM):   end;
1431245   +
1431246   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1431247   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1431248   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1431249   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1431250   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1431251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431253   +end;
MPRINT(EM_DIAGRAM):   end;
1431254   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431255   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1431256   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1431257   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1431258   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1431259   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1431260   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1431261   +   end;
MPRINT(EM_DIAGRAM):   end;
1431262   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1431263   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1431264   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1431265   +   end;
MPRINT(EM_DIAGRAM):   end;
1431266   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1431267   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1431268   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1431269   +   end;
MPRINT(EM_DIAGRAM):   end;
1431270   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1431271   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1431272   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1431273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1431274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431275   +   end;
MPRINT(EM_DIAGRAM):   end;
1431276   +end;
MPRINT(EM_DIAGRAM):   end;
1431277   +
1431278   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1431279   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1431280   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1431281   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1431282   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1431283   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1431284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431286   +end;
MPRINT(EM_DIAGRAM):   end;
1431287   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431288   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1431289   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1431290   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1431291   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1431292   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1431293   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1431294   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1431295   +   end;
MPRINT(EM_DIAGRAM):   end;
1431296   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1431297   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1431298   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1431299   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1431300   +   end;
MPRINT(EM_DIAGRAM):   end;
1431301   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1431302   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1431303   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1431304   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1431305   +   end;
MPRINT(EM_DIAGRAM):   end;
1431306   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1431307   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1431308   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1431309   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1431310   +   end;
MPRINT(EM_DIAGRAM):   end;
1431311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1431312   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1431313   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1431314   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1431315   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1431316   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431317   +   end;
MPRINT(EM_DIAGRAM):   end;
1431318   +end;
MPRINT(EM_DIAGRAM):   end;
1431319   +
1431320   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1431321   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1431322   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1431323   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1431324   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1431325   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1431326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431328   +end;
MPRINT(EM_DIAGRAM):   end;
1431329   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431330   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1431331   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1431332   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1431333   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1431334   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1431335   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1431336   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1431337   +   end;
MPRINT(EM_DIAGRAM):   end;
1431338   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1431339   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1431340   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1431341   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1431342   +   end;
MPRINT(EM_DIAGRAM):   end;
1431343   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1431344   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1431345   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1431346   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1431347   +   end;
MPRINT(EM_DIAGRAM):   end;
1431348   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1431349   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1431350   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1431351   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1431352   +   end;
MPRINT(EM_DIAGRAM):   end;
1431353   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1431354   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1431355   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1431356   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1431357   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1431358   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431359   +   end;
MPRINT(EM_DIAGRAM):   end;
1431360   +end;
MPRINT(EM_DIAGRAM):   end;
1431361   +
1431362   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1431363   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1431364   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1431365   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1431366   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1431367   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1431368   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1431369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431370   +end;
MPRINT(EM_DIAGRAM):   end;
1431371   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431372   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1431373   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1431374   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1431375   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1431376   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1431377   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1431378   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1431379   +   end;
MPRINT(EM_DIAGRAM):   end;
1431380   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1431381   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1431382   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1431383   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1431384   +   end;
MPRINT(EM_DIAGRAM):   end;
1431385   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1431386   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1431387   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1431388   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1431389   +   end;
MPRINT(EM_DIAGRAM):   end;
1431390   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1431391   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1431392   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1431393   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1431394   +   end;
MPRINT(EM_DIAGRAM):   end;
1431395   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1431396   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1431397   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1431398   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1431399   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1431400   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1431401   +   end;
MPRINT(EM_DIAGRAM):   end;
1431402   +end;
MPRINT(EM_DIAGRAM):   end;
1431403   +
1431404   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1431405   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1431406   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1431407   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1431408   +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
1431409   +end;
MPRINT(EM_DIAGRAM):   end;
1431410   +
1431411   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1431412   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1431413   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1431414   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1431415   +
1431416   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1431417   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1431418   +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
1431419   +
1431420   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1431421   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1431422   +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
1431423   +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
1431424   +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
1431425   +
1431426   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1431427   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1431428   +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
1431429   +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
1431430   +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
1431431   +
1431432   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1431433   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1431434   +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
1431435   +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
1431436   +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
1431437   +
1431438   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1431439   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1431440   +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
1431441   +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
1431442   +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
1431443   +
1431444   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1431445   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1431446   +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
1431447   +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
1431448   +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
1431449   +
1431450   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1431451   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1431452   +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
1431453   +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
1431454   +
1431455   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1431456   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1431457   +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
1431458   +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
1431459   +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
1431460   +
1431461   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1431462   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1431463   +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
1431464   +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
1431465   +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
1431466   +
1431467   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1431468   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1431469   +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
1431470   +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
1431471   +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
1431472   +
1431473   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1431474   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1431475   +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
1431476   +
1431477   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1431478   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1431479   +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
1431480   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1431481   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1431482   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1431483   +end;
MPRINT(EM_DIAGRAM):   end;
1431484   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1431485   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1431486   +
1431487   +REG3DR1:
1431488   +
1431489   +
1431490   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Posterior Probabilities and Predicted Level;
1431491   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1431492   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1431493   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1431494   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1431495   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1431496   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1431497   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1431498   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1431499   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1431500   +end;
MPRINT(EM_DIAGRAM):   end;
1431501   +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
1431502   +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
1431503   +
1431504   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1431505   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1431506   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1431507    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1431508    quit;
1431509    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1431510    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1431511    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1431512    retain ID 2 Node "Reg3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg3";
1431513    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1431514    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 874 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 874 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431515    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1431516    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431517    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 874 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 874 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431518    proc sort data=EMWS8.Reg3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg3_variableset out=_temp2(keep=NAME CREATOR);
1431519    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431520    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.REG3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1431521    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1431522    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1431523    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1431524    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431525    proc contents data=EMWS8.Reg3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg3_train out=_meta(keep=NAME) noprint;
1431526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1431527    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1431528    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431529    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431530    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1431531    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1431532    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431533    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431534    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1431535    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1431535  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 434 rows and 5 columns.

1431536    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431537    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1431538    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 434 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 434 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431539    filename _pref
1431539  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1431540    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1431541    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1431542   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1431543   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1431544   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1431545   +
1431546   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431547   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1431548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431549   +LABEL GRP_AcceptedCmp5 =
1431550   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1431551   +
1431552   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1431553   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1431554   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1431555   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1431556   +end;
MPRINT(EM_DIAGRAM):   end;
1431557   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1431558   +if (_UFORMAT eq '0'
1431559   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1431560   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1431561   +end;
MPRINT(EM_DIAGRAM):   end;
1431562   +else
1431563   +if (_UFORMAT eq '1'
1431564   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1431565   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1431566   +end;
MPRINT(EM_DIAGRAM):   end;
1431567   +else do;
MPRINT(EM_DIAGRAM):   else do;
1431568   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1431569   +end;
MPRINT(EM_DIAGRAM):   end;
1431570   +end;
MPRINT(EM_DIAGRAM):   end;
1431571   +
1431572   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431573   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1431574   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431575   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1431576   +
1431577   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1431578   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1431579   +end;
MPRINT(EM_DIAGRAM):   end;
1431580   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1431581   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1431582   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1431583   +end;
MPRINT(EM_DIAGRAM):   end;
1431584   +else
1431585   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1431586   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1431587   +end;
MPRINT(EM_DIAGRAM):   end;
1431588   +else
1431589   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1431590   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1431591   +end;
MPRINT(EM_DIAGRAM):   end;
1431592   +else
1431593   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1431594   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1431595   +end;
MPRINT(EM_DIAGRAM):   end;
1431596   +end;
MPRINT(EM_DIAGRAM):   end;
1431597   +
1431598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431599   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1431600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431601   +LABEL GRP_Income =
1431602   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1431603   +
1431604   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1431605   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1431606   +end;
MPRINT(EM_DIAGRAM):   end;
1431607   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1431608   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1431609   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1431610   +end;
MPRINT(EM_DIAGRAM):   end;
1431611   +else
1431612   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1431613   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1431614   +end;
MPRINT(EM_DIAGRAM):   end;
1431615   +else
1431616   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1431617   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1431618   +end;
MPRINT(EM_DIAGRAM):   end;
1431619   +else
1431620   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1431621   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1431622   +end;
MPRINT(EM_DIAGRAM):   end;
1431623   +end;
MPRINT(EM_DIAGRAM):   end;
1431624   +
1431625   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431626   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1431627   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431628   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1431629   +
1431630   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1431631   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1431632   +end;
MPRINT(EM_DIAGRAM):   end;
1431633   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1431634   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1431635   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1431636   +end;
MPRINT(EM_DIAGRAM):   end;
1431637   +else
1431638   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1431639   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1431640   +end;
MPRINT(EM_DIAGRAM):   end;
1431641   +else
1431642   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1431643   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1431644   +end;
MPRINT(EM_DIAGRAM):   end;
1431645   +else
1431646   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1431647   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1431648   +end;
MPRINT(EM_DIAGRAM):   end;
1431649   +end;
MPRINT(EM_DIAGRAM):   end;
1431650   +
1431651   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431652   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1431653   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431654   +LABEL GRP_MntFishProducts =
1431655   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1431656   +
1431657   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1431658   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1431659   +end;
MPRINT(EM_DIAGRAM):   end;
1431660   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1431661   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1431662   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1431663   +end;
MPRINT(EM_DIAGRAM):   end;
1431664   +else
1431665   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1431666   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1431667   +end;
MPRINT(EM_DIAGRAM):   end;
1431668   +else
1431669   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1431670   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1431671   +end;
MPRINT(EM_DIAGRAM):   end;
1431672   +else
1431673   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1431674   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1431675   +end;
MPRINT(EM_DIAGRAM):   end;
1431676   +end;
MPRINT(EM_DIAGRAM):   end;
1431677   +
1431678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431679   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1431680   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431681   +LABEL GRP_MntGoldProds =
1431682   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1431683   +
1431684   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1431685   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1431686   +end;
MPRINT(EM_DIAGRAM):   end;
1431687   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1431688   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1431689   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1431690   +end;
MPRINT(EM_DIAGRAM):   end;
1431691   +else
1431692   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1431693   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1431694   +end;
MPRINT(EM_DIAGRAM):   end;
1431695   +else
1431696   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1431697   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1431698   +end;
MPRINT(EM_DIAGRAM):   end;
1431699   +else
1431700   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1431701   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1431702   +end;
MPRINT(EM_DIAGRAM):   end;
1431703   +end;
MPRINT(EM_DIAGRAM):   end;
1431704   +
1431705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431706   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1431707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431708   +LABEL GRP_MntMeatProducts =
1431709   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1431710   +
1431711   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1431712   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1431713   +end;
MPRINT(EM_DIAGRAM):   end;
1431714   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1431715   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1431716   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1431717   +end;
MPRINT(EM_DIAGRAM):   end;
1431718   +else
1431719   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1431720   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1431721   +end;
MPRINT(EM_DIAGRAM):   end;
1431722   +else
1431723   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1431724   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1431725   +end;
MPRINT(EM_DIAGRAM):   end;
1431726   +else
1431727   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1431728   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1431729   +end;
MPRINT(EM_DIAGRAM):   end;
1431730   +end;
MPRINT(EM_DIAGRAM):   end;
1431731   +
1431732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431733   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1431734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431735   +LABEL GRP_MntWines =
1431736   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1431737   +
1431738   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1431739   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1431740   +end;
MPRINT(EM_DIAGRAM):   end;
1431741   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1431742   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1431743   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1431744   +end;
MPRINT(EM_DIAGRAM):   end;
1431745   +else
1431746   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1431747   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1431748   +end;
MPRINT(EM_DIAGRAM):   end;
1431749   +else
1431750   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1431751   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1431752   +end;
MPRINT(EM_DIAGRAM):   end;
1431753   +else
1431754   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1431755   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1431756   +end;
MPRINT(EM_DIAGRAM):   end;
1431757   +end;
MPRINT(EM_DIAGRAM):   end;
1431758   +
1431759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431760   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1431761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431762   +LABEL GRP_NumCatalogPurchases =
1431763   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1431764   +
1431765   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1431766   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1431767   +end;
MPRINT(EM_DIAGRAM):   end;
1431768   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1431769   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1431770   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1431771   +end;
MPRINT(EM_DIAGRAM):   end;
1431772   +else
1431773   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1431774   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1431775   +end;
MPRINT(EM_DIAGRAM):   end;
1431776   +else
1431777   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1431778   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1431779   +end;
MPRINT(EM_DIAGRAM):   end;
1431780   +else
1431781   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1431782   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1431783   +end;
MPRINT(EM_DIAGRAM):   end;
1431784   +end;
MPRINT(EM_DIAGRAM):   end;
1431785   +
1431786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431787   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1431788   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431789   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1431790   +
1431791   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1431792   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1431793   +end;
MPRINT(EM_DIAGRAM):   end;
1431794   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1431795   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1431796   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1431797   +end;
MPRINT(EM_DIAGRAM):   end;
1431798   +else
1431799   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1431800   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1431801   +end;
MPRINT(EM_DIAGRAM):   end;
1431802   +else
1431803   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1431804   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1431805   +end;
MPRINT(EM_DIAGRAM):   end;
1431806   +else
1431807   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1431808   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1431809   +end;
MPRINT(EM_DIAGRAM):   end;
1431810   +end;
MPRINT(EM_DIAGRAM):   end;
1431811   +
1431812   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431813   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1431814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431815   +LABEL GRP_NumWebPurchases =
1431816   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1431817   +
1431818   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1431819   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1431820   +end;
MPRINT(EM_DIAGRAM):   end;
1431821   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1431822   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1431823   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1431824   +end;
MPRINT(EM_DIAGRAM):   end;
1431825   +else
1431826   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1431827   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1431828   +end;
MPRINT(EM_DIAGRAM):   end;
1431829   +else
1431830   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1431831   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1431832   +end;
MPRINT(EM_DIAGRAM):   end;
1431833   +else
1431834   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1431835   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1431836   +end;
MPRINT(EM_DIAGRAM):   end;
1431837   +end;
MPRINT(EM_DIAGRAM):   end;
1431838   +
1431839   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431840   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1431841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431842   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1431843   +
1431844   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1431845   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1431846   +end;
MPRINT(EM_DIAGRAM):   end;
1431847   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1431848   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1431849   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1431850   +end;
MPRINT(EM_DIAGRAM):   end;
1431851   +else
1431852   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1431853   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1431854   +end;
MPRINT(EM_DIAGRAM):   end;
1431855   +else
1431856   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1431857   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1431858   +end;
MPRINT(EM_DIAGRAM):   end;
1431859   +else
1431860   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1431861   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1431862   +end;
MPRINT(EM_DIAGRAM):   end;
1431863   +end;
MPRINT(EM_DIAGRAM):   end;
1431864   +
1431865   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431866   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1431867   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431868   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1431869   +
1431870   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1431871   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
The SAS System

1431872   +end;
MPRINT(EM_DIAGRAM):   end;
1431873   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1431874   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1431875   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1431876   +end;
MPRINT(EM_DIAGRAM):   end;
1431877   +else
1431878   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1431879   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1431880   +end;
MPRINT(EM_DIAGRAM):   end;
1431881   +else
1431882   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1431883   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1431884   +end;
MPRINT(EM_DIAGRAM):   end;
1431885   +else
1431886   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1431887   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1431888   +end;
MPRINT(EM_DIAGRAM):   end;
1431889   +end;
MPRINT(EM_DIAGRAM):   end;
1431890   +
1431891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431892   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1431893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431894   +LABEL GRP_Recency =
1431895   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1431896   +
1431897   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1431898   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1431899   +end;
MPRINT(EM_DIAGRAM):   end;
1431900   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1431901   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1431902   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1431903   +end;
MPRINT(EM_DIAGRAM):   end;
1431904   +else
1431905   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1431906   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1431907   +end;
MPRINT(EM_DIAGRAM):   end;
1431908   +else
1431909   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1431910   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1431911   +end;
MPRINT(EM_DIAGRAM):   end;
1431912   +else
1431913   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1431914   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1431915   +end;
MPRINT(EM_DIAGRAM):   end;
1431916   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1431917    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1431918    quit;
1431919    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1431920    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1431921    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1431922    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1431923    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1431924    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1431925    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1431926    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431927    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431928    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1431929    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431930    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431931    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1431932    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1431933    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1431934    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1431935    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1431936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1431937    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1431938    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431939    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431940    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1431941    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1431942    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431943    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431944    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1431945    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1431945  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1431946    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431947    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1431948    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 449 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431949    filename _pref
1431949  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1431950    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1431951    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1431952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431953   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1431954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1431955   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1431956   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1431957   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1431958    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1431959    quit;
1431960    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1431961    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1431962    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1431963    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1431964    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1431965    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1431966    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1431967    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431969    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1431970    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431971    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431972    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1431973    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1431974    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1431975    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431976    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1431977    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1431978    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1431979    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431980    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431981    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1431982    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1431983    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1431984    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1431985    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1431986    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1431986  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1431987    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431988    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1431989    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 453 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1431990    filename _pref
1431990  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1431991    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1431992    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1431993   +
1431994   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1431995   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1431995  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1431996   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1431997   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1431998   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1431999   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1432000   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1432001    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1432002    quit;
1432003    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1432004    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1432005    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1432006    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1432007    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1432008    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432009    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1432010    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1432011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1432012    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1432013    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1432014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432015    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1432016    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1432017    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1432018    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432019    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1432020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1432021    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1432022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1432023    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432024    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1432025    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1432026    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1432027    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432028    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1432029    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1432029  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1432030    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1432031    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1432032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432033    filename _pref
1432033  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1432034    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1432035    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1432036   +
1432037   +
1432038   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1432039   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1432040   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1432041   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1432042   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1432043   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1432044   +
1432045   +
1432046   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1432047   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1432048   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1432049   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1432050   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1432051   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1432052   +
1432053   +
1432054   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1432055   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1432056   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1432057   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1432058   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1432059   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1432060   +
1432061   +
1432062   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1432063   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1432064   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1432065   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1432066   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1432067   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1432068   +
1432069   +
1432070   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1432071   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1432072   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1432073   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1432074   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1432075   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1432076   +
1432077   +
1432078   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1432079   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1432080   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1432081   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1432082   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1432083   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1432084   +
1432085   +
1432086   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1432087   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1432088   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1432089   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1432090   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1432091   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1432092   +
1432093   +
1432094   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1432095   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1432096   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1432097   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1432098   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1432099   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1432100   +if
1432101   +_FILTERNORM1 not in ( '.')
1432102   + and
1432103   +_FILTERNORM2 not in ( '.')
1432104   + and
1432105   +_FILTERNORM3 not in ( '.')
1432106   + and
1432107   +_FILTERNORM4 not in ( '.')
1432108   + and
1432109   +_FILTERNORM5 not in ( '.')
1432110   + and
1432111   +_FILTERNORM6 not in ( '.')
1432112   + and
1432113   +_FILTERNORM7 not in ( ' ')
1432114   + and
1432115   +_FILTERNORM8 not in ( ' ')
1432116   +and
1432117   +( Dt_Customer ne .)
1432118   +and ( Income ne . and (Income<=107000))
1432119   +and ( Kidhome ne .)
1432120   +and ( MntFishProducts ne .)
1432121   +and ( MntFruits ne .)
1432122   +and ( MntGoldProds ne .)
1432123   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1432124   +and ( MntSweetProducts ne .)
1432125   +and ( MntWines ne .)
1432126   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1432127   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1432128   +and ( NumStorePurchases ne .)
1432129   +and ( NumWebPurchases ne .)
1432130   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1432131   +and ( Recency ne .)
1432132   +and ( Teenhome ne .)
1432133   +and ( Year_Birth ne .)
1432134   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1432135   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1432136   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1432137   +end;
MPRINT(EM_DIAGRAM):   end;
1432138   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1432139   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1432140    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1432141    quit;
1432142    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1432143    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1432144    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1432145    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1432146    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1432147    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432148    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1432149    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1432150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1432151    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1432152    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1432153    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432154    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1432155    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1432156    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1432157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432158    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1432159    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1432160    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1432161    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1432162    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432163    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1432164    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1432165    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1432166    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432167    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1432168    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1432168  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1432169    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432170    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1432171    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 558 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432172    %macro varDept(fcmpdata=,id=);
1432173    %global nobs&id scoreFlag&id;
1432174    %let scoreFlag&id = 0;
1432175    %if &id=1 or ^&fcmpStart %then %do;
1432176    proc sort data=&fcmpdata out=_temp&id nodupkey;
1432177    by NAME;
1432178    where id=&id and LHS in( %let j=1;
1432179    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1432180    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1432181    "&var" %let j = %eval(&j+1);
1432182    %end;
1432183    );
1432184    run;
1432185    %let dsid = %sysfunc(open(_temp&id));
1432186    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1432187    %let dsid = %sysfunc(close(&dsid));
1432188    %if &&nobs&id %then %do;
1432189    %let scoreFlag&id = 1;
1432190    %let fcmpStart = 1;
1432191    %end;
1432192    %else %let fcmpStart = 0;
1432193    %end;
1432194    %else %do;
1432195    proc sort data=&fcmpdata out=_tempid;
1432196    where id=&id;
1432197    by LHS;
1432198    run;
1432199    %let dsid = %sysfunc(open(_tempid));
1432200    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1432201    %let dsid = %sysfunc(close(&dsid));
1432202    %if ^&&nobs&id %then %do;
1432203    proc datasets lib=work nolist;
1432204    delete _tempid;
1432205    run;
1432206    quit;
1432207    %end;
1432208    %else %do;
1432209    data _tempAll;
1432210    set %let j=%eval(&id-1);
1432211    %do x=1 %to &j;
1432212    %if &&nobs&x %then %do;
1432213    _temp&x %end;
1432214    %end;
1432215    ;
1432216    run;
1432217    proc sql;
1432218    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1432218  ! work._tempid p2 where p.name=p2.lhs;
1432219    quit;
1432220    data _temp&id;
1432221    set _temp&id;
1432222    where LHS ne '' and NAME ne '' and Node ne '';
1432223    run;
1432224    proc datasets lib=work nolist;
1432225    delete _tempAll;
1432226    run;
1432227    %let dsid = %sysfunc(open(_temp&id));
1432228    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1432229    %let dsid = %sysfunc(close(&dsid));
1432230    %if ^&&nobs&id %then %do;
1432231    proc datasets lib=work nolist;
1432232    delete _temp&id;
1432233    run;
1432234    quit;
1432235    %end;
1432236    %else %do;
1432237    %let scoreFlag&id = 1;
1432238    data _temp&id;
1432239    set _temp&id;
1432240    where LHS ne NAME and node ne '';
1432241    run;
1432242    %let dsid = %sysfunc(open(_temp&id));
1432243    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1432244    %let dsid = %sysfunc(close(&dsid));
1432245    %if ^&&nobs&id %then %do;
1432246    proc datasets lib=work nolist;
1432247    delete _temp&id;
1432248    run;
1432249    quit;
1432250    %end;
1432251    %else %do;
1432252    proc sort data=_temp&id nodupkey;
1432253    by LHS NAME;
1432254    run;
1432255    %end;
1432256    %end;
1432257    %end;
1432258    %end;
1432259    %mend varDept;
1432260    %macro optCode(outdata=fcmpdata);
1432261    %global fcmpStart;
1432262    %let fcmpStart = 0;
1432263    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1432264    %let NumNodes=9;
1432265    %do k=1 %to &NumNodes;
1432266    %vardept(fcmpdata=&outdata, id=&k);
1432267    %end;
1432268    %mend optCode;
1432269    %optcode(outData=EMWS8.Ensmbl17_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 44 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 10 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1432270    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1432271    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1432272    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1432273    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1432274    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1432275    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1432276    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1432277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432278    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1432279    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1432279  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1432280    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1432281    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1432282    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1432283    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432284    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1432285    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1432286    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1432287    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432288    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1432289    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1432290    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1432291    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1432292    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1432293    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1432293  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 10 rows and 3 columns.

1432294    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1432295    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1432296    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1432297    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 10 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1432298    filename _pref
1432298  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
1432299    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1432300    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas.
1432301   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1432302   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1432303   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1432304   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1432305   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1432306   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1432307   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1432308   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1432309   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1432310   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1432311   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1432312   +LENGTH _WARN_ $4
1432313   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1432314   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1432315   +
1432316   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1432317   +
1432318   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1432319   +
1432320   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1432321   +
1432322   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1432323   +
1432324   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1432325   +
1432326   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1432327   +
1432328   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1432329   +
1432330   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1432331   +
1432332   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1432333   +
1432334   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1432335   +
1432336   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1432337   +
1432338   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1432339   +
1432340   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1432341   +
1432342   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1432343   +
1432344   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1432345   +
1432346   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1432347   +
1432348   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1432349   +
1432350   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1432351   +
1432352   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1432353   +
1432354   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1432355   +
1432356   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1432357   +
1432358   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1432359   +
1432360   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1432361   +
1432362   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1432363   +
1432364   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1432365   +
1432366   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1432367   +
1432368   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1432369   +
1432370   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1432371   +
1432372   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1432373   +
1432374   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1432375   +
1432376   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1432377   +
1432378   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1432379   +
1432380   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1432381   +
1432382   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1432383   +
1432384   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1432385   +
1432386   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1432387   +
1432388   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1432389   +
1432390   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1432391   +
1432392   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1432393   +
1432394   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1432395   +
1432396   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1432397   +
1432398   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1432399   +
1432400   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1432401   +
1432402   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1432403   +
1432404   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1432405   +
1432406   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1432407   +
1432408   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1432409   +
1432410   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1432411   +
1432412   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1432413   +
1432414   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1432415   +
1432416   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1432417   +
1432418   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1432419   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1432420   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1432421   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1432422   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432423   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432424   +end;
MPRINT(EM_DIAGRAM):   end;
1432425   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432426   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432427   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1432428   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432429   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1432430   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1432431   +   end;
MPRINT(EM_DIAGRAM):   end;
1432432   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1432433   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1432434   +   end;
MPRINT(EM_DIAGRAM):   end;
1432435   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432436   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1432437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432439   +   end;
MPRINT(EM_DIAGRAM):   end;
1432440   +end;
MPRINT(EM_DIAGRAM):   end;
1432441   +
1432442   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1432443   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1432444   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1432445   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1432446   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1432447   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1432448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432450   +end;
MPRINT(EM_DIAGRAM):   end;
1432451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432453   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1432454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432455   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1432456   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1432457   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1432458   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1432459   +   end;
MPRINT(EM_DIAGRAM):   end;
1432460   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1432461   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1432462   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1432463   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1432464   +   end;
MPRINT(EM_DIAGRAM):   end;
1432465   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432466   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1432467   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1432468   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1432469   +   end;
MPRINT(EM_DIAGRAM):   end;
1432470   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432471   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1432472   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1432473   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1432474   +   end;
MPRINT(EM_DIAGRAM):   end;
1432475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432476   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1432477   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1432478   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1432479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432481   +   end;
MPRINT(EM_DIAGRAM):   end;
1432482   +end;
MPRINT(EM_DIAGRAM):   end;
1432483   +
1432484   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1432485   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1432486   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1432487   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1432488   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1432489   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1432490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432492   +end;
MPRINT(EM_DIAGRAM):   end;
1432493   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432495   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1432496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432497   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1432498   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1432499   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1432500   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1432501   +   end;
MPRINT(EM_DIAGRAM):   end;
1432502   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432503   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1432504   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1432505   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1432506   +   end;
MPRINT(EM_DIAGRAM):   end;
1432507   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1432508   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1432509   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1432510   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1432511   +   end;
MPRINT(EM_DIAGRAM):   end;
1432512   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432513   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1432514   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1432515   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1432516   +   end;
MPRINT(EM_DIAGRAM):   end;
1432517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432518   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1432519   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1432520   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1432521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432523   +   end;
MPRINT(EM_DIAGRAM):   end;
1432524   +end;
MPRINT(EM_DIAGRAM):   end;
1432525   +
1432526   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1432527   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1432528   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1432529   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1432530   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1432531   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1432532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432534   +end;
MPRINT(EM_DIAGRAM):   end;
1432535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432537   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1432538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432539   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1432540   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1432541   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1432542   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1432543   +   end;
MPRINT(EM_DIAGRAM):   end;
1432544   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1432545   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1432546   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1432547   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1432548   +   end;
MPRINT(EM_DIAGRAM):   end;
1432549   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432550   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1432551   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1432552   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1432553   +   end;
MPRINT(EM_DIAGRAM):   end;
1432554   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432555   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1432556   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1432557   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1432558   +   end;
MPRINT(EM_DIAGRAM):   end;
1432559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432560   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1432561   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1432562   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1432563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432565   +   end;
MPRINT(EM_DIAGRAM):   end;
1432566   +end;
MPRINT(EM_DIAGRAM):   end;
1432567   +
1432568   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1432569   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1432570   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1432571   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1432572   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1432573   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1432574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432576   +end;
MPRINT(EM_DIAGRAM):   end;
1432577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432579   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1432580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432581   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1432582   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1432583   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1432584   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1432585   +   end;
MPRINT(EM_DIAGRAM):   end;
1432586   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1432587   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1432588   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1432589   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1432590   +   end;
MPRINT(EM_DIAGRAM):   end;
1432591   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432592   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1432593   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1432594   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1432595   +   end;
MPRINT(EM_DIAGRAM):   end;
1432596   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432597   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1432598   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1432599   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1432600   +   end;
MPRINT(EM_DIAGRAM):   end;
1432601   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432602   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1432603   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1432604   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1432605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432607   +   end;
MPRINT(EM_DIAGRAM):   end;
1432608   +end;
MPRINT(EM_DIAGRAM):   end;
1432609   +
1432610   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1432611   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1432612   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1432613   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1432614   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1432615   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1432616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432618   +end;
MPRINT(EM_DIAGRAM):   end;
1432619   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432620   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432621   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1432622   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432623   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1432624   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1432625   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1432626   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1432627   +   end;
MPRINT(EM_DIAGRAM):   end;
1432628   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432629   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1432630   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1432631   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1432632   +   end;
MPRINT(EM_DIAGRAM):   end;
1432633   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1432634   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1432635   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1432636   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1432637   +   end;
MPRINT(EM_DIAGRAM):   end;
1432638   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432639   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1432640   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1432641   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1432642   +   end;
MPRINT(EM_DIAGRAM):   end;
1432643   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432644   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1432645   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1432646   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1432647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432649   +   end;
MPRINT(EM_DIAGRAM):   end;
1432650   +end;
MPRINT(EM_DIAGRAM):   end;
1432651   +
1432652   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1432653   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1432654   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1432655   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1432656   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1432657   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1432658   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432659   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432660   +end;
MPRINT(EM_DIAGRAM):   end;
1432661   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432662   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432663   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1432664   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432665   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1432666   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1432667   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1432668   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1432669   +   end;
MPRINT(EM_DIAGRAM):   end;
1432670   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432671   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1432672   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1432673   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1432674   +   end;
MPRINT(EM_DIAGRAM):   end;
1432675   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1432676   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1432677   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1432678   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1432679   +   end;
MPRINT(EM_DIAGRAM):   end;
1432680   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432681   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1432682   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1432683   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1432684   +   end;
MPRINT(EM_DIAGRAM):   end;
1432685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432686   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1432687   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1432688   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1432689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432691   +   end;
MPRINT(EM_DIAGRAM):   end;
1432692   +end;
MPRINT(EM_DIAGRAM):   end;
1432693   +
1432694   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1432695   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1432696   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1432697   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1432698   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1432699   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1432700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432702   +end;
MPRINT(EM_DIAGRAM):   end;
1432703   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432704   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432705   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1432706   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432707   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1432708   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1432709   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1432710   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1432711   +   end;
MPRINT(EM_DIAGRAM):   end;
1432712   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1432713   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1432714   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1432715   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1432716   +   end;
MPRINT(EM_DIAGRAM):   end;
1432717   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432718   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1432719   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1432720   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1432721   +   end;
MPRINT(EM_DIAGRAM):   end;
1432722   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432723   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1432724   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1432725   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1432726   +   end;
MPRINT(EM_DIAGRAM):   end;
1432727   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432728   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1432729   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1432730   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1432731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432733   +   end;
MPRINT(EM_DIAGRAM):   end;
1432734   +end;
MPRINT(EM_DIAGRAM):   end;
1432735   +
1432736   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1432737   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1432738   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1432739   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1432740   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1432741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432743   +end;
MPRINT(EM_DIAGRAM):   end;
1432744   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432745   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432746   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1432747   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432748   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1432749   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1432750   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1432751   +   end;
MPRINT(EM_DIAGRAM):   end;
1432752   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1432753   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1432754   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1432755   +   end;
MPRINT(EM_DIAGRAM):   end;
1432756   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432757   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1432758   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1432759   +   end;
MPRINT(EM_DIAGRAM):   end;
1432760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432761   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1432762   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1432763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432765   +   end;
MPRINT(EM_DIAGRAM):   end;
1432766   +end;
MPRINT(EM_DIAGRAM):   end;
1432767   +
1432768   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1432769   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1432770   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1432771   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1432772   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1432773   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1432774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432776   +end;
MPRINT(EM_DIAGRAM):   end;
1432777   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432778   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432779   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1432780   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432781   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1432782   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1432783   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1432784   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1432785   +   end;
MPRINT(EM_DIAGRAM):   end;
1432786   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432787   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1432788   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1432789   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1432790   +   end;
MPRINT(EM_DIAGRAM):   end;
1432791   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432792   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1432793   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1432794   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1432795   +   end;
MPRINT(EM_DIAGRAM):   end;
1432796   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1432797   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1432798   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1432799   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1432800   +   end;
MPRINT(EM_DIAGRAM):   end;
1432801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432802   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1432803   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1432804   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1432805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432807   +   end;
MPRINT(EM_DIAGRAM):   end;
1432808   +end;
MPRINT(EM_DIAGRAM):   end;
1432809   +
1432810   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1432811   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1432812   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1432813   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1432814   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1432815   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1432816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432818   +end;
MPRINT(EM_DIAGRAM):   end;
1432819   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432821   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1432822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432823   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1432824   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1432825   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1432826   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1432827   +   end;
MPRINT(EM_DIAGRAM):   end;
1432828   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1432829   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1432830   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1432831   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1432832   +   end;
MPRINT(EM_DIAGRAM):   end;
1432833   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432834   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1432835   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1432836   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1432837   +   end;
MPRINT(EM_DIAGRAM):   end;
1432838   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432839   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1432840   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1432841   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1432842   +   end;
MPRINT(EM_DIAGRAM):   end;
1432843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432844   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1432845   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1432846   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1432847   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432848   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432849   +   end;
MPRINT(EM_DIAGRAM):   end;
1432850   +end;
MPRINT(EM_DIAGRAM):   end;
1432851   +
1432852   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1432853   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1432854   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1432855   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1432856   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1432857   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1432858   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432859   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432860   +end;
MPRINT(EM_DIAGRAM):   end;
1432861   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432862   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432863   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1432864   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432865   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1432866   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1432867   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1432868   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1432869   +   end;
MPRINT(EM_DIAGRAM):   end;
1432870   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1432871   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1432872   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1432873   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1432874   +   end;
MPRINT(EM_DIAGRAM):   end;
1432875   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1432876   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1432877   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1432878   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1432879   +   end;
MPRINT(EM_DIAGRAM):   end;
1432880   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432881   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1432882   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1432883   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1432884   +   end;
MPRINT(EM_DIAGRAM):   end;
1432885   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432886   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1432887   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1432888   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1432889   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432890   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432891   +   end;
MPRINT(EM_DIAGRAM):   end;
1432892   +end;
MPRINT(EM_DIAGRAM):   end;
1432893   +
1432894   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1432895   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1432896   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1432897   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1432898   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1432899   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1432900   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432901   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432902   +end;
MPRINT(EM_DIAGRAM):   end;
1432903   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432904   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432905   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1432906   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432907   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1432908   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1432909   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1432910   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1432911   +   end;
MPRINT(EM_DIAGRAM):   end;
1432912   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1432913   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1432914   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1432915   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1432916   +   end;
MPRINT(EM_DIAGRAM):   end;
1432917   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432918   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1432919   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1432920   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1432921   +   end;
MPRINT(EM_DIAGRAM):   end;
1432922   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432923   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1432924   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1432925   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1432926   +   end;
MPRINT(EM_DIAGRAM):   end;
1432927   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432928   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1432929   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1432930   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1432931   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432932   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432933   +   end;
MPRINT(EM_DIAGRAM):   end;
1432934   +end;
MPRINT(EM_DIAGRAM):   end;
1432935   +
1432936   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1432937   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1432938   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1432939   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1432940   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1432941   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1432942   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1432943   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432944   +end;
MPRINT(EM_DIAGRAM):   end;
1432945   +else do;
MPRINT(EM_DIAGRAM):   else do;
1432946   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1432947   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1432948   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1432949   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1432950   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1432951   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1432952   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1432953   +   end;
MPRINT(EM_DIAGRAM):   end;
1432954   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1432955   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1432956   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1432957   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1432958   +   end;
MPRINT(EM_DIAGRAM):   end;
1432959   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1432960   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1432961   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1432962   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1432963   +   end;
MPRINT(EM_DIAGRAM):   end;
1432964   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1432965   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1432966   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1432967   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1432968   +   end;
MPRINT(EM_DIAGRAM):   end;
1432969   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1432970   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1432971   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1432972   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1432973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1432974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432975   +   end;
MPRINT(EM_DIAGRAM):   end;
1432976   +end;
MPRINT(EM_DIAGRAM):   end;
1432977   +
1432978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1432979   +*** Checking missing input Interval
1432980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1432981   +
1432982   +IF NMISS(
1432983   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1432984   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1432985   +
1432986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1432987   +END;
MPRINT(EM_DIAGRAM):   END;
1432988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1432989   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1432990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1432991   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1432992   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1432993   +END;
MPRINT(EM_DIAGRAM):   END;
1432994   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1432995   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1432996   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1432997   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1432998   +END;
MPRINT(EM_DIAGRAM):   END;
1432999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1433000   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1433001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1433002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1433003   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1433004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1433005   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1433006   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1433007   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1433008   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1433009   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1433010   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1433011   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1433012   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1433013   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1433014   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1433015   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1433016   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1433017   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1433018   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1433019   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1433020   +          +    -0.04697385312971 * GRP_MntFishProducts3
1433021   +          +     0.05477300056491 * GRP_MntFishProducts4
1433022   +          +    -0.21182877070793 * GRP_MntGoldProds2
1433023   +          +    -0.06202001203906 * GRP_MntGoldProds3
1433024   +          +    -0.23297283739715 * GRP_MntGoldProds4
1433025   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1433026   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1433027   +          +     0.01711044358319 * GRP_MntMeatProducts4
1433028   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1433029   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1433030   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1433031   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1433032   +          +     0.11565917560156 * GRP_NumDistPurchases2
1433033   +          +      0.1678532898895 * GRP_NumDistPurchases3
1433034   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1433035   +          +     0.09970745707934 * GRP_NumWebPurchases2
1433036   +          +     0.02961221360107 * GRP_NumWebPurchases3
1433037   +          +     0.02261054892411 * GRP_NumWebPurchases4
1433038   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1433039   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1433040   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1433041   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1433042   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1433043   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 * 
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 * 
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 + 
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 + 
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 + 
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 + 
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 + 
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 + 
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741 
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 * 
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 * 
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 * 
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 * 
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 * 
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 + 
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 * 
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 + 
-0.07522056103469 * GRP_Recency4 ;
1433044   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1433045   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1433046   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1433047   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1433048   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1433049   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1433050   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1433051   +          +     0.26645530981311 * GRP_MntFishProducts3
1433052   +          +    -0.17631072283513 * GRP_MntFishProducts4
1433053   +          +    -0.35439521021691 * GRP_MntGoldProds2
1433054   +          +     0.11419663880206 * GRP_MntGoldProds3
1433055   +          +     0.07288749113866 * GRP_MntGoldProds4
1433056   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1433057   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1433058   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1433059   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1433060   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1433061   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1433062   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1433063   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1433064   +          +     0.10139595392447 * GRP_NumDistPurchases3
1433065   +          +     0.05251891244468 * GRP_NumDistPurchases4
1433066   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1433067   +          +      0.0263831646971 * GRP_NumWebPurchases3
1433068   +          +     0.26495059708503 * GRP_NumWebPurchases4
1433069   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1433070   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1433071   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1433072   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1433073   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1433074   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 * 
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 * 
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 + 
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 + 
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 + 
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 + 
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 + 
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 + 
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123 
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 * 
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 * 
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 * 
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 * 
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 * 
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 + 
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 * 
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 + 
-0.4970729472837 * GRP_Recency4 ;
1433075   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1433076   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1433077   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1433078   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1433079   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1433080   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1433081   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1433082   +          +     0.02714802509094 * GRP_MntFishProducts3
1433083   +          +     0.27119078554613 * GRP_MntFishProducts4
1433084   +          +     0.19322428614339 * GRP_MntGoldProds2
1433085   +          +     0.34778546410632 * GRP_MntGoldProds3
1433086   +          +    -0.06570146779096 * GRP_MntGoldProds4
1433087   +          +     0.44935275650977 * GRP_MntMeatProducts2
1433088   +          +     0.00805794344265 * GRP_MntMeatProducts3
1433089   +          +     0.02445782833023 * GRP_MntMeatProducts4
1433090   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1433091   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1433092   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1433093   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1433094   +          +     0.03481806823908 * GRP_NumDistPurchases2
1433095   +          +      0.0546202479864 * GRP_NumDistPurchases3
1433096   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1433097   +          +     0.28307550964921 * GRP_NumWebPurchases2
1433098   +          +     0.31503543231591 * GRP_NumWebPurchases3
1433099   +          +     0.24817135719308 * GRP_NumWebPurchases4
1433100   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1433101   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1433102   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1433103   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1433104   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1433105   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 * 
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 * 
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 + 
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 + 
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 + 
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 + 
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 + 
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 + 
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 + 
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 * 
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 * 
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 * 
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 * 
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 * 
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 + 
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 * 
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 + 
0.05823801065489 * GRP_Recency4 ;
1433106   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1433107   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1433108   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1433109   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1433110   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1433111   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1433112   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1433113   +          +    -0.08997232581072 * GRP_MntFishProducts3
1433114   +          +    -0.05669599356928 * GRP_MntFishProducts4
1433115   +          +      0.2199150131909 * GRP_MntGoldProds2
1433116   +          +     0.05584571259838 * GRP_MntGoldProds3
1433117   +          +    -0.13160142309505 * GRP_MntGoldProds4
1433118   +          +      0.2539849640816 * GRP_MntMeatProducts2
1433119   +          +     0.29448191059312 * GRP_MntMeatProducts3
1433120   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1433121   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1433122   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1433123   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1433124   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1433125   +          +     0.38206153529506 * GRP_NumDistPurchases2
1433126   +          +     0.08642998303162 * GRP_NumDistPurchases3
1433127   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1433128   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1433129   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1433130   +          +     0.23030028338396 * GRP_NumWebPurchases4
1433131   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1433132   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1433133   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1433134   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1433135   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1433136   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 * 
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 * 
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 + 
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 + 
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 + 
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 + 
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816 
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 * 
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 + 
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 + 
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 + 
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 + 
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 + 
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062 
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 + 
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 * 
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1433137   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1433138   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1433139   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1433140   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1433141   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1433142   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1433143   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1433144   +          +    -0.04439366722112 * GRP_MntFishProducts3
1433145   +          +    -0.22939355735301 * GRP_MntFishProducts4
1433146   +          +    -0.00367144103801 * GRP_MntGoldProds2
1433147   +          +      -0.033315128385 * GRP_MntGoldProds3
1433148   +          +     0.10655545066126 * GRP_MntGoldProds4
1433149   +          +     0.04927093675686 * GRP_MntMeatProducts2
1433150   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1433151   +          +     0.29394273234417 * GRP_MntMeatProducts4
1433152   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1433153   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1433154   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1433155   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1433156   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1433157   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1433158   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1433159   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1433160   +          +     0.37113277513001 * GRP_NumWebPurchases3
1433161   +          +     0.05720653023952 * GRP_NumWebPurchases4
1433162   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1433163   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1433164   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1433165   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1433166   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1433167   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 * 
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 * 
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 + 
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 + 
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 + 
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 + 
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686 
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 * 
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 + 
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 + 
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 + 
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 + 
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 + 
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842 
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 + 
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 * 
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1433168   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1433169   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1433170   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1433171   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1433172   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1433173   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1433174   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1433175   +          +     0.04340555393469 * GRP_MntFishProducts3
1433176   +          +    -0.20048219926361 * GRP_MntFishProducts4
1433177   +          +     0.16101452165456 * GRP_MntGoldProds2
1433178   +          +    -0.04467647211336 * GRP_MntGoldProds3
1433179   +          +     0.32142013598241 * GRP_MntGoldProds4
1433180   +          +     0.29741565154233 * GRP_MntMeatProducts2
1433181   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1433182   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1433183   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1433184   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1433185   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1433186   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1433187   +          +     0.36107050137299 * GRP_NumDistPurchases2
1433188   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1433189   +          +     0.10557004956787 * GRP_NumDistPurchases4
1433190   +          +     0.04608069099876 * GRP_NumWebPurchases2
1433191   +          +     0.15561947954396 * GRP_NumWebPurchases3
1433192   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1433193   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1433194   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1433195   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1433196   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1433197   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1433198   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 * 
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 * 
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 + 
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 + 
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 + 
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 + 
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 + 
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 + 
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 + 
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 * 
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 * 
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 * 
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 * 
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 * 
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 + 
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 * 
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 + 
-0.0282277663071 * GRP_Recency4 ;
1433199   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1433200   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1433201   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1433202   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1433203   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1433204   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1433205   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1433206   +          +    -0.20032703571491 * GRP_MntFishProducts3
1433207   +          +    -0.08348811352746 * GRP_MntFishProducts4
1433208   +          +    -0.00744131870881 * GRP_MntGoldProds2
1433209   +          +    -0.27347309859096 * GRP_MntGoldProds3
1433210   +          +    -0.04458870469416 * GRP_MntGoldProds4
1433211   +          +     0.17538261434498 * GRP_MntMeatProducts2
1433212   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1433213   +          +     0.03113249898233 * GRP_MntMeatProducts4
1433214   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1433215   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1433216   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1433217   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1433218   +          +     0.20540014620209 * GRP_NumDistPurchases2
1433219   +          +     0.17744784873298 * GRP_NumDistPurchases3
1433220   +          +      -0.003486430833 * GRP_NumDistPurchases4
1433221   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1433222   +          +     0.07245829152192 * GRP_NumWebPurchases3
1433223   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1433224   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1433225   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1433226   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1433227   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1433228   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1433229   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 * 
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 * 
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 + 
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 + 
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 + 
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 + 
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 + 
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 + 
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 + 
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 * 
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 * 
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 * 
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 * 
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 * 
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 + 
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 * 
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 + 
-0.0157357289132 * GRP_Recency4 ;
1433230   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1433231   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1433232   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1433233   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1433234   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1433235   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1433236   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1433237   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1433238   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1433239   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1433240   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1433241   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1433242   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1433243   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1433244   +END;
MPRINT(EM_DIAGRAM):   END;
1433245   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1433246   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1433247   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1433248   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1433249   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1433250   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1433251   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1433252   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1433253   +END;
MPRINT(EM_DIAGRAM):   END;
1433254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1433255   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1433256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1433257   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1433258   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1433259   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1433260   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1433261   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 + 
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746 
* H16 + -0.29329090231091 * H17 ;
1433262   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1433263   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1433264   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1433265   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1433266   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1433267   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1433268   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1433269   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1433270   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1433271   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1433272   +END;
MPRINT(EM_DIAGRAM):   END;
1433273   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1433274   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1433275   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1433276   +END;
MPRINT(EM_DIAGRAM):   END;
1433277   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1433278   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1433279   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1433280   +END;
MPRINT(EM_DIAGRAM):   END;
1433281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1433282   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1433283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1433284   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1433285   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1433286   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1433287   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1433288   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1433289   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1433290   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1433291   +END;
MPRINT(EM_DIAGRAM):   END;
1433292   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1433293   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1433294   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1433295   +drop
1433296   +H11
1433297   +H12
1433298   +H13
1433299   +H14
1433300   +H15
1433301   +H16
1433302   +H17
1433303   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1433304   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1433305    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1433306    quit;
1433307    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1433308    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1433309    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1433310    retain ID 2 Node "Neural18";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural18";
1433311    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1433312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2256 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433313    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1433314    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2256 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433316    proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
1433317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433318    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL18_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433319    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1433320    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1433321    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1433322    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433323    proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
1433324    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433325    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1433326    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433328    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1433329    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1433330    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433331    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433332    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1433333    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1433333  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 985 rows and 5 columns.

1433334    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433335    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1433336    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 985 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 985 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433337    filename _pref
1433337  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1433338    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1433339    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1433340   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1433341   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1433342   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1433343   +
1433344   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433345   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1433346   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433347   +LABEL GRP_AcceptedCmp5 =
1433348   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1433349   +
1433350   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1433351   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1433352   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1433353   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1433354   +end;
MPRINT(EM_DIAGRAM):   end;
1433355   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1433356   +if (_UFORMAT eq '0'
1433357   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1433358   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1433359   +end;
MPRINT(EM_DIAGRAM):   end;
1433360   +else
1433361   +if (_UFORMAT eq '1'
1433362   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1433363   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1433364   +end;
MPRINT(EM_DIAGRAM):   end;
1433365   +else do;
MPRINT(EM_DIAGRAM):   else do;
1433366   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1433367   +end;
MPRINT(EM_DIAGRAM):   end;
1433368   +end;
MPRINT(EM_DIAGRAM):   end;
1433369   +
1433370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433371   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1433372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433373   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1433374   +
1433375   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1433376   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1433377   +end;
MPRINT(EM_DIAGRAM):   end;
1433378   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1433379   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1433380   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1433381   +end;
MPRINT(EM_DIAGRAM):   end;
1433382   +else
1433383   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1433384   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1433385   +end;
MPRINT(EM_DIAGRAM):   end;
1433386   +else
1433387   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1433388   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1433389   +end;
MPRINT(EM_DIAGRAM):   end;
1433390   +else
1433391   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1433392   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1433393   +end;
MPRINT(EM_DIAGRAM):   end;
1433394   +end;
MPRINT(EM_DIAGRAM):   end;
1433395   +
1433396   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433397   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1433398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433399   +LABEL GRP_Income =
1433400   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1433401   +
1433402   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1433403   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1433404   +end;
MPRINT(EM_DIAGRAM):   end;
1433405   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1433406   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1433407   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1433408   +end;
MPRINT(EM_DIAGRAM):   end;
1433409   +else
1433410   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1433411   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1433412   +end;
MPRINT(EM_DIAGRAM):   end;
1433413   +else
1433414   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1433415   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1433416   +end;
MPRINT(EM_DIAGRAM):   end;
1433417   +else
1433418   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1433419   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1433420   +end;
MPRINT(EM_DIAGRAM):   end;
1433421   +end;
MPRINT(EM_DIAGRAM):   end;
1433422   +
1433423   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433424   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1433425   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433426   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1433427   +
1433428   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1433429   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1433430   +end;
MPRINT(EM_DIAGRAM):   end;
1433431   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1433432   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1433433   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1433434   +end;
MPRINT(EM_DIAGRAM):   end;
1433435   +else
1433436   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1433437   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1433438   +end;
MPRINT(EM_DIAGRAM):   end;
1433439   +else
1433440   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1433441   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1433442   +end;
MPRINT(EM_DIAGRAM):   end;
1433443   +else
1433444   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1433445   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1433446   +end;
MPRINT(EM_DIAGRAM):   end;
1433447   +end;
MPRINT(EM_DIAGRAM):   end;
1433448   +
1433449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433450   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1433451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433452   +LABEL GRP_MntFishProducts =
1433453   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1433454   +
1433455   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1433456   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1433457   +end;
MPRINT(EM_DIAGRAM):   end;
1433458   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1433459   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1433460   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1433461   +end;
MPRINT(EM_DIAGRAM):   end;
1433462   +else
1433463   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1433464   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1433465   +end;
MPRINT(EM_DIAGRAM):   end;
1433466   +else
1433467   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1433468   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1433469   +end;
MPRINT(EM_DIAGRAM):   end;
1433470   +else
1433471   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1433472   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1433473   +end;
MPRINT(EM_DIAGRAM):   end;
1433474   +end;
MPRINT(EM_DIAGRAM):   end;
1433475   +
1433476   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433477   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1433478   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433479   +LABEL GRP_MntGoldProds =
1433480   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1433481   +
1433482   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1433483   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1433484   +end;
MPRINT(EM_DIAGRAM):   end;
1433485   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1433486   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1433487   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1433488   +end;
MPRINT(EM_DIAGRAM):   end;
1433489   +else
1433490   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1433491   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1433492   +end;
MPRINT(EM_DIAGRAM):   end;
1433493   +else
1433494   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1433495   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1433496   +end;
MPRINT(EM_DIAGRAM):   end;
1433497   +else
1433498   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1433499   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1433500   +end;
MPRINT(EM_DIAGRAM):   end;
1433501   +end;
MPRINT(EM_DIAGRAM):   end;
1433502   +
1433503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433504   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1433505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433506   +LABEL GRP_MntMeatProducts =
1433507   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1433508   +
1433509   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1433510   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1433511   +end;
MPRINT(EM_DIAGRAM):   end;
1433512   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1433513   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1433514   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1433515   +end;
MPRINT(EM_DIAGRAM):   end;
1433516   +else
1433517   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1433518   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1433519   +end;
MPRINT(EM_DIAGRAM):   end;
1433520   +else
1433521   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1433522   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1433523   +end;
MPRINT(EM_DIAGRAM):   end;
1433524   +else
1433525   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1433526   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1433527   +end;
MPRINT(EM_DIAGRAM):   end;
1433528   +end;
MPRINT(EM_DIAGRAM):   end;
1433529   +
1433530   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433531   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1433532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433533   +LABEL GRP_MntWines =
1433534   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1433535   +
1433536   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1433537   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1433538   +end;
MPRINT(EM_DIAGRAM):   end;
1433539   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1433540   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1433541   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1433542   +end;
MPRINT(EM_DIAGRAM):   end;
1433543   +else
1433544   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1433545   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1433546   +end;
MPRINT(EM_DIAGRAM):   end;
1433547   +else
1433548   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1433549   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1433550   +end;
MPRINT(EM_DIAGRAM):   end;
1433551   +else
1433552   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1433553   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1433554   +end;
MPRINT(EM_DIAGRAM):   end;
1433555   +end;
MPRINT(EM_DIAGRAM):   end;
1433556   +
1433557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433558   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1433559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433560   +LABEL GRP_NumCatalogPurchases =
1433561   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1433562   +
1433563   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1433564   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1433565   +end;
MPRINT(EM_DIAGRAM):   end;
1433566   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1433567   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1433568   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1433569   +end;
MPRINT(EM_DIAGRAM):   end;
1433570   +else
1433571   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1433572   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1433573   +end;
MPRINT(EM_DIAGRAM):   end;
1433574   +else
1433575   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1433576   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1433577   +end;
MPRINT(EM_DIAGRAM):   end;
1433578   +else
1433579   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1433580   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1433581   +end;
MPRINT(EM_DIAGRAM):   end;
1433582   +end;
MPRINT(EM_DIAGRAM):   end;
1433583   +
1433584   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433585   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1433586   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433587   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1433588   +
1433589   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1433590   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1433591   +end;
MPRINT(EM_DIAGRAM):   end;
1433592   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1433593   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1433594   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1433595   +end;
MPRINT(EM_DIAGRAM):   end;
1433596   +else
1433597   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1433598   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1433599   +end;
MPRINT(EM_DIAGRAM):   end;
1433600   +else
1433601   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1433602   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1433603   +end;
MPRINT(EM_DIAGRAM):   end;
1433604   +else
1433605   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1433606   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1433607   +end;
MPRINT(EM_DIAGRAM):   end;
1433608   +end;
MPRINT(EM_DIAGRAM):   end;
1433609   +
1433610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433611   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1433612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433613   +LABEL GRP_NumWebPurchases =
1433614   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1433615   +
1433616   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1433617   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1433618   +end;
MPRINT(EM_DIAGRAM):   end;
1433619   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1433620   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1433621   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1433622   +end;
MPRINT(EM_DIAGRAM):   end;
1433623   +else
1433624   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1433625   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1433626   +end;
MPRINT(EM_DIAGRAM):   end;
1433627   +else
1433628   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1433629   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1433630   +end;
MPRINT(EM_DIAGRAM):   end;
1433631   +else
1433632   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1433633   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1433634   +end;
MPRINT(EM_DIAGRAM):   end;
1433635   +end;
MPRINT(EM_DIAGRAM):   end;
1433636   +
1433637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433638   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1433639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433640   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1433641   +
1433642   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1433643   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1433644   +end;
MPRINT(EM_DIAGRAM):   end;
1433645   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1433646   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1433647   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1433648   +end;
MPRINT(EM_DIAGRAM):   end;
1433649   +else
1433650   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1433651   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1433652   +end;
MPRINT(EM_DIAGRAM):   end;
1433653   +else
1433654   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1433655   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1433656   +end;
MPRINT(EM_DIAGRAM):   end;
1433657   +else
1433658   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1433659   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1433660   +end;
MPRINT(EM_DIAGRAM):   end;
1433661   +end;
MPRINT(EM_DIAGRAM):   end;
1433662   +
1433663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433664   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1433665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433666   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1433667   +
1433668   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1433669   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1433670   +end;
MPRINT(EM_DIAGRAM):   end;
1433671   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1433672   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1433673   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1433674   +end;
MPRINT(EM_DIAGRAM):   end;
1433675   +else
1433676   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1433677   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1433678   +end;
MPRINT(EM_DIAGRAM):   end;
1433679   +else
1433680   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1433681   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1433682   +end;
MPRINT(EM_DIAGRAM):   end;
1433683   +else
1433684   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1433685   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1433686   +end;
MPRINT(EM_DIAGRAM):   end;
1433687   +end;
MPRINT(EM_DIAGRAM):   end;
1433688   +
1433689   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433690   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1433691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433692   +LABEL GRP_Recency =
1433693   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1433694   +
1433695   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1433696   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1433697   +end;
MPRINT(EM_DIAGRAM):   end;
1433698   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1433699   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1433700   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1433701   +end;
MPRINT(EM_DIAGRAM):   end;
1433702   +else
1433703   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1433704   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1433705   +end;
MPRINT(EM_DIAGRAM):   end;
1433706   +else
1433707   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1433708   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1433709   +end;
MPRINT(EM_DIAGRAM):   end;
1433710   +else
1433711   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1433712   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1433713   +end;
MPRINT(EM_DIAGRAM):   end;
1433714   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1433715    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1433716    quit;
1433717    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1433718    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1433719    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1433720    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1433721    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1433722    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433723    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1433724    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433725    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433726    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1433727    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433729    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1433730    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1433731    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1433732    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433733    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1433734    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433735    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1433736    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433737    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433738    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1433739    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1433740    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433741    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433742    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1433743    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1433743  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1433744    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433745    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1433746    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 1000 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1433747    filename _pref
1433747  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1433748    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1433749    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1433750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433751   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1433752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1433753   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1433754   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1433755   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1433756    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1433757    quit;
1433758    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1433759    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1433760    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1433761    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1433762    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1433763    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433764    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1433765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433766    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433767    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1433768    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433769    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433770    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1433771    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1433772    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1433773    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433774    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1433775    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433776    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1433777    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433778    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1433779    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1433780    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1433781    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433782    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433783    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1433784    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1433784  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1433785    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433786    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1433787    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 1004 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433788    filename _pref
1433788  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1433789    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1433790    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1433791   +
1433792   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1433793   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1433793  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1433794   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1433795   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1433796   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1433797   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1433798   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1433799    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1433800    quit;
1433801    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1433802    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1433803    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1433804    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1433805    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1433806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1433807    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1433808    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433809    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433810    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1433811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433812    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433813    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1433814    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1433815    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1433816    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433817    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1433818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433819    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1433820    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433821    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433822    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1433823    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1433824    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433825    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433826    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1433827    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1433827  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1433828    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433829    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1433830    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 1043 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433831    filename _pref
1433831  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1433832    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1433833    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1433834   +
1433835   +
1433836   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1433837   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1433838   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1433839   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1433840   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1433841   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1433842   +
1433843   +
1433844   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1433845   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1433846   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1433847   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1433848   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1433849   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1433850   +
1433851   +
1433852   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1433853   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1433854   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1433855   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1433856   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1433857   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1433858   +
1433859   +
1433860   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1433861   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1433862   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1433863   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1433864   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1433865   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1433866   +
1433867   +
1433868   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1433869   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1433870   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1433871   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1433872   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1433873   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1433874   +
1433875   +
1433876   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1433877   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1433878   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1433879   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1433880   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1433881   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1433882   +
1433883   +
1433884   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1433885   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1433886   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1433887   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1433888   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1433889   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1433890   +
1433891   +
1433892   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1433893   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1433894   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1433895   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1433896   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1433897   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1433898   +if
1433899   +_FILTERNORM1 not in ( '.')
1433900   + and
1433901   +_FILTERNORM2 not in ( '.')
1433902   + and
1433903   +_FILTERNORM3 not in ( '.')
1433904   + and
1433905   +_FILTERNORM4 not in ( '.')
1433906   + and
1433907   +_FILTERNORM5 not in ( '.')
1433908   + and
1433909   +_FILTERNORM6 not in ( '.')
1433910   + and
1433911   +_FILTERNORM7 not in ( ' ')
1433912   + and
1433913   +_FILTERNORM8 not in ( ' ')
1433914   +and
1433915   +( Dt_Customer ne .)
1433916   +and ( Income ne . and (Income<=107000))
1433917   +and ( Kidhome ne .)
1433918   +and ( MntFishProducts ne .)
1433919   +and ( MntFruits ne .)
1433920   +and ( MntGoldProds ne .)
1433921   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1433922   +and ( MntSweetProducts ne .)
1433923   +and ( MntWines ne .)
1433924   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1433925   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1433926   +and ( NumStorePurchases ne .)
1433927   +and ( NumWebPurchases ne .)
1433928   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1433929   +and ( Recency ne .)
1433930   +and ( Teenhome ne .)
1433931   +and ( Year_Birth ne .)
1433932   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1433933   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1433934   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1433935   +end;
MPRINT(EM_DIAGRAM):   end;
1433936   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1433937   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1433938    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1433939    quit;
1433940    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1433941    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1433942    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1433943    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1433944    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1433945    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433946    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1433947    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433948    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433949    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1433950    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433951    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433952    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1433953    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1433954    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1433955    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433956    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1433957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1433958    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1433959    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433960    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433961    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1433962    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1433963    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1433964    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433965    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1433966    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1433966  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1433967    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1433968    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1433969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 1109 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1433970    %macro varDept(fcmpdata=,id=);
1433971    %global nobs&id scoreFlag&id;
1433972    %let scoreFlag&id = 0;
1433973    %if &id=1 or ^&fcmpStart %then %do;
1433974    proc sort data=&fcmpdata out=_temp&id nodupkey;
1433975    by NAME;
1433976    where id=&id and LHS in( %let j=1;
1433977    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1433978    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1433979    "&var" %let j = %eval(&j+1);
1433980    %end;
1433981    );
1433982    run;
1433983    %let dsid = %sysfunc(open(_temp&id));
1433984    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1433985    %let dsid = %sysfunc(close(&dsid));
1433986    %if &&nobs&id %then %do;
1433987    %let scoreFlag&id = 1;
1433988    %let fcmpStart = 1;
1433989    %end;
1433990    %else %let fcmpStart = 0;
1433991    %end;
1433992    %else %do;
1433993    proc sort data=&fcmpdata out=_tempid;
1433994    where id=&id;
1433995    by LHS;
1433996    run;
1433997    %let dsid = %sysfunc(open(_tempid));
1433998    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1433999    %let dsid = %sysfunc(close(&dsid));
1434000    %if ^&&nobs&id %then %do;
1434001    proc datasets lib=work nolist;
1434002    delete _tempid;
1434003    run;
1434004    quit;
1434005    %end;
1434006    %else %do;
1434007    data _tempAll;
1434008    set %let j=%eval(&id-1);
1434009    %do x=1 %to &j;
1434010    %if &&nobs&x %then %do;
1434011    _temp&x %end;
1434012    %end;
1434013    ;
1434014    run;
1434015    proc sql;
1434016    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1434016  ! work._tempid p2 where p.name=p2.lhs;
1434017    quit;
1434018    data _temp&id;
1434019    set _temp&id;
1434020    where LHS ne '' and NAME ne '' and Node ne '';
1434021    run;
1434022    proc datasets lib=work nolist;
1434023    delete _tempAll;
1434024    run;
1434025    %let dsid = %sysfunc(open(_temp&id));
1434026    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1434027    %let dsid = %sysfunc(close(&dsid));
1434028    %if ^&&nobs&id %then %do;
1434029    proc datasets lib=work nolist;
1434030    delete _temp&id;
1434031    run;
1434032    quit;
1434033    %end;
1434034    %else %do;
1434035    %let scoreFlag&id = 1;
1434036    data _temp&id;
1434037    set _temp&id;
1434038    where LHS ne NAME and node ne '';
1434039    run;
1434040    %let dsid = %sysfunc(open(_temp&id));
1434041    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1434042    %let dsid = %sysfunc(close(&dsid));
1434043    %if ^&&nobs&id %then %do;
1434044    proc datasets lib=work nolist;
1434045    delete _temp&id;
1434046    run;
1434047    quit;
1434048    %end;
1434049    %else %do;
1434050    proc sort data=_temp&id nodupkey;
1434051    by LHS NAME;
1434052    run;
1434053    %end;
1434054    %end;
1434055    %end;
1434056    %end;
1434057    %mend varDept;
1434058    %macro optCode(outdata=fcmpdata);
1434059    %global fcmpStart;
1434060    %let fcmpStart = 0;
1434061    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1434062    %let NumNodes=9;
1434063    %do k=1 %to &NumNodes;
1434064    %vardept(fcmpdata=&outdata, id=&k);
1434065    %end;
1434066    %mend optCode;
1434067    %optcode(outData=EMWS8.Ensmbl17_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1434068    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1434069    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1434070    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1434071    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1434072    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1434073    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1434074    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1434075    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1434076    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1434077    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1434077  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1434078    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1434079    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1434080    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1434081    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1434082    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1434083    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1434084    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1434085    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1434086    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1434087    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1434088    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1434089    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1434090    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1434091    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1434091  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

1434092    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1434093    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1434094    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1434095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1434096    filename _pref
1434096  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
1434097    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1434098    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas.
1434099   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1434100   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1434101   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1434102   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1434103   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1434104   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1434105   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1434106   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1434107   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1434108   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1434109   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1434110   +LENGTH _WARN_ $4
1434111   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1434112   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1434113   +
1434114   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1434115   +
1434116   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1434117   +
1434118   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1434119   +
1434120   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1434121   +
1434122   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1434123   +
1434124   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1434125   +
1434126   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1434127   +
1434128   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1434129   +
1434130   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1434131   +
1434132   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1434133   +
1434134   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1434135   +
1434136   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1434137   +
1434138   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1434139   +
1434140   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1434141   +
1434142   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1434143   +
1434144   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1434145   +
1434146   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1434147   +
1434148   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1434149   +
1434150   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1434151   +
1434152   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1434153   +
1434154   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1434155   +
1434156   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1434157   +
1434158   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1434159   +
1434160   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1434161   +
1434162   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1434163   +
1434164   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1434165   +
1434166   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1434167   +
1434168   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1434169   +
1434170   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1434171   +
1434172   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1434173   +
1434174   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1434175   +
1434176   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1434177   +
1434178   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1434179   +
1434180   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1434181   +
1434182   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1434183   +
1434184   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1434185   +
1434186   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1434187   +
1434188   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1434189   +
1434190   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1434191   +
1434192   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1434193   +
1434194   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1434195   +
1434196   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1434197   +
1434198   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1434199   +
1434200   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1434201   +
1434202   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1434203   +
1434204   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1434205   +
1434206   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1434207   +
1434208   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1434209   +
1434210   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1434211   +
1434212   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1434213   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1434214   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1434215   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1434216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434218   +end;
MPRINT(EM_DIAGRAM):   end;
1434219   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434221   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1434222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434223   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1434224   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1434225   +   end;
MPRINT(EM_DIAGRAM):   end;
1434226   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1434227   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1434228   +   end;
MPRINT(EM_DIAGRAM):   end;
1434229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434230   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1434231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434233   +   end;
MPRINT(EM_DIAGRAM):   end;
1434234   +end;
MPRINT(EM_DIAGRAM):   end;
1434235   +
1434236   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1434237   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1434238   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1434239   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1434240   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1434241   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1434242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434244   +end;
MPRINT(EM_DIAGRAM):   end;
1434245   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434247   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1434248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434249   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1434250   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1434251   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1434252   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1434253   +   end;
MPRINT(EM_DIAGRAM):   end;
1434254   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1434255   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1434256   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1434257   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1434258   +   end;
MPRINT(EM_DIAGRAM):   end;
1434259   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434260   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1434261   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1434262   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1434263   +   end;
MPRINT(EM_DIAGRAM):   end;
1434264   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434265   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1434266   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1434267   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1434268   +   end;
MPRINT(EM_DIAGRAM):   end;
1434269   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434270   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1434271   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1434272   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1434273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434275   +   end;
MPRINT(EM_DIAGRAM):   end;
1434276   +end;
MPRINT(EM_DIAGRAM):   end;
1434277   +
1434278   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1434279   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1434280   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1434281   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1434282   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1434283   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1434284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434286   +end;
MPRINT(EM_DIAGRAM):   end;
1434287   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434288   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434289   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1434290   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434291   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1434292   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1434293   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1434294   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1434295   +   end;
MPRINT(EM_DIAGRAM):   end;
1434296   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434297   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1434298   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1434299   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1434300   +   end;
MPRINT(EM_DIAGRAM):   end;
1434301   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1434302   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1434303   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1434304   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1434305   +   end;
MPRINT(EM_DIAGRAM):   end;
1434306   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434307   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1434308   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1434309   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1434310   +   end;
MPRINT(EM_DIAGRAM):   end;
1434311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434312   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1434313   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1434314   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1434315   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434316   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434317   +   end;
MPRINT(EM_DIAGRAM):   end;
1434318   +end;
MPRINT(EM_DIAGRAM):   end;
1434319   +
1434320   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1434321   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1434322   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1434323   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1434324   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1434325   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1434326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434328   +end;
MPRINT(EM_DIAGRAM):   end;
1434329   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434330   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434331   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1434332   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434333   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1434334   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1434335   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1434336   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1434337   +   end;
MPRINT(EM_DIAGRAM):   end;
1434338   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1434339   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1434340   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1434341   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1434342   +   end;
MPRINT(EM_DIAGRAM):   end;
1434343   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434344   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1434345   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1434346   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1434347   +   end;
MPRINT(EM_DIAGRAM):   end;
1434348   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434349   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1434350   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1434351   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1434352   +   end;
MPRINT(EM_DIAGRAM):   end;
1434353   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434354   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1434355   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1434356   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1434357   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434358   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434359   +   end;
MPRINT(EM_DIAGRAM):   end;
1434360   +end;
MPRINT(EM_DIAGRAM):   end;
1434361   +
1434362   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1434363   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1434364   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1434365   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1434366   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1434367   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1434368   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434370   +end;
MPRINT(EM_DIAGRAM):   end;
1434371   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434372   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434373   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1434374   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434375   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1434376   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1434377   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1434378   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1434379   +   end;
MPRINT(EM_DIAGRAM):   end;
1434380   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1434381   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1434382   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1434383   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1434384   +   end;
MPRINT(EM_DIAGRAM):   end;
1434385   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434386   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1434387   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1434388   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1434389   +   end;
MPRINT(EM_DIAGRAM):   end;
1434390   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434391   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1434392   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1434393   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1434394   +   end;
MPRINT(EM_DIAGRAM):   end;
1434395   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434396   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1434397   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1434398   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1434399   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434400   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434401   +   end;
MPRINT(EM_DIAGRAM):   end;
1434402   +end;
MPRINT(EM_DIAGRAM):   end;
1434403   +
1434404   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1434405   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1434406   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1434407   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1434408   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1434409   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1434410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434412   +end;
MPRINT(EM_DIAGRAM):   end;
1434413   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434414   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434415   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1434416   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434417   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1434418   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1434419   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1434420   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1434421   +   end;
MPRINT(EM_DIAGRAM):   end;
1434422   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434423   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1434424   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1434425   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1434426   +   end;
MPRINT(EM_DIAGRAM):   end;
1434427   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1434428   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1434429   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1434430   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1434431   +   end;
MPRINT(EM_DIAGRAM):   end;
1434432   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434433   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1434434   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1434435   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1434436   +   end;
MPRINT(EM_DIAGRAM):   end;
1434437   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434438   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1434439   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1434440   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1434441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434443   +   end;
MPRINT(EM_DIAGRAM):   end;
1434444   +end;
MPRINT(EM_DIAGRAM):   end;
1434445   +
1434446   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1434447   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1434448   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1434449   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1434450   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1434451   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1434452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434454   +end;
MPRINT(EM_DIAGRAM):   end;
1434455   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434456   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434457   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1434458   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434459   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1434460   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1434461   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1434462   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1434463   +   end;
MPRINT(EM_DIAGRAM):   end;
1434464   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434465   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1434466   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1434467   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1434468   +   end;
MPRINT(EM_DIAGRAM):   end;
1434469   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1434470   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1434471   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1434472   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1434473   +   end;
MPRINT(EM_DIAGRAM):   end;
1434474   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434475   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1434476   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1434477   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1434478   +   end;
MPRINT(EM_DIAGRAM):   end;
1434479   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434480   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1434481   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1434482   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1434483   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434484   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434485   +   end;
MPRINT(EM_DIAGRAM):   end;
1434486   +end;
MPRINT(EM_DIAGRAM):   end;
1434487   +
1434488   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1434489   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1434490   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1434491   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1434492   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1434493   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1434494   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434495   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434496   +end;
MPRINT(EM_DIAGRAM):   end;
1434497   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434498   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434499   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1434500   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434501   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1434502   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1434503   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1434504   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1434505   +   end;
MPRINT(EM_DIAGRAM):   end;
1434506   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1434507   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1434508   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1434509   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1434510   +   end;
MPRINT(EM_DIAGRAM):   end;
1434511   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434512   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1434513   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1434514   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1434515   +   end;
MPRINT(EM_DIAGRAM):   end;
1434516   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434517   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1434518   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1434519   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1434520   +   end;
MPRINT(EM_DIAGRAM):   end;
1434521   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434522   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1434523   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1434524   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1434525   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434526   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434527   +   end;
MPRINT(EM_DIAGRAM):   end;
1434528   +end;
MPRINT(EM_DIAGRAM):   end;
1434529   +
1434530   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1434531   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1434532   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1434533   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1434534   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1434535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434537   +end;
MPRINT(EM_DIAGRAM):   end;
1434538   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434539   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434540   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1434541   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434542   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1434543   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1434544   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1434545   +   end;
MPRINT(EM_DIAGRAM):   end;
1434546   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1434547   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1434548   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1434549   +   end;
MPRINT(EM_DIAGRAM):   end;
1434550   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434551   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1434552   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1434553   +   end;
MPRINT(EM_DIAGRAM):   end;
1434554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434555   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1434556   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1434557   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434558   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434559   +   end;
MPRINT(EM_DIAGRAM):   end;
1434560   +end;
MPRINT(EM_DIAGRAM):   end;
1434561   +
1434562   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1434563   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1434564   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1434565   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1434566   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1434567   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1434568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434570   +end;
MPRINT(EM_DIAGRAM):   end;
1434571   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434572   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434573   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1434574   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434575   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1434576   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1434577   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1434578   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1434579   +   end;
MPRINT(EM_DIAGRAM):   end;
1434580   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434581   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1434582   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1434583   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1434584   +   end;
MPRINT(EM_DIAGRAM):   end;
1434585   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434586   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1434587   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1434588   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1434589   +   end;
MPRINT(EM_DIAGRAM):   end;
1434590   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1434591   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1434592   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1434593   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1434594   +   end;
MPRINT(EM_DIAGRAM):   end;
1434595   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434596   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1434597   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1434598   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1434599   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434600   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434601   +   end;
MPRINT(EM_DIAGRAM):   end;
1434602   +end;
MPRINT(EM_DIAGRAM):   end;
1434603   +
1434604   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1434605   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1434606   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1434607   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1434608   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1434609   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1434610   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434611   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434612   +end;
MPRINT(EM_DIAGRAM):   end;
1434613   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434614   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434615   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1434616   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434617   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1434618   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1434619   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1434620   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1434621   +   end;
MPRINT(EM_DIAGRAM):   end;
1434622   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1434623   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1434624   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1434625   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1434626   +   end;
MPRINT(EM_DIAGRAM):   end;
1434627   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434628   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1434629   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1434630   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1434631   +   end;
MPRINT(EM_DIAGRAM):   end;
1434632   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434633   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1434634   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1434635   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1434636   +   end;
MPRINT(EM_DIAGRAM):   end;
1434637   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434638   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1434639   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1434640   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1434641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434643   +   end;
MPRINT(EM_DIAGRAM):   end;
1434644   +end;
MPRINT(EM_DIAGRAM):   end;
1434645   +
1434646   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1434647   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1434648   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1434649   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1434650   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1434651   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1434652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434654   +end;
MPRINT(EM_DIAGRAM):   end;
1434655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434657   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1434658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434659   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1434660   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1434661   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1434662   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1434663   +   end;
MPRINT(EM_DIAGRAM):   end;
1434664   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1434665   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1434666   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1434667   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1434668   +   end;
MPRINT(EM_DIAGRAM):   end;
1434669   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1434670   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1434671   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1434672   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1434673   +   end;
MPRINT(EM_DIAGRAM):   end;
1434674   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434675   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1434676   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1434677   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1434678   +   end;
MPRINT(EM_DIAGRAM):   end;
1434679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434680   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1434681   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1434682   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1434683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434685   +   end;
MPRINT(EM_DIAGRAM):   end;
1434686   +end;
MPRINT(EM_DIAGRAM):   end;
1434687   +
1434688   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1434689   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1434690   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1434691   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1434692   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1434693   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1434694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434696   +end;
MPRINT(EM_DIAGRAM):   end;
1434697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434698   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434699   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1434700   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434701   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1434702   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1434703   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1434704   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1434705   +   end;
MPRINT(EM_DIAGRAM):   end;
1434706   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1434707   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1434708   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1434709   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1434710   +   end;
MPRINT(EM_DIAGRAM):   end;
1434711   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434712   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1434713   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1434714   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1434715   +   end;
MPRINT(EM_DIAGRAM):   end;
1434716   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434717   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1434718   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1434719   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1434720   +   end;
MPRINT(EM_DIAGRAM):   end;
1434721   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434722   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1434723   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1434724   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1434725   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434726   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434727   +   end;
MPRINT(EM_DIAGRAM):   end;
1434728   +end;
MPRINT(EM_DIAGRAM):   end;
1434729   +
1434730   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1434731   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1434732   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1434733   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1434734   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1434735   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1434736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1434737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434738   +end;
MPRINT(EM_DIAGRAM):   end;
1434739   +else do;
MPRINT(EM_DIAGRAM):   else do;
1434740   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1434741   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1434742   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1434743   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1434744   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1434745   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1434746   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1434747   +   end;
MPRINT(EM_DIAGRAM):   end;
1434748   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1434749   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1434750   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1434751   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1434752   +   end;
MPRINT(EM_DIAGRAM):   end;
1434753   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1434754   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1434755   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1434756   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1434757   +   end;
MPRINT(EM_DIAGRAM):   end;
1434758   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1434759   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1434760   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1434761   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1434762   +   end;
MPRINT(EM_DIAGRAM):   end;
1434763   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1434764   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1434765   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1434766   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1434767   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1434768   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434769   +   end;
MPRINT(EM_DIAGRAM):   end;
1434770   +end;
MPRINT(EM_DIAGRAM):   end;
1434771   +
1434772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1434773   +*** Checking missing input Interval
1434774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1434775   +
1434776   +IF NMISS(
1434777   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1434778   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1434779   +
1434780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1434781   +END;
MPRINT(EM_DIAGRAM):   END;
1434782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1434783   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1434784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1434785   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1434786   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1434787   +END;
MPRINT(EM_DIAGRAM):   END;
1434788   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1434789   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1434790   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1434791   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1434792   +END;
MPRINT(EM_DIAGRAM):   END;
1434793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1434794   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1434795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1434796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1434797   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1434798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1434799   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1434800   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1434801   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1434802   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1434803   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1434804   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1434805   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1434806   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1434807   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1434808   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1434809   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1434810   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1434811   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1434812   +          +     0.03411739869638 * GRP_MntFishProducts3
1434813   +          +      -0.083693402353 * GRP_MntFishProducts4
1434814   +          +     -0.1318128730187 * GRP_MntGoldProds2
1434815   +          +     -0.0614737729382 * GRP_MntGoldProds3
1434816   +          +    -0.00372986687449 * GRP_MntGoldProds4
1434817   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1434818   +          +     0.01519664718127 * GRP_MntMeatProducts3
1434819   +          +     0.29997111548812 * GRP_MntMeatProducts4
1434820   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1434821   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1434822   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1434823   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1434824   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1434825   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1434826   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1434827   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1434828   +          +     0.02966820025811 * GRP_NumWebPurchases3
1434829   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1434830   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1434831   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1434832   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1434833   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1434834   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1434835   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 * 
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 * 
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 + 
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 + 
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 + 
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 + 
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 + 
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 + 
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 * 
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 * 
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 * 
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 * 
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 * 
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 * 
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 + 
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 * 
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 + 
-0.15382569411658 * GRP_Recency4 ;
1434836   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1434837   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1434838   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1434839   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1434840   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1434841   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1434842   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1434843   +          +     0.00842475350903 * GRP_MntFishProducts3
1434844   +          +     -0.1623103908885 * GRP_MntFishProducts4
1434845   +          +    -0.23845524931139 * GRP_MntGoldProds2
1434846   +          +    -0.07128567155438 * GRP_MntGoldProds3
1434847   +          +     0.25778887379163 * GRP_MntGoldProds4
1434848   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1434849   +          +     0.06269922653052 * GRP_MntMeatProducts3
1434850   +          +      0.2587215409794 * GRP_MntMeatProducts4
1434851   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1434852   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1434853   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1434854   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1434855   +          +     0.12374838743082 * GRP_NumDistPurchases2
1434856   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1434857   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1434858   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1434859   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1434860   +          +     0.09237237622553 * GRP_NumWebPurchases4
1434861   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1434862   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1434863   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1434864   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1434865   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1434866   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 * 
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 * 
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 + 
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 + 
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 + 
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 + 
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 + 
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 + 
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476 
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 * 
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 * 
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 * 
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 * 
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 * 
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 + 
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 * 
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 + 
0.00206593904485 * GRP_Recency4 ;
1434867   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1434868   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1434869   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1434870   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1434871   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1434872   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1434873   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1434874   +          +    -0.07078012229572 * GRP_MntFishProducts3
1434875   +          +    -0.14569186671189 * GRP_MntFishProducts4
1434876   +          +     0.14963390032413 * GRP_MntGoldProds2
1434877   +          +    -0.11869917970226 * GRP_MntGoldProds3
1434878   +          +     0.25943105626615 * GRP_MntGoldProds4
1434879   +          +     0.36609689271233 * GRP_MntMeatProducts2
1434880   +          +     0.10969864655073 * GRP_MntMeatProducts3
1434881   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1434882   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1434883   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1434884   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1434885   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1434886   +          +     0.08068432649382 * GRP_NumDistPurchases2
1434887   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1434888   +          +     0.26738740475822 * GRP_NumDistPurchases4
1434889   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1434890   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1434891   +          +     0.01349113315351 * GRP_NumWebPurchases4
1434892   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1434893   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1434894   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1434895   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1434896   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1434897   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 * 
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 * 
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 + 
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 + 
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 + 
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 + 
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 + 
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 + 
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 + 
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 * 
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 * 
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 * 
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 * 
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 * 
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 + 
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 * 
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 + 
0.28490847560375 * GRP_Recency4 ;
1434898   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1434899   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1434900   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1434901   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1434902   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1434903   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1434904   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1434905   +          +    -0.18334484867808 * GRP_MntFishProducts3
1434906   +          +     0.13484477561766 * GRP_MntFishProducts4
1434907   +          +    -0.05145913380692 * GRP_MntGoldProds2
1434908   +          +     0.04459987080173 * GRP_MntGoldProds3
1434909   +          +     0.01539767655772 * GRP_MntGoldProds4
1434910   +          +     0.26537148543352 * GRP_MntMeatProducts2
1434911   +          +     0.22913678530176 * GRP_MntMeatProducts3
1434912   +          +     0.21262490658374 * GRP_MntMeatProducts4
1434913   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1434914   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1434915   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1434916   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1434917   +          +     0.09224372228857 * GRP_NumDistPurchases2
1434918   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1434919   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1434920   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1434921   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1434922   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1434923   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1434924   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1434925   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1434926   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1434927   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1434928   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 * 
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 * 
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 + 
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 + 
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 + 
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 + 
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352 
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 * 
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 + 
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 + 
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 + 
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 + 
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 + 
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827 
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 + 
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 * 
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1434929   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1434930   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1434931   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1434932   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1434933   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1434934   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1434935   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1434936   +          +    -0.08952948139975 * GRP_MntFishProducts3
1434937   +          +     0.15338133379465 * GRP_MntFishProducts4
1434938   +          +     0.04821845492824 * GRP_MntGoldProds2
1434939   +          +     0.20117781904284 * GRP_MntGoldProds3
1434940   +          +     0.13013396690778 * GRP_MntGoldProds4
1434941   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1434942   +          +     0.03161017721112 * GRP_MntMeatProducts3
1434943   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1434944   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1434945   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1434946   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1434947   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1434948   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1434949   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1434950   +          +      0.0473480026433 * GRP_NumDistPurchases4
1434951   +          +     0.03132883547053 * GRP_NumWebPurchases2
1434952   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1434953   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1434954   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1434955   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1434956   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1434957   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1434958   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1434959   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 * 
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 * 
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 + 
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 + 
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 + 
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 + 
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 + 
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 + 
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786 
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 * 
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 * 
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 * 
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 * 
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 * 
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 + 
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 * 
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 + 
-0.28363324780869 * GRP_Recency4 ;
1434960   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1434961   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1434962   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1434963   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1434964   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1434965   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1434966   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1434967   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1434968   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1434969   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1434970   +END;
MPRINT(EM_DIAGRAM):   END;
1434971   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1434972   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1434973   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1434974   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1434975   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1434976   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1434977   +END;
MPRINT(EM_DIAGRAM):   END;
1434978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1434979   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1434980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1434981   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1434982   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1434983   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1434984   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 + 
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1434985   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1434986   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1434987   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1434988   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1434989   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1434990   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1434991   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1434992   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1434993   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1434994   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1434995   +END;
MPRINT(EM_DIAGRAM):   END;
1434996   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1434997   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1434998   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1434999   +END;
MPRINT(EM_DIAGRAM):   END;
1435000   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1435001   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1435002   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1435003   +END;
MPRINT(EM_DIAGRAM):   END;
1435004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1435005   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1435006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1435007   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1435008   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1435009   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1435010   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1435011   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1435012   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1435013   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1435014   +END;
MPRINT(EM_DIAGRAM):   END;
1435015   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1435016   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1435017   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1435018   +drop
1435019   +H11
1435020   +H12
1435021   +H13
1435022   +H14
1435023   +H15
1435024   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1435025   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1435026    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1435027    quit;
1435028    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1435029    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1435030    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1435031    retain ID 2 Node "Neural22";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural22";
1435032    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1435033    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1980 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1980 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435034    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1435035    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1980 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1980 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435037    proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
1435038    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL22_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435040    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1435041    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1435042    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1435043    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435044    proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
1435045    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1435046    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1435047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435048    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435049    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1435050    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1435051    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435052    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435053    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1435054    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1435054  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 925 rows and 5 columns.

1435055    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435056    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1435057    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 925 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 925 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435058    filename _pref
1435058  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1435059    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1435060    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1435061   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1435062   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1435063   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1435064   +
1435065   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435066   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1435067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435068   +LABEL GRP_AcceptedCmp5 =
1435069   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1435070   +
1435071   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1435072   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1435073   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1435074   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1435075   +end;
MPRINT(EM_DIAGRAM):   end;
1435076   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1435077   +if (_UFORMAT eq '0'
1435078   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1435079   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1435080   +end;
MPRINT(EM_DIAGRAM):   end;
1435081   +else
1435082   +if (_UFORMAT eq '1'
1435083   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1435084   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1435085   +end;
MPRINT(EM_DIAGRAM):   end;
1435086   +else do;
MPRINT(EM_DIAGRAM):   else do;
1435087   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1435088   +end;
MPRINT(EM_DIAGRAM):   end;
1435089   +end;
MPRINT(EM_DIAGRAM):   end;
1435090   +
1435091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435092   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1435093   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435094   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1435095   +
1435096   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1435097   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1435098   +end;
MPRINT(EM_DIAGRAM):   end;
1435099   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1435100   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1435101   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1435102   +end;
MPRINT(EM_DIAGRAM):   end;
1435103   +else
1435104   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1435105   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1435106   +end;
MPRINT(EM_DIAGRAM):   end;
1435107   +else
1435108   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1435109   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1435110   +end;
MPRINT(EM_DIAGRAM):   end;
1435111   +else
1435112   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1435113   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1435114   +end;
MPRINT(EM_DIAGRAM):   end;
1435115   +end;
MPRINT(EM_DIAGRAM):   end;
1435116   +
1435117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435118   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1435119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435120   +LABEL GRP_Income =
1435121   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1435122   +
1435123   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1435124   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1435125   +end;
MPRINT(EM_DIAGRAM):   end;
1435126   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1435127   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1435128   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1435129   +end;
MPRINT(EM_DIAGRAM):   end;
1435130   +else
1435131   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1435132   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1435133   +end;
MPRINT(EM_DIAGRAM):   end;
1435134   +else
1435135   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1435136   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1435137   +end;
MPRINT(EM_DIAGRAM):   end;
1435138   +else
1435139   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1435140   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1435141   +end;
MPRINT(EM_DIAGRAM):   end;
1435142   +end;
MPRINT(EM_DIAGRAM):   end;
1435143   +
1435144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435145   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1435146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435147   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1435148   +
1435149   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1435150   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1435151   +end;
MPRINT(EM_DIAGRAM):   end;
1435152   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1435153   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1435154   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1435155   +end;
MPRINT(EM_DIAGRAM):   end;
1435156   +else
1435157   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1435158   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1435159   +end;
MPRINT(EM_DIAGRAM):   end;
1435160   +else
1435161   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1435162   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1435163   +end;
MPRINT(EM_DIAGRAM):   end;
1435164   +else
1435165   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1435166   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1435167   +end;
MPRINT(EM_DIAGRAM):   end;
1435168   +end;
MPRINT(EM_DIAGRAM):   end;
1435169   +
1435170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435171   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1435172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435173   +LABEL GRP_MntFishProducts =
1435174   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1435175   +
1435176   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1435177   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1435178   +end;
MPRINT(EM_DIAGRAM):   end;
1435179   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1435180   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1435181   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1435182   +end;
MPRINT(EM_DIAGRAM):   end;
1435183   +else
1435184   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1435185   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1435186   +end;
MPRINT(EM_DIAGRAM):   end;
1435187   +else
1435188   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1435189   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1435190   +end;
MPRINT(EM_DIAGRAM):   end;
1435191   +else
1435192   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1435193   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1435194   +end;
MPRINT(EM_DIAGRAM):   end;
1435195   +end;
MPRINT(EM_DIAGRAM):   end;
1435196   +
1435197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435198   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1435199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435200   +LABEL GRP_MntGoldProds =
1435201   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1435202   +
1435203   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1435204   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1435205   +end;
MPRINT(EM_DIAGRAM):   end;
1435206   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1435207   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1435208   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1435209   +end;
MPRINT(EM_DIAGRAM):   end;
1435210   +else
1435211   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1435212   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1435213   +end;
MPRINT(EM_DIAGRAM):   end;
1435214   +else
1435215   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1435216   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1435217   +end;
MPRINT(EM_DIAGRAM):   end;
1435218   +else
1435219   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1435220   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1435221   +end;
MPRINT(EM_DIAGRAM):   end;
1435222   +end;
MPRINT(EM_DIAGRAM):   end;
1435223   +
1435224   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435225   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1435226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435227   +LABEL GRP_MntMeatProducts =
1435228   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1435229   +
1435230   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1435231   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1435232   +end;
MPRINT(EM_DIAGRAM):   end;
1435233   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1435234   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1435235   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1435236   +end;
MPRINT(EM_DIAGRAM):   end;
1435237   +else
1435238   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1435239   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1435240   +end;
MPRINT(EM_DIAGRAM):   end;
1435241   +else
1435242   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1435243   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1435244   +end;
MPRINT(EM_DIAGRAM):   end;
1435245   +else
1435246   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1435247   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1435248   +end;
MPRINT(EM_DIAGRAM):   end;
1435249   +end;
MPRINT(EM_DIAGRAM):   end;
1435250   +
1435251   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435252   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1435253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435254   +LABEL GRP_MntWines =
1435255   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1435256   +
1435257   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1435258   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1435259   +end;
MPRINT(EM_DIAGRAM):   end;
1435260   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1435261   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1435262   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1435263   +end;
MPRINT(EM_DIAGRAM):   end;
1435264   +else
1435265   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1435266   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1435267   +end;
MPRINT(EM_DIAGRAM):   end;
1435268   +else
1435269   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1435270   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1435271   +end;
MPRINT(EM_DIAGRAM):   end;
1435272   +else
1435273   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1435274   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1435275   +end;
MPRINT(EM_DIAGRAM):   end;
1435276   +end;
MPRINT(EM_DIAGRAM):   end;
1435277   +
1435278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435279   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1435280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435281   +LABEL GRP_NumCatalogPurchases =
1435282   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1435283   +
1435284   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1435285   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1435286   +end;
MPRINT(EM_DIAGRAM):   end;
1435287   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1435288   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1435289   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1435290   +end;
MPRINT(EM_DIAGRAM):   end;
1435291   +else
1435292   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1435293   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1435294   +end;
MPRINT(EM_DIAGRAM):   end;
1435295   +else
1435296   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1435297   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1435298   +end;
MPRINT(EM_DIAGRAM):   end;
1435299   +else
1435300   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1435301   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1435302   +end;
MPRINT(EM_DIAGRAM):   end;
1435303   +end;
MPRINT(EM_DIAGRAM):   end;
1435304   +
1435305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435306   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1435307   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435308   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1435309   +
1435310   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1435311   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1435312   +end;
MPRINT(EM_DIAGRAM):   end;
1435313   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1435314   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1435315   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1435316   +end;
MPRINT(EM_DIAGRAM):   end;
1435317   +else
1435318   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1435319   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1435320   +end;
MPRINT(EM_DIAGRAM):   end;
1435321   +else
1435322   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1435323   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1435324   +end;
MPRINT(EM_DIAGRAM):   end;
1435325   +else
1435326   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1435327   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1435328   +end;
MPRINT(EM_DIAGRAM):   end;
1435329   +end;
MPRINT(EM_DIAGRAM):   end;
1435330   +
1435331   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435332   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1435333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435334   +LABEL GRP_NumWebPurchases =
1435335   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1435336   +
1435337   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1435338   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1435339   +end;
MPRINT(EM_DIAGRAM):   end;
1435340   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1435341   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1435342   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1435343   +end;
MPRINT(EM_DIAGRAM):   end;
1435344   +else
1435345   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1435346   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1435347   +end;
MPRINT(EM_DIAGRAM):   end;
1435348   +else
1435349   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1435350   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1435351   +end;
MPRINT(EM_DIAGRAM):   end;
1435352   +else
1435353   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1435354   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1435355   +end;
MPRINT(EM_DIAGRAM):   end;
1435356   +end;
MPRINT(EM_DIAGRAM):   end;
1435357   +
1435358   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435359   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1435360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435361   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1435362   +
1435363   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1435364   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1435365   +end;
MPRINT(EM_DIAGRAM):   end;
1435366   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1435367   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1435368   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1435369   +end;
MPRINT(EM_DIAGRAM):   end;
1435370   +else
1435371   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1435372   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1435373   +end;
MPRINT(EM_DIAGRAM):   end;
1435374   +else
1435375   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1435376   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1435377   +end;
MPRINT(EM_DIAGRAM):   end;
1435378   +else
1435379   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1435380   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1435381   +end;
MPRINT(EM_DIAGRAM):   end;
1435382   +end;
MPRINT(EM_DIAGRAM):   end;
1435383   +
1435384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435385   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1435386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435387   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1435388   +
1435389   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1435390   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1435391   +end;
MPRINT(EM_DIAGRAM):   end;
1435392   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1435393   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1435394   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1435395   +end;
MPRINT(EM_DIAGRAM):   end;
1435396   +else
1435397   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1435398   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1435399   +end;
MPRINT(EM_DIAGRAM):   end;
1435400   +else
1435401   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1435402   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1435403   +end;
MPRINT(EM_DIAGRAM):   end;
1435404   +else
1435405   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1435406   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1435407   +end;
MPRINT(EM_DIAGRAM):   end;
1435408   +end;
MPRINT(EM_DIAGRAM):   end;
1435409   +
1435410   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435411   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1435412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435413   +LABEL GRP_Recency =
1435414   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1435415   +
1435416   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1435417   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1435418   +end;
MPRINT(EM_DIAGRAM):   end;
1435419   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1435420   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1435421   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1435422   +end;
MPRINT(EM_DIAGRAM):   end;
1435423   +else
1435424   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1435425   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1435426   +end;
MPRINT(EM_DIAGRAM):   end;
1435427   +else
1435428   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1435429   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1435430   +end;
MPRINT(EM_DIAGRAM):   end;
1435431   +else
1435432   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1435433   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1435434   +end;
MPRINT(EM_DIAGRAM):   end;
1435435   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1435436    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1435437    quit;
1435438    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1435439    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1435440    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1435441    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1435442    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1435443    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435444    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1435445    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435446    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1435447    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1435448    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435449    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435450    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1435451    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1435452    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1435453    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435454    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1435455    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1435456    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1435457    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435458    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1435459    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1435460    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1435461    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435462    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435463    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1435464    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1435464  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1435465    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435466    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1435467    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1435468    filename _pref
1435468  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1435469    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1435470    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1435471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435472   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1435473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1435474   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1435475   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1435476   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1435477    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1435478    quit;
1435479    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1435480    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1435481    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1435482    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1435483    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1435484    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435485    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1435486    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435487    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435488    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1435489    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435490    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1435491    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1435492    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1435493    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1435494    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435495    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1435496    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1435497    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1435498    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435499    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435500    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1435501    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1435502    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435503    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435504    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1435505    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1435505  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1435506    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435507    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1435508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 944 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435509    filename _pref
1435509  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1435510    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1435511    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1435512   +
1435513   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1435514   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1435514  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1435515   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1435516   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1435517   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1435518   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1435519   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1435520    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1435521    quit;
1435522    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1435523    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1435524    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1435525    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1435526    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1435527    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435528    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1435529    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435531    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1435532    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435534    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1435535    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1435536    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1435537    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435538    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1435539    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435540    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1435541    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435542    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435543    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1435544    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1435545    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435546    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435547    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1435548    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1435548  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1435549    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1435550    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1435551    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 983 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435552    filename _pref
1435552  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1435553    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1435554    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1435555   +
1435556   +
1435557   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1435558   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1435559   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1435560   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1435561   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1435562   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1435563   +
1435564   +
1435565   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1435566   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1435567   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1435568   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1435569   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1435570   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1435571   +
1435572   +
1435573   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1435574   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1435575   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1435576   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1435577   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1435578   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1435579   +
1435580   +
1435581   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1435582   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1435583   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1435584   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1435585   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1435586   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1435587   +
1435588   +
1435589   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1435590   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1435591   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1435592   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1435593   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1435594   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1435595   +
1435596   +
1435597   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1435598   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1435599   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1435600   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1435601   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1435602   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1435603   +
1435604   +
1435605   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1435606   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1435607   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1435608   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1435609   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1435610   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1435611   +
1435612   +
1435613   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1435614   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1435615   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1435616   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1435617   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1435618   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1435619   +if
1435620   +_FILTERNORM1 not in ( '.')
1435621   + and
1435622   +_FILTERNORM2 not in ( '.')
1435623   + and
1435624   +_FILTERNORM3 not in ( '.')
1435625   + and
1435626   +_FILTERNORM4 not in ( '.')
1435627   + and
1435628   +_FILTERNORM5 not in ( '.')
1435629   + and
1435630   +_FILTERNORM6 not in ( '.')
1435631   + and
1435632   +_FILTERNORM7 not in ( ' ')
1435633   + and
1435634   +_FILTERNORM8 not in ( ' ')
1435635   +and
1435636   +( Dt_Customer ne .)
1435637   +and ( Income ne . and (Income<=107000))
1435638   +and ( Kidhome ne .)
1435639   +and ( MntFishProducts ne .)
1435640   +and ( MntFruits ne .)
1435641   +and ( MntGoldProds ne .)
1435642   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1435643   +and ( MntSweetProducts ne .)
1435644   +and ( MntWines ne .)
1435645   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1435646   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1435647   +and ( NumStorePurchases ne .)
1435648   +and ( NumWebPurchases ne .)
1435649   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1435650   +and ( Recency ne .)
1435651   +and ( Teenhome ne .)
1435652   +and ( Year_Birth ne .)
1435653   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1435654   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1435655   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1435656   +end;
MPRINT(EM_DIAGRAM):   end;
1435657   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1435658   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1435659    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1435660    quit;
1435661    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1435662    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1435663    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1435664    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1435665    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1435666    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435667    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1435668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435670    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1435671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435672    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1435673    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1435674    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1435675    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1435676    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435677    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1435678    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1435679    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1435680    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435682    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1435683    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1435684    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1435685    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435686    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1435687    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1435687  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1435688    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435689    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1435690    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 1049 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435691    %macro varDept(fcmpdata=,id=);
1435692    %global nobs&id scoreFlag&id;
1435693    %let scoreFlag&id = 0;
1435694    %if &id=1 or ^&fcmpStart %then %do;
1435695    proc sort data=&fcmpdata out=_temp&id nodupkey;
1435696    by NAME;
1435697    where id=&id and LHS in( %let j=1;
1435698    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1435699    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1435700    "&var" %let j = %eval(&j+1);
1435701    %end;
1435702    );
1435703    run;
1435704    %let dsid = %sysfunc(open(_temp&id));
1435705    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1435706    %let dsid = %sysfunc(close(&dsid));
1435707    %if &&nobs&id %then %do;
1435708    %let scoreFlag&id = 1;
1435709    %let fcmpStart = 1;
1435710    %end;
1435711    %else %let fcmpStart = 0;
1435712    %end;
1435713    %else %do;
1435714    proc sort data=&fcmpdata out=_tempid;
1435715    where id=&id;
1435716    by LHS;
1435717    run;
1435718    %let dsid = %sysfunc(open(_tempid));
1435719    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1435720    %let dsid = %sysfunc(close(&dsid));
1435721    %if ^&&nobs&id %then %do;
1435722    proc datasets lib=work nolist;
1435723    delete _tempid;
1435724    run;
1435725    quit;
1435726    %end;
1435727    %else %do;
1435728    data _tempAll;
1435729    set %let j=%eval(&id-1);
1435730    %do x=1 %to &j;
1435731    %if &&nobs&x %then %do;
1435732    _temp&x %end;
1435733    %end;
1435734    ;
1435735    run;
1435736    proc sql;
1435737    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1435737  ! work._tempid p2 where p.name=p2.lhs;
1435738    quit;
1435739    data _temp&id;
1435740    set _temp&id;
1435741    where LHS ne '' and NAME ne '' and Node ne '';
1435742    run;
1435743    proc datasets lib=work nolist;
1435744    delete _tempAll;
1435745    run;
1435746    %let dsid = %sysfunc(open(_temp&id));
1435747    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1435748    %let dsid = %sysfunc(close(&dsid));
1435749    %if ^&&nobs&id %then %do;
1435750    proc datasets lib=work nolist;
1435751    delete _temp&id;
1435752    run;
1435753    quit;
1435754    %end;
1435755    %else %do;
1435756    %let scoreFlag&id = 1;
1435757    data _temp&id;
1435758    set _temp&id;
1435759    where LHS ne NAME and node ne '';
1435760    run;
1435761    %let dsid = %sysfunc(open(_temp&id));
1435762    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1435763    %let dsid = %sysfunc(close(&dsid));
1435764    %if ^&&nobs&id %then %do;
1435765    proc datasets lib=work nolist;
1435766    delete _temp&id;
1435767    run;
1435768    quit;
1435769    %end;
1435770    %else %do;
1435771    proc sort data=_temp&id nodupkey;
1435772    by LHS NAME;
1435773    run;
1435774    %end;
1435775    %end;
1435776    %end;
1435777    %end;
1435778    %mend varDept;
1435779    %macro optCode(outdata=fcmpdata);
1435780    %global fcmpStart;
1435781    %let fcmpStart = 0;
1435782    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1435783    %let NumNodes=9;
1435784    %do k=1 %to &NumNodes;
1435785    %vardept(fcmpdata=&outdata, id=&k);
1435786    %end;
1435787    %mend optCode;
1435788    %optcode(outData=EMWS8.Ensmbl17_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1435789    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1435790    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1435791    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1435792    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1435793    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1435794    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1435795    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1435796    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435797    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1435798    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1435798  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1435799    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1435800    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1435801    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1435802    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435803    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1435804    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1435805    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1435806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435807    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1435808    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1435809    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1435810    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435811    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1435812    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1435812  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

1435813    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1435814    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1435815    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1435816    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1435817    filename _pref
1435817  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
1435818    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1435819    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas.
1435820   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1435821   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1435822   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1435823   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1435824   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1435825   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1435826   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1435827   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1435828   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1435829   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
The SAS System

1435830   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1435831   +LENGTH _WARN_ $4
1435832   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1435833   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1435834   +
1435835   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1435836   +
1435837   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1435838   +
1435839   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1435840   +
1435841   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1435842   +
1435843   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1435844   +
1435845   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1435846   +
1435847   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1435848   +
1435849   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1435850   +
1435851   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1435852   +
1435853   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1435854   +
1435855   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1435856   +
1435857   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1435858   +
1435859   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1435860   +
1435861   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1435862   +
1435863   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1435864   +
1435865   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1435866   +
1435867   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1435868   +
1435869   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1435870   +
1435871   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1435872   +
1435873   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1435874   +
1435875   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1435876   +
1435877   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1435878   +
1435879   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1435880   +
1435881   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1435882   +
1435883   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1435884   +
1435885   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1435886   +
1435887   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1435888   +
1435889   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1435890   +
1435891   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1435892   +
1435893   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1435894   +
1435895   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1435896   +
1435897   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1435898   +
1435899   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1435900   +
1435901   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1435902   +
1435903   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1435904   +
1435905   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1435906   +
1435907   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1435908   +
1435909   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1435910   +
1435911   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1435912   +
1435913   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1435914   +
1435915   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1435916   +
1435917   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1435918   +
1435919   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1435920   +
1435921   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1435922   +
1435923   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1435924   +
1435925   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1435926   +
1435927   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1435928   +
1435929   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1435930   +
1435931   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1435932   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1435933   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1435934   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1435935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1435936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1435937   +end;
MPRINT(EM_DIAGRAM):   end;
1435938   +else do;
MPRINT(EM_DIAGRAM):   else do;
1435939   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1435940   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1435941   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1435942   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1435943   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1435944   +   end;
MPRINT(EM_DIAGRAM):   end;
1435945   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1435946   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1435947   +   end;
MPRINT(EM_DIAGRAM):   end;
1435948   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1435949   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1435950   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1435951   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1435952   +   end;
MPRINT(EM_DIAGRAM):   end;
1435953   +end;
MPRINT(EM_DIAGRAM):   end;
1435954   +
1435955   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1435956   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1435957   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1435958   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1435959   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1435960   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1435961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1435962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1435963   +end;
MPRINT(EM_DIAGRAM):   end;
1435964   +else do;
MPRINT(EM_DIAGRAM):   else do;
1435965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1435966   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1435967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1435968   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1435969   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1435970   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1435971   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1435972   +   end;
MPRINT(EM_DIAGRAM):   end;
1435973   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1435974   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1435975   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1435976   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1435977   +   end;
MPRINT(EM_DIAGRAM):   end;
1435978   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1435979   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1435980   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1435981   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1435982   +   end;
MPRINT(EM_DIAGRAM):   end;
1435983   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1435984   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1435985   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1435986   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1435987   +   end;
MPRINT(EM_DIAGRAM):   end;
1435988   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1435989   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1435990   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1435991   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1435992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1435993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1435994   +   end;
MPRINT(EM_DIAGRAM):   end;
1435995   +end;
MPRINT(EM_DIAGRAM):   end;
1435996   +
1435997   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1435998   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1435999   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1436000   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1436001   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1436002   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1436003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436005   +end;
MPRINT(EM_DIAGRAM):   end;
1436006   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436007   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436008   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1436009   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436010   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1436011   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1436012   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1436013   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1436014   +   end;
MPRINT(EM_DIAGRAM):   end;
1436015   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436016   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1436017   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1436018   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1436019   +   end;
MPRINT(EM_DIAGRAM):   end;
1436020   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1436021   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1436022   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1436023   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1436024   +   end;
MPRINT(EM_DIAGRAM):   end;
1436025   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436026   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1436027   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1436028   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1436029   +   end;
MPRINT(EM_DIAGRAM):   end;
1436030   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436031   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1436032   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1436033   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1436034   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436035   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436036   +   end;
MPRINT(EM_DIAGRAM):   end;
1436037   +end;
MPRINT(EM_DIAGRAM):   end;
1436038   +
1436039   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1436040   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1436041   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1436042   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1436043   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1436044   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1436045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436047   +end;
MPRINT(EM_DIAGRAM):   end;
1436048   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436050   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1436051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436052   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1436053   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1436054   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1436055   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1436056   +   end;
MPRINT(EM_DIAGRAM):   end;
1436057   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1436058   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1436059   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1436060   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1436061   +   end;
MPRINT(EM_DIAGRAM):   end;
1436062   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436063   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1436064   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1436065   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1436066   +   end;
MPRINT(EM_DIAGRAM):   end;
1436067   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436068   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1436069   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1436070   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1436071   +   end;
MPRINT(EM_DIAGRAM):   end;
1436072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436073   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1436074   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1436075   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1436076   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436077   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436078   +   end;
MPRINT(EM_DIAGRAM):   end;
1436079   +end;
MPRINT(EM_DIAGRAM):   end;
1436080   +
1436081   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1436082   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1436083   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1436084   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1436085   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1436086   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1436087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436089   +end;
MPRINT(EM_DIAGRAM):   end;
1436090   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436091   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436092   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1436093   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436094   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1436095   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1436096   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1436097   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1436098   +   end;
MPRINT(EM_DIAGRAM):   end;
1436099   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1436100   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1436101   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1436102   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1436103   +   end;
MPRINT(EM_DIAGRAM):   end;
1436104   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436105   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1436106   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1436107   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1436108   +   end;
MPRINT(EM_DIAGRAM):   end;
1436109   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436110   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1436111   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1436112   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1436113   +   end;
MPRINT(EM_DIAGRAM):   end;
1436114   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436115   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1436116   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1436117   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1436118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436120   +   end;
MPRINT(EM_DIAGRAM):   end;
1436121   +end;
MPRINT(EM_DIAGRAM):   end;
1436122   +
1436123   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1436124   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1436125   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1436126   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1436127   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1436128   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1436129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436131   +end;
MPRINT(EM_DIAGRAM):   end;
1436132   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436133   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436134   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1436135   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436136   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1436137   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1436138   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1436139   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1436140   +   end;
MPRINT(EM_DIAGRAM):   end;
1436141   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436142   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1436143   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1436144   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1436145   +   end;
MPRINT(EM_DIAGRAM):   end;
1436146   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1436147   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1436148   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1436149   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1436150   +   end;
MPRINT(EM_DIAGRAM):   end;
1436151   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436152   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1436153   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1436154   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1436155   +   end;
MPRINT(EM_DIAGRAM):   end;
1436156   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436157   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1436158   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1436159   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1436160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436162   +   end;
MPRINT(EM_DIAGRAM):   end;
1436163   +end;
MPRINT(EM_DIAGRAM):   end;
1436164   +
1436165   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1436166   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1436167   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1436168   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1436169   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1436170   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1436171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436173   +end;
MPRINT(EM_DIAGRAM):   end;
1436174   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436175   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436176   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1436177   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436178   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1436179   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1436180   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1436181   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1436182   +   end;
MPRINT(EM_DIAGRAM):   end;
1436183   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436184   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1436185   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1436186   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1436187   +   end;
MPRINT(EM_DIAGRAM):   end;
1436188   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1436189   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1436190   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1436191   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1436192   +   end;
MPRINT(EM_DIAGRAM):   end;
1436193   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436194   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1436195   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1436196   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1436197   +   end;
MPRINT(EM_DIAGRAM):   end;
1436198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436199   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1436200   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1436201   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1436202   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436203   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436204   +   end;
MPRINT(EM_DIAGRAM):   end;
1436205   +end;
MPRINT(EM_DIAGRAM):   end;
1436206   +
1436207   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1436208   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1436209   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1436210   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1436211   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1436212   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1436213   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436214   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436215   +end;
MPRINT(EM_DIAGRAM):   end;
1436216   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436217   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436218   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1436219   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436220   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1436221   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1436222   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1436223   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1436224   +   end;
MPRINT(EM_DIAGRAM):   end;
1436225   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1436226   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1436227   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1436228   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1436229   +   end;
MPRINT(EM_DIAGRAM):   end;
1436230   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436231   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1436232   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1436233   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1436234   +   end;
MPRINT(EM_DIAGRAM):   end;
1436235   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436236   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1436237   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1436238   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1436239   +   end;
MPRINT(EM_DIAGRAM):   end;
1436240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436241   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1436242   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1436243   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1436244   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436245   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436246   +   end;
MPRINT(EM_DIAGRAM):   end;
1436247   +end;
MPRINT(EM_DIAGRAM):   end;
1436248   +
1436249   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1436250   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1436251   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1436252   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1436253   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1436254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436256   +end;
MPRINT(EM_DIAGRAM):   end;
1436257   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436258   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436259   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1436260   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436261   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1436262   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1436263   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1436264   +   end;
MPRINT(EM_DIAGRAM):   end;
1436265   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1436266   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1436267   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1436268   +   end;
MPRINT(EM_DIAGRAM):   end;
1436269   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436270   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1436271   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1436272   +   end;
MPRINT(EM_DIAGRAM):   end;
1436273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436274   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1436275   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1436276   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436277   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436278   +   end;
MPRINT(EM_DIAGRAM):   end;
1436279   +end;
MPRINT(EM_DIAGRAM):   end;
1436280   +
1436281   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1436282   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1436283   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1436284   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1436285   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1436286   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1436287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436289   +end;
MPRINT(EM_DIAGRAM):   end;
1436290   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436291   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436292   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1436293   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436294   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1436295   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1436296   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1436297   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1436298   +   end;
MPRINT(EM_DIAGRAM):   end;
1436299   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436300   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1436301   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1436302   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1436303   +   end;
MPRINT(EM_DIAGRAM):   end;
1436304   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436305   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1436306   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1436307   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1436308   +   end;
MPRINT(EM_DIAGRAM):   end;
1436309   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1436310   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1436311   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1436312   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1436313   +   end;
MPRINT(EM_DIAGRAM):   end;
1436314   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436315   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1436316   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1436317   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1436318   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436319   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436320   +   end;
MPRINT(EM_DIAGRAM):   end;
1436321   +end;
MPRINT(EM_DIAGRAM):   end;
1436322   +
1436323   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1436324   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1436325   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1436326   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1436327   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1436328   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1436329   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436331   +end;
MPRINT(EM_DIAGRAM):   end;
1436332   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436333   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436334   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1436335   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436336   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1436337   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1436338   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1436339   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1436340   +   end;
MPRINT(EM_DIAGRAM):   end;
1436341   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1436342   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1436343   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1436344   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1436345   +   end;
MPRINT(EM_DIAGRAM):   end;
1436346   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436347   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1436348   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1436349   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1436350   +   end;
MPRINT(EM_DIAGRAM):   end;
1436351   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436352   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1436353   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1436354   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1436355   +   end;
MPRINT(EM_DIAGRAM):   end;
1436356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436357   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1436358   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1436359   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1436360   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436361   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436362   +   end;
MPRINT(EM_DIAGRAM):   end;
1436363   +end;
MPRINT(EM_DIAGRAM):   end;
1436364   +
1436365   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1436366   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1436367   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1436368   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1436369   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1436370   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1436371   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436373   +end;
MPRINT(EM_DIAGRAM):   end;
1436374   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436375   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436376   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1436377   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436378   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1436379   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1436380   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1436381   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1436382   +   end;
MPRINT(EM_DIAGRAM):   end;
1436383   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1436384   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1436385   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1436386   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1436387   +   end;
MPRINT(EM_DIAGRAM):   end;
1436388   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1436389   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1436390   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1436391   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1436392   +   end;
MPRINT(EM_DIAGRAM):   end;
1436393   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436394   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1436395   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1436396   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1436397   +   end;
MPRINT(EM_DIAGRAM):   end;
1436398   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436399   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1436400   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1436401   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1436402   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436403   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436404   +   end;
MPRINT(EM_DIAGRAM):   end;
1436405   +end;
MPRINT(EM_DIAGRAM):   end;
1436406   +
1436407   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1436408   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1436409   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1436410   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1436411   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1436412   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1436413   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436414   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436415   +end;
MPRINT(EM_DIAGRAM):   end;
1436416   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436417   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436418   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1436419   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436420   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1436421   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1436422   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1436423   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1436424   +   end;
MPRINT(EM_DIAGRAM):   end;
1436425   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1436426   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1436427   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1436428   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1436429   +   end;
MPRINT(EM_DIAGRAM):   end;
1436430   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436431   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1436432   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1436433   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1436434   +   end;
MPRINT(EM_DIAGRAM):   end;
1436435   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436436   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1436437   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1436438   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1436439   +   end;
MPRINT(EM_DIAGRAM):   end;
1436440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436441   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1436442   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1436443   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1436444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436446   +   end;
MPRINT(EM_DIAGRAM):   end;
1436447   +end;
MPRINT(EM_DIAGRAM):   end;
1436448   +
1436449   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1436450   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1436451   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1436452   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1436453   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1436454   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1436455   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1436456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436457   +end;
MPRINT(EM_DIAGRAM):   end;
1436458   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436459   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1436460   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1436461   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1436462   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1436463   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1436464   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1436465   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1436466   +   end;
MPRINT(EM_DIAGRAM):   end;
1436467   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1436468   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1436469   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1436470   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1436471   +   end;
MPRINT(EM_DIAGRAM):   end;
1436472   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1436473   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1436474   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1436475   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1436476   +   end;
MPRINT(EM_DIAGRAM):   end;
1436477   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1436478   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1436479   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1436480   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1436481   +   end;
MPRINT(EM_DIAGRAM):   end;
1436482   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1436483   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1436484   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1436485   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1436486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1436487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436488   +   end;
MPRINT(EM_DIAGRAM):   end;
1436489   +end;
MPRINT(EM_DIAGRAM):   end;
1436490   +
1436491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436492   +*** Checking missing input Interval
1436493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1436494   +
1436495   +IF NMISS(
1436496   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1436497   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1436498   +
1436499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1436500   +END;
MPRINT(EM_DIAGRAM):   END;
1436501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436502   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1436503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436504   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1436505   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1436506   +END;
MPRINT(EM_DIAGRAM):   END;
1436507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1436508   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1436509   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1436510   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1436511   +END;
MPRINT(EM_DIAGRAM):   END;
1436512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436513   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1436514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436516   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1436517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436518   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1436519   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1436520   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1436521   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1436522   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1436523   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1436524   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1436525   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1436526   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1436527   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1436528   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1436529   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1436530   +          +    -0.14978605827752 * GRP_MntFishProducts3
1436531   +          +     0.22642470616542 * GRP_MntFishProducts4
1436532   +          +     0.07604404821672 * GRP_MntGoldProds2
1436533   +          +     0.04745212568332 * GRP_MntGoldProds3
1436534   +          +    -0.10028215217028 * GRP_MntGoldProds4
1436535   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1436536   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1436537   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1436538   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1436539   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1436540   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1436541   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1436542   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1436543   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1436544   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1436545   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1436546   +          +     0.24754701690398 * GRP_NumWebPurchases3
1436547   +          +     0.01530465573539 * GRP_NumWebPurchases4
1436548   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1436549   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1436550   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1436551   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1436552   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1436553   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 * 
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 * 
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 + 
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 + 
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 + 
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 + 
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 + 
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 + 
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786 
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 * 
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 * 
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 * 
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 * 
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 * 
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 + 
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 * 
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 + 
-0.44624012521308 * GRP_Recency4 ;
1436554   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1436555   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1436556   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1436557   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1436558   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1436559   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1436560   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1436561   +          +    -0.12626287803422 * GRP_MntFishProducts3
1436562   +          +    -0.42885022606866 * GRP_MntFishProducts4
1436563   +          +    -0.08312331608509 * GRP_MntGoldProds2
1436564   +          +    -0.20061238652989 * GRP_MntGoldProds3
1436565   +          +      0.2540651659901 * GRP_MntGoldProds4
1436566   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1436567   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1436568   +          +     0.40616704937625 * GRP_MntMeatProducts4
1436569   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1436570   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1436571   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1436572   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1436573   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1436574   +          +     0.10966715611059 * GRP_NumDistPurchases3
1436575   +          +      -0.043035493739 * GRP_NumDistPurchases4
1436576   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1436577   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1436578   +          +     0.26936545488609 * GRP_NumWebPurchases4
1436579   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1436580   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1436581   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1436582   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1436583   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1436584   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 * 
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 * 
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 + 
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 + 
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 + 
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 + 
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 + 
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 + 
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895 
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 * 
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 * 
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 * 
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 * 
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 * 
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 + 
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 * 
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 + 
-0.0454148085012 * GRP_Recency4 ;
1436585   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1436586   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1436587   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1436588   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1436589   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1436590   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1436591   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1436592   +          +     0.07001619920815 * GRP_MntFishProducts3
1436593   +          +     0.07735498521359 * GRP_MntFishProducts4
1436594   +          +    -0.15884098938162 * GRP_MntGoldProds2
1436595   +          +    -0.27657428867783 * GRP_MntGoldProds3
1436596   +          +     -0.1812542301124 * GRP_MntGoldProds4
1436597   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1436598   +          +     0.00010942539908 * GRP_MntMeatProducts3
1436599   +          +     0.03587382246671 * GRP_MntMeatProducts4
1436600   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1436601   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1436602   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1436603   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1436604   +          +      -0.481887498986 * GRP_NumDistPurchases2
1436605   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1436606   +          +     0.21760620991618 * GRP_NumDistPurchases4
1436607   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1436608   +          +     0.06245025753157 * GRP_NumWebPurchases3
1436609   +          +     0.11312469123111 * GRP_NumWebPurchases4
1436610   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1436611   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1436612   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1436613   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1436614   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1436615   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 * 
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 * 
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 + 
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 + 
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 + 
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 + 
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 + 
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 + 
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 * 
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 * 
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 * 
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 * 
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 * 
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 * 
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 + 
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 * 
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 + 
-0.30003743891847 * GRP_Recency4 ;
1436616   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1436617   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1436618   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1436619   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1436620   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1436621   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1436622   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1436623   +          +     0.33369645018356 * GRP_MntFishProducts3
1436624   +          +     0.08427214551103 * GRP_MntFishProducts4
1436625   +          +    -0.36187933889617 * GRP_MntGoldProds2
1436626   +          +      0.1522584097588 * GRP_MntGoldProds3
1436627   +          +    -0.18069803129722 * GRP_MntGoldProds4
1436628   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1436629   +          +     0.00511939388608 * GRP_MntMeatProducts3
1436630   +          +      0.0518722466688 * GRP_MntMeatProducts4
1436631   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1436632   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1436633   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1436634   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1436635   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1436636   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1436637   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1436638   +          +      0.0024401108853 * GRP_NumWebPurchases2
1436639   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1436640   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1436641   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1436642   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1436643   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1436644   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1436645   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1436646   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 * 
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 * 
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 + 
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 + 
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 + 
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 + 
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 + 
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 + 
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068 
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 * 
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 * 
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 * 
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 * 
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 * 
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 + 
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 * 
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 + 
0.19384397786172 * GRP_Recency4 ;
1436647   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1436648   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1436649   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1436650   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1436651   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1436652   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1436653   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1436654   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1436655   +END;
MPRINT(EM_DIAGRAM):   END;
1436656   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1436657   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1436658   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1436659   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1436660   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1436661   +END;
MPRINT(EM_DIAGRAM):   END;
1436662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436663   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1436664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436665   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1436666   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1436667   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 + 
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1436668   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1436669   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1436670   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1436671   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1436672   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1436673   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1436674   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1436675   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1436676   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1436677   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1436678   +END;
MPRINT(EM_DIAGRAM):   END;
1436679   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1436680   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1436681   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1436682   +END;
MPRINT(EM_DIAGRAM):   END;
1436683   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1436684   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1436685   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1436686   +END;
MPRINT(EM_DIAGRAM):   END;
1436687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436688   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1436689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1436690   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1436691   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1436692   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1436693   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1436694   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1436695   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1436696   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1436697   +END;
MPRINT(EM_DIAGRAM):   END;
1436698   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1436699   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1436700   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1436701   +drop
1436702   +H11
1436703   +H12
1436704   +H13
1436705   +H14
1436706   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1436707   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1436708    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1436709    quit;
1436710    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1436711    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1436712    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1436713    retain ID 2 Node "Neural21";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural21";
1436714    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1436715    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1842 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1842 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1436716    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1436717    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1436718    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1842 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1842 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1436719    proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
1436720    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1436721    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL21_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1436722    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1436723    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1436724    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1436725    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1436726    proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
1436727    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1436728    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1436729    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1436730    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1436731    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1436732    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1436733    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1436734    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1436735    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1436736    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1436736  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 895 rows and 5 columns.

1436737    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1436738    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1436739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 895 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 895 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1436740    filename _pref
1436740  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1436741    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1436742    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1436743   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1436744   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1436745   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1436746   +
1436747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436748   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1436749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436750   +LABEL GRP_AcceptedCmp5 =
1436751   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1436752   +
1436753   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1436754   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1436755   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1436756   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1436757   +end;
MPRINT(EM_DIAGRAM):   end;
1436758   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1436759   +if (_UFORMAT eq '0'
1436760   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1436761   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1436762   +end;
MPRINT(EM_DIAGRAM):   end;
1436763   +else
1436764   +if (_UFORMAT eq '1'
1436765   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1436766   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1436767   +end;
MPRINT(EM_DIAGRAM):   end;
1436768   +else do;
MPRINT(EM_DIAGRAM):   else do;
1436769   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1436770   +end;
MPRINT(EM_DIAGRAM):   end;
1436771   +end;
MPRINT(EM_DIAGRAM):   end;
1436772   +
1436773   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436774   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1436775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436776   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1436777   +
1436778   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1436779   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1436780   +end;
MPRINT(EM_DIAGRAM):   end;
1436781   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1436782   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1436783   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1436784   +end;
MPRINT(EM_DIAGRAM):   end;
1436785   +else
1436786   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1436787   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1436788   +end;
MPRINT(EM_DIAGRAM):   end;
1436789   +else
1436790   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1436791   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1436792   +end;
MPRINT(EM_DIAGRAM):   end;
1436793   +else
1436794   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1436795   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1436796   +end;
MPRINT(EM_DIAGRAM):   end;
1436797   +end;
MPRINT(EM_DIAGRAM):   end;
1436798   +
1436799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436800   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1436801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436802   +LABEL GRP_Income =
1436803   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1436804   +
1436805   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1436806   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1436807   +end;
MPRINT(EM_DIAGRAM):   end;
1436808   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1436809   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1436810   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1436811   +end;
MPRINT(EM_DIAGRAM):   end;
1436812   +else
1436813   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1436814   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1436815   +end;
MPRINT(EM_DIAGRAM):   end;
1436816   +else
1436817   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1436818   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1436819   +end;
MPRINT(EM_DIAGRAM):   end;
1436820   +else
1436821   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1436822   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1436823   +end;
MPRINT(EM_DIAGRAM):   end;
1436824   +end;
MPRINT(EM_DIAGRAM):   end;
1436825   +
1436826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436827   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1436828   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436829   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1436830   +
1436831   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1436832   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1436833   +end;
MPRINT(EM_DIAGRAM):   end;
1436834   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1436835   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1436836   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1436837   +end;
MPRINT(EM_DIAGRAM):   end;
1436838   +else
1436839   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1436840   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1436841   +end;
MPRINT(EM_DIAGRAM):   end;
1436842   +else
1436843   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1436844   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1436845   +end;
MPRINT(EM_DIAGRAM):   end;
1436846   +else
1436847   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1436848   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1436849   +end;
MPRINT(EM_DIAGRAM):   end;
1436850   +end;
MPRINT(EM_DIAGRAM):   end;
1436851   +
1436852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436853   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1436854   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436855   +LABEL GRP_MntFishProducts =
1436856   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1436857   +
1436858   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1436859   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1436860   +end;
MPRINT(EM_DIAGRAM):   end;
1436861   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1436862   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1436863   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1436864   +end;
MPRINT(EM_DIAGRAM):   end;
1436865   +else
1436866   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1436867   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1436868   +end;
MPRINT(EM_DIAGRAM):   end;
1436869   +else
1436870   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1436871   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1436872   +end;
MPRINT(EM_DIAGRAM):   end;
1436873   +else
1436874   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1436875   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1436876   +end;
MPRINT(EM_DIAGRAM):   end;
1436877   +end;
MPRINT(EM_DIAGRAM):   end;
1436878   +
1436879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436880   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1436881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436882   +LABEL GRP_MntGoldProds =
1436883   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1436884   +
1436885   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1436886   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1436887   +end;
MPRINT(EM_DIAGRAM):   end;
1436888   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1436889   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1436890   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1436891   +end;
MPRINT(EM_DIAGRAM):   end;
1436892   +else
1436893   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1436894   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1436895   +end;
MPRINT(EM_DIAGRAM):   end;
1436896   +else
1436897   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1436898   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1436899   +end;
MPRINT(EM_DIAGRAM):   end;
1436900   +else
1436901   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1436902   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1436903   +end;
MPRINT(EM_DIAGRAM):   end;
1436904   +end;
MPRINT(EM_DIAGRAM):   end;
1436905   +
1436906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436907   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1436908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436909   +LABEL GRP_MntMeatProducts =
1436910   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1436911   +
1436912   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1436913   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1436914   +end;
MPRINT(EM_DIAGRAM):   end;
1436915   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1436916   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1436917   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1436918   +end;
MPRINT(EM_DIAGRAM):   end;
1436919   +else
1436920   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1436921   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1436922   +end;
MPRINT(EM_DIAGRAM):   end;
1436923   +else
1436924   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1436925   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1436926   +end;
MPRINT(EM_DIAGRAM):   end;
1436927   +else
1436928   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1436929   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1436930   +end;
MPRINT(EM_DIAGRAM):   end;
1436931   +end;
MPRINT(EM_DIAGRAM):   end;
1436932   +
1436933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436934   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1436935   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436936   +LABEL GRP_MntWines =
1436937   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1436938   +
1436939   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1436940   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1436941   +end;
MPRINT(EM_DIAGRAM):   end;
1436942   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1436943   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1436944   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1436945   +end;
MPRINT(EM_DIAGRAM):   end;
1436946   +else
1436947   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1436948   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1436949   +end;
MPRINT(EM_DIAGRAM):   end;
1436950   +else
1436951   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1436952   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1436953   +end;
MPRINT(EM_DIAGRAM):   end;
1436954   +else
1436955   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1436956   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1436957   +end;
MPRINT(EM_DIAGRAM):   end;
1436958   +end;
MPRINT(EM_DIAGRAM):   end;
1436959   +
1436960   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436961   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1436962   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436963   +LABEL GRP_NumCatalogPurchases =
1436964   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1436965   +
1436966   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1436967   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1436968   +end;
MPRINT(EM_DIAGRAM):   end;
1436969   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1436970   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1436971   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1436972   +end;
MPRINT(EM_DIAGRAM):   end;
1436973   +else
1436974   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1436975   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1436976   +end;
MPRINT(EM_DIAGRAM):   end;
1436977   +else
1436978   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1436979   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1436980   +end;
MPRINT(EM_DIAGRAM):   end;
1436981   +else
1436982   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1436983   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1436984   +end;
MPRINT(EM_DIAGRAM):   end;
1436985   +end;
MPRINT(EM_DIAGRAM):   end;
1436986   +
1436987   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436988   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1436989   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1436990   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1436991   +
1436992   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1436993   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1436994   +end;
MPRINT(EM_DIAGRAM):   end;
1436995   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1436996   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1436997   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1436998   +end;
MPRINT(EM_DIAGRAM):   end;
1436999   +else
1437000   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1437001   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1437002   +end;
MPRINT(EM_DIAGRAM):   end;
1437003   +else
1437004   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1437005   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1437006   +end;
MPRINT(EM_DIAGRAM):   end;
1437007   +else
1437008   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1437009   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1437010   +end;
MPRINT(EM_DIAGRAM):   end;
1437011   +end;
MPRINT(EM_DIAGRAM):   end;
1437012   +
1437013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1437014   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1437015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1437016   +LABEL GRP_NumWebPurchases =
1437017   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1437018   +
1437019   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1437020   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1437021   +end;
MPRINT(EM_DIAGRAM):   end;
1437022   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1437023   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1437024   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1437025   +end;
MPRINT(EM_DIAGRAM):   end;
1437026   +else
1437027   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1437028   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1437029   +end;
MPRINT(EM_DIAGRAM):   end;
1437030   +else
1437031   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1437032   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1437033   +end;
MPRINT(EM_DIAGRAM):   end;
1437034   +else
1437035   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1437036   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1437037   +end;
MPRINT(EM_DIAGRAM):   end;
1437038   +end;
MPRINT(EM_DIAGRAM):   end;
1437039   +
1437040   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1437041   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1437042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1437043   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1437044   +
1437045   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1437046   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1437047   +end;
MPRINT(EM_DIAGRAM):   end;
1437048   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1437049   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1437050   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1437051   +end;
MPRINT(EM_DIAGRAM):   end;
1437052   +else
1437053   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1437054   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1437055   +end;
MPRINT(EM_DIAGRAM):   end;
1437056   +else
1437057   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1437058   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1437059   +end;
MPRINT(EM_DIAGRAM):   end;
1437060   +else
1437061   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1437062   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1437063   +end;
MPRINT(EM_DIAGRAM):   end;
1437064   +end;
MPRINT(EM_DIAGRAM):   end;
1437065   +
1437066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1437067   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1437068   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1437069   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1437070   +
1437071   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1437072   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1437073   +end;
MPRINT(EM_DIAGRAM):   end;
1437074   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1437075   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1437076   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1437077   +end;
MPRINT(EM_DIAGRAM):   end;
1437078   +else
1437079   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1437080   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1437081   +end;
MPRINT(EM_DIAGRAM):   end;
1437082   +else
1437083   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1437084   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1437085   +end;
MPRINT(EM_DIAGRAM):   end;
1437086   +else
1437087   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1437088   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1437089   +end;
MPRINT(EM_DIAGRAM):   end;
1437090   +end;
MPRINT(EM_DIAGRAM):   end;
1437091   +
1437092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1437093   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1437094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1437095   +LABEL GRP_Recency =
1437096   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1437097   +
1437098   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1437099   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1437100   +end;
MPRINT(EM_DIAGRAM):   end;
1437101   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1437102   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1437103   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1437104   +end;
MPRINT(EM_DIAGRAM):   end;
1437105   +else
1437106   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1437107   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1437108   +end;
MPRINT(EM_DIAGRAM):   end;
1437109   +else
1437110   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1437111   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1437112   +end;
MPRINT(EM_DIAGRAM):   end;
1437113   +else
1437114   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1437115   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1437116   +end;
MPRINT(EM_DIAGRAM):   end;
1437117   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1437118    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1437119    quit;
1437120    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1437121    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1437122    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1437123    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1437124    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1437125    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437126    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1437127    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437128    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437129    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1437130    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437131    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1437132    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1437133    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1437134    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1437135    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437136    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1437137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1437138    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1437139    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437140    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437141    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1437142    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1437143    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437144    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437145    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1437146    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1437146  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1437147    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1437148    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1437149    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 910 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437150    filename _pref
1437150  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1437151    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1437152    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1437153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1437154   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1437155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1437156   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1437157   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1437158   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1437159    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1437160    quit;
1437161    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1437162    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1437163    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1437164    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1437165    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1437166    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437167    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1437168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437169    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437170    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1437171    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437172    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.17 seconds
      cpu time            0.01 seconds
      

1437173    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1437174    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1437175    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1437176    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437177    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1437178    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1437179    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1437180    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437181    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1437182    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1437183    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1437184    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437185    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437186    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1437187    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1437187  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1437188    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

1437189    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1437190    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 914 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437191    filename _pref
1437191  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1437192    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1437193    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1437194   +
1437195   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1437196   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1437196  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1437197   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1437198   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1437199   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1437200   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1437201   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1437202    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1437203    quit;
1437204    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1437205    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1437206    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1437207    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1437208    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1437209    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437210    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1437211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437212    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437213    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1437214    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437215    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1437216    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1437217    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1437218    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1437219    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437220    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1437221    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1437222    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1437223    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437224    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437225    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1437226    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1437227    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437228    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437229    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1437230    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1437230  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1437231    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1437232    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1437233    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 953 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437234    filename _pref
1437234  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1437235    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1437236    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1437237   +
1437238   +
1437239   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1437240   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1437241   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1437242   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1437243   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1437244   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1437245   +
1437246   +
1437247   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1437248   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1437249   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1437250   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1437251   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1437252   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1437253   +
1437254   +
1437255   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1437256   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1437257   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1437258   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1437259   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1437260   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1437261   +
1437262   +
1437263   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1437264   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1437265   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1437266   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1437267   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1437268   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1437269   +
1437270   +
1437271   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1437272   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1437273   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1437274   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1437275   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1437276   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1437277   +
1437278   +
1437279   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1437280   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1437281   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1437282   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1437283   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1437284   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1437285   +
1437286   +
1437287   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1437288   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1437289   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1437290   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1437291   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1437292   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1437293   +
1437294   +
1437295   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1437296   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1437297   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1437298   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1437299   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1437300   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1437301   +if
1437302   +_FILTERNORM1 not in ( '.')
1437303   + and
1437304   +_FILTERNORM2 not in ( '.')
1437305   + and
1437306   +_FILTERNORM3 not in ( '.')
1437307   + and
1437308   +_FILTERNORM4 not in ( '.')
1437309   + and
1437310   +_FILTERNORM5 not in ( '.')
1437311   + and
1437312   +_FILTERNORM6 not in ( '.')
1437313   + and
1437314   +_FILTERNORM7 not in ( ' ')
1437315   + and
1437316   +_FILTERNORM8 not in ( ' ')
1437317   +and
1437318   +( Dt_Customer ne .)
1437319   +and ( Income ne . and (Income<=107000))
1437320   +and ( Kidhome ne .)
1437321   +and ( MntFishProducts ne .)
1437322   +and ( MntFruits ne .)
1437323   +and ( MntGoldProds ne .)
1437324   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1437325   +and ( MntSweetProducts ne .)
1437326   +and ( MntWines ne .)
1437327   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1437328   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1437329   +and ( NumStorePurchases ne .)
1437330   +and ( NumWebPurchases ne .)
1437331   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1437332   +and ( Recency ne .)
1437333   +and ( Teenhome ne .)
1437334   +and ( Year_Birth ne .)
1437335   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1437336   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1437337   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1437338   +end;
MPRINT(EM_DIAGRAM):   end;
1437339   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1437340   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1437341    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1437342    quit;
1437343    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1437344    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1437345    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1437346    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1437347    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1437348    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1437349    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1437350    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437351    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437352    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1437353    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437354    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437355    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1437356    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1437357    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1437358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437359    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1437360    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1437361    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1437362    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437363    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437364    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1437365    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1437366    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1437367    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437368    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1437369    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1437369  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1437370    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437371    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1437372    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 1019 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437373    %macro varDept(fcmpdata=,id=);
1437374    %global nobs&id scoreFlag&id;
1437375    %let scoreFlag&id = 0;
1437376    %if &id=1 or ^&fcmpStart %then %do;
1437377    proc sort data=&fcmpdata out=_temp&id nodupkey;
1437378    by NAME;
1437379    where id=&id and LHS in( %let j=1;
1437380    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1437381    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1437382    "&var" %let j = %eval(&j+1);
1437383    %end;
1437384    );
1437385    run;
1437386    %let dsid = %sysfunc(open(_temp&id));
1437387    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1437388    %let dsid = %sysfunc(close(&dsid));
1437389    %if &&nobs&id %then %do;
1437390    %let scoreFlag&id = 1;
1437391    %let fcmpStart = 1;
1437392    %end;
1437393    %else %let fcmpStart = 0;
1437394    %end;
1437395    %else %do;
1437396    proc sort data=&fcmpdata out=_tempid;
1437397    where id=&id;
1437398    by LHS;
1437399    run;
1437400    %let dsid = %sysfunc(open(_tempid));
1437401    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1437402    %let dsid = %sysfunc(close(&dsid));
1437403    %if ^&&nobs&id %then %do;
1437404    proc datasets lib=work nolist;
1437405    delete _tempid;
1437406    run;
1437407    quit;
1437408    %end;
1437409    %else %do;
1437410    data _tempAll;
1437411    set %let j=%eval(&id-1);
1437412    %do x=1 %to &j;
1437413    %if &&nobs&x %then %do;
1437414    _temp&x %end;
1437415    %end;
1437416    ;
1437417    run;
1437418    proc sql;
1437419    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1437419  ! work._tempid p2 where p.name=p2.lhs;
1437420    quit;
1437421    data _temp&id;
1437422    set _temp&id;
1437423    where LHS ne '' and NAME ne '' and Node ne '';
1437424    run;
1437425    proc datasets lib=work nolist;
1437426    delete _tempAll;
1437427    run;
1437428    %let dsid = %sysfunc(open(_temp&id));
1437429    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1437430    %let dsid = %sysfunc(close(&dsid));
1437431    %if ^&&nobs&id %then %do;
1437432    proc datasets lib=work nolist;
1437433    delete _temp&id;
1437434    run;
1437435    quit;
1437436    %end;
1437437    %else %do;
1437438    %let scoreFlag&id = 1;
1437439    data _temp&id;
1437440    set _temp&id;
1437441    where LHS ne NAME and node ne '';
1437442    run;
1437443    %let dsid = %sysfunc(open(_temp&id));
1437444    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1437445    %let dsid = %sysfunc(close(&dsid));
1437446    %if ^&&nobs&id %then %do;
1437447    proc datasets lib=work nolist;
1437448    delete _temp&id;
1437449    run;
1437450    quit;
1437451    %end;
1437452    %else %do;
1437453    proc sort data=_temp&id nodupkey;
1437454    by LHS NAME;
1437455    run;
1437456    %end;
1437457    %end;
1437458    %end;
1437459    %end;
1437460    %mend varDept;
1437461    %macro optCode(outdata=fcmpdata);
1437462    %global fcmpStart;
1437463    %let fcmpStart = 0;
1437464    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1437465    %let NumNodes=9;
1437466    %do k=1 %to &NumNodes;
1437467    %vardept(fcmpdata=&outdata, id=&k);
1437468    %end;
1437469    %mend optCode;
1437470    %optcode(outData=EMWS8.Ensmbl17_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1437471    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1437472    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1437473    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1437474    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1437475    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1437476    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1437477    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1437478    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437479    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1437480    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1437480  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1437481    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

1437482    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1437483    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1437484    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437485    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1437486    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1437487    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1437488    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1437489    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1437490    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1437491    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1437492    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437493    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1437494    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1437494  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

1437495    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1437496    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1437497    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1437498    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437499    filename _pref
1437499  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas";
1437500    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1437501    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas.
1437502   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1437503   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1437504   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1437505   +
1437506   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1437507   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1437508   +
1437509   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1437510   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1437511   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1437512   +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
1437513   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1437514   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1437515   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1437516   +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
1437517   +
1437518   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1437519   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1437520   +
1437521   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1437522   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1437523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437525   +end;
MPRINT(EM_DIAGRAM):   end;
1437526   +
1437527   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1437528   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1437529   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1437530   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1437531   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437533   +end;
MPRINT(EM_DIAGRAM):   end;
1437534   +else do;
MPRINT(EM_DIAGRAM):   else do;
1437535   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1437536   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1437537   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1437538   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1437539   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1437540   +   end;
MPRINT(EM_DIAGRAM):   end;
1437541   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1437542   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1437543   +   end;
MPRINT(EM_DIAGRAM):   end;
1437544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1437545   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1437546   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1437547   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437548   +   end;
MPRINT(EM_DIAGRAM):   end;
1437549   +end;
MPRINT(EM_DIAGRAM):   end;
1437550   +
1437551   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1437552   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1437553   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1437554   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1437555   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1437556   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1437557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437559   +end;
MPRINT(EM_DIAGRAM):   end;
1437560   +else do;
MPRINT(EM_DIAGRAM):   else do;
1437561   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1437562   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1437563   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1437564   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1437565   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1437566   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1437567   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1437568   +   end;
MPRINT(EM_DIAGRAM):   end;
1437569   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1437570   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1437571   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1437572   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1437573   +   end;
MPRINT(EM_DIAGRAM):   end;
1437574   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1437575   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1437576   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1437577   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1437578   +   end;
MPRINT(EM_DIAGRAM):   end;
1437579   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1437580   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1437581   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1437582   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1437583   +   end;
MPRINT(EM_DIAGRAM):   end;
1437584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1437585   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1437586   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1437587   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1437588   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1437589   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437590   +   end;
MPRINT(EM_DIAGRAM):   end;
1437591   +end;
MPRINT(EM_DIAGRAM):   end;
1437592   +
1437593   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1437594   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1437595   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1437596   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1437597   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1437598   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1437599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437601   +end;
MPRINT(EM_DIAGRAM):   end;
1437602   +else do;
MPRINT(EM_DIAGRAM):   else do;
1437603   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1437604   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1437605   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1437606   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1437607   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1437608   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1437609   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1437610   +   end;
MPRINT(EM_DIAGRAM):   end;
1437611   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1437612   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1437613   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1437614   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1437615   +   end;
MPRINT(EM_DIAGRAM):   end;
1437616   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1437617   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1437618   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1437619   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1437620   +   end;
MPRINT(EM_DIAGRAM):   end;
1437621   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1437622   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1437623   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1437624   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1437625   +   end;
MPRINT(EM_DIAGRAM):   end;
1437626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1437627   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1437628   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1437629   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1437630   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1437631   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437632   +   end;
MPRINT(EM_DIAGRAM):   end;
1437633   +end;
MPRINT(EM_DIAGRAM):   end;
1437634   +
1437635   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1437636   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1437637   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1437638   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1437639   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1437640   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1437641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437643   +end;
MPRINT(EM_DIAGRAM):   end;
1437644   +else do;
MPRINT(EM_DIAGRAM):   else do;
1437645   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1437646   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1437647   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1437648   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1437649   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1437650   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1437651   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1437652   +   end;
MPRINT(EM_DIAGRAM):   end;
1437653   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1437654   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1437655   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1437656   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1437657   +   end;
MPRINT(EM_DIAGRAM):   end;
1437658   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1437659   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1437660   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1437661   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1437662   +   end;
MPRINT(EM_DIAGRAM):   end;
1437663   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1437664   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1437665   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1437666   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1437667   +   end;
MPRINT(EM_DIAGRAM):   end;
1437668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1437669   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1437670   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1437671   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1437672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1437673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437674   +   end;
MPRINT(EM_DIAGRAM):   end;
1437675   +end;
MPRINT(EM_DIAGRAM):   end;
1437676   +
1437677   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1437678   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1437679   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1437680   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1437681   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1437682   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1437683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437685   +end;
MPRINT(EM_DIAGRAM):   end;
1437686   +else do;
MPRINT(EM_DIAGRAM):   else do;
1437687   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1437688   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1437689   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1437690   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1437691   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1437692   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1437693   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1437694   +   end;
MPRINT(EM_DIAGRAM):   end;
1437695   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1437696   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1437697   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1437698   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1437699   +   end;
MPRINT(EM_DIAGRAM):   end;
1437700   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1437701   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1437702   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1437703   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1437704   +   end;
MPRINT(EM_DIAGRAM):   end;
1437705   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1437706   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1437707   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1437708   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1437709   +   end;
MPRINT(EM_DIAGRAM):   end;
1437710   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1437711   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1437712   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1437713   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1437714   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1437715   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437716   +   end;
MPRINT(EM_DIAGRAM):   end;
1437717   +end;
MPRINT(EM_DIAGRAM):   end;
1437718   +
1437719   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1437720   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1437721   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1437722   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1437723   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1437724   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1437725   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437727   +end;
MPRINT(EM_DIAGRAM):   end;
1437728   +else do;
MPRINT(EM_DIAGRAM):   else do;
1437729   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1437730   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1437731   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1437732   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1437733   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1437734   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1437735   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1437736   +   end;
MPRINT(EM_DIAGRAM):   end;
1437737   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1437738   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1437739   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1437740   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1437741   +   end;
MPRINT(EM_DIAGRAM):   end;
1437742   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1437743   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1437744   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1437745   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1437746   +   end;
MPRINT(EM_DIAGRAM):   end;
1437747   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1437748   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1437749   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1437750   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1437751   +   end;
MPRINT(EM_DIAGRAM):   end;
1437752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1437753   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1437754   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1437755   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1437756   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1437757   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437758   +   end;
MPRINT(EM_DIAGRAM):   end;
1437759   +end;
MPRINT(EM_DIAGRAM):   end;
1437760   +
1437761   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1437762   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1437763   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1437764   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1437765   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1437766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437768   +end;
MPRINT(EM_DIAGRAM):   end;
1437769   +else do;
MPRINT(EM_DIAGRAM):   else do;
1437770   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1437771   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1437772   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1437773   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1437774   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1437775   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1437776   +   end;
MPRINT(EM_DIAGRAM):   end;
1437777   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1437778   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1437779   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1437780   +   end;
MPRINT(EM_DIAGRAM):   end;
1437781   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1437782   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1437783   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1437784   +   end;
MPRINT(EM_DIAGRAM):   end;
1437785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1437786   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1437787   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1437788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1437789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437790   +   end;
MPRINT(EM_DIAGRAM):   end;
1437791   +end;
MPRINT(EM_DIAGRAM):   end;
1437792   +
1437793   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1437794   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1437795   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1437796   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1437797   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1437798   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1437799   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437801   +end;
MPRINT(EM_DIAGRAM):   end;
1437802   +else do;
MPRINT(EM_DIAGRAM):   else do;
1437803   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1437804   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1437805   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1437806   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1437807   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1437808   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1437809   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1437810   +   end;
MPRINT(EM_DIAGRAM):   end;
1437811   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1437812   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1437813   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1437814   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1437815   +   end;
MPRINT(EM_DIAGRAM):   end;
1437816   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1437817   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1437818   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1437819   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1437820   +   end;
MPRINT(EM_DIAGRAM):   end;
1437821   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1437822   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1437823   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1437824   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1437825   +   end;
MPRINT(EM_DIAGRAM):   end;
1437826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1437827   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1437828   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1437829   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1437830   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1437831   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437832   +   end;
MPRINT(EM_DIAGRAM):   end;
1437833   +end;
MPRINT(EM_DIAGRAM):   end;
1437834   +
1437835   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1437836   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1437837   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1437838   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1437839   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1437840   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1437841   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437842   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437843   +end;
MPRINT(EM_DIAGRAM):   end;
1437844   +else do;
MPRINT(EM_DIAGRAM):   else do;
1437845   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1437846   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1437847   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1437848   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1437849   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1437850   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1437851   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1437852   +   end;
MPRINT(EM_DIAGRAM):   end;
1437853   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1437854   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1437855   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1437856   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1437857   +   end;
MPRINT(EM_DIAGRAM):   end;
1437858   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1437859   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1437860   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1437861   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1437862   +   end;
MPRINT(EM_DIAGRAM):   end;
1437863   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1437864   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1437865   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1437866   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1437867   +   end;
MPRINT(EM_DIAGRAM):   end;
1437868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1437869   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1437870   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1437871   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1437872   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1437873   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437874   +   end;
MPRINT(EM_DIAGRAM):   end;
1437875   +end;
MPRINT(EM_DIAGRAM):   end;
1437876   +
1437877   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1437878   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1437879   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1437880   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1437881   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1437882   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1437883   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1437884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437885   +end;
MPRINT(EM_DIAGRAM):   end;
1437886   +else do;
MPRINT(EM_DIAGRAM):   else do;
1437887   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1437888   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1437889   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1437890   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1437891   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1437892   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1437893   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1437894   +   end;
MPRINT(EM_DIAGRAM):   end;
1437895   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1437896   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1437897   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1437898   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1437899   +   end;
MPRINT(EM_DIAGRAM):   end;
1437900   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1437901   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1437902   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1437903   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1437904   +   end;
MPRINT(EM_DIAGRAM):   end;
1437905   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1437906   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1437907   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1437908   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1437909   +   end;
MPRINT(EM_DIAGRAM):   end;
1437910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1437911   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1437912   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1437913   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1437914   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1437915   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1437916   +   end;
MPRINT(EM_DIAGRAM):   end;
1437917   +end;
MPRINT(EM_DIAGRAM):   end;
1437918   +
1437919   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1437920   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1437921   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1437922   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1437923   +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
1437924   +end;
MPRINT(EM_DIAGRAM):   end;
1437925   +
1437926   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1437927   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1437928   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1437929   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1437930   +
1437931   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1437932   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1437933   +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
1437934   +
1437935   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1437936   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1437937   +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
1437938   +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
1437939   +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
1437940   +
1437941   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1437942   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1437943   +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
1437944   +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
1437945   +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
1437946   +
1437947   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1437948   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1437949   +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
1437950   +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
1437951   +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
1437952   +
1437953   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1437954   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1437955   +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
1437956   +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
1437957   +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
1437958   +
1437959   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1437960   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1437961   +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
1437962   +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
1437963   +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
1437964   +
1437965   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1437966   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1437967   +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
1437968   +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
1437969   +
1437970   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1437971   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1437972   +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
1437973   +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
1437974   +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
1437975   +
1437976   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1437977   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1437978   +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
1437979   +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
1437980   +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
1437981   +
1437982   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1437983   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1437984   +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
1437985   +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
1437986   +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
1437987   +
1437988   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1437989   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1437990   +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
1437991   +
1437992   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1437993   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1437994   +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
1437995   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1437996   +
1437997   +REG7DR1:
1437998   +
1437999   +
1438000   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Posterior Probabilities and Predicted Level;
1438001   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1438002   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1438003   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1438004   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1438005   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1438006   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1438007   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1438008   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1438009   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1438010   +end;
MPRINT(EM_DIAGRAM):   end;
1438011   +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
1438012   +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
1438013   +
1438014   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1438015   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1438016   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1438017    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1438018    quit;
1438019    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1438020    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1438021    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1438022    retain ID 2 Node "Reg7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg7";
1438023    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1438024    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 779 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 779 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438025    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1438026    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438027    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 779 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 779 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438028    proc sort data=EMWS8.Reg7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg7_variableset out=_temp2(keep=NAME CREATOR);
1438029    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438030    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.REG7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438031    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1438032    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1438033    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1438034    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438035    proc contents data=EMWS8.Reg7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg7_train out=_meta(keep=NAME) noprint;
1438036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1438037    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1438038    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438040    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1438041    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1438042    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438043    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438044    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1438045    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1438045  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 413 rows and 5 columns.

1438046    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438047    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1438048    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 413 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 413 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438049    filename _pref
1438049  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1438050    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1438051    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1438052   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1438053   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1438054   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1438055   +
1438056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438057   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1438058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438059   +LABEL GRP_AcceptedCmp5 =
1438060   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1438061   +
1438062   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1438063   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1438064   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1438065   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1438066   +end;
MPRINT(EM_DIAGRAM):   end;
1438067   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1438068   +if (_UFORMAT eq '0'
1438069   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1438070   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1438071   +end;
MPRINT(EM_DIAGRAM):   end;
1438072   +else
1438073   +if (_UFORMAT eq '1'
1438074   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1438075   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1438076   +end;
MPRINT(EM_DIAGRAM):   end;
1438077   +else do;
MPRINT(EM_DIAGRAM):   else do;
1438078   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1438079   +end;
MPRINT(EM_DIAGRAM):   end;
1438080   +end;
MPRINT(EM_DIAGRAM):   end;
1438081   +
1438082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438083   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1438084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438085   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1438086   +
1438087   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1438088   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1438089   +end;
MPRINT(EM_DIAGRAM):   end;
1438090   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1438091   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1438092   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1438093   +end;
MPRINT(EM_DIAGRAM):   end;
1438094   +else
1438095   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1438096   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1438097   +end;
MPRINT(EM_DIAGRAM):   end;
1438098   +else
1438099   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1438100   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1438101   +end;
MPRINT(EM_DIAGRAM):   end;
1438102   +else
1438103   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1438104   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1438105   +end;
MPRINT(EM_DIAGRAM):   end;
1438106   +end;
MPRINT(EM_DIAGRAM):   end;
1438107   +
1438108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438109   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1438110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438111   +LABEL GRP_Income =
1438112   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1438113   +
1438114   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1438115   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1438116   +end;
MPRINT(EM_DIAGRAM):   end;
1438117   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1438118   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1438119   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1438120   +end;
MPRINT(EM_DIAGRAM):   end;
1438121   +else
1438122   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1438123   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1438124   +end;
MPRINT(EM_DIAGRAM):   end;
1438125   +else
1438126   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1438127   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1438128   +end;
MPRINT(EM_DIAGRAM):   end;
1438129   +else
1438130   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1438131   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1438132   +end;
MPRINT(EM_DIAGRAM):   end;
1438133   +end;
MPRINT(EM_DIAGRAM):   end;
1438134   +
1438135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438136   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1438137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438138   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1438139   +
1438140   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1438141   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1438142   +end;
MPRINT(EM_DIAGRAM):   end;
1438143   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1438144   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1438145   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1438146   +end;
MPRINT(EM_DIAGRAM):   end;
1438147   +else
1438148   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1438149   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1438150   +end;
MPRINT(EM_DIAGRAM):   end;
1438151   +else
1438152   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1438153   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1438154   +end;
MPRINT(EM_DIAGRAM):   end;
1438155   +else
1438156   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1438157   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1438158   +end;
MPRINT(EM_DIAGRAM):   end;
1438159   +end;
MPRINT(EM_DIAGRAM):   end;
1438160   +
1438161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438162   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1438163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438164   +LABEL GRP_MntFishProducts =
1438165   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1438166   +
1438167   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1438168   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1438169   +end;
MPRINT(EM_DIAGRAM):   end;
1438170   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1438171   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1438172   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1438173   +end;
MPRINT(EM_DIAGRAM):   end;
1438174   +else
1438175   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1438176   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1438177   +end;
MPRINT(EM_DIAGRAM):   end;
1438178   +else
1438179   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1438180   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1438181   +end;
MPRINT(EM_DIAGRAM):   end;
1438182   +else
1438183   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1438184   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1438185   +end;
MPRINT(EM_DIAGRAM):   end;
1438186   +end;
MPRINT(EM_DIAGRAM):   end;
1438187   +
1438188   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438189   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1438190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438191   +LABEL GRP_MntGoldProds =
1438192   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1438193   +
1438194   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1438195   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1438196   +end;
MPRINT(EM_DIAGRAM):   end;
1438197   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1438198   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1438199   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1438200   +end;
MPRINT(EM_DIAGRAM):   end;
1438201   +else
1438202   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1438203   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1438204   +end;
MPRINT(EM_DIAGRAM):   end;
1438205   +else
1438206   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1438207   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1438208   +end;
MPRINT(EM_DIAGRAM):   end;
1438209   +else
1438210   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1438211   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1438212   +end;
MPRINT(EM_DIAGRAM):   end;
1438213   +end;
MPRINT(EM_DIAGRAM):   end;
1438214   +
1438215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438216   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1438217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438218   +LABEL GRP_MntMeatProducts =
1438219   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1438220   +
1438221   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1438222   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1438223   +end;
MPRINT(EM_DIAGRAM):   end;
1438224   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1438225   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1438226   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1438227   +end;
MPRINT(EM_DIAGRAM):   end;
1438228   +else
1438229   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1438230   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1438231   +end;
MPRINT(EM_DIAGRAM):   end;
1438232   +else
1438233   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1438234   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1438235   +end;
MPRINT(EM_DIAGRAM):   end;
1438236   +else
1438237   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1438238   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1438239   +end;
MPRINT(EM_DIAGRAM):   end;
1438240   +end;
MPRINT(EM_DIAGRAM):   end;
1438241   +
1438242   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438243   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1438244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438245   +LABEL GRP_MntWines =
1438246   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1438247   +
1438248   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1438249   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1438250   +end;
MPRINT(EM_DIAGRAM):   end;
1438251   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1438252   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1438253   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1438254   +end;
MPRINT(EM_DIAGRAM):   end;
1438255   +else
1438256   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1438257   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1438258   +end;
MPRINT(EM_DIAGRAM):   end;
1438259   +else
1438260   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1438261   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1438262   +end;
MPRINT(EM_DIAGRAM):   end;
1438263   +else
1438264   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1438265   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1438266   +end;
MPRINT(EM_DIAGRAM):   end;
1438267   +end;
MPRINT(EM_DIAGRAM):   end;
1438268   +
1438269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438270   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1438271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438272   +LABEL GRP_NumCatalogPurchases =
1438273   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1438274   +
1438275   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1438276   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1438277   +end;
MPRINT(EM_DIAGRAM):   end;
1438278   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1438279   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1438280   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1438281   +end;
MPRINT(EM_DIAGRAM):   end;
1438282   +else
1438283   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1438284   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1438285   +end;
MPRINT(EM_DIAGRAM):   end;
1438286   +else
1438287   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1438288   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1438289   +end;
MPRINT(EM_DIAGRAM):   end;
1438290   +else
1438291   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1438292   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1438293   +end;
MPRINT(EM_DIAGRAM):   end;
1438294   +end;
MPRINT(EM_DIAGRAM):   end;
1438295   +
1438296   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438297   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1438298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438299   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1438300   +
1438301   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1438302   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1438303   +end;
MPRINT(EM_DIAGRAM):   end;
1438304   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1438305   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1438306   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1438307   +end;
MPRINT(EM_DIAGRAM):   end;
1438308   +else
1438309   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1438310   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1438311   +end;
MPRINT(EM_DIAGRAM):   end;
1438312   +else
1438313   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1438314   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1438315   +end;
MPRINT(EM_DIAGRAM):   end;
1438316   +else
1438317   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1438318   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1438319   +end;
MPRINT(EM_DIAGRAM):   end;
1438320   +end;
MPRINT(EM_DIAGRAM):   end;
1438321   +
1438322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438323   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1438324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438325   +LABEL GRP_NumWebPurchases =
1438326   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1438327   +
1438328   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1438329   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1438330   +end;
MPRINT(EM_DIAGRAM):   end;
1438331   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1438332   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1438333   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1438334   +end;
MPRINT(EM_DIAGRAM):   end;
1438335   +else
1438336   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1438337   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1438338   +end;
MPRINT(EM_DIAGRAM):   end;
1438339   +else
1438340   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1438341   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1438342   +end;
MPRINT(EM_DIAGRAM):   end;
1438343   +else
1438344   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1438345   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1438346   +end;
MPRINT(EM_DIAGRAM):   end;
1438347   +end;
MPRINT(EM_DIAGRAM):   end;
1438348   +
1438349   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438350   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1438351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438352   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1438353   +
1438354   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1438355   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1438356   +end;
MPRINT(EM_DIAGRAM):   end;
1438357   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1438358   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1438359   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1438360   +end;
MPRINT(EM_DIAGRAM):   end;
1438361   +else
1438362   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1438363   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1438364   +end;
MPRINT(EM_DIAGRAM):   end;
1438365   +else
1438366   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1438367   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1438368   +end;
MPRINT(EM_DIAGRAM):   end;
1438369   +else
1438370   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1438371   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1438372   +end;
MPRINT(EM_DIAGRAM):   end;
1438373   +end;
MPRINT(EM_DIAGRAM):   end;
1438374   +
1438375   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438376   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1438377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438378   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1438379   +
1438380   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1438381   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1438382   +end;
MPRINT(EM_DIAGRAM):   end;
1438383   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1438384   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1438385   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1438386   +end;
MPRINT(EM_DIAGRAM):   end;
1438387   +else
1438388   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1438389   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1438390   +end;
MPRINT(EM_DIAGRAM):   end;
1438391   +else
1438392   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1438393   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1438394   +end;
MPRINT(EM_DIAGRAM):   end;
1438395   +else
1438396   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1438397   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1438398   +end;
MPRINT(EM_DIAGRAM):   end;
1438399   +end;
MPRINT(EM_DIAGRAM):   end;
1438400   +
1438401   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438402   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1438403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438404   +LABEL GRP_Recency =
1438405   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1438406   +
1438407   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1438408   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1438409   +end;
MPRINT(EM_DIAGRAM):   end;
1438410   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1438411   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1438412   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1438413   +end;
MPRINT(EM_DIAGRAM):   end;
1438414   +else
1438415   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1438416   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1438417   +end;
MPRINT(EM_DIAGRAM):   end;
1438418   +else
1438419   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1438420   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1438421   +end;
MPRINT(EM_DIAGRAM):   end;
1438422   +else
1438423   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1438424   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1438425   +end;
MPRINT(EM_DIAGRAM):   end;
1438426   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1438427    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1438428    quit;
1438429    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1438430    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1438431    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1438432    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1438433    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1438434    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438435    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1438436    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438437    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438438    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1438439    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438440    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438441    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1438442    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1438443    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1438444    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438445    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1438446    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438447    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1438448    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438449    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438450    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1438451    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1438452    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438453    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438454    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1438455    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1438455  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1438456    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438457    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1438458    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 428 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438459    filename _pref
1438459  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1438460    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1438461    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1438462   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438463   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1438464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1438465   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1438466   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1438467   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1438468    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1438469    quit;
1438470    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1438471    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1438472    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1438473    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1438474    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1438475    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438476    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1438477    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438478    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438479    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1438480    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438481    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438482    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1438483    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1438484    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1438485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438486    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1438487    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1438488    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1438489    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438490    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438491    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1438492    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1438493    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438494    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1438495    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1438496    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1438496  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1438497    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438498    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1438499    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 432 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438500    filename _pref
1438500  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1438501    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1438502    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1438503   +
1438504   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1438505   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1438505  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1438506   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1438507   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1438508   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1438509   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1438510   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1438511    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1438512    quit;
1438513    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1438514    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1438515    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1438516    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1438517    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1438518    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438519    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1438520    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438521    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438522    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1438523    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438524    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438525    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1438526    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1438527    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1438528    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438529    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1438530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438531    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1438532    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438534    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1438535    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1438536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438537    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438538    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1438539    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1438539  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1438540    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438541    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1438542    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 471 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438543    filename _pref
1438543  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1438544    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1438545    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1438546   +
1438547   +
1438548   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1438549   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1438550   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1438551   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1438552   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1438553   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1438554   +
1438555   +
1438556   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1438557   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1438558   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1438559   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1438560   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1438561   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1438562   +
1438563   +
1438564   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1438565   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1438566   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1438567   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1438568   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1438569   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1438570   +
1438571   +
1438572   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1438573   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1438574   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1438575   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1438576   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1438577   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1438578   +
1438579   +
1438580   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1438581   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1438582   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1438583   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1438584   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1438585   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1438586   +
1438587   +
1438588   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1438589   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1438590   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1438591   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1438592   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1438593   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1438594   +
1438595   +
1438596   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1438597   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1438598   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1438599   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1438600   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1438601   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1438602   +
1438603   +
1438604   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1438605   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1438606   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1438607   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1438608   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1438609   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1438610   +if
1438611   +_FILTERNORM1 not in ( '.')
1438612   + and
1438613   +_FILTERNORM2 not in ( '.')
1438614   + and
1438615   +_FILTERNORM3 not in ( '.')
1438616   + and
1438617   +_FILTERNORM4 not in ( '.')
1438618   + and
1438619   +_FILTERNORM5 not in ( '.')
1438620   + and
1438621   +_FILTERNORM6 not in ( '.')
1438622   + and
1438623   +_FILTERNORM7 not in ( ' ')
1438624   + and
1438625   +_FILTERNORM8 not in ( ' ')
1438626   +and
1438627   +( Dt_Customer ne .)
1438628   +and ( Income ne . and (Income<=107000))
1438629   +and ( Kidhome ne .)
1438630   +and ( MntFishProducts ne .)
1438631   +and ( MntFruits ne .)
1438632   +and ( MntGoldProds ne .)
1438633   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1438634   +and ( MntSweetProducts ne .)
1438635   +and ( MntWines ne .)
1438636   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1438637   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1438638   +and ( NumStorePurchases ne .)
1438639   +and ( NumWebPurchases ne .)
1438640   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1438641   +and ( Recency ne .)
1438642   +and ( Teenhome ne .)
1438643   +and ( Year_Birth ne .)
1438644   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1438645   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1438646   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1438647   +end;
MPRINT(EM_DIAGRAM):   end;
1438648   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1438649   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1438650    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1438651    quit;
1438652    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1438653    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1438654    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1438655    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1438656    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1438657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438658    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1438659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438661    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1438662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438664    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1438665    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1438666    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1438667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438668    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1438669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1438670    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1438671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438672    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438673    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1438674    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1438675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1438676    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438677    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1438678    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1438678  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1438679    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438680    proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl17_FCMP data=_tempx;
1438681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL17_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL17_FCMP has 537 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438682    %macro varDept(fcmpdata=,id=);
1438683    %global nobs&id scoreFlag&id;
1438684    %let scoreFlag&id = 0;
1438685    %if &id=1 or ^&fcmpStart %then %do;
1438686    proc sort data=&fcmpdata out=_temp&id nodupkey;
1438687    by NAME;
1438688    where id=&id and LHS in( %let j=1;
1438689    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1438690    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1438691    "&var" %let j = %eval(&j+1);
1438692    %end;
1438693    );
1438694    run;
1438695    %let dsid = %sysfunc(open(_temp&id));
1438696    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1438697    %let dsid = %sysfunc(close(&dsid));
1438698    %if &&nobs&id %then %do;
1438699    %let scoreFlag&id = 1;
1438700    %let fcmpStart = 1;
1438701    %end;
1438702    %else %let fcmpStart = 0;
1438703    %end;
1438704    %else %do;
1438705    proc sort data=&fcmpdata out=_tempid;
1438706    where id=&id;
1438707    by LHS;
1438708    run;
1438709    %let dsid = %sysfunc(open(_tempid));
1438710    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1438711    %let dsid = %sysfunc(close(&dsid));
1438712    %if ^&&nobs&id %then %do;
1438713    proc datasets lib=work nolist;
1438714    delete _tempid;
1438715    run;
1438716    quit;
1438717    %end;
1438718    %else %do;
1438719    data _tempAll;
1438720    set %let j=%eval(&id-1);
1438721    %do x=1 %to &j;
1438722    %if &&nobs&x %then %do;
1438723    _temp&x %end;
1438724    %end;
1438725    ;
1438726    run;
1438727    proc sql;
1438728    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1438728  ! work._tempid p2 where p.name=p2.lhs;
1438729    quit;
1438730    data _temp&id;
1438731    set _temp&id;
1438732    where LHS ne '' and NAME ne '' and Node ne '';
1438733    run;
1438734    proc datasets lib=work nolist;
1438735    delete _tempAll;
1438736    run;
1438737    %let dsid = %sysfunc(open(_temp&id));
1438738    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1438739    %let dsid = %sysfunc(close(&dsid));
1438740    %if ^&&nobs&id %then %do;
1438741    proc datasets lib=work nolist;
1438742    delete _temp&id;
1438743    run;
1438744    quit;
1438745    %end;
1438746    %else %do;
1438747    %let scoreFlag&id = 1;
1438748    data _temp&id;
1438749    set _temp&id;
1438750    where LHS ne NAME and node ne '';
1438751    run;
1438752    %let dsid = %sysfunc(open(_temp&id));
1438753    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1438754    %let dsid = %sysfunc(close(&dsid));
1438755    %if ^&&nobs&id %then %do;
1438756    proc datasets lib=work nolist;
1438757    delete _temp&id;
1438758    run;
1438759    quit;
1438760    %end;
1438761    %else %do;
1438762    proc sort data=_temp&id nodupkey;
1438763    by LHS NAME;
1438764    run;
1438765    %end;
1438766    %end;
1438767    %end;
1438768    %end;
1438769    %mend varDept;
1438770    %macro optCode(outdata=fcmpdata);
1438771    %global fcmpStart;
1438772    %let fcmpStart = 0;
1438773    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1438774    %let NumNodes=9;
1438775    %do k=1 %to &NumNodes;
1438776    %vardept(fcmpdata=&outdata, id=&k);
1438777    %end;
1438778    %mend optCode;
1438779    %optcode(outData=EMWS8.Ensmbl17_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 44 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 10 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl17_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1438780    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1438781    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1438782    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1438783    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438784    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1438785    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1438786    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1438787    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438788    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1438789    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1438789  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1438790    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438791    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1438792    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1438793    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438794    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1438795    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1438796    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1438797    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438798    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1438799    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1438800    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1438801    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438802    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1438803    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1438803  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 10 rows and 3 columns.

1438804    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1438805    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1438806    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1438807    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 10 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1438808    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1438809    * Ensmbl17: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Computing metadata for TRAIN data;
1438810    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL17_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl17\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl17_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl17_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl17_TRAIN out=WORK.M0W648R5 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0W648R5;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0W648R5(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0W648R5;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0W648R5;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1AP1NAL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1AP1NAL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1AP1NAL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3R5NIBN(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1AP1NAL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1AP1NAL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1AP1NAL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1AP1NAL;
MPRINT(EMADVISECOLUMNS):   set WORK.M1AP1NAL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl17_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl17";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl17";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl17";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl17";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl17";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl17";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl17";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl17";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl17";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl17";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl17: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl17";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1439130    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1439131    set EMWS8.Ensmbl17_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl17_EMINFO;
1439132    where DATA='Ensmbl17' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl17' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1439133    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL17_EMINFO.
      WHERE (DATA='Ensmbl17') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1439134    data EMWS8.Ensmbl17_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl17_EMINFO;
1439135    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1439136    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1439137    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL17_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1439141    run;
1439142    data EMWS8.Ensmbl17_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl17_EMINFO;
1439143    set EMWS8.Ensmbl17_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl17_EMINFO WORK.MODELTEMP_INFO;
1439144    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL17_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL17_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1439145    proc sort data = EMWS8.Ensmbl17_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl17_EMINFO NOTHREADS;
1439146    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1439147    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL17_EMINFO.
NOTE: The data set EMWS8.ENSMBL17_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1439148    proc sort data = EMWS8.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1439149    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1439150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.REG3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1439151    proc sort data = EMWS8.Ensmbl17_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl17_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1439152    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1439153    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL17_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1439154    data EMWS8.Ensmbl17_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl17_EMINFO;
1439155    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1439156    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1439157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL17_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1439158    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1439159    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1439160    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1439161    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL17_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL17_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
